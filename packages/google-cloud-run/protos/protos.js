// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_run_protos || ($protobuf.roots._google_cloud_run_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 * @property {google.api.IRoutingRule|null} [".google.api.routing"] MethodOptions .google.api.routing
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * MethodOptions .google.api.routing.
                 * @member {google.api.IRoutingRule|null|undefined} .google.api.routing
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.routing"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && Object.hasOwnProperty.call(message, ".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    if (message[".google.api.routing"] != null && Object.hasOwnProperty.call(message, ".google.api.routing"))
                        $root.google.api.RoutingRule.encode(message[".google.api.routing"], writer.uint32(/* id 72295729, wireType 2 =*/578365834).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        case 1049: {
                                message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 72295729: {
                                message[".google.api.routing"] = $root.google.api.RoutingRule.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    if (message[".google.api.routing"] != null && message.hasOwnProperty(".google.api.routing")) {
                        var error = $root.google.api.RoutingRule.verify(message[".google.api.routing"]);
                        if (error)
                            return ".google.api.routing." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    if (object[".google.api.routing"] != null) {
                        if (typeof object[".google.api.routing"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.routing: object expected");
                        message[".google.api.routing"] = $root.google.api.RoutingRule.fromObject(object[".google.api.routing"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                        object[".google.api.routing"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    if (message[".google.api.routing"] != null && message.hasOwnProperty(".google.api.routing"))
                        object[".google.api.routing"] = $root.google.api.RoutingRule.toObject(message[".google.api.routing"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            return protobuf;
        })();
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.run = (function() {
    
                /**
                 * Namespace run.
                 * @memberof google.cloud
                 * @namespace
                 */
                var run = {};
    
                run.v2 = (function() {
    
                    /**
                     * Namespace v2.
                     * @memberof google.cloud.run
                     * @namespace
                     */
                    var v2 = {};
    
                    v2.Condition = (function() {
    
                        /**
                         * Properties of a Condition.
                         * @memberof google.cloud.run.v2
                         * @interface ICondition
                         * @property {string|null} [type] Condition type
                         * @property {google.cloud.run.v2.Condition.State|null} [state] Condition state
                         * @property {string|null} [message] Condition message
                         * @property {google.protobuf.ITimestamp|null} [lastTransitionTime] Condition lastTransitionTime
                         * @property {google.cloud.run.v2.Condition.Severity|null} [severity] Condition severity
                         * @property {google.cloud.run.v2.Condition.CommonReason|null} [reason] Condition reason
                         * @property {google.cloud.run.v2.Condition.RevisionReason|null} [revisionReason] Condition revisionReason
                         * @property {google.cloud.run.v2.Condition.ExecutionReason|null} [executionReason] Condition executionReason
                         */
    
                        /**
                         * Constructs a new Condition.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a Condition.
                         * @implements ICondition
                         * @constructor
                         * @param {google.cloud.run.v2.ICondition=} [properties] Properties to set
                         */
                        function Condition(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Condition type.
                         * @member {string} type
                         * @memberof google.cloud.run.v2.Condition
                         * @instance
                         */
                        Condition.prototype.type = "";
    
                        /**
                         * Condition state.
                         * @member {google.cloud.run.v2.Condition.State} state
                         * @memberof google.cloud.run.v2.Condition
                         * @instance
                         */
                        Condition.prototype.state = 0;
    
                        /**
                         * Condition message.
                         * @member {string} message
                         * @memberof google.cloud.run.v2.Condition
                         * @instance
                         */
                        Condition.prototype.message = "";
    
                        /**
                         * Condition lastTransitionTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} lastTransitionTime
                         * @memberof google.cloud.run.v2.Condition
                         * @instance
                         */
                        Condition.prototype.lastTransitionTime = null;
    
                        /**
                         * Condition severity.
                         * @member {google.cloud.run.v2.Condition.Severity} severity
                         * @memberof google.cloud.run.v2.Condition
                         * @instance
                         */
                        Condition.prototype.severity = 0;
    
                        /**
                         * Condition reason.
                         * @member {google.cloud.run.v2.Condition.CommonReason|null|undefined} reason
                         * @memberof google.cloud.run.v2.Condition
                         * @instance
                         */
                        Condition.prototype.reason = null;
    
                        /**
                         * Condition revisionReason.
                         * @member {google.cloud.run.v2.Condition.RevisionReason|null|undefined} revisionReason
                         * @memberof google.cloud.run.v2.Condition
                         * @instance
                         */
                        Condition.prototype.revisionReason = null;
    
                        /**
                         * Condition executionReason.
                         * @member {google.cloud.run.v2.Condition.ExecutionReason|null|undefined} executionReason
                         * @memberof google.cloud.run.v2.Condition
                         * @instance
                         */
                        Condition.prototype.executionReason = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Condition reasons.
                         * @member {"reason"|"revisionReason"|"executionReason"|undefined} reasons
                         * @memberof google.cloud.run.v2.Condition
                         * @instance
                         */
                        Object.defineProperty(Condition.prototype, "reasons", {
                            get: $util.oneOfGetter($oneOfFields = ["reason", "revisionReason", "executionReason"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Condition instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.Condition
                         * @static
                         * @param {google.cloud.run.v2.ICondition=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.Condition} Condition instance
                         */
                        Condition.create = function create(properties) {
                            return new Condition(properties);
                        };
    
                        /**
                         * Encodes the specified Condition message. Does not implicitly {@link google.cloud.run.v2.Condition.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.Condition
                         * @static
                         * @param {google.cloud.run.v2.ICondition} message Condition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Condition.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.state);
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.message);
                            if (message.lastTransitionTime != null && Object.hasOwnProperty.call(message, "lastTransitionTime"))
                                $root.google.protobuf.Timestamp.encode(message.lastTransitionTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.severity != null && Object.hasOwnProperty.call(message, "severity"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.severity);
                            if (message.reason != null && Object.hasOwnProperty.call(message, "reason"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.reason);
                            if (message.revisionReason != null && Object.hasOwnProperty.call(message, "revisionReason"))
                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.revisionReason);
                            if (message.executionReason != null && Object.hasOwnProperty.call(message, "executionReason"))
                                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.executionReason);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Condition message, length delimited. Does not implicitly {@link google.cloud.run.v2.Condition.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.Condition
                         * @static
                         * @param {google.cloud.run.v2.ICondition} message Condition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Condition.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Condition message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.Condition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.Condition} Condition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Condition.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.Condition();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.type = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.message = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.lastTransitionTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.severity = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.reason = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.revisionReason = reader.int32();
                                        break;
                                    }
                                case 11: {
                                        message.executionReason = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Condition message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.Condition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.Condition} Condition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Condition.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Condition message.
                         * @function verify
                         * @memberof google.cloud.run.v2.Condition
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Condition.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.type != null && message.hasOwnProperty("type"))
                                if (!$util.isString(message.type))
                                    return "type: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            if (message.lastTransitionTime != null && message.hasOwnProperty("lastTransitionTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.lastTransitionTime);
                                if (error)
                                    return "lastTransitionTime." + error;
                            }
                            if (message.severity != null && message.hasOwnProperty("severity"))
                                switch (message.severity) {
                                default:
                                    return "severity: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.reason != null && message.hasOwnProperty("reason")) {
                                properties.reasons = 1;
                                switch (message.reason) {
                                default:
                                    return "reason: enum value expected";
                                case 0:
                                case 1:
                                case 3:
                                case 4:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                case 13:
                                case 14:
                                case 15:
                                case 16:
                                    break;
                                }
                            }
                            if (message.revisionReason != null && message.hasOwnProperty("revisionReason")) {
                                if (properties.reasons === 1)
                                    return "reasons: multiple values";
                                properties.reasons = 1;
                                switch (message.revisionReason) {
                                default:
                                    return "revisionReason: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                    break;
                                }
                            }
                            if (message.executionReason != null && message.hasOwnProperty("executionReason")) {
                                if (properties.reasons === 1)
                                    return "reasons: multiple values";
                                properties.reasons = 1;
                                switch (message.executionReason) {
                                default:
                                    return "executionReason: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Condition message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.Condition
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.Condition} Condition
                         */
                        Condition.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.Condition)
                                return object;
                            var message = new $root.google.cloud.run.v2.Condition();
                            if (object.type != null)
                                message.type = String(object.type);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CONDITION_PENDING":
                            case 1:
                                message.state = 1;
                                break;
                            case "CONDITION_RECONCILING":
                            case 2:
                                message.state = 2;
                                break;
                            case "CONDITION_FAILED":
                            case 3:
                                message.state = 3;
                                break;
                            case "CONDITION_SUCCEEDED":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            if (object.message != null)
                                message.message = String(object.message);
                            if (object.lastTransitionTime != null) {
                                if (typeof object.lastTransitionTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Condition.lastTransitionTime: object expected");
                                message.lastTransitionTime = $root.google.protobuf.Timestamp.fromObject(object.lastTransitionTime);
                            }
                            switch (object.severity) {
                            default:
                                if (typeof object.severity === "number") {
                                    message.severity = object.severity;
                                    break;
                                }
                                break;
                            case "SEVERITY_UNSPECIFIED":
                            case 0:
                                message.severity = 0;
                                break;
                            case "ERROR":
                            case 1:
                                message.severity = 1;
                                break;
                            case "WARNING":
                            case 2:
                                message.severity = 2;
                                break;
                            case "INFO":
                            case 3:
                                message.severity = 3;
                                break;
                            }
                            switch (object.reason) {
                            default:
                                if (typeof object.reason === "number") {
                                    message.reason = object.reason;
                                    break;
                                }
                                break;
                            case "COMMON_REASON_UNDEFINED":
                            case 0:
                                message.reason = 0;
                                break;
                            case "UNKNOWN":
                            case 1:
                                message.reason = 1;
                                break;
                            case "REVISION_FAILED":
                            case 3:
                                message.reason = 3;
                                break;
                            case "PROGRESS_DEADLINE_EXCEEDED":
                            case 4:
                                message.reason = 4;
                                break;
                            case "CONTAINER_MISSING":
                            case 6:
                                message.reason = 6;
                                break;
                            case "CONTAINER_PERMISSION_DENIED":
                            case 7:
                                message.reason = 7;
                                break;
                            case "CONTAINER_IMAGE_UNAUTHORIZED":
                            case 8:
                                message.reason = 8;
                                break;
                            case "CONTAINER_IMAGE_AUTHORIZATION_CHECK_FAILED":
                            case 9:
                                message.reason = 9;
                                break;
                            case "ENCRYPTION_KEY_PERMISSION_DENIED":
                            case 10:
                                message.reason = 10;
                                break;
                            case "ENCRYPTION_KEY_CHECK_FAILED":
                            case 11:
                                message.reason = 11;
                                break;
                            case "SECRETS_ACCESS_CHECK_FAILED":
                            case 12:
                                message.reason = 12;
                                break;
                            case "WAITING_FOR_OPERATION":
                            case 13:
                                message.reason = 13;
                                break;
                            case "IMMEDIATE_RETRY":
                            case 14:
                                message.reason = 14;
                                break;
                            case "POSTPONED_RETRY":
                            case 15:
                                message.reason = 15;
                                break;
                            case "INTERNAL":
                            case 16:
                                message.reason = 16;
                                break;
                            }
                            switch (object.revisionReason) {
                            default:
                                if (typeof object.revisionReason === "number") {
                                    message.revisionReason = object.revisionReason;
                                    break;
                                }
                                break;
                            case "REVISION_REASON_UNDEFINED":
                            case 0:
                                message.revisionReason = 0;
                                break;
                            case "PENDING":
                            case 1:
                                message.revisionReason = 1;
                                break;
                            case "RESERVE":
                            case 2:
                                message.revisionReason = 2;
                                break;
                            case "RETIRED":
                            case 3:
                                message.revisionReason = 3;
                                break;
                            case "RETIRING":
                            case 4:
                                message.revisionReason = 4;
                                break;
                            case "RECREATING":
                            case 5:
                                message.revisionReason = 5;
                                break;
                            case "HEALTH_CHECK_CONTAINER_ERROR":
                            case 6:
                                message.revisionReason = 6;
                                break;
                            case "CUSTOMIZED_PATH_RESPONSE_PENDING":
                            case 7:
                                message.revisionReason = 7;
                                break;
                            case "MIN_INSTANCES_NOT_PROVISIONED":
                            case 8:
                                message.revisionReason = 8;
                                break;
                            case "ACTIVE_REVISION_LIMIT_REACHED":
                            case 9:
                                message.revisionReason = 9;
                                break;
                            case "NO_DEPLOYMENT":
                            case 10:
                                message.revisionReason = 10;
                                break;
                            case "HEALTH_CHECK_SKIPPED":
                            case 11:
                                message.revisionReason = 11;
                                break;
                            }
                            switch (object.executionReason) {
                            default:
                                if (typeof object.executionReason === "number") {
                                    message.executionReason = object.executionReason;
                                    break;
                                }
                                break;
                            case "EXECUTION_REASON_UNDEFINED":
                            case 0:
                                message.executionReason = 0;
                                break;
                            case "JOB_STATUS_SERVICE_POLLING_ERROR":
                            case 1:
                                message.executionReason = 1;
                                break;
                            case "NON_ZERO_EXIT_CODE":
                            case 2:
                                message.executionReason = 2;
                                break;
                            case "CANCELLED":
                            case 3:
                                message.executionReason = 3;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Condition message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.Condition
                         * @static
                         * @param {google.cloud.run.v2.Condition} message Condition
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Condition.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.type = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.message = "";
                                object.lastTransitionTime = null;
                                object.severity = options.enums === String ? "SEVERITY_UNSPECIFIED" : 0;
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = message.type;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.run.v2.Condition.State[message.state] === undefined ? message.state : $root.google.cloud.run.v2.Condition.State[message.state] : message.state;
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            if (message.lastTransitionTime != null && message.hasOwnProperty("lastTransitionTime"))
                                object.lastTransitionTime = $root.google.protobuf.Timestamp.toObject(message.lastTransitionTime, options);
                            if (message.severity != null && message.hasOwnProperty("severity"))
                                object.severity = options.enums === String ? $root.google.cloud.run.v2.Condition.Severity[message.severity] === undefined ? message.severity : $root.google.cloud.run.v2.Condition.Severity[message.severity] : message.severity;
                            if (message.reason != null && message.hasOwnProperty("reason")) {
                                object.reason = options.enums === String ? $root.google.cloud.run.v2.Condition.CommonReason[message.reason] === undefined ? message.reason : $root.google.cloud.run.v2.Condition.CommonReason[message.reason] : message.reason;
                                if (options.oneofs)
                                    object.reasons = "reason";
                            }
                            if (message.revisionReason != null && message.hasOwnProperty("revisionReason")) {
                                object.revisionReason = options.enums === String ? $root.google.cloud.run.v2.Condition.RevisionReason[message.revisionReason] === undefined ? message.revisionReason : $root.google.cloud.run.v2.Condition.RevisionReason[message.revisionReason] : message.revisionReason;
                                if (options.oneofs)
                                    object.reasons = "revisionReason";
                            }
                            if (message.executionReason != null && message.hasOwnProperty("executionReason")) {
                                object.executionReason = options.enums === String ? $root.google.cloud.run.v2.Condition.ExecutionReason[message.executionReason] === undefined ? message.executionReason : $root.google.cloud.run.v2.Condition.ExecutionReason[message.executionReason] : message.executionReason;
                                if (options.oneofs)
                                    object.reasons = "executionReason";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Condition to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.Condition
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Condition.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Condition
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.Condition
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Condition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.Condition";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.run.v2.Condition.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CONDITION_PENDING=1 CONDITION_PENDING value
                         * @property {number} CONDITION_RECONCILING=2 CONDITION_RECONCILING value
                         * @property {number} CONDITION_FAILED=3 CONDITION_FAILED value
                         * @property {number} CONDITION_SUCCEEDED=4 CONDITION_SUCCEEDED value
                         */
                        Condition.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CONDITION_PENDING"] = 1;
                            values[valuesById[2] = "CONDITION_RECONCILING"] = 2;
                            values[valuesById[3] = "CONDITION_FAILED"] = 3;
                            values[valuesById[4] = "CONDITION_SUCCEEDED"] = 4;
                            return values;
                        })();
    
                        /**
                         * Severity enum.
                         * @name google.cloud.run.v2.Condition.Severity
                         * @enum {number}
                         * @property {number} SEVERITY_UNSPECIFIED=0 SEVERITY_UNSPECIFIED value
                         * @property {number} ERROR=1 ERROR value
                         * @property {number} WARNING=2 WARNING value
                         * @property {number} INFO=3 INFO value
                         */
                        Condition.Severity = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SEVERITY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ERROR"] = 1;
                            values[valuesById[2] = "WARNING"] = 2;
                            values[valuesById[3] = "INFO"] = 3;
                            return values;
                        })();
    
                        /**
                         * CommonReason enum.
                         * @name google.cloud.run.v2.Condition.CommonReason
                         * @enum {number}
                         * @property {number} COMMON_REASON_UNDEFINED=0 COMMON_REASON_UNDEFINED value
                         * @property {number} UNKNOWN=1 UNKNOWN value
                         * @property {number} REVISION_FAILED=3 REVISION_FAILED value
                         * @property {number} PROGRESS_DEADLINE_EXCEEDED=4 PROGRESS_DEADLINE_EXCEEDED value
                         * @property {number} CONTAINER_MISSING=6 CONTAINER_MISSING value
                         * @property {number} CONTAINER_PERMISSION_DENIED=7 CONTAINER_PERMISSION_DENIED value
                         * @property {number} CONTAINER_IMAGE_UNAUTHORIZED=8 CONTAINER_IMAGE_UNAUTHORIZED value
                         * @property {number} CONTAINER_IMAGE_AUTHORIZATION_CHECK_FAILED=9 CONTAINER_IMAGE_AUTHORIZATION_CHECK_FAILED value
                         * @property {number} ENCRYPTION_KEY_PERMISSION_DENIED=10 ENCRYPTION_KEY_PERMISSION_DENIED value
                         * @property {number} ENCRYPTION_KEY_CHECK_FAILED=11 ENCRYPTION_KEY_CHECK_FAILED value
                         * @property {number} SECRETS_ACCESS_CHECK_FAILED=12 SECRETS_ACCESS_CHECK_FAILED value
                         * @property {number} WAITING_FOR_OPERATION=13 WAITING_FOR_OPERATION value
                         * @property {number} IMMEDIATE_RETRY=14 IMMEDIATE_RETRY value
                         * @property {number} POSTPONED_RETRY=15 POSTPONED_RETRY value
                         * @property {number} INTERNAL=16 INTERNAL value
                         */
                        Condition.CommonReason = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "COMMON_REASON_UNDEFINED"] = 0;
                            values[valuesById[1] = "UNKNOWN"] = 1;
                            values[valuesById[3] = "REVISION_FAILED"] = 3;
                            values[valuesById[4] = "PROGRESS_DEADLINE_EXCEEDED"] = 4;
                            values[valuesById[6] = "CONTAINER_MISSING"] = 6;
                            values[valuesById[7] = "CONTAINER_PERMISSION_DENIED"] = 7;
                            values[valuesById[8] = "CONTAINER_IMAGE_UNAUTHORIZED"] = 8;
                            values[valuesById[9] = "CONTAINER_IMAGE_AUTHORIZATION_CHECK_FAILED"] = 9;
                            values[valuesById[10] = "ENCRYPTION_KEY_PERMISSION_DENIED"] = 10;
                            values[valuesById[11] = "ENCRYPTION_KEY_CHECK_FAILED"] = 11;
                            values[valuesById[12] = "SECRETS_ACCESS_CHECK_FAILED"] = 12;
                            values[valuesById[13] = "WAITING_FOR_OPERATION"] = 13;
                            values[valuesById[14] = "IMMEDIATE_RETRY"] = 14;
                            values[valuesById[15] = "POSTPONED_RETRY"] = 15;
                            values[valuesById[16] = "INTERNAL"] = 16;
                            return values;
                        })();
    
                        /**
                         * RevisionReason enum.
                         * @name google.cloud.run.v2.Condition.RevisionReason
                         * @enum {number}
                         * @property {number} REVISION_REASON_UNDEFINED=0 REVISION_REASON_UNDEFINED value
                         * @property {number} PENDING=1 PENDING value
                         * @property {number} RESERVE=2 RESERVE value
                         * @property {number} RETIRED=3 RETIRED value
                         * @property {number} RETIRING=4 RETIRING value
                         * @property {number} RECREATING=5 RECREATING value
                         * @property {number} HEALTH_CHECK_CONTAINER_ERROR=6 HEALTH_CHECK_CONTAINER_ERROR value
                         * @property {number} CUSTOMIZED_PATH_RESPONSE_PENDING=7 CUSTOMIZED_PATH_RESPONSE_PENDING value
                         * @property {number} MIN_INSTANCES_NOT_PROVISIONED=8 MIN_INSTANCES_NOT_PROVISIONED value
                         * @property {number} ACTIVE_REVISION_LIMIT_REACHED=9 ACTIVE_REVISION_LIMIT_REACHED value
                         * @property {number} NO_DEPLOYMENT=10 NO_DEPLOYMENT value
                         * @property {number} HEALTH_CHECK_SKIPPED=11 HEALTH_CHECK_SKIPPED value
                         */
                        Condition.RevisionReason = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "REVISION_REASON_UNDEFINED"] = 0;
                            values[valuesById[1] = "PENDING"] = 1;
                            values[valuesById[2] = "RESERVE"] = 2;
                            values[valuesById[3] = "RETIRED"] = 3;
                            values[valuesById[4] = "RETIRING"] = 4;
                            values[valuesById[5] = "RECREATING"] = 5;
                            values[valuesById[6] = "HEALTH_CHECK_CONTAINER_ERROR"] = 6;
                            values[valuesById[7] = "CUSTOMIZED_PATH_RESPONSE_PENDING"] = 7;
                            values[valuesById[8] = "MIN_INSTANCES_NOT_PROVISIONED"] = 8;
                            values[valuesById[9] = "ACTIVE_REVISION_LIMIT_REACHED"] = 9;
                            values[valuesById[10] = "NO_DEPLOYMENT"] = 10;
                            values[valuesById[11] = "HEALTH_CHECK_SKIPPED"] = 11;
                            return values;
                        })();
    
                        /**
                         * ExecutionReason enum.
                         * @name google.cloud.run.v2.Condition.ExecutionReason
                         * @enum {number}
                         * @property {number} EXECUTION_REASON_UNDEFINED=0 EXECUTION_REASON_UNDEFINED value
                         * @property {number} JOB_STATUS_SERVICE_POLLING_ERROR=1 JOB_STATUS_SERVICE_POLLING_ERROR value
                         * @property {number} NON_ZERO_EXIT_CODE=2 NON_ZERO_EXIT_CODE value
                         * @property {number} CANCELLED=3 CANCELLED value
                         */
                        Condition.ExecutionReason = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "EXECUTION_REASON_UNDEFINED"] = 0;
                            values[valuesById[1] = "JOB_STATUS_SERVICE_POLLING_ERROR"] = 1;
                            values[valuesById[2] = "NON_ZERO_EXIT_CODE"] = 2;
                            values[valuesById[3] = "CANCELLED"] = 3;
                            return values;
                        })();
    
                        return Condition;
                    })();
    
                    v2.Executions = (function() {
    
                        /**
                         * Constructs a new Executions service.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents an Executions
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function Executions(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (Executions.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Executions;
    
                        /**
                         * Creates new Executions service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.run.v2.Executions
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {Executions} RPC service. Useful where requests and/or responses are streamed.
                         */
                        Executions.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Executions|getExecution}.
                         * @memberof google.cloud.run.v2.Executions
                         * @typedef GetExecutionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.run.v2.Execution} [response] Execution
                         */
    
                        /**
                         * Calls GetExecution.
                         * @function getExecution
                         * @memberof google.cloud.run.v2.Executions
                         * @instance
                         * @param {google.cloud.run.v2.IGetExecutionRequest} request GetExecutionRequest message or plain object
                         * @param {google.cloud.run.v2.Executions.GetExecutionCallback} callback Node-style callback called with the error, if any, and Execution
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Executions.prototype.getExecution = function getExecution(request, callback) {
                            return this.rpcCall(getExecution, $root.google.cloud.run.v2.GetExecutionRequest, $root.google.cloud.run.v2.Execution, request, callback);
                        }, "name", { value: "GetExecution" });
    
                        /**
                         * Calls GetExecution.
                         * @function getExecution
                         * @memberof google.cloud.run.v2.Executions
                         * @instance
                         * @param {google.cloud.run.v2.IGetExecutionRequest} request GetExecutionRequest message or plain object
                         * @returns {Promise<google.cloud.run.v2.Execution>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Executions|listExecutions}.
                         * @memberof google.cloud.run.v2.Executions
                         * @typedef ListExecutionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.run.v2.ListExecutionsResponse} [response] ListExecutionsResponse
                         */
    
                        /**
                         * Calls ListExecutions.
                         * @function listExecutions
                         * @memberof google.cloud.run.v2.Executions
                         * @instance
                         * @param {google.cloud.run.v2.IListExecutionsRequest} request ListExecutionsRequest message or plain object
                         * @param {google.cloud.run.v2.Executions.ListExecutionsCallback} callback Node-style callback called with the error, if any, and ListExecutionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Executions.prototype.listExecutions = function listExecutions(request, callback) {
                            return this.rpcCall(listExecutions, $root.google.cloud.run.v2.ListExecutionsRequest, $root.google.cloud.run.v2.ListExecutionsResponse, request, callback);
                        }, "name", { value: "ListExecutions" });
    
                        /**
                         * Calls ListExecutions.
                         * @function listExecutions
                         * @memberof google.cloud.run.v2.Executions
                         * @instance
                         * @param {google.cloud.run.v2.IListExecutionsRequest} request ListExecutionsRequest message or plain object
                         * @returns {Promise<google.cloud.run.v2.ListExecutionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Executions|deleteExecution}.
                         * @memberof google.cloud.run.v2.Executions
                         * @typedef DeleteExecutionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteExecution.
                         * @function deleteExecution
                         * @memberof google.cloud.run.v2.Executions
                         * @instance
                         * @param {google.cloud.run.v2.IDeleteExecutionRequest} request DeleteExecutionRequest message or plain object
                         * @param {google.cloud.run.v2.Executions.DeleteExecutionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Executions.prototype.deleteExecution = function deleteExecution(request, callback) {
                            return this.rpcCall(deleteExecution, $root.google.cloud.run.v2.DeleteExecutionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteExecution" });
    
                        /**
                         * Calls DeleteExecution.
                         * @function deleteExecution
                         * @memberof google.cloud.run.v2.Executions
                         * @instance
                         * @param {google.cloud.run.v2.IDeleteExecutionRequest} request DeleteExecutionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return Executions;
                    })();
    
                    v2.GetExecutionRequest = (function() {
    
                        /**
                         * Properties of a GetExecutionRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IGetExecutionRequest
                         * @property {string|null} [name] GetExecutionRequest name
                         */
    
                        /**
                         * Constructs a new GetExecutionRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a GetExecutionRequest.
                         * @implements IGetExecutionRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IGetExecutionRequest=} [properties] Properties to set
                         */
                        function GetExecutionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetExecutionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.GetExecutionRequest
                         * @instance
                         */
                        GetExecutionRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetExecutionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.GetExecutionRequest
                         * @static
                         * @param {google.cloud.run.v2.IGetExecutionRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.GetExecutionRequest} GetExecutionRequest instance
                         */
                        GetExecutionRequest.create = function create(properties) {
                            return new GetExecutionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetExecutionRequest message. Does not implicitly {@link google.cloud.run.v2.GetExecutionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.GetExecutionRequest
                         * @static
                         * @param {google.cloud.run.v2.IGetExecutionRequest} message GetExecutionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetExecutionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetExecutionRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.GetExecutionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.GetExecutionRequest
                         * @static
                         * @param {google.cloud.run.v2.IGetExecutionRequest} message GetExecutionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetExecutionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetExecutionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.GetExecutionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.GetExecutionRequest} GetExecutionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetExecutionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.GetExecutionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetExecutionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.GetExecutionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.GetExecutionRequest} GetExecutionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetExecutionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetExecutionRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.GetExecutionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetExecutionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetExecutionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.GetExecutionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.GetExecutionRequest} GetExecutionRequest
                         */
                        GetExecutionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.GetExecutionRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.GetExecutionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetExecutionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.GetExecutionRequest
                         * @static
                         * @param {google.cloud.run.v2.GetExecutionRequest} message GetExecutionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetExecutionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetExecutionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.GetExecutionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetExecutionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetExecutionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.GetExecutionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetExecutionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.GetExecutionRequest";
                        };
    
                        return GetExecutionRequest;
                    })();
    
                    v2.ListExecutionsRequest = (function() {
    
                        /**
                         * Properties of a ListExecutionsRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IListExecutionsRequest
                         * @property {string|null} [parent] ListExecutionsRequest parent
                         * @property {number|null} [pageSize] ListExecutionsRequest pageSize
                         * @property {string|null} [pageToken] ListExecutionsRequest pageToken
                         * @property {boolean|null} [showDeleted] ListExecutionsRequest showDeleted
                         */
    
                        /**
                         * Constructs a new ListExecutionsRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a ListExecutionsRequest.
                         * @implements IListExecutionsRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IListExecutionsRequest=} [properties] Properties to set
                         */
                        function ListExecutionsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListExecutionsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.run.v2.ListExecutionsRequest
                         * @instance
                         */
                        ListExecutionsRequest.prototype.parent = "";
    
                        /**
                         * ListExecutionsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.run.v2.ListExecutionsRequest
                         * @instance
                         */
                        ListExecutionsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListExecutionsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.run.v2.ListExecutionsRequest
                         * @instance
                         */
                        ListExecutionsRequest.prototype.pageToken = "";
    
                        /**
                         * ListExecutionsRequest showDeleted.
                         * @member {boolean} showDeleted
                         * @memberof google.cloud.run.v2.ListExecutionsRequest
                         * @instance
                         */
                        ListExecutionsRequest.prototype.showDeleted = false;
    
                        /**
                         * Creates a new ListExecutionsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.ListExecutionsRequest
                         * @static
                         * @param {google.cloud.run.v2.IListExecutionsRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.ListExecutionsRequest} ListExecutionsRequest instance
                         */
                        ListExecutionsRequest.create = function create(properties) {
                            return new ListExecutionsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListExecutionsRequest message. Does not implicitly {@link google.cloud.run.v2.ListExecutionsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.ListExecutionsRequest
                         * @static
                         * @param {google.cloud.run.v2.IListExecutionsRequest} message ListExecutionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListExecutionsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.showDeleted != null && Object.hasOwnProperty.call(message, "showDeleted"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.showDeleted);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListExecutionsRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.ListExecutionsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.ListExecutionsRequest
                         * @static
                         * @param {google.cloud.run.v2.IListExecutionsRequest} message ListExecutionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListExecutionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListExecutionsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.ListExecutionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.ListExecutionsRequest} ListExecutionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListExecutionsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.ListExecutionsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.showDeleted = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListExecutionsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.ListExecutionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.ListExecutionsRequest} ListExecutionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListExecutionsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListExecutionsRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.ListExecutionsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListExecutionsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                if (typeof message.showDeleted !== "boolean")
                                    return "showDeleted: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListExecutionsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.ListExecutionsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.ListExecutionsRequest} ListExecutionsRequest
                         */
                        ListExecutionsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.ListExecutionsRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.ListExecutionsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.showDeleted != null)
                                message.showDeleted = Boolean(object.showDeleted);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListExecutionsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.ListExecutionsRequest
                         * @static
                         * @param {google.cloud.run.v2.ListExecutionsRequest} message ListExecutionsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListExecutionsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.showDeleted = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                object.showDeleted = message.showDeleted;
                            return object;
                        };
    
                        /**
                         * Converts this ListExecutionsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.ListExecutionsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListExecutionsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListExecutionsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.ListExecutionsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListExecutionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.ListExecutionsRequest";
                        };
    
                        return ListExecutionsRequest;
                    })();
    
                    v2.ListExecutionsResponse = (function() {
    
                        /**
                         * Properties of a ListExecutionsResponse.
                         * @memberof google.cloud.run.v2
                         * @interface IListExecutionsResponse
                         * @property {Array.<google.cloud.run.v2.IExecution>|null} [executions] ListExecutionsResponse executions
                         * @property {string|null} [nextPageToken] ListExecutionsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListExecutionsResponse.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a ListExecutionsResponse.
                         * @implements IListExecutionsResponse
                         * @constructor
                         * @param {google.cloud.run.v2.IListExecutionsResponse=} [properties] Properties to set
                         */
                        function ListExecutionsResponse(properties) {
                            this.executions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListExecutionsResponse executions.
                         * @member {Array.<google.cloud.run.v2.IExecution>} executions
                         * @memberof google.cloud.run.v2.ListExecutionsResponse
                         * @instance
                         */
                        ListExecutionsResponse.prototype.executions = $util.emptyArray;
    
                        /**
                         * ListExecutionsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.run.v2.ListExecutionsResponse
                         * @instance
                         */
                        ListExecutionsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListExecutionsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.ListExecutionsResponse
                         * @static
                         * @param {google.cloud.run.v2.IListExecutionsResponse=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.ListExecutionsResponse} ListExecutionsResponse instance
                         */
                        ListExecutionsResponse.create = function create(properties) {
                            return new ListExecutionsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListExecutionsResponse message. Does not implicitly {@link google.cloud.run.v2.ListExecutionsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.ListExecutionsResponse
                         * @static
                         * @param {google.cloud.run.v2.IListExecutionsResponse} message ListExecutionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListExecutionsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.executions != null && message.executions.length)
                                for (var i = 0; i < message.executions.length; ++i)
                                    $root.google.cloud.run.v2.Execution.encode(message.executions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListExecutionsResponse message, length delimited. Does not implicitly {@link google.cloud.run.v2.ListExecutionsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.ListExecutionsResponse
                         * @static
                         * @param {google.cloud.run.v2.IListExecutionsResponse} message ListExecutionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListExecutionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListExecutionsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.ListExecutionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.ListExecutionsResponse} ListExecutionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListExecutionsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.ListExecutionsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.executions && message.executions.length))
                                            message.executions = [];
                                        message.executions.push($root.google.cloud.run.v2.Execution.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListExecutionsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.ListExecutionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.ListExecutionsResponse} ListExecutionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListExecutionsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListExecutionsResponse message.
                         * @function verify
                         * @memberof google.cloud.run.v2.ListExecutionsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListExecutionsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.executions != null && message.hasOwnProperty("executions")) {
                                if (!Array.isArray(message.executions))
                                    return "executions: array expected";
                                for (var i = 0; i < message.executions.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Execution.verify(message.executions[i]);
                                    if (error)
                                        return "executions." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListExecutionsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.ListExecutionsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.ListExecutionsResponse} ListExecutionsResponse
                         */
                        ListExecutionsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.ListExecutionsResponse)
                                return object;
                            var message = new $root.google.cloud.run.v2.ListExecutionsResponse();
                            if (object.executions) {
                                if (!Array.isArray(object.executions))
                                    throw TypeError(".google.cloud.run.v2.ListExecutionsResponse.executions: array expected");
                                message.executions = [];
                                for (var i = 0; i < object.executions.length; ++i) {
                                    if (typeof object.executions[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.ListExecutionsResponse.executions: object expected");
                                    message.executions[i] = $root.google.cloud.run.v2.Execution.fromObject(object.executions[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListExecutionsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.ListExecutionsResponse
                         * @static
                         * @param {google.cloud.run.v2.ListExecutionsResponse} message ListExecutionsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListExecutionsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.executions = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.executions && message.executions.length) {
                                object.executions = [];
                                for (var j = 0; j < message.executions.length; ++j)
                                    object.executions[j] = $root.google.cloud.run.v2.Execution.toObject(message.executions[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListExecutionsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.ListExecutionsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListExecutionsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListExecutionsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.ListExecutionsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListExecutionsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.ListExecutionsResponse";
                        };
    
                        return ListExecutionsResponse;
                    })();
    
                    v2.DeleteExecutionRequest = (function() {
    
                        /**
                         * Properties of a DeleteExecutionRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IDeleteExecutionRequest
                         * @property {string|null} [name] DeleteExecutionRequest name
                         * @property {boolean|null} [validateOnly] DeleteExecutionRequest validateOnly
                         * @property {string|null} [etag] DeleteExecutionRequest etag
                         */
    
                        /**
                         * Constructs a new DeleteExecutionRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a DeleteExecutionRequest.
                         * @implements IDeleteExecutionRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IDeleteExecutionRequest=} [properties] Properties to set
                         */
                        function DeleteExecutionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteExecutionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.DeleteExecutionRequest
                         * @instance
                         */
                        DeleteExecutionRequest.prototype.name = "";
    
                        /**
                         * DeleteExecutionRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.run.v2.DeleteExecutionRequest
                         * @instance
                         */
                        DeleteExecutionRequest.prototype.validateOnly = false;
    
                        /**
                         * DeleteExecutionRequest etag.
                         * @member {string} etag
                         * @memberof google.cloud.run.v2.DeleteExecutionRequest
                         * @instance
                         */
                        DeleteExecutionRequest.prototype.etag = "";
    
                        /**
                         * Creates a new DeleteExecutionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.DeleteExecutionRequest
                         * @static
                         * @param {google.cloud.run.v2.IDeleteExecutionRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.DeleteExecutionRequest} DeleteExecutionRequest instance
                         */
                        DeleteExecutionRequest.create = function create(properties) {
                            return new DeleteExecutionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteExecutionRequest message. Does not implicitly {@link google.cloud.run.v2.DeleteExecutionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.DeleteExecutionRequest
                         * @static
                         * @param {google.cloud.run.v2.IDeleteExecutionRequest} message DeleteExecutionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteExecutionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.validateOnly);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteExecutionRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.DeleteExecutionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.DeleteExecutionRequest
                         * @static
                         * @param {google.cloud.run.v2.IDeleteExecutionRequest} message DeleteExecutionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteExecutionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteExecutionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.DeleteExecutionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.DeleteExecutionRequest} DeleteExecutionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteExecutionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.DeleteExecutionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteExecutionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.DeleteExecutionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.DeleteExecutionRequest} DeleteExecutionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteExecutionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteExecutionRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.DeleteExecutionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteExecutionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteExecutionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.DeleteExecutionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.DeleteExecutionRequest} DeleteExecutionRequest
                         */
                        DeleteExecutionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.DeleteExecutionRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.DeleteExecutionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteExecutionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.DeleteExecutionRequest
                         * @static
                         * @param {google.cloud.run.v2.DeleteExecutionRequest} message DeleteExecutionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteExecutionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.validateOnly = false;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteExecutionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.DeleteExecutionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteExecutionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteExecutionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.DeleteExecutionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteExecutionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.DeleteExecutionRequest";
                        };
    
                        return DeleteExecutionRequest;
                    })();
    
                    v2.Execution = (function() {
    
                        /**
                         * Properties of an Execution.
                         * @memberof google.cloud.run.v2
                         * @interface IExecution
                         * @property {string|null} [name] Execution name
                         * @property {string|null} [uid] Execution uid
                         * @property {number|Long|null} [generation] Execution generation
                         * @property {Object.<string,string>|null} [labels] Execution labels
                         * @property {Object.<string,string>|null} [annotations] Execution annotations
                         * @property {google.protobuf.ITimestamp|null} [createTime] Execution createTime
                         * @property {google.protobuf.ITimestamp|null} [startTime] Execution startTime
                         * @property {google.protobuf.ITimestamp|null} [completionTime] Execution completionTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Execution updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] Execution deleteTime
                         * @property {google.protobuf.ITimestamp|null} [expireTime] Execution expireTime
                         * @property {google.api.LaunchStage|null} [launchStage] Execution launchStage
                         * @property {string|null} [job] Execution job
                         * @property {number|null} [parallelism] Execution parallelism
                         * @property {number|null} [taskCount] Execution taskCount
                         * @property {google.cloud.run.v2.ITaskTemplate|null} [template] Execution template
                         * @property {boolean|null} [reconciling] Execution reconciling
                         * @property {Array.<google.cloud.run.v2.ICondition>|null} [conditions] Execution conditions
                         * @property {number|Long|null} [observedGeneration] Execution observedGeneration
                         * @property {number|null} [runningCount] Execution runningCount
                         * @property {number|null} [succeededCount] Execution succeededCount
                         * @property {number|null} [failedCount] Execution failedCount
                         * @property {string|null} [etag] Execution etag
                         */
    
                        /**
                         * Constructs a new Execution.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents an Execution.
                         * @implements IExecution
                         * @constructor
                         * @param {google.cloud.run.v2.IExecution=} [properties] Properties to set
                         */
                        function Execution(properties) {
                            this.labels = {};
                            this.annotations = {};
                            this.conditions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Execution name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.name = "";
    
                        /**
                         * Execution uid.
                         * @member {string} uid
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.uid = "";
    
                        /**
                         * Execution generation.
                         * @member {number|Long} generation
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.generation = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Execution labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.labels = $util.emptyObject;
    
                        /**
                         * Execution annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.annotations = $util.emptyObject;
    
                        /**
                         * Execution createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.createTime = null;
    
                        /**
                         * Execution startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.startTime = null;
    
                        /**
                         * Execution completionTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} completionTime
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.completionTime = null;
    
                        /**
                         * Execution updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.updateTime = null;
    
                        /**
                         * Execution deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.deleteTime = null;
    
                        /**
                         * Execution expireTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.expireTime = null;
    
                        /**
                         * Execution launchStage.
                         * @member {google.api.LaunchStage} launchStage
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.launchStage = 0;
    
                        /**
                         * Execution job.
                         * @member {string} job
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.job = "";
    
                        /**
                         * Execution parallelism.
                         * @member {number} parallelism
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.parallelism = 0;
    
                        /**
                         * Execution taskCount.
                         * @member {number} taskCount
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.taskCount = 0;
    
                        /**
                         * Execution template.
                         * @member {google.cloud.run.v2.ITaskTemplate|null|undefined} template
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.template = null;
    
                        /**
                         * Execution reconciling.
                         * @member {boolean} reconciling
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.reconciling = false;
    
                        /**
                         * Execution conditions.
                         * @member {Array.<google.cloud.run.v2.ICondition>} conditions
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.conditions = $util.emptyArray;
    
                        /**
                         * Execution observedGeneration.
                         * @member {number|Long} observedGeneration
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.observedGeneration = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Execution runningCount.
                         * @member {number} runningCount
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.runningCount = 0;
    
                        /**
                         * Execution succeededCount.
                         * @member {number} succeededCount
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.succeededCount = 0;
    
                        /**
                         * Execution failedCount.
                         * @member {number} failedCount
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.failedCount = 0;
    
                        /**
                         * Execution etag.
                         * @member {string} etag
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         */
                        Execution.prototype.etag = "";
    
                        /**
                         * Creates a new Execution instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.Execution
                         * @static
                         * @param {google.cloud.run.v2.IExecution=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.Execution} Execution instance
                         */
                        Execution.create = function create(properties) {
                            return new Execution(properties);
                        };
    
                        /**
                         * Encodes the specified Execution message. Does not implicitly {@link google.cloud.run.v2.Execution.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.Execution
                         * @static
                         * @param {google.cloud.run.v2.IExecution} message Execution message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Execution.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uid);
                            if (message.generation != null && Object.hasOwnProperty.call(message, "generation"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.generation);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.completionTime != null && Object.hasOwnProperty.call(message, "completionTime"))
                                $root.google.protobuf.Timestamp.encode(message.completionTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.launchStage);
                            if (message.job != null && Object.hasOwnProperty.call(message, "job"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.job);
                            if (message.parallelism != null && Object.hasOwnProperty.call(message, "parallelism"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.parallelism);
                            if (message.taskCount != null && Object.hasOwnProperty.call(message, "taskCount"))
                                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.taskCount);
                            if (message.template != null && Object.hasOwnProperty.call(message, "template"))
                                $root.google.cloud.run.v2.TaskTemplate.encode(message.template, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.reconciling != null && Object.hasOwnProperty.call(message, "reconciling"))
                                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.reconciling);
                            if (message.conditions != null && message.conditions.length)
                                for (var i = 0; i < message.conditions.length; ++i)
                                    $root.google.cloud.run.v2.Condition.encode(message.conditions[i], writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.observedGeneration != null && Object.hasOwnProperty.call(message, "observedGeneration"))
                                writer.uint32(/* id 18, wireType 0 =*/144).int64(message.observedGeneration);
                            if (message.runningCount != null && Object.hasOwnProperty.call(message, "runningCount"))
                                writer.uint32(/* id 19, wireType 0 =*/152).int32(message.runningCount);
                            if (message.succeededCount != null && Object.hasOwnProperty.call(message, "succeededCount"))
                                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.succeededCount);
                            if (message.failedCount != null && Object.hasOwnProperty.call(message, "failedCount"))
                                writer.uint32(/* id 21, wireType 0 =*/168).int32(message.failedCount);
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 99, wireType 2 =*/794).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Execution message, length delimited. Does not implicitly {@link google.cloud.run.v2.Execution.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.Execution
                         * @static
                         * @param {google.cloud.run.v2.IExecution} message Execution message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Execution.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Execution message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.Execution
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.Execution} Execution
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Execution.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.Execution(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.generation = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 22: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.completionTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.launchStage = reader.int32();
                                        break;
                                    }
                                case 12: {
                                        message.job = reader.string();
                                        break;
                                    }
                                case 13: {
                                        message.parallelism = reader.int32();
                                        break;
                                    }
                                case 14: {
                                        message.taskCount = reader.int32();
                                        break;
                                    }
                                case 15: {
                                        message.template = $root.google.cloud.run.v2.TaskTemplate.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.reconciling = reader.bool();
                                        break;
                                    }
                                case 17: {
                                        if (!(message.conditions && message.conditions.length))
                                            message.conditions = [];
                                        message.conditions.push($root.google.cloud.run.v2.Condition.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 18: {
                                        message.observedGeneration = reader.int64();
                                        break;
                                    }
                                case 19: {
                                        message.runningCount = reader.int32();
                                        break;
                                    }
                                case 20: {
                                        message.succeededCount = reader.int32();
                                        break;
                                    }
                                case 21: {
                                        message.failedCount = reader.int32();
                                        break;
                                    }
                                case 99: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Execution message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.Execution
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.Execution} Execution
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Execution.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Execution message.
                         * @function verify
                         * @memberof google.cloud.run.v2.Execution
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Execution.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (!$util.isInteger(message.generation) && !(message.generation && $util.isInteger(message.generation.low) && $util.isInteger(message.generation.high)))
                                    return "generation: integer|Long expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.completionTime != null && message.hasOwnProperty("completionTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.completionTime);
                                if (error)
                                    return "completionTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                if (error)
                                    return "expireTime." + error;
                            }
                            if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                                switch (message.launchStage) {
                                default:
                                    return "launchStage: enum value expected";
                                case 0:
                                case 6:
                                case 7:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.job != null && message.hasOwnProperty("job"))
                                if (!$util.isString(message.job))
                                    return "job: string expected";
                            if (message.parallelism != null && message.hasOwnProperty("parallelism"))
                                if (!$util.isInteger(message.parallelism))
                                    return "parallelism: integer expected";
                            if (message.taskCount != null && message.hasOwnProperty("taskCount"))
                                if (!$util.isInteger(message.taskCount))
                                    return "taskCount: integer expected";
                            if (message.template != null && message.hasOwnProperty("template")) {
                                var error = $root.google.cloud.run.v2.TaskTemplate.verify(message.template);
                                if (error)
                                    return "template." + error;
                            }
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                if (typeof message.reconciling !== "boolean")
                                    return "reconciling: boolean expected";
                            if (message.conditions != null && message.hasOwnProperty("conditions")) {
                                if (!Array.isArray(message.conditions))
                                    return "conditions: array expected";
                                for (var i = 0; i < message.conditions.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Condition.verify(message.conditions[i]);
                                    if (error)
                                        return "conditions." + error;
                                }
                            }
                            if (message.observedGeneration != null && message.hasOwnProperty("observedGeneration"))
                                if (!$util.isInteger(message.observedGeneration) && !(message.observedGeneration && $util.isInteger(message.observedGeneration.low) && $util.isInteger(message.observedGeneration.high)))
                                    return "observedGeneration: integer|Long expected";
                            if (message.runningCount != null && message.hasOwnProperty("runningCount"))
                                if (!$util.isInteger(message.runningCount))
                                    return "runningCount: integer expected";
                            if (message.succeededCount != null && message.hasOwnProperty("succeededCount"))
                                if (!$util.isInteger(message.succeededCount))
                                    return "succeededCount: integer expected";
                            if (message.failedCount != null && message.hasOwnProperty("failedCount"))
                                if (!$util.isInteger(message.failedCount))
                                    return "failedCount: integer expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an Execution message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.Execution
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.Execution} Execution
                         */
                        Execution.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.Execution)
                                return object;
                            var message = new $root.google.cloud.run.v2.Execution();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.generation != null)
                                if ($util.Long)
                                    (message.generation = $util.Long.fromValue(object.generation)).unsigned = false;
                                else if (typeof object.generation === "string")
                                    message.generation = parseInt(object.generation, 10);
                                else if (typeof object.generation === "number")
                                    message.generation = object.generation;
                                else if (typeof object.generation === "object")
                                    message.generation = new $util.LongBits(object.generation.low >>> 0, object.generation.high >>> 0).toNumber();
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.run.v2.Execution.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.cloud.run.v2.Execution.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Execution.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Execution.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.completionTime != null) {
                                if (typeof object.completionTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Execution.completionTime: object expected");
                                message.completionTime = $root.google.protobuf.Timestamp.fromObject(object.completionTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Execution.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Execution.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            if (object.expireTime != null) {
                                if (typeof object.expireTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Execution.expireTime: object expected");
                                message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                            }
                            switch (object.launchStage) {
                            default:
                                if (typeof object.launchStage === "number") {
                                    message.launchStage = object.launchStage;
                                    break;
                                }
                                break;
                            case "LAUNCH_STAGE_UNSPECIFIED":
                            case 0:
                                message.launchStage = 0;
                                break;
                            case "UNIMPLEMENTED":
                            case 6:
                                message.launchStage = 6;
                                break;
                            case "PRELAUNCH":
                            case 7:
                                message.launchStage = 7;
                                break;
                            case "EARLY_ACCESS":
                            case 1:
                                message.launchStage = 1;
                                break;
                            case "ALPHA":
                            case 2:
                                message.launchStage = 2;
                                break;
                            case "BETA":
                            case 3:
                                message.launchStage = 3;
                                break;
                            case "GA":
                            case 4:
                                message.launchStage = 4;
                                break;
                            case "DEPRECATED":
                            case 5:
                                message.launchStage = 5;
                                break;
                            }
                            if (object.job != null)
                                message.job = String(object.job);
                            if (object.parallelism != null)
                                message.parallelism = object.parallelism | 0;
                            if (object.taskCount != null)
                                message.taskCount = object.taskCount | 0;
                            if (object.template != null) {
                                if (typeof object.template !== "object")
                                    throw TypeError(".google.cloud.run.v2.Execution.template: object expected");
                                message.template = $root.google.cloud.run.v2.TaskTemplate.fromObject(object.template);
                            }
                            if (object.reconciling != null)
                                message.reconciling = Boolean(object.reconciling);
                            if (object.conditions) {
                                if (!Array.isArray(object.conditions))
                                    throw TypeError(".google.cloud.run.v2.Execution.conditions: array expected");
                                message.conditions = [];
                                for (var i = 0; i < object.conditions.length; ++i) {
                                    if (typeof object.conditions[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.Execution.conditions: object expected");
                                    message.conditions[i] = $root.google.cloud.run.v2.Condition.fromObject(object.conditions[i]);
                                }
                            }
                            if (object.observedGeneration != null)
                                if ($util.Long)
                                    (message.observedGeneration = $util.Long.fromValue(object.observedGeneration)).unsigned = false;
                                else if (typeof object.observedGeneration === "string")
                                    message.observedGeneration = parseInt(object.observedGeneration, 10);
                                else if (typeof object.observedGeneration === "number")
                                    message.observedGeneration = object.observedGeneration;
                                else if (typeof object.observedGeneration === "object")
                                    message.observedGeneration = new $util.LongBits(object.observedGeneration.low >>> 0, object.observedGeneration.high >>> 0).toNumber();
                            if (object.runningCount != null)
                                message.runningCount = object.runningCount | 0;
                            if (object.succeededCount != null)
                                message.succeededCount = object.succeededCount | 0;
                            if (object.failedCount != null)
                                message.failedCount = object.failedCount | 0;
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Execution message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.Execution
                         * @static
                         * @param {google.cloud.run.v2.Execution} message Execution
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Execution.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.conditions = [];
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.annotations = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.uid = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.generation = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.generation = options.longs === String ? "0" : 0;
                                object.createTime = null;
                                object.completionTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                                object.expireTime = null;
                                object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                                object.job = "";
                                object.parallelism = 0;
                                object.taskCount = 0;
                                object.template = null;
                                object.reconciling = false;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.observedGeneration = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.observedGeneration = options.longs === String ? "0" : 0;
                                object.runningCount = 0;
                                object.succeededCount = 0;
                                object.failedCount = 0;
                                object.startTime = null;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (typeof message.generation === "number")
                                    object.generation = options.longs === String ? String(message.generation) : message.generation;
                                else
                                    object.generation = options.longs === String ? $util.Long.prototype.toString.call(message.generation) : options.longs === Number ? new $util.LongBits(message.generation.low >>> 0, message.generation.high >>> 0).toNumber() : message.generation;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.completionTime != null && message.hasOwnProperty("completionTime"))
                                object.completionTime = $root.google.protobuf.Timestamp.toObject(message.completionTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                            if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                                object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                            if (message.job != null && message.hasOwnProperty("job"))
                                object.job = message.job;
                            if (message.parallelism != null && message.hasOwnProperty("parallelism"))
                                object.parallelism = message.parallelism;
                            if (message.taskCount != null && message.hasOwnProperty("taskCount"))
                                object.taskCount = message.taskCount;
                            if (message.template != null && message.hasOwnProperty("template"))
                                object.template = $root.google.cloud.run.v2.TaskTemplate.toObject(message.template, options);
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                object.reconciling = message.reconciling;
                            if (message.conditions && message.conditions.length) {
                                object.conditions = [];
                                for (var j = 0; j < message.conditions.length; ++j)
                                    object.conditions[j] = $root.google.cloud.run.v2.Condition.toObject(message.conditions[j], options);
                            }
                            if (message.observedGeneration != null && message.hasOwnProperty("observedGeneration"))
                                if (typeof message.observedGeneration === "number")
                                    object.observedGeneration = options.longs === String ? String(message.observedGeneration) : message.observedGeneration;
                                else
                                    object.observedGeneration = options.longs === String ? $util.Long.prototype.toString.call(message.observedGeneration) : options.longs === Number ? new $util.LongBits(message.observedGeneration.low >>> 0, message.observedGeneration.high >>> 0).toNumber() : message.observedGeneration;
                            if (message.runningCount != null && message.hasOwnProperty("runningCount"))
                                object.runningCount = message.runningCount;
                            if (message.succeededCount != null && message.hasOwnProperty("succeededCount"))
                                object.succeededCount = message.succeededCount;
                            if (message.failedCount != null && message.hasOwnProperty("failedCount"))
                                object.failedCount = message.failedCount;
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this Execution to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.Execution
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Execution.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Execution
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.Execution
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Execution.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.Execution";
                        };
    
                        return Execution;
                    })();
    
                    v2.TaskTemplate = (function() {
    
                        /**
                         * Properties of a TaskTemplate.
                         * @memberof google.cloud.run.v2
                         * @interface ITaskTemplate
                         * @property {Array.<google.cloud.run.v2.IContainer>|null} [containers] TaskTemplate containers
                         * @property {Array.<google.cloud.run.v2.IVolume>|null} [volumes] TaskTemplate volumes
                         * @property {number|null} [maxRetries] TaskTemplate maxRetries
                         * @property {google.protobuf.IDuration|null} [timeout] TaskTemplate timeout
                         * @property {string|null} [serviceAccount] TaskTemplate serviceAccount
                         * @property {google.cloud.run.v2.ExecutionEnvironment|null} [executionEnvironment] TaskTemplate executionEnvironment
                         * @property {string|null} [encryptionKey] TaskTemplate encryptionKey
                         * @property {google.cloud.run.v2.IVpcAccess|null} [vpcAccess] TaskTemplate vpcAccess
                         */
    
                        /**
                         * Constructs a new TaskTemplate.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a TaskTemplate.
                         * @implements ITaskTemplate
                         * @constructor
                         * @param {google.cloud.run.v2.ITaskTemplate=} [properties] Properties to set
                         */
                        function TaskTemplate(properties) {
                            this.containers = [];
                            this.volumes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TaskTemplate containers.
                         * @member {Array.<google.cloud.run.v2.IContainer>} containers
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @instance
                         */
                        TaskTemplate.prototype.containers = $util.emptyArray;
    
                        /**
                         * TaskTemplate volumes.
                         * @member {Array.<google.cloud.run.v2.IVolume>} volumes
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @instance
                         */
                        TaskTemplate.prototype.volumes = $util.emptyArray;
    
                        /**
                         * TaskTemplate maxRetries.
                         * @member {number|null|undefined} maxRetries
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @instance
                         */
                        TaskTemplate.prototype.maxRetries = null;
    
                        /**
                         * TaskTemplate timeout.
                         * @member {google.protobuf.IDuration|null|undefined} timeout
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @instance
                         */
                        TaskTemplate.prototype.timeout = null;
    
                        /**
                         * TaskTemplate serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @instance
                         */
                        TaskTemplate.prototype.serviceAccount = "";
    
                        /**
                         * TaskTemplate executionEnvironment.
                         * @member {google.cloud.run.v2.ExecutionEnvironment} executionEnvironment
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @instance
                         */
                        TaskTemplate.prototype.executionEnvironment = 0;
    
                        /**
                         * TaskTemplate encryptionKey.
                         * @member {string} encryptionKey
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @instance
                         */
                        TaskTemplate.prototype.encryptionKey = "";
    
                        /**
                         * TaskTemplate vpcAccess.
                         * @member {google.cloud.run.v2.IVpcAccess|null|undefined} vpcAccess
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @instance
                         */
                        TaskTemplate.prototype.vpcAccess = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * TaskTemplate retries.
                         * @member {"maxRetries"|undefined} retries
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @instance
                         */
                        Object.defineProperty(TaskTemplate.prototype, "retries", {
                            get: $util.oneOfGetter($oneOfFields = ["maxRetries"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new TaskTemplate instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @static
                         * @param {google.cloud.run.v2.ITaskTemplate=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.TaskTemplate} TaskTemplate instance
                         */
                        TaskTemplate.create = function create(properties) {
                            return new TaskTemplate(properties);
                        };
    
                        /**
                         * Encodes the specified TaskTemplate message. Does not implicitly {@link google.cloud.run.v2.TaskTemplate.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @static
                         * @param {google.cloud.run.v2.ITaskTemplate} message TaskTemplate message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TaskTemplate.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.containers != null && message.containers.length)
                                for (var i = 0; i < message.containers.length; ++i)
                                    $root.google.cloud.run.v2.Container.encode(message.containers[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.volumes != null && message.volumes.length)
                                for (var i = 0; i < message.volumes.length; ++i)
                                    $root.google.cloud.run.v2.Volume.encode(message.volumes[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.maxRetries != null && Object.hasOwnProperty.call(message, "maxRetries"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxRetries);
                            if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                                $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.serviceAccount);
                            if (message.executionEnvironment != null && Object.hasOwnProperty.call(message, "executionEnvironment"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.executionEnvironment);
                            if (message.encryptionKey != null && Object.hasOwnProperty.call(message, "encryptionKey"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.encryptionKey);
                            if (message.vpcAccess != null && Object.hasOwnProperty.call(message, "vpcAccess"))
                                $root.google.cloud.run.v2.VpcAccess.encode(message.vpcAccess, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TaskTemplate message, length delimited. Does not implicitly {@link google.cloud.run.v2.TaskTemplate.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @static
                         * @param {google.cloud.run.v2.ITaskTemplate} message TaskTemplate message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TaskTemplate.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TaskTemplate message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.TaskTemplate} TaskTemplate
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TaskTemplate.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.TaskTemplate();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.containers && message.containers.length))
                                            message.containers = [];
                                        message.containers.push($root.google.cloud.run.v2.Container.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.volumes && message.volumes.length))
                                            message.volumes = [];
                                        message.volumes.push($root.google.cloud.run.v2.Volume.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        message.maxRetries = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.executionEnvironment = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.encryptionKey = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.vpcAccess = $root.google.cloud.run.v2.VpcAccess.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TaskTemplate message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.TaskTemplate} TaskTemplate
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TaskTemplate.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TaskTemplate message.
                         * @function verify
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TaskTemplate.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.containers != null && message.hasOwnProperty("containers")) {
                                if (!Array.isArray(message.containers))
                                    return "containers: array expected";
                                for (var i = 0; i < message.containers.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Container.verify(message.containers[i]);
                                    if (error)
                                        return "containers." + error;
                                }
                            }
                            if (message.volumes != null && message.hasOwnProperty("volumes")) {
                                if (!Array.isArray(message.volumes))
                                    return "volumes: array expected";
                                for (var i = 0; i < message.volumes.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Volume.verify(message.volumes[i]);
                                    if (error)
                                        return "volumes." + error;
                                }
                            }
                            if (message.maxRetries != null && message.hasOwnProperty("maxRetries")) {
                                properties.retries = 1;
                                if (!$util.isInteger(message.maxRetries))
                                    return "maxRetries: integer expected";
                            }
                            if (message.timeout != null && message.hasOwnProperty("timeout")) {
                                var error = $root.google.protobuf.Duration.verify(message.timeout);
                                if (error)
                                    return "timeout." + error;
                            }
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            if (message.executionEnvironment != null && message.hasOwnProperty("executionEnvironment"))
                                switch (message.executionEnvironment) {
                                default:
                                    return "executionEnvironment: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.encryptionKey != null && message.hasOwnProperty("encryptionKey"))
                                if (!$util.isString(message.encryptionKey))
                                    return "encryptionKey: string expected";
                            if (message.vpcAccess != null && message.hasOwnProperty("vpcAccess")) {
                                var error = $root.google.cloud.run.v2.VpcAccess.verify(message.vpcAccess);
                                if (error)
                                    return "vpcAccess." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TaskTemplate message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.TaskTemplate} TaskTemplate
                         */
                        TaskTemplate.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.TaskTemplate)
                                return object;
                            var message = new $root.google.cloud.run.v2.TaskTemplate();
                            if (object.containers) {
                                if (!Array.isArray(object.containers))
                                    throw TypeError(".google.cloud.run.v2.TaskTemplate.containers: array expected");
                                message.containers = [];
                                for (var i = 0; i < object.containers.length; ++i) {
                                    if (typeof object.containers[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.TaskTemplate.containers: object expected");
                                    message.containers[i] = $root.google.cloud.run.v2.Container.fromObject(object.containers[i]);
                                }
                            }
                            if (object.volumes) {
                                if (!Array.isArray(object.volumes))
                                    throw TypeError(".google.cloud.run.v2.TaskTemplate.volumes: array expected");
                                message.volumes = [];
                                for (var i = 0; i < object.volumes.length; ++i) {
                                    if (typeof object.volumes[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.TaskTemplate.volumes: object expected");
                                    message.volumes[i] = $root.google.cloud.run.v2.Volume.fromObject(object.volumes[i]);
                                }
                            }
                            if (object.maxRetries != null)
                                message.maxRetries = object.maxRetries | 0;
                            if (object.timeout != null) {
                                if (typeof object.timeout !== "object")
                                    throw TypeError(".google.cloud.run.v2.TaskTemplate.timeout: object expected");
                                message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                            }
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            switch (object.executionEnvironment) {
                            default:
                                if (typeof object.executionEnvironment === "number") {
                                    message.executionEnvironment = object.executionEnvironment;
                                    break;
                                }
                                break;
                            case "EXECUTION_ENVIRONMENT_UNSPECIFIED":
                            case 0:
                                message.executionEnvironment = 0;
                                break;
                            case "EXECUTION_ENVIRONMENT_GEN1":
                            case 1:
                                message.executionEnvironment = 1;
                                break;
                            case "EXECUTION_ENVIRONMENT_GEN2":
                            case 2:
                                message.executionEnvironment = 2;
                                break;
                            }
                            if (object.encryptionKey != null)
                                message.encryptionKey = String(object.encryptionKey);
                            if (object.vpcAccess != null) {
                                if (typeof object.vpcAccess !== "object")
                                    throw TypeError(".google.cloud.run.v2.TaskTemplate.vpcAccess: object expected");
                                message.vpcAccess = $root.google.cloud.run.v2.VpcAccess.fromObject(object.vpcAccess);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TaskTemplate message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @static
                         * @param {google.cloud.run.v2.TaskTemplate} message TaskTemplate
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TaskTemplate.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.containers = [];
                                object.volumes = [];
                            }
                            if (options.defaults) {
                                object.timeout = null;
                                object.serviceAccount = "";
                                object.executionEnvironment = options.enums === String ? "EXECUTION_ENVIRONMENT_UNSPECIFIED" : 0;
                                object.encryptionKey = "";
                                object.vpcAccess = null;
                            }
                            if (message.containers && message.containers.length) {
                                object.containers = [];
                                for (var j = 0; j < message.containers.length; ++j)
                                    object.containers[j] = $root.google.cloud.run.v2.Container.toObject(message.containers[j], options);
                            }
                            if (message.volumes && message.volumes.length) {
                                object.volumes = [];
                                for (var j = 0; j < message.volumes.length; ++j)
                                    object.volumes[j] = $root.google.cloud.run.v2.Volume.toObject(message.volumes[j], options);
                            }
                            if (message.maxRetries != null && message.hasOwnProperty("maxRetries")) {
                                object.maxRetries = message.maxRetries;
                                if (options.oneofs)
                                    object.retries = "maxRetries";
                            }
                            if (message.timeout != null && message.hasOwnProperty("timeout"))
                                object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            if (message.executionEnvironment != null && message.hasOwnProperty("executionEnvironment"))
                                object.executionEnvironment = options.enums === String ? $root.google.cloud.run.v2.ExecutionEnvironment[message.executionEnvironment] === undefined ? message.executionEnvironment : $root.google.cloud.run.v2.ExecutionEnvironment[message.executionEnvironment] : message.executionEnvironment;
                            if (message.encryptionKey != null && message.hasOwnProperty("encryptionKey"))
                                object.encryptionKey = message.encryptionKey;
                            if (message.vpcAccess != null && message.hasOwnProperty("vpcAccess"))
                                object.vpcAccess = $root.google.cloud.run.v2.VpcAccess.toObject(message.vpcAccess, options);
                            return object;
                        };
    
                        /**
                         * Converts this TaskTemplate to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TaskTemplate.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TaskTemplate
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.TaskTemplate
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TaskTemplate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.TaskTemplate";
                        };
    
                        return TaskTemplate;
                    })();
    
                    v2.Container = (function() {
    
                        /**
                         * Properties of a Container.
                         * @memberof google.cloud.run.v2
                         * @interface IContainer
                         * @property {string|null} [name] Container name
                         * @property {string|null} [image] Container image
                         * @property {Array.<string>|null} [command] Container command
                         * @property {Array.<string>|null} [args] Container args
                         * @property {Array.<google.cloud.run.v2.IEnvVar>|null} [env] Container env
                         * @property {google.cloud.run.v2.IResourceRequirements|null} [resources] Container resources
                         * @property {Array.<google.cloud.run.v2.IContainerPort>|null} [ports] Container ports
                         * @property {Array.<google.cloud.run.v2.IVolumeMount>|null} [volumeMounts] Container volumeMounts
                         * @property {string|null} [workingDir] Container workingDir
                         * @property {google.cloud.run.v2.IProbe|null} [livenessProbe] Container livenessProbe
                         * @property {google.cloud.run.v2.IProbe|null} [startupProbe] Container startupProbe
                         */
    
                        /**
                         * Constructs a new Container.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a Container.
                         * @implements IContainer
                         * @constructor
                         * @param {google.cloud.run.v2.IContainer=} [properties] Properties to set
                         */
                        function Container(properties) {
                            this.command = [];
                            this.args = [];
                            this.env = [];
                            this.ports = [];
                            this.volumeMounts = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Container name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.Container
                         * @instance
                         */
                        Container.prototype.name = "";
    
                        /**
                         * Container image.
                         * @member {string} image
                         * @memberof google.cloud.run.v2.Container
                         * @instance
                         */
                        Container.prototype.image = "";
    
                        /**
                         * Container command.
                         * @member {Array.<string>} command
                         * @memberof google.cloud.run.v2.Container
                         * @instance
                         */
                        Container.prototype.command = $util.emptyArray;
    
                        /**
                         * Container args.
                         * @member {Array.<string>} args
                         * @memberof google.cloud.run.v2.Container
                         * @instance
                         */
                        Container.prototype.args = $util.emptyArray;
    
                        /**
                         * Container env.
                         * @member {Array.<google.cloud.run.v2.IEnvVar>} env
                         * @memberof google.cloud.run.v2.Container
                         * @instance
                         */
                        Container.prototype.env = $util.emptyArray;
    
                        /**
                         * Container resources.
                         * @member {google.cloud.run.v2.IResourceRequirements|null|undefined} resources
                         * @memberof google.cloud.run.v2.Container
                         * @instance
                         */
                        Container.prototype.resources = null;
    
                        /**
                         * Container ports.
                         * @member {Array.<google.cloud.run.v2.IContainerPort>} ports
                         * @memberof google.cloud.run.v2.Container
                         * @instance
                         */
                        Container.prototype.ports = $util.emptyArray;
    
                        /**
                         * Container volumeMounts.
                         * @member {Array.<google.cloud.run.v2.IVolumeMount>} volumeMounts
                         * @memberof google.cloud.run.v2.Container
                         * @instance
                         */
                        Container.prototype.volumeMounts = $util.emptyArray;
    
                        /**
                         * Container workingDir.
                         * @member {string} workingDir
                         * @memberof google.cloud.run.v2.Container
                         * @instance
                         */
                        Container.prototype.workingDir = "";
    
                        /**
                         * Container livenessProbe.
                         * @member {google.cloud.run.v2.IProbe|null|undefined} livenessProbe
                         * @memberof google.cloud.run.v2.Container
                         * @instance
                         */
                        Container.prototype.livenessProbe = null;
    
                        /**
                         * Container startupProbe.
                         * @member {google.cloud.run.v2.IProbe|null|undefined} startupProbe
                         * @memberof google.cloud.run.v2.Container
                         * @instance
                         */
                        Container.prototype.startupProbe = null;
    
                        /**
                         * Creates a new Container instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.Container
                         * @static
                         * @param {google.cloud.run.v2.IContainer=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.Container} Container instance
                         */
                        Container.create = function create(properties) {
                            return new Container(properties);
                        };
    
                        /**
                         * Encodes the specified Container message. Does not implicitly {@link google.cloud.run.v2.Container.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.Container
                         * @static
                         * @param {google.cloud.run.v2.IContainer} message Container message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Container.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.image != null && Object.hasOwnProperty.call(message, "image"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.image);
                            if (message.command != null && message.command.length)
                                for (var i = 0; i < message.command.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.command[i]);
                            if (message.args != null && message.args.length)
                                for (var i = 0; i < message.args.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.args[i]);
                            if (message.env != null && message.env.length)
                                for (var i = 0; i < message.env.length; ++i)
                                    $root.google.cloud.run.v2.EnvVar.encode(message.env[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.resources != null && Object.hasOwnProperty.call(message, "resources"))
                                $root.google.cloud.run.v2.ResourceRequirements.encode(message.resources, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.ports != null && message.ports.length)
                                for (var i = 0; i < message.ports.length; ++i)
                                    $root.google.cloud.run.v2.ContainerPort.encode(message.ports[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.volumeMounts != null && message.volumeMounts.length)
                                for (var i = 0; i < message.volumeMounts.length; ++i)
                                    $root.google.cloud.run.v2.VolumeMount.encode(message.volumeMounts[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.workingDir != null && Object.hasOwnProperty.call(message, "workingDir"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.workingDir);
                            if (message.livenessProbe != null && Object.hasOwnProperty.call(message, "livenessProbe"))
                                $root.google.cloud.run.v2.Probe.encode(message.livenessProbe, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.startupProbe != null && Object.hasOwnProperty.call(message, "startupProbe"))
                                $root.google.cloud.run.v2.Probe.encode(message.startupProbe, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Container message, length delimited. Does not implicitly {@link google.cloud.run.v2.Container.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.Container
                         * @static
                         * @param {google.cloud.run.v2.IContainer} message Container message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Container.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Container message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.Container
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.Container} Container
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Container.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.Container();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.image = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.command && message.command.length))
                                            message.command = [];
                                        message.command.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.args && message.args.length))
                                            message.args = [];
                                        message.args.push(reader.string());
                                        break;
                                    }
                                case 5: {
                                        if (!(message.env && message.env.length))
                                            message.env = [];
                                        message.env.push($root.google.cloud.run.v2.EnvVar.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        message.resources = $root.google.cloud.run.v2.ResourceRequirements.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        if (!(message.ports && message.ports.length))
                                            message.ports = [];
                                        message.ports.push($root.google.cloud.run.v2.ContainerPort.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 8: {
                                        if (!(message.volumeMounts && message.volumeMounts.length))
                                            message.volumeMounts = [];
                                        message.volumeMounts.push($root.google.cloud.run.v2.VolumeMount.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 9: {
                                        message.workingDir = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.livenessProbe = $root.google.cloud.run.v2.Probe.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.startupProbe = $root.google.cloud.run.v2.Probe.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Container message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.Container
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.Container} Container
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Container.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Container message.
                         * @function verify
                         * @memberof google.cloud.run.v2.Container
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Container.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.image != null && message.hasOwnProperty("image"))
                                if (!$util.isString(message.image))
                                    return "image: string expected";
                            if (message.command != null && message.hasOwnProperty("command")) {
                                if (!Array.isArray(message.command))
                                    return "command: array expected";
                                for (var i = 0; i < message.command.length; ++i)
                                    if (!$util.isString(message.command[i]))
                                        return "command: string[] expected";
                            }
                            if (message.args != null && message.hasOwnProperty("args")) {
                                if (!Array.isArray(message.args))
                                    return "args: array expected";
                                for (var i = 0; i < message.args.length; ++i)
                                    if (!$util.isString(message.args[i]))
                                        return "args: string[] expected";
                            }
                            if (message.env != null && message.hasOwnProperty("env")) {
                                if (!Array.isArray(message.env))
                                    return "env: array expected";
                                for (var i = 0; i < message.env.length; ++i) {
                                    var error = $root.google.cloud.run.v2.EnvVar.verify(message.env[i]);
                                    if (error)
                                        return "env." + error;
                                }
                            }
                            if (message.resources != null && message.hasOwnProperty("resources")) {
                                var error = $root.google.cloud.run.v2.ResourceRequirements.verify(message.resources);
                                if (error)
                                    return "resources." + error;
                            }
                            if (message.ports != null && message.hasOwnProperty("ports")) {
                                if (!Array.isArray(message.ports))
                                    return "ports: array expected";
                                for (var i = 0; i < message.ports.length; ++i) {
                                    var error = $root.google.cloud.run.v2.ContainerPort.verify(message.ports[i]);
                                    if (error)
                                        return "ports." + error;
                                }
                            }
                            if (message.volumeMounts != null && message.hasOwnProperty("volumeMounts")) {
                                if (!Array.isArray(message.volumeMounts))
                                    return "volumeMounts: array expected";
                                for (var i = 0; i < message.volumeMounts.length; ++i) {
                                    var error = $root.google.cloud.run.v2.VolumeMount.verify(message.volumeMounts[i]);
                                    if (error)
                                        return "volumeMounts." + error;
                                }
                            }
                            if (message.workingDir != null && message.hasOwnProperty("workingDir"))
                                if (!$util.isString(message.workingDir))
                                    return "workingDir: string expected";
                            if (message.livenessProbe != null && message.hasOwnProperty("livenessProbe")) {
                                var error = $root.google.cloud.run.v2.Probe.verify(message.livenessProbe);
                                if (error)
                                    return "livenessProbe." + error;
                            }
                            if (message.startupProbe != null && message.hasOwnProperty("startupProbe")) {
                                var error = $root.google.cloud.run.v2.Probe.verify(message.startupProbe);
                                if (error)
                                    return "startupProbe." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Container message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.Container
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.Container} Container
                         */
                        Container.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.Container)
                                return object;
                            var message = new $root.google.cloud.run.v2.Container();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.image != null)
                                message.image = String(object.image);
                            if (object.command) {
                                if (!Array.isArray(object.command))
                                    throw TypeError(".google.cloud.run.v2.Container.command: array expected");
                                message.command = [];
                                for (var i = 0; i < object.command.length; ++i)
                                    message.command[i] = String(object.command[i]);
                            }
                            if (object.args) {
                                if (!Array.isArray(object.args))
                                    throw TypeError(".google.cloud.run.v2.Container.args: array expected");
                                message.args = [];
                                for (var i = 0; i < object.args.length; ++i)
                                    message.args[i] = String(object.args[i]);
                            }
                            if (object.env) {
                                if (!Array.isArray(object.env))
                                    throw TypeError(".google.cloud.run.v2.Container.env: array expected");
                                message.env = [];
                                for (var i = 0; i < object.env.length; ++i) {
                                    if (typeof object.env[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.Container.env: object expected");
                                    message.env[i] = $root.google.cloud.run.v2.EnvVar.fromObject(object.env[i]);
                                }
                            }
                            if (object.resources != null) {
                                if (typeof object.resources !== "object")
                                    throw TypeError(".google.cloud.run.v2.Container.resources: object expected");
                                message.resources = $root.google.cloud.run.v2.ResourceRequirements.fromObject(object.resources);
                            }
                            if (object.ports) {
                                if (!Array.isArray(object.ports))
                                    throw TypeError(".google.cloud.run.v2.Container.ports: array expected");
                                message.ports = [];
                                for (var i = 0; i < object.ports.length; ++i) {
                                    if (typeof object.ports[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.Container.ports: object expected");
                                    message.ports[i] = $root.google.cloud.run.v2.ContainerPort.fromObject(object.ports[i]);
                                }
                            }
                            if (object.volumeMounts) {
                                if (!Array.isArray(object.volumeMounts))
                                    throw TypeError(".google.cloud.run.v2.Container.volumeMounts: array expected");
                                message.volumeMounts = [];
                                for (var i = 0; i < object.volumeMounts.length; ++i) {
                                    if (typeof object.volumeMounts[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.Container.volumeMounts: object expected");
                                    message.volumeMounts[i] = $root.google.cloud.run.v2.VolumeMount.fromObject(object.volumeMounts[i]);
                                }
                            }
                            if (object.workingDir != null)
                                message.workingDir = String(object.workingDir);
                            if (object.livenessProbe != null) {
                                if (typeof object.livenessProbe !== "object")
                                    throw TypeError(".google.cloud.run.v2.Container.livenessProbe: object expected");
                                message.livenessProbe = $root.google.cloud.run.v2.Probe.fromObject(object.livenessProbe);
                            }
                            if (object.startupProbe != null) {
                                if (typeof object.startupProbe !== "object")
                                    throw TypeError(".google.cloud.run.v2.Container.startupProbe: object expected");
                                message.startupProbe = $root.google.cloud.run.v2.Probe.fromObject(object.startupProbe);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Container message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.Container
                         * @static
                         * @param {google.cloud.run.v2.Container} message Container
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Container.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.command = [];
                                object.args = [];
                                object.env = [];
                                object.ports = [];
                                object.volumeMounts = [];
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.image = "";
                                object.resources = null;
                                object.workingDir = "";
                                object.livenessProbe = null;
                                object.startupProbe = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.image != null && message.hasOwnProperty("image"))
                                object.image = message.image;
                            if (message.command && message.command.length) {
                                object.command = [];
                                for (var j = 0; j < message.command.length; ++j)
                                    object.command[j] = message.command[j];
                            }
                            if (message.args && message.args.length) {
                                object.args = [];
                                for (var j = 0; j < message.args.length; ++j)
                                    object.args[j] = message.args[j];
                            }
                            if (message.env && message.env.length) {
                                object.env = [];
                                for (var j = 0; j < message.env.length; ++j)
                                    object.env[j] = $root.google.cloud.run.v2.EnvVar.toObject(message.env[j], options);
                            }
                            if (message.resources != null && message.hasOwnProperty("resources"))
                                object.resources = $root.google.cloud.run.v2.ResourceRequirements.toObject(message.resources, options);
                            if (message.ports && message.ports.length) {
                                object.ports = [];
                                for (var j = 0; j < message.ports.length; ++j)
                                    object.ports[j] = $root.google.cloud.run.v2.ContainerPort.toObject(message.ports[j], options);
                            }
                            if (message.volumeMounts && message.volumeMounts.length) {
                                object.volumeMounts = [];
                                for (var j = 0; j < message.volumeMounts.length; ++j)
                                    object.volumeMounts[j] = $root.google.cloud.run.v2.VolumeMount.toObject(message.volumeMounts[j], options);
                            }
                            if (message.workingDir != null && message.hasOwnProperty("workingDir"))
                                object.workingDir = message.workingDir;
                            if (message.livenessProbe != null && message.hasOwnProperty("livenessProbe"))
                                object.livenessProbe = $root.google.cloud.run.v2.Probe.toObject(message.livenessProbe, options);
                            if (message.startupProbe != null && message.hasOwnProperty("startupProbe"))
                                object.startupProbe = $root.google.cloud.run.v2.Probe.toObject(message.startupProbe, options);
                            return object;
                        };
    
                        /**
                         * Converts this Container to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.Container
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Container.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Container
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.Container
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Container.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.Container";
                        };
    
                        return Container;
                    })();
    
                    v2.ResourceRequirements = (function() {
    
                        /**
                         * Properties of a ResourceRequirements.
                         * @memberof google.cloud.run.v2
                         * @interface IResourceRequirements
                         * @property {Object.<string,string>|null} [limits] ResourceRequirements limits
                         * @property {boolean|null} [cpuIdle] ResourceRequirements cpuIdle
                         */
    
                        /**
                         * Constructs a new ResourceRequirements.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a ResourceRequirements.
                         * @implements IResourceRequirements
                         * @constructor
                         * @param {google.cloud.run.v2.IResourceRequirements=} [properties] Properties to set
                         */
                        function ResourceRequirements(properties) {
                            this.limits = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResourceRequirements limits.
                         * @member {Object.<string,string>} limits
                         * @memberof google.cloud.run.v2.ResourceRequirements
                         * @instance
                         */
                        ResourceRequirements.prototype.limits = $util.emptyObject;
    
                        /**
                         * ResourceRequirements cpuIdle.
                         * @member {boolean} cpuIdle
                         * @memberof google.cloud.run.v2.ResourceRequirements
                         * @instance
                         */
                        ResourceRequirements.prototype.cpuIdle = false;
    
                        /**
                         * Creates a new ResourceRequirements instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.ResourceRequirements
                         * @static
                         * @param {google.cloud.run.v2.IResourceRequirements=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.ResourceRequirements} ResourceRequirements instance
                         */
                        ResourceRequirements.create = function create(properties) {
                            return new ResourceRequirements(properties);
                        };
    
                        /**
                         * Encodes the specified ResourceRequirements message. Does not implicitly {@link google.cloud.run.v2.ResourceRequirements.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.ResourceRequirements
                         * @static
                         * @param {google.cloud.run.v2.IResourceRequirements} message ResourceRequirements message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceRequirements.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.limits != null && Object.hasOwnProperty.call(message, "limits"))
                                for (var keys = Object.keys(message.limits), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.limits[keys[i]]).ldelim();
                            if (message.cpuIdle != null && Object.hasOwnProperty.call(message, "cpuIdle"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.cpuIdle);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResourceRequirements message, length delimited. Does not implicitly {@link google.cloud.run.v2.ResourceRequirements.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.ResourceRequirements
                         * @static
                         * @param {google.cloud.run.v2.IResourceRequirements} message ResourceRequirements message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceRequirements.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResourceRequirements message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.ResourceRequirements
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.ResourceRequirements} ResourceRequirements
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceRequirements.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.ResourceRequirements(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.limits === $util.emptyObject)
                                            message.limits = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.limits[key] = value;
                                        break;
                                    }
                                case 2: {
                                        message.cpuIdle = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResourceRequirements message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.ResourceRequirements
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.ResourceRequirements} ResourceRequirements
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceRequirements.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResourceRequirements message.
                         * @function verify
                         * @memberof google.cloud.run.v2.ResourceRequirements
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResourceRequirements.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.limits != null && message.hasOwnProperty("limits")) {
                                if (!$util.isObject(message.limits))
                                    return "limits: object expected";
                                var key = Object.keys(message.limits);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.limits[key[i]]))
                                        return "limits: string{k:string} expected";
                            }
                            if (message.cpuIdle != null && message.hasOwnProperty("cpuIdle"))
                                if (typeof message.cpuIdle !== "boolean")
                                    return "cpuIdle: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResourceRequirements message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.ResourceRequirements
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.ResourceRequirements} ResourceRequirements
                         */
                        ResourceRequirements.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.ResourceRequirements)
                                return object;
                            var message = new $root.google.cloud.run.v2.ResourceRequirements();
                            if (object.limits) {
                                if (typeof object.limits !== "object")
                                    throw TypeError(".google.cloud.run.v2.ResourceRequirements.limits: object expected");
                                message.limits = {};
                                for (var keys = Object.keys(object.limits), i = 0; i < keys.length; ++i)
                                    message.limits[keys[i]] = String(object.limits[keys[i]]);
                            }
                            if (object.cpuIdle != null)
                                message.cpuIdle = Boolean(object.cpuIdle);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResourceRequirements message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.ResourceRequirements
                         * @static
                         * @param {google.cloud.run.v2.ResourceRequirements} message ResourceRequirements
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResourceRequirements.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.limits = {};
                            if (options.defaults)
                                object.cpuIdle = false;
                            var keys2;
                            if (message.limits && (keys2 = Object.keys(message.limits)).length) {
                                object.limits = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.limits[keys2[j]] = message.limits[keys2[j]];
                            }
                            if (message.cpuIdle != null && message.hasOwnProperty("cpuIdle"))
                                object.cpuIdle = message.cpuIdle;
                            return object;
                        };
    
                        /**
                         * Converts this ResourceRequirements to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.ResourceRequirements
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResourceRequirements.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResourceRequirements
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.ResourceRequirements
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResourceRequirements.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.ResourceRequirements";
                        };
    
                        return ResourceRequirements;
                    })();
    
                    v2.EnvVar = (function() {
    
                        /**
                         * Properties of an EnvVar.
                         * @memberof google.cloud.run.v2
                         * @interface IEnvVar
                         * @property {string|null} [name] EnvVar name
                         * @property {string|null} [value] EnvVar value
                         * @property {google.cloud.run.v2.IEnvVarSource|null} [valueSource] EnvVar valueSource
                         */
    
                        /**
                         * Constructs a new EnvVar.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents an EnvVar.
                         * @implements IEnvVar
                         * @constructor
                         * @param {google.cloud.run.v2.IEnvVar=} [properties] Properties to set
                         */
                        function EnvVar(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EnvVar name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.EnvVar
                         * @instance
                         */
                        EnvVar.prototype.name = "";
    
                        /**
                         * EnvVar value.
                         * @member {string|null|undefined} value
                         * @memberof google.cloud.run.v2.EnvVar
                         * @instance
                         */
                        EnvVar.prototype.value = null;
    
                        /**
                         * EnvVar valueSource.
                         * @member {google.cloud.run.v2.IEnvVarSource|null|undefined} valueSource
                         * @memberof google.cloud.run.v2.EnvVar
                         * @instance
                         */
                        EnvVar.prototype.valueSource = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * EnvVar values.
                         * @member {"value"|"valueSource"|undefined} values
                         * @memberof google.cloud.run.v2.EnvVar
                         * @instance
                         */
                        Object.defineProperty(EnvVar.prototype, "values", {
                            get: $util.oneOfGetter($oneOfFields = ["value", "valueSource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new EnvVar instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.EnvVar
                         * @static
                         * @param {google.cloud.run.v2.IEnvVar=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.EnvVar} EnvVar instance
                         */
                        EnvVar.create = function create(properties) {
                            return new EnvVar(properties);
                        };
    
                        /**
                         * Encodes the specified EnvVar message. Does not implicitly {@link google.cloud.run.v2.EnvVar.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.EnvVar
                         * @static
                         * @param {google.cloud.run.v2.IEnvVar} message EnvVar message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnvVar.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                            if (message.valueSource != null && Object.hasOwnProperty.call(message, "valueSource"))
                                $root.google.cloud.run.v2.EnvVarSource.encode(message.valueSource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EnvVar message, length delimited. Does not implicitly {@link google.cloud.run.v2.EnvVar.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.EnvVar
                         * @static
                         * @param {google.cloud.run.v2.IEnvVar} message EnvVar message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnvVar.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EnvVar message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.EnvVar
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.EnvVar} EnvVar
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnvVar.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.EnvVar();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.value = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.valueSource = $root.google.cloud.run.v2.EnvVarSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EnvVar message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.EnvVar
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.EnvVar} EnvVar
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnvVar.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EnvVar message.
                         * @function verify
                         * @memberof google.cloud.run.v2.EnvVar
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EnvVar.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.value != null && message.hasOwnProperty("value")) {
                                properties.values = 1;
                                if (!$util.isString(message.value))
                                    return "value: string expected";
                            }
                            if (message.valueSource != null && message.hasOwnProperty("valueSource")) {
                                if (properties.values === 1)
                                    return "values: multiple values";
                                properties.values = 1;
                                {
                                    var error = $root.google.cloud.run.v2.EnvVarSource.verify(message.valueSource);
                                    if (error)
                                        return "valueSource." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EnvVar message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.EnvVar
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.EnvVar} EnvVar
                         */
                        EnvVar.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.EnvVar)
                                return object;
                            var message = new $root.google.cloud.run.v2.EnvVar();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.value != null)
                                message.value = String(object.value);
                            if (object.valueSource != null) {
                                if (typeof object.valueSource !== "object")
                                    throw TypeError(".google.cloud.run.v2.EnvVar.valueSource: object expected");
                                message.valueSource = $root.google.cloud.run.v2.EnvVarSource.fromObject(object.valueSource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EnvVar message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.EnvVar
                         * @static
                         * @param {google.cloud.run.v2.EnvVar} message EnvVar
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EnvVar.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.value != null && message.hasOwnProperty("value")) {
                                object.value = message.value;
                                if (options.oneofs)
                                    object.values = "value";
                            }
                            if (message.valueSource != null && message.hasOwnProperty("valueSource")) {
                                object.valueSource = $root.google.cloud.run.v2.EnvVarSource.toObject(message.valueSource, options);
                                if (options.oneofs)
                                    object.values = "valueSource";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this EnvVar to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.EnvVar
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EnvVar.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EnvVar
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.EnvVar
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EnvVar.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.EnvVar";
                        };
    
                        return EnvVar;
                    })();
    
                    v2.EnvVarSource = (function() {
    
                        /**
                         * Properties of an EnvVarSource.
                         * @memberof google.cloud.run.v2
                         * @interface IEnvVarSource
                         * @property {google.cloud.run.v2.ISecretKeySelector|null} [secretKeyRef] EnvVarSource secretKeyRef
                         */
    
                        /**
                         * Constructs a new EnvVarSource.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents an EnvVarSource.
                         * @implements IEnvVarSource
                         * @constructor
                         * @param {google.cloud.run.v2.IEnvVarSource=} [properties] Properties to set
                         */
                        function EnvVarSource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EnvVarSource secretKeyRef.
                         * @member {google.cloud.run.v2.ISecretKeySelector|null|undefined} secretKeyRef
                         * @memberof google.cloud.run.v2.EnvVarSource
                         * @instance
                         */
                        EnvVarSource.prototype.secretKeyRef = null;
    
                        /**
                         * Creates a new EnvVarSource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.EnvVarSource
                         * @static
                         * @param {google.cloud.run.v2.IEnvVarSource=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.EnvVarSource} EnvVarSource instance
                         */
                        EnvVarSource.create = function create(properties) {
                            return new EnvVarSource(properties);
                        };
    
                        /**
                         * Encodes the specified EnvVarSource message. Does not implicitly {@link google.cloud.run.v2.EnvVarSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.EnvVarSource
                         * @static
                         * @param {google.cloud.run.v2.IEnvVarSource} message EnvVarSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnvVarSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.secretKeyRef != null && Object.hasOwnProperty.call(message, "secretKeyRef"))
                                $root.google.cloud.run.v2.SecretKeySelector.encode(message.secretKeyRef, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EnvVarSource message, length delimited. Does not implicitly {@link google.cloud.run.v2.EnvVarSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.EnvVarSource
                         * @static
                         * @param {google.cloud.run.v2.IEnvVarSource} message EnvVarSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnvVarSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EnvVarSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.EnvVarSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.EnvVarSource} EnvVarSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnvVarSource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.EnvVarSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.secretKeyRef = $root.google.cloud.run.v2.SecretKeySelector.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EnvVarSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.EnvVarSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.EnvVarSource} EnvVarSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnvVarSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EnvVarSource message.
                         * @function verify
                         * @memberof google.cloud.run.v2.EnvVarSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EnvVarSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.secretKeyRef != null && message.hasOwnProperty("secretKeyRef")) {
                                var error = $root.google.cloud.run.v2.SecretKeySelector.verify(message.secretKeyRef);
                                if (error)
                                    return "secretKeyRef." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EnvVarSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.EnvVarSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.EnvVarSource} EnvVarSource
                         */
                        EnvVarSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.EnvVarSource)
                                return object;
                            var message = new $root.google.cloud.run.v2.EnvVarSource();
                            if (object.secretKeyRef != null) {
                                if (typeof object.secretKeyRef !== "object")
                                    throw TypeError(".google.cloud.run.v2.EnvVarSource.secretKeyRef: object expected");
                                message.secretKeyRef = $root.google.cloud.run.v2.SecretKeySelector.fromObject(object.secretKeyRef);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EnvVarSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.EnvVarSource
                         * @static
                         * @param {google.cloud.run.v2.EnvVarSource} message EnvVarSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EnvVarSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.secretKeyRef = null;
                            if (message.secretKeyRef != null && message.hasOwnProperty("secretKeyRef"))
                                object.secretKeyRef = $root.google.cloud.run.v2.SecretKeySelector.toObject(message.secretKeyRef, options);
                            return object;
                        };
    
                        /**
                         * Converts this EnvVarSource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.EnvVarSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EnvVarSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EnvVarSource
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.EnvVarSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EnvVarSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.EnvVarSource";
                        };
    
                        return EnvVarSource;
                    })();
    
                    v2.SecretKeySelector = (function() {
    
                        /**
                         * Properties of a SecretKeySelector.
                         * @memberof google.cloud.run.v2
                         * @interface ISecretKeySelector
                         * @property {string|null} [secret] SecretKeySelector secret
                         * @property {string|null} [version] SecretKeySelector version
                         */
    
                        /**
                         * Constructs a new SecretKeySelector.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a SecretKeySelector.
                         * @implements ISecretKeySelector
                         * @constructor
                         * @param {google.cloud.run.v2.ISecretKeySelector=} [properties] Properties to set
                         */
                        function SecretKeySelector(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SecretKeySelector secret.
                         * @member {string} secret
                         * @memberof google.cloud.run.v2.SecretKeySelector
                         * @instance
                         */
                        SecretKeySelector.prototype.secret = "";
    
                        /**
                         * SecretKeySelector version.
                         * @member {string} version
                         * @memberof google.cloud.run.v2.SecretKeySelector
                         * @instance
                         */
                        SecretKeySelector.prototype.version = "";
    
                        /**
                         * Creates a new SecretKeySelector instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.SecretKeySelector
                         * @static
                         * @param {google.cloud.run.v2.ISecretKeySelector=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.SecretKeySelector} SecretKeySelector instance
                         */
                        SecretKeySelector.create = function create(properties) {
                            return new SecretKeySelector(properties);
                        };
    
                        /**
                         * Encodes the specified SecretKeySelector message. Does not implicitly {@link google.cloud.run.v2.SecretKeySelector.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.SecretKeySelector
                         * @static
                         * @param {google.cloud.run.v2.ISecretKeySelector} message SecretKeySelector message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretKeySelector.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.secret != null && Object.hasOwnProperty.call(message, "secret"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.secret);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SecretKeySelector message, length delimited. Does not implicitly {@link google.cloud.run.v2.SecretKeySelector.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.SecretKeySelector
                         * @static
                         * @param {google.cloud.run.v2.ISecretKeySelector} message SecretKeySelector message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretKeySelector.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SecretKeySelector message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.SecretKeySelector
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.SecretKeySelector} SecretKeySelector
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretKeySelector.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.SecretKeySelector();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.secret = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.version = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SecretKeySelector message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.SecretKeySelector
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.SecretKeySelector} SecretKeySelector
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretKeySelector.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SecretKeySelector message.
                         * @function verify
                         * @memberof google.cloud.run.v2.SecretKeySelector
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SecretKeySelector.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                if (!$util.isString(message.secret))
                                    return "secret: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SecretKeySelector message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.SecretKeySelector
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.SecretKeySelector} SecretKeySelector
                         */
                        SecretKeySelector.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.SecretKeySelector)
                                return object;
                            var message = new $root.google.cloud.run.v2.SecretKeySelector();
                            if (object.secret != null)
                                message.secret = String(object.secret);
                            if (object.version != null)
                                message.version = String(object.version);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SecretKeySelector message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.SecretKeySelector
                         * @static
                         * @param {google.cloud.run.v2.SecretKeySelector} message SecretKeySelector
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SecretKeySelector.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.secret = "";
                                object.version = "";
                            }
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                object.secret = message.secret;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            return object;
                        };
    
                        /**
                         * Converts this SecretKeySelector to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.SecretKeySelector
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SecretKeySelector.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SecretKeySelector
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.SecretKeySelector
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SecretKeySelector.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.SecretKeySelector";
                        };
    
                        return SecretKeySelector;
                    })();
    
                    v2.ContainerPort = (function() {
    
                        /**
                         * Properties of a ContainerPort.
                         * @memberof google.cloud.run.v2
                         * @interface IContainerPort
                         * @property {string|null} [name] ContainerPort name
                         * @property {number|null} [containerPort] ContainerPort containerPort
                         */
    
                        /**
                         * Constructs a new ContainerPort.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a ContainerPort.
                         * @implements IContainerPort
                         * @constructor
                         * @param {google.cloud.run.v2.IContainerPort=} [properties] Properties to set
                         */
                        function ContainerPort(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ContainerPort name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.ContainerPort
                         * @instance
                         */
                        ContainerPort.prototype.name = "";
    
                        /**
                         * ContainerPort containerPort.
                         * @member {number} containerPort
                         * @memberof google.cloud.run.v2.ContainerPort
                         * @instance
                         */
                        ContainerPort.prototype.containerPort = 0;
    
                        /**
                         * Creates a new ContainerPort instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.ContainerPort
                         * @static
                         * @param {google.cloud.run.v2.IContainerPort=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.ContainerPort} ContainerPort instance
                         */
                        ContainerPort.create = function create(properties) {
                            return new ContainerPort(properties);
                        };
    
                        /**
                         * Encodes the specified ContainerPort message. Does not implicitly {@link google.cloud.run.v2.ContainerPort.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.ContainerPort
                         * @static
                         * @param {google.cloud.run.v2.IContainerPort} message ContainerPort message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContainerPort.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.containerPort != null && Object.hasOwnProperty.call(message, "containerPort"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.containerPort);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ContainerPort message, length delimited. Does not implicitly {@link google.cloud.run.v2.ContainerPort.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.ContainerPort
                         * @static
                         * @param {google.cloud.run.v2.IContainerPort} message ContainerPort message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ContainerPort.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ContainerPort message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.ContainerPort
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.ContainerPort} ContainerPort
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContainerPort.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.ContainerPort();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.containerPort = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ContainerPort message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.ContainerPort
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.ContainerPort} ContainerPort
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ContainerPort.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ContainerPort message.
                         * @function verify
                         * @memberof google.cloud.run.v2.ContainerPort
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ContainerPort.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.containerPort != null && message.hasOwnProperty("containerPort"))
                                if (!$util.isInteger(message.containerPort))
                                    return "containerPort: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a ContainerPort message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.ContainerPort
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.ContainerPort} ContainerPort
                         */
                        ContainerPort.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.ContainerPort)
                                return object;
                            var message = new $root.google.cloud.run.v2.ContainerPort();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.containerPort != null)
                                message.containerPort = object.containerPort | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ContainerPort message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.ContainerPort
                         * @static
                         * @param {google.cloud.run.v2.ContainerPort} message ContainerPort
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ContainerPort.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.containerPort = 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.containerPort != null && message.hasOwnProperty("containerPort"))
                                object.containerPort = message.containerPort;
                            return object;
                        };
    
                        /**
                         * Converts this ContainerPort to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.ContainerPort
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ContainerPort.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ContainerPort
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.ContainerPort
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ContainerPort.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.ContainerPort";
                        };
    
                        return ContainerPort;
                    })();
    
                    v2.VolumeMount = (function() {
    
                        /**
                         * Properties of a VolumeMount.
                         * @memberof google.cloud.run.v2
                         * @interface IVolumeMount
                         * @property {string|null} [name] VolumeMount name
                         * @property {string|null} [mountPath] VolumeMount mountPath
                         */
    
                        /**
                         * Constructs a new VolumeMount.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a VolumeMount.
                         * @implements IVolumeMount
                         * @constructor
                         * @param {google.cloud.run.v2.IVolumeMount=} [properties] Properties to set
                         */
                        function VolumeMount(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VolumeMount name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.VolumeMount
                         * @instance
                         */
                        VolumeMount.prototype.name = "";
    
                        /**
                         * VolumeMount mountPath.
                         * @member {string} mountPath
                         * @memberof google.cloud.run.v2.VolumeMount
                         * @instance
                         */
                        VolumeMount.prototype.mountPath = "";
    
                        /**
                         * Creates a new VolumeMount instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.VolumeMount
                         * @static
                         * @param {google.cloud.run.v2.IVolumeMount=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.VolumeMount} VolumeMount instance
                         */
                        VolumeMount.create = function create(properties) {
                            return new VolumeMount(properties);
                        };
    
                        /**
                         * Encodes the specified VolumeMount message. Does not implicitly {@link google.cloud.run.v2.VolumeMount.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.VolumeMount
                         * @static
                         * @param {google.cloud.run.v2.IVolumeMount} message VolumeMount message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VolumeMount.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.mountPath != null && Object.hasOwnProperty.call(message, "mountPath"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.mountPath);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VolumeMount message, length delimited. Does not implicitly {@link google.cloud.run.v2.VolumeMount.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.VolumeMount
                         * @static
                         * @param {google.cloud.run.v2.IVolumeMount} message VolumeMount message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VolumeMount.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VolumeMount message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.VolumeMount
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.VolumeMount} VolumeMount
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VolumeMount.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.VolumeMount();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.mountPath = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VolumeMount message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.VolumeMount
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.VolumeMount} VolumeMount
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VolumeMount.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VolumeMount message.
                         * @function verify
                         * @memberof google.cloud.run.v2.VolumeMount
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VolumeMount.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.mountPath != null && message.hasOwnProperty("mountPath"))
                                if (!$util.isString(message.mountPath))
                                    return "mountPath: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a VolumeMount message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.VolumeMount
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.VolumeMount} VolumeMount
                         */
                        VolumeMount.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.VolumeMount)
                                return object;
                            var message = new $root.google.cloud.run.v2.VolumeMount();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.mountPath != null)
                                message.mountPath = String(object.mountPath);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VolumeMount message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.VolumeMount
                         * @static
                         * @param {google.cloud.run.v2.VolumeMount} message VolumeMount
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VolumeMount.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.mountPath = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.mountPath != null && message.hasOwnProperty("mountPath"))
                                object.mountPath = message.mountPath;
                            return object;
                        };
    
                        /**
                         * Converts this VolumeMount to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.VolumeMount
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VolumeMount.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VolumeMount
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.VolumeMount
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VolumeMount.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.VolumeMount";
                        };
    
                        return VolumeMount;
                    })();
    
                    v2.Volume = (function() {
    
                        /**
                         * Properties of a Volume.
                         * @memberof google.cloud.run.v2
                         * @interface IVolume
                         * @property {string|null} [name] Volume name
                         * @property {google.cloud.run.v2.ISecretVolumeSource|null} [secret] Volume secret
                         * @property {google.cloud.run.v2.ICloudSqlInstance|null} [cloudSqlInstance] Volume cloudSqlInstance
                         */
    
                        /**
                         * Constructs a new Volume.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a Volume.
                         * @implements IVolume
                         * @constructor
                         * @param {google.cloud.run.v2.IVolume=} [properties] Properties to set
                         */
                        function Volume(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Volume name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.Volume
                         * @instance
                         */
                        Volume.prototype.name = "";
    
                        /**
                         * Volume secret.
                         * @member {google.cloud.run.v2.ISecretVolumeSource|null|undefined} secret
                         * @memberof google.cloud.run.v2.Volume
                         * @instance
                         */
                        Volume.prototype.secret = null;
    
                        /**
                         * Volume cloudSqlInstance.
                         * @member {google.cloud.run.v2.ICloudSqlInstance|null|undefined} cloudSqlInstance
                         * @memberof google.cloud.run.v2.Volume
                         * @instance
                         */
                        Volume.prototype.cloudSqlInstance = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Volume volumeType.
                         * @member {"secret"|"cloudSqlInstance"|undefined} volumeType
                         * @memberof google.cloud.run.v2.Volume
                         * @instance
                         */
                        Object.defineProperty(Volume.prototype, "volumeType", {
                            get: $util.oneOfGetter($oneOfFields = ["secret", "cloudSqlInstance"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Volume instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.Volume
                         * @static
                         * @param {google.cloud.run.v2.IVolume=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.Volume} Volume instance
                         */
                        Volume.create = function create(properties) {
                            return new Volume(properties);
                        };
    
                        /**
                         * Encodes the specified Volume message. Does not implicitly {@link google.cloud.run.v2.Volume.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.Volume
                         * @static
                         * @param {google.cloud.run.v2.IVolume} message Volume message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Volume.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.secret != null && Object.hasOwnProperty.call(message, "secret"))
                                $root.google.cloud.run.v2.SecretVolumeSource.encode(message.secret, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.cloudSqlInstance != null && Object.hasOwnProperty.call(message, "cloudSqlInstance"))
                                $root.google.cloud.run.v2.CloudSqlInstance.encode(message.cloudSqlInstance, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Volume message, length delimited. Does not implicitly {@link google.cloud.run.v2.Volume.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.Volume
                         * @static
                         * @param {google.cloud.run.v2.IVolume} message Volume message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Volume.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Volume message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.Volume
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.Volume} Volume
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Volume.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.Volume();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.secret = $root.google.cloud.run.v2.SecretVolumeSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.cloudSqlInstance = $root.google.cloud.run.v2.CloudSqlInstance.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Volume message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.Volume
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.Volume} Volume
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Volume.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Volume message.
                         * @function verify
                         * @memberof google.cloud.run.v2.Volume
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Volume.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.secret != null && message.hasOwnProperty("secret")) {
                                properties.volumeType = 1;
                                {
                                    var error = $root.google.cloud.run.v2.SecretVolumeSource.verify(message.secret);
                                    if (error)
                                        return "secret." + error;
                                }
                            }
                            if (message.cloudSqlInstance != null && message.hasOwnProperty("cloudSqlInstance")) {
                                if (properties.volumeType === 1)
                                    return "volumeType: multiple values";
                                properties.volumeType = 1;
                                {
                                    var error = $root.google.cloud.run.v2.CloudSqlInstance.verify(message.cloudSqlInstance);
                                    if (error)
                                        return "cloudSqlInstance." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Volume message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.Volume
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.Volume} Volume
                         */
                        Volume.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.Volume)
                                return object;
                            var message = new $root.google.cloud.run.v2.Volume();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.secret != null) {
                                if (typeof object.secret !== "object")
                                    throw TypeError(".google.cloud.run.v2.Volume.secret: object expected");
                                message.secret = $root.google.cloud.run.v2.SecretVolumeSource.fromObject(object.secret);
                            }
                            if (object.cloudSqlInstance != null) {
                                if (typeof object.cloudSqlInstance !== "object")
                                    throw TypeError(".google.cloud.run.v2.Volume.cloudSqlInstance: object expected");
                                message.cloudSqlInstance = $root.google.cloud.run.v2.CloudSqlInstance.fromObject(object.cloudSqlInstance);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Volume message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.Volume
                         * @static
                         * @param {google.cloud.run.v2.Volume} message Volume
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Volume.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.secret != null && message.hasOwnProperty("secret")) {
                                object.secret = $root.google.cloud.run.v2.SecretVolumeSource.toObject(message.secret, options);
                                if (options.oneofs)
                                    object.volumeType = "secret";
                            }
                            if (message.cloudSqlInstance != null && message.hasOwnProperty("cloudSqlInstance")) {
                                object.cloudSqlInstance = $root.google.cloud.run.v2.CloudSqlInstance.toObject(message.cloudSqlInstance, options);
                                if (options.oneofs)
                                    object.volumeType = "cloudSqlInstance";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Volume to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.Volume
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Volume.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Volume
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.Volume
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Volume.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.Volume";
                        };
    
                        return Volume;
                    })();
    
                    v2.SecretVolumeSource = (function() {
    
                        /**
                         * Properties of a SecretVolumeSource.
                         * @memberof google.cloud.run.v2
                         * @interface ISecretVolumeSource
                         * @property {string|null} [secret] SecretVolumeSource secret
                         * @property {Array.<google.cloud.run.v2.IVersionToPath>|null} [items] SecretVolumeSource items
                         * @property {number|null} [defaultMode] SecretVolumeSource defaultMode
                         */
    
                        /**
                         * Constructs a new SecretVolumeSource.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a SecretVolumeSource.
                         * @implements ISecretVolumeSource
                         * @constructor
                         * @param {google.cloud.run.v2.ISecretVolumeSource=} [properties] Properties to set
                         */
                        function SecretVolumeSource(properties) {
                            this.items = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SecretVolumeSource secret.
                         * @member {string} secret
                         * @memberof google.cloud.run.v2.SecretVolumeSource
                         * @instance
                         */
                        SecretVolumeSource.prototype.secret = "";
    
                        /**
                         * SecretVolumeSource items.
                         * @member {Array.<google.cloud.run.v2.IVersionToPath>} items
                         * @memberof google.cloud.run.v2.SecretVolumeSource
                         * @instance
                         */
                        SecretVolumeSource.prototype.items = $util.emptyArray;
    
                        /**
                         * SecretVolumeSource defaultMode.
                         * @member {number} defaultMode
                         * @memberof google.cloud.run.v2.SecretVolumeSource
                         * @instance
                         */
                        SecretVolumeSource.prototype.defaultMode = 0;
    
                        /**
                         * Creates a new SecretVolumeSource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.SecretVolumeSource
                         * @static
                         * @param {google.cloud.run.v2.ISecretVolumeSource=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.SecretVolumeSource} SecretVolumeSource instance
                         */
                        SecretVolumeSource.create = function create(properties) {
                            return new SecretVolumeSource(properties);
                        };
    
                        /**
                         * Encodes the specified SecretVolumeSource message. Does not implicitly {@link google.cloud.run.v2.SecretVolumeSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.SecretVolumeSource
                         * @static
                         * @param {google.cloud.run.v2.ISecretVolumeSource} message SecretVolumeSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretVolumeSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.secret != null && Object.hasOwnProperty.call(message, "secret"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.secret);
                            if (message.items != null && message.items.length)
                                for (var i = 0; i < message.items.length; ++i)
                                    $root.google.cloud.run.v2.VersionToPath.encode(message.items[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.defaultMode != null && Object.hasOwnProperty.call(message, "defaultMode"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.defaultMode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SecretVolumeSource message, length delimited. Does not implicitly {@link google.cloud.run.v2.SecretVolumeSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.SecretVolumeSource
                         * @static
                         * @param {google.cloud.run.v2.ISecretVolumeSource} message SecretVolumeSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretVolumeSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SecretVolumeSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.SecretVolumeSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.SecretVolumeSource} SecretVolumeSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretVolumeSource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.SecretVolumeSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.secret = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.items && message.items.length))
                                            message.items = [];
                                        message.items.push($root.google.cloud.run.v2.VersionToPath.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        message.defaultMode = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SecretVolumeSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.SecretVolumeSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.SecretVolumeSource} SecretVolumeSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretVolumeSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SecretVolumeSource message.
                         * @function verify
                         * @memberof google.cloud.run.v2.SecretVolumeSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SecretVolumeSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                if (!$util.isString(message.secret))
                                    return "secret: string expected";
                            if (message.items != null && message.hasOwnProperty("items")) {
                                if (!Array.isArray(message.items))
                                    return "items: array expected";
                                for (var i = 0; i < message.items.length; ++i) {
                                    var error = $root.google.cloud.run.v2.VersionToPath.verify(message.items[i]);
                                    if (error)
                                        return "items." + error;
                                }
                            }
                            if (message.defaultMode != null && message.hasOwnProperty("defaultMode"))
                                if (!$util.isInteger(message.defaultMode))
                                    return "defaultMode: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a SecretVolumeSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.SecretVolumeSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.SecretVolumeSource} SecretVolumeSource
                         */
                        SecretVolumeSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.SecretVolumeSource)
                                return object;
                            var message = new $root.google.cloud.run.v2.SecretVolumeSource();
                            if (object.secret != null)
                                message.secret = String(object.secret);
                            if (object.items) {
                                if (!Array.isArray(object.items))
                                    throw TypeError(".google.cloud.run.v2.SecretVolumeSource.items: array expected");
                                message.items = [];
                                for (var i = 0; i < object.items.length; ++i) {
                                    if (typeof object.items[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.SecretVolumeSource.items: object expected");
                                    message.items[i] = $root.google.cloud.run.v2.VersionToPath.fromObject(object.items[i]);
                                }
                            }
                            if (object.defaultMode != null)
                                message.defaultMode = object.defaultMode | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SecretVolumeSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.SecretVolumeSource
                         * @static
                         * @param {google.cloud.run.v2.SecretVolumeSource} message SecretVolumeSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SecretVolumeSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.items = [];
                            if (options.defaults) {
                                object.secret = "";
                                object.defaultMode = 0;
                            }
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                object.secret = message.secret;
                            if (message.items && message.items.length) {
                                object.items = [];
                                for (var j = 0; j < message.items.length; ++j)
                                    object.items[j] = $root.google.cloud.run.v2.VersionToPath.toObject(message.items[j], options);
                            }
                            if (message.defaultMode != null && message.hasOwnProperty("defaultMode"))
                                object.defaultMode = message.defaultMode;
                            return object;
                        };
    
                        /**
                         * Converts this SecretVolumeSource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.SecretVolumeSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SecretVolumeSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SecretVolumeSource
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.SecretVolumeSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SecretVolumeSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.SecretVolumeSource";
                        };
    
                        return SecretVolumeSource;
                    })();
    
                    v2.VersionToPath = (function() {
    
                        /**
                         * Properties of a VersionToPath.
                         * @memberof google.cloud.run.v2
                         * @interface IVersionToPath
                         * @property {string|null} [path] VersionToPath path
                         * @property {string|null} [version] VersionToPath version
                         * @property {number|null} [mode] VersionToPath mode
                         */
    
                        /**
                         * Constructs a new VersionToPath.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a VersionToPath.
                         * @implements IVersionToPath
                         * @constructor
                         * @param {google.cloud.run.v2.IVersionToPath=} [properties] Properties to set
                         */
                        function VersionToPath(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VersionToPath path.
                         * @member {string} path
                         * @memberof google.cloud.run.v2.VersionToPath
                         * @instance
                         */
                        VersionToPath.prototype.path = "";
    
                        /**
                         * VersionToPath version.
                         * @member {string} version
                         * @memberof google.cloud.run.v2.VersionToPath
                         * @instance
                         */
                        VersionToPath.prototype.version = "";
    
                        /**
                         * VersionToPath mode.
                         * @member {number} mode
                         * @memberof google.cloud.run.v2.VersionToPath
                         * @instance
                         */
                        VersionToPath.prototype.mode = 0;
    
                        /**
                         * Creates a new VersionToPath instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.VersionToPath
                         * @static
                         * @param {google.cloud.run.v2.IVersionToPath=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.VersionToPath} VersionToPath instance
                         */
                        VersionToPath.create = function create(properties) {
                            return new VersionToPath(properties);
                        };
    
                        /**
                         * Encodes the specified VersionToPath message. Does not implicitly {@link google.cloud.run.v2.VersionToPath.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.VersionToPath
                         * @static
                         * @param {google.cloud.run.v2.IVersionToPath} message VersionToPath message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VersionToPath.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                            if (message.mode != null && Object.hasOwnProperty.call(message, "mode"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.mode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VersionToPath message, length delimited. Does not implicitly {@link google.cloud.run.v2.VersionToPath.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.VersionToPath
                         * @static
                         * @param {google.cloud.run.v2.IVersionToPath} message VersionToPath message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VersionToPath.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VersionToPath message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.VersionToPath
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.VersionToPath} VersionToPath
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VersionToPath.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.VersionToPath();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.path = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.mode = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VersionToPath message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.VersionToPath
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.VersionToPath} VersionToPath
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VersionToPath.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VersionToPath message.
                         * @function verify
                         * @memberof google.cloud.run.v2.VersionToPath
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VersionToPath.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.path != null && message.hasOwnProperty("path"))
                                if (!$util.isString(message.path))
                                    return "path: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.mode != null && message.hasOwnProperty("mode"))
                                if (!$util.isInteger(message.mode))
                                    return "mode: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a VersionToPath message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.VersionToPath
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.VersionToPath} VersionToPath
                         */
                        VersionToPath.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.VersionToPath)
                                return object;
                            var message = new $root.google.cloud.run.v2.VersionToPath();
                            if (object.path != null)
                                message.path = String(object.path);
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.mode != null)
                                message.mode = object.mode | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VersionToPath message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.VersionToPath
                         * @static
                         * @param {google.cloud.run.v2.VersionToPath} message VersionToPath
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VersionToPath.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.path = "";
                                object.version = "";
                                object.mode = 0;
                            }
                            if (message.path != null && message.hasOwnProperty("path"))
                                object.path = message.path;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.mode != null && message.hasOwnProperty("mode"))
                                object.mode = message.mode;
                            return object;
                        };
    
                        /**
                         * Converts this VersionToPath to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.VersionToPath
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VersionToPath.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VersionToPath
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.VersionToPath
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VersionToPath.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.VersionToPath";
                        };
    
                        return VersionToPath;
                    })();
    
                    v2.CloudSqlInstance = (function() {
    
                        /**
                         * Properties of a CloudSqlInstance.
                         * @memberof google.cloud.run.v2
                         * @interface ICloudSqlInstance
                         * @property {Array.<string>|null} [instances] CloudSqlInstance instances
                         */
    
                        /**
                         * Constructs a new CloudSqlInstance.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a CloudSqlInstance.
                         * @implements ICloudSqlInstance
                         * @constructor
                         * @param {google.cloud.run.v2.ICloudSqlInstance=} [properties] Properties to set
                         */
                        function CloudSqlInstance(properties) {
                            this.instances = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CloudSqlInstance instances.
                         * @member {Array.<string>} instances
                         * @memberof google.cloud.run.v2.CloudSqlInstance
                         * @instance
                         */
                        CloudSqlInstance.prototype.instances = $util.emptyArray;
    
                        /**
                         * Creates a new CloudSqlInstance instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.CloudSqlInstance
                         * @static
                         * @param {google.cloud.run.v2.ICloudSqlInstance=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.CloudSqlInstance} CloudSqlInstance instance
                         */
                        CloudSqlInstance.create = function create(properties) {
                            return new CloudSqlInstance(properties);
                        };
    
                        /**
                         * Encodes the specified CloudSqlInstance message. Does not implicitly {@link google.cloud.run.v2.CloudSqlInstance.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.CloudSqlInstance
                         * @static
                         * @param {google.cloud.run.v2.ICloudSqlInstance} message CloudSqlInstance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudSqlInstance.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instances != null && message.instances.length)
                                for (var i = 0; i < message.instances.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.instances[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CloudSqlInstance message, length delimited. Does not implicitly {@link google.cloud.run.v2.CloudSqlInstance.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.CloudSqlInstance
                         * @static
                         * @param {google.cloud.run.v2.ICloudSqlInstance} message CloudSqlInstance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudSqlInstance.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CloudSqlInstance message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.CloudSqlInstance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.CloudSqlInstance} CloudSqlInstance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudSqlInstance.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.CloudSqlInstance();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.instances && message.instances.length))
                                            message.instances = [];
                                        message.instances.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CloudSqlInstance message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.CloudSqlInstance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.CloudSqlInstance} CloudSqlInstance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudSqlInstance.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CloudSqlInstance message.
                         * @function verify
                         * @memberof google.cloud.run.v2.CloudSqlInstance
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CloudSqlInstance.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instances != null && message.hasOwnProperty("instances")) {
                                if (!Array.isArray(message.instances))
                                    return "instances: array expected";
                                for (var i = 0; i < message.instances.length; ++i)
                                    if (!$util.isString(message.instances[i]))
                                        return "instances: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CloudSqlInstance message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.CloudSqlInstance
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.CloudSqlInstance} CloudSqlInstance
                         */
                        CloudSqlInstance.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.CloudSqlInstance)
                                return object;
                            var message = new $root.google.cloud.run.v2.CloudSqlInstance();
                            if (object.instances) {
                                if (!Array.isArray(object.instances))
                                    throw TypeError(".google.cloud.run.v2.CloudSqlInstance.instances: array expected");
                                message.instances = [];
                                for (var i = 0; i < object.instances.length; ++i)
                                    message.instances[i] = String(object.instances[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CloudSqlInstance message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.CloudSqlInstance
                         * @static
                         * @param {google.cloud.run.v2.CloudSqlInstance} message CloudSqlInstance
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CloudSqlInstance.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.instances = [];
                            if (message.instances && message.instances.length) {
                                object.instances = [];
                                for (var j = 0; j < message.instances.length; ++j)
                                    object.instances[j] = message.instances[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CloudSqlInstance to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.CloudSqlInstance
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CloudSqlInstance.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CloudSqlInstance
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.CloudSqlInstance
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CloudSqlInstance.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.CloudSqlInstance";
                        };
    
                        return CloudSqlInstance;
                    })();
    
                    v2.Probe = (function() {
    
                        /**
                         * Properties of a Probe.
                         * @memberof google.cloud.run.v2
                         * @interface IProbe
                         * @property {number|null} [initialDelaySeconds] Probe initialDelaySeconds
                         * @property {number|null} [timeoutSeconds] Probe timeoutSeconds
                         * @property {number|null} [periodSeconds] Probe periodSeconds
                         * @property {number|null} [failureThreshold] Probe failureThreshold
                         * @property {google.cloud.run.v2.IHTTPGetAction|null} [httpGet] Probe httpGet
                         * @property {google.cloud.run.v2.ITCPSocketAction|null} [tcpSocket] Probe tcpSocket
                         * @property {google.cloud.run.v2.IGRPCAction|null} [grpc] Probe grpc
                         */
    
                        /**
                         * Constructs a new Probe.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a Probe.
                         * @implements IProbe
                         * @constructor
                         * @param {google.cloud.run.v2.IProbe=} [properties] Properties to set
                         */
                        function Probe(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Probe initialDelaySeconds.
                         * @member {number} initialDelaySeconds
                         * @memberof google.cloud.run.v2.Probe
                         * @instance
                         */
                        Probe.prototype.initialDelaySeconds = 0;
    
                        /**
                         * Probe timeoutSeconds.
                         * @member {number} timeoutSeconds
                         * @memberof google.cloud.run.v2.Probe
                         * @instance
                         */
                        Probe.prototype.timeoutSeconds = 0;
    
                        /**
                         * Probe periodSeconds.
                         * @member {number} periodSeconds
                         * @memberof google.cloud.run.v2.Probe
                         * @instance
                         */
                        Probe.prototype.periodSeconds = 0;
    
                        /**
                         * Probe failureThreshold.
                         * @member {number} failureThreshold
                         * @memberof google.cloud.run.v2.Probe
                         * @instance
                         */
                        Probe.prototype.failureThreshold = 0;
    
                        /**
                         * Probe httpGet.
                         * @member {google.cloud.run.v2.IHTTPGetAction|null|undefined} httpGet
                         * @memberof google.cloud.run.v2.Probe
                         * @instance
                         */
                        Probe.prototype.httpGet = null;
    
                        /**
                         * Probe tcpSocket.
                         * @member {google.cloud.run.v2.ITCPSocketAction|null|undefined} tcpSocket
                         * @memberof google.cloud.run.v2.Probe
                         * @instance
                         */
                        Probe.prototype.tcpSocket = null;
    
                        /**
                         * Probe grpc.
                         * @member {google.cloud.run.v2.IGRPCAction|null|undefined} grpc
                         * @memberof google.cloud.run.v2.Probe
                         * @instance
                         */
                        Probe.prototype.grpc = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Probe probeType.
                         * @member {"httpGet"|"tcpSocket"|"grpc"|undefined} probeType
                         * @memberof google.cloud.run.v2.Probe
                         * @instance
                         */
                        Object.defineProperty(Probe.prototype, "probeType", {
                            get: $util.oneOfGetter($oneOfFields = ["httpGet", "tcpSocket", "grpc"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Probe instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.Probe
                         * @static
                         * @param {google.cloud.run.v2.IProbe=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.Probe} Probe instance
                         */
                        Probe.create = function create(properties) {
                            return new Probe(properties);
                        };
    
                        /**
                         * Encodes the specified Probe message. Does not implicitly {@link google.cloud.run.v2.Probe.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.Probe
                         * @static
                         * @param {google.cloud.run.v2.IProbe} message Probe message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Probe.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.initialDelaySeconds != null && Object.hasOwnProperty.call(message, "initialDelaySeconds"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.initialDelaySeconds);
                            if (message.timeoutSeconds != null && Object.hasOwnProperty.call(message, "timeoutSeconds"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.timeoutSeconds);
                            if (message.periodSeconds != null && Object.hasOwnProperty.call(message, "periodSeconds"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.periodSeconds);
                            if (message.failureThreshold != null && Object.hasOwnProperty.call(message, "failureThreshold"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.failureThreshold);
                            if (message.httpGet != null && Object.hasOwnProperty.call(message, "httpGet"))
                                $root.google.cloud.run.v2.HTTPGetAction.encode(message.httpGet, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.tcpSocket != null && Object.hasOwnProperty.call(message, "tcpSocket"))
                                $root.google.cloud.run.v2.TCPSocketAction.encode(message.tcpSocket, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.grpc != null && Object.hasOwnProperty.call(message, "grpc"))
                                $root.google.cloud.run.v2.GRPCAction.encode(message.grpc, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Probe message, length delimited. Does not implicitly {@link google.cloud.run.v2.Probe.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.Probe
                         * @static
                         * @param {google.cloud.run.v2.IProbe} message Probe message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Probe.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Probe message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.Probe
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.Probe} Probe
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Probe.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.Probe();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.initialDelaySeconds = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.timeoutSeconds = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.periodSeconds = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.failureThreshold = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.httpGet = $root.google.cloud.run.v2.HTTPGetAction.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.tcpSocket = $root.google.cloud.run.v2.TCPSocketAction.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.grpc = $root.google.cloud.run.v2.GRPCAction.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Probe message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.Probe
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.Probe} Probe
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Probe.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Probe message.
                         * @function verify
                         * @memberof google.cloud.run.v2.Probe
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Probe.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.initialDelaySeconds != null && message.hasOwnProperty("initialDelaySeconds"))
                                if (!$util.isInteger(message.initialDelaySeconds))
                                    return "initialDelaySeconds: integer expected";
                            if (message.timeoutSeconds != null && message.hasOwnProperty("timeoutSeconds"))
                                if (!$util.isInteger(message.timeoutSeconds))
                                    return "timeoutSeconds: integer expected";
                            if (message.periodSeconds != null && message.hasOwnProperty("periodSeconds"))
                                if (!$util.isInteger(message.periodSeconds))
                                    return "periodSeconds: integer expected";
                            if (message.failureThreshold != null && message.hasOwnProperty("failureThreshold"))
                                if (!$util.isInteger(message.failureThreshold))
                                    return "failureThreshold: integer expected";
                            if (message.httpGet != null && message.hasOwnProperty("httpGet")) {
                                properties.probeType = 1;
                                {
                                    var error = $root.google.cloud.run.v2.HTTPGetAction.verify(message.httpGet);
                                    if (error)
                                        return "httpGet." + error;
                                }
                            }
                            if (message.tcpSocket != null && message.hasOwnProperty("tcpSocket")) {
                                if (properties.probeType === 1)
                                    return "probeType: multiple values";
                                properties.probeType = 1;
                                {
                                    var error = $root.google.cloud.run.v2.TCPSocketAction.verify(message.tcpSocket);
                                    if (error)
                                        return "tcpSocket." + error;
                                }
                            }
                            if (message.grpc != null && message.hasOwnProperty("grpc")) {
                                if (properties.probeType === 1)
                                    return "probeType: multiple values";
                                properties.probeType = 1;
                                {
                                    var error = $root.google.cloud.run.v2.GRPCAction.verify(message.grpc);
                                    if (error)
                                        return "grpc." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Probe message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.Probe
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.Probe} Probe
                         */
                        Probe.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.Probe)
                                return object;
                            var message = new $root.google.cloud.run.v2.Probe();
                            if (object.initialDelaySeconds != null)
                                message.initialDelaySeconds = object.initialDelaySeconds | 0;
                            if (object.timeoutSeconds != null)
                                message.timeoutSeconds = object.timeoutSeconds | 0;
                            if (object.periodSeconds != null)
                                message.periodSeconds = object.periodSeconds | 0;
                            if (object.failureThreshold != null)
                                message.failureThreshold = object.failureThreshold | 0;
                            if (object.httpGet != null) {
                                if (typeof object.httpGet !== "object")
                                    throw TypeError(".google.cloud.run.v2.Probe.httpGet: object expected");
                                message.httpGet = $root.google.cloud.run.v2.HTTPGetAction.fromObject(object.httpGet);
                            }
                            if (object.tcpSocket != null) {
                                if (typeof object.tcpSocket !== "object")
                                    throw TypeError(".google.cloud.run.v2.Probe.tcpSocket: object expected");
                                message.tcpSocket = $root.google.cloud.run.v2.TCPSocketAction.fromObject(object.tcpSocket);
                            }
                            if (object.grpc != null) {
                                if (typeof object.grpc !== "object")
                                    throw TypeError(".google.cloud.run.v2.Probe.grpc: object expected");
                                message.grpc = $root.google.cloud.run.v2.GRPCAction.fromObject(object.grpc);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Probe message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.Probe
                         * @static
                         * @param {google.cloud.run.v2.Probe} message Probe
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Probe.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.initialDelaySeconds = 0;
                                object.timeoutSeconds = 0;
                                object.periodSeconds = 0;
                                object.failureThreshold = 0;
                            }
                            if (message.initialDelaySeconds != null && message.hasOwnProperty("initialDelaySeconds"))
                                object.initialDelaySeconds = message.initialDelaySeconds;
                            if (message.timeoutSeconds != null && message.hasOwnProperty("timeoutSeconds"))
                                object.timeoutSeconds = message.timeoutSeconds;
                            if (message.periodSeconds != null && message.hasOwnProperty("periodSeconds"))
                                object.periodSeconds = message.periodSeconds;
                            if (message.failureThreshold != null && message.hasOwnProperty("failureThreshold"))
                                object.failureThreshold = message.failureThreshold;
                            if (message.httpGet != null && message.hasOwnProperty("httpGet")) {
                                object.httpGet = $root.google.cloud.run.v2.HTTPGetAction.toObject(message.httpGet, options);
                                if (options.oneofs)
                                    object.probeType = "httpGet";
                            }
                            if (message.tcpSocket != null && message.hasOwnProperty("tcpSocket")) {
                                object.tcpSocket = $root.google.cloud.run.v2.TCPSocketAction.toObject(message.tcpSocket, options);
                                if (options.oneofs)
                                    object.probeType = "tcpSocket";
                            }
                            if (message.grpc != null && message.hasOwnProperty("grpc")) {
                                object.grpc = $root.google.cloud.run.v2.GRPCAction.toObject(message.grpc, options);
                                if (options.oneofs)
                                    object.probeType = "grpc";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Probe to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.Probe
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Probe.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Probe
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.Probe
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Probe.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.Probe";
                        };
    
                        return Probe;
                    })();
    
                    v2.HTTPGetAction = (function() {
    
                        /**
                         * Properties of a HTTPGetAction.
                         * @memberof google.cloud.run.v2
                         * @interface IHTTPGetAction
                         * @property {string|null} [path] HTTPGetAction path
                         * @property {Array.<google.cloud.run.v2.IHTTPHeader>|null} [httpHeaders] HTTPGetAction httpHeaders
                         */
    
                        /**
                         * Constructs a new HTTPGetAction.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a HTTPGetAction.
                         * @implements IHTTPGetAction
                         * @constructor
                         * @param {google.cloud.run.v2.IHTTPGetAction=} [properties] Properties to set
                         */
                        function HTTPGetAction(properties) {
                            this.httpHeaders = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HTTPGetAction path.
                         * @member {string} path
                         * @memberof google.cloud.run.v2.HTTPGetAction
                         * @instance
                         */
                        HTTPGetAction.prototype.path = "";
    
                        /**
                         * HTTPGetAction httpHeaders.
                         * @member {Array.<google.cloud.run.v2.IHTTPHeader>} httpHeaders
                         * @memberof google.cloud.run.v2.HTTPGetAction
                         * @instance
                         */
                        HTTPGetAction.prototype.httpHeaders = $util.emptyArray;
    
                        /**
                         * Creates a new HTTPGetAction instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.HTTPGetAction
                         * @static
                         * @param {google.cloud.run.v2.IHTTPGetAction=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.HTTPGetAction} HTTPGetAction instance
                         */
                        HTTPGetAction.create = function create(properties) {
                            return new HTTPGetAction(properties);
                        };
    
                        /**
                         * Encodes the specified HTTPGetAction message. Does not implicitly {@link google.cloud.run.v2.HTTPGetAction.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.HTTPGetAction
                         * @static
                         * @param {google.cloud.run.v2.IHTTPGetAction} message HTTPGetAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HTTPGetAction.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.path);
                            if (message.httpHeaders != null && message.httpHeaders.length)
                                for (var i = 0; i < message.httpHeaders.length; ++i)
                                    $root.google.cloud.run.v2.HTTPHeader.encode(message.httpHeaders[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HTTPGetAction message, length delimited. Does not implicitly {@link google.cloud.run.v2.HTTPGetAction.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.HTTPGetAction
                         * @static
                         * @param {google.cloud.run.v2.IHTTPGetAction} message HTTPGetAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HTTPGetAction.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HTTPGetAction message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.HTTPGetAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.HTTPGetAction} HTTPGetAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HTTPGetAction.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.HTTPGetAction();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.path = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.httpHeaders && message.httpHeaders.length))
                                            message.httpHeaders = [];
                                        message.httpHeaders.push($root.google.cloud.run.v2.HTTPHeader.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HTTPGetAction message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.HTTPGetAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.HTTPGetAction} HTTPGetAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HTTPGetAction.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HTTPGetAction message.
                         * @function verify
                         * @memberof google.cloud.run.v2.HTTPGetAction
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HTTPGetAction.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.path != null && message.hasOwnProperty("path"))
                                if (!$util.isString(message.path))
                                    return "path: string expected";
                            if (message.httpHeaders != null && message.hasOwnProperty("httpHeaders")) {
                                if (!Array.isArray(message.httpHeaders))
                                    return "httpHeaders: array expected";
                                for (var i = 0; i < message.httpHeaders.length; ++i) {
                                    var error = $root.google.cloud.run.v2.HTTPHeader.verify(message.httpHeaders[i]);
                                    if (error)
                                        return "httpHeaders." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HTTPGetAction message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.HTTPGetAction
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.HTTPGetAction} HTTPGetAction
                         */
                        HTTPGetAction.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.HTTPGetAction)
                                return object;
                            var message = new $root.google.cloud.run.v2.HTTPGetAction();
                            if (object.path != null)
                                message.path = String(object.path);
                            if (object.httpHeaders) {
                                if (!Array.isArray(object.httpHeaders))
                                    throw TypeError(".google.cloud.run.v2.HTTPGetAction.httpHeaders: array expected");
                                message.httpHeaders = [];
                                for (var i = 0; i < object.httpHeaders.length; ++i) {
                                    if (typeof object.httpHeaders[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.HTTPGetAction.httpHeaders: object expected");
                                    message.httpHeaders[i] = $root.google.cloud.run.v2.HTTPHeader.fromObject(object.httpHeaders[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HTTPGetAction message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.HTTPGetAction
                         * @static
                         * @param {google.cloud.run.v2.HTTPGetAction} message HTTPGetAction
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HTTPGetAction.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.httpHeaders = [];
                            if (options.defaults)
                                object.path = "";
                            if (message.path != null && message.hasOwnProperty("path"))
                                object.path = message.path;
                            if (message.httpHeaders && message.httpHeaders.length) {
                                object.httpHeaders = [];
                                for (var j = 0; j < message.httpHeaders.length; ++j)
                                    object.httpHeaders[j] = $root.google.cloud.run.v2.HTTPHeader.toObject(message.httpHeaders[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this HTTPGetAction to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.HTTPGetAction
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HTTPGetAction.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HTTPGetAction
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.HTTPGetAction
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HTTPGetAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.HTTPGetAction";
                        };
    
                        return HTTPGetAction;
                    })();
    
                    v2.HTTPHeader = (function() {
    
                        /**
                         * Properties of a HTTPHeader.
                         * @memberof google.cloud.run.v2
                         * @interface IHTTPHeader
                         * @property {string|null} [name] HTTPHeader name
                         * @property {string|null} [value] HTTPHeader value
                         */
    
                        /**
                         * Constructs a new HTTPHeader.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a HTTPHeader.
                         * @implements IHTTPHeader
                         * @constructor
                         * @param {google.cloud.run.v2.IHTTPHeader=} [properties] Properties to set
                         */
                        function HTTPHeader(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HTTPHeader name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.HTTPHeader
                         * @instance
                         */
                        HTTPHeader.prototype.name = "";
    
                        /**
                         * HTTPHeader value.
                         * @member {string} value
                         * @memberof google.cloud.run.v2.HTTPHeader
                         * @instance
                         */
                        HTTPHeader.prototype.value = "";
    
                        /**
                         * Creates a new HTTPHeader instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.HTTPHeader
                         * @static
                         * @param {google.cloud.run.v2.IHTTPHeader=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.HTTPHeader} HTTPHeader instance
                         */
                        HTTPHeader.create = function create(properties) {
                            return new HTTPHeader(properties);
                        };
    
                        /**
                         * Encodes the specified HTTPHeader message. Does not implicitly {@link google.cloud.run.v2.HTTPHeader.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.HTTPHeader
                         * @static
                         * @param {google.cloud.run.v2.IHTTPHeader} message HTTPHeader message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HTTPHeader.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HTTPHeader message, length delimited. Does not implicitly {@link google.cloud.run.v2.HTTPHeader.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.HTTPHeader
                         * @static
                         * @param {google.cloud.run.v2.IHTTPHeader} message HTTPHeader message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HTTPHeader.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HTTPHeader message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.HTTPHeader
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.HTTPHeader} HTTPHeader
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HTTPHeader.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.HTTPHeader();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.value = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HTTPHeader message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.HTTPHeader
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.HTTPHeader} HTTPHeader
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HTTPHeader.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HTTPHeader message.
                         * @function verify
                         * @memberof google.cloud.run.v2.HTTPHeader
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HTTPHeader.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.value != null && message.hasOwnProperty("value"))
                                if (!$util.isString(message.value))
                                    return "value: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a HTTPHeader message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.HTTPHeader
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.HTTPHeader} HTTPHeader
                         */
                        HTTPHeader.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.HTTPHeader)
                                return object;
                            var message = new $root.google.cloud.run.v2.HTTPHeader();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.value != null)
                                message.value = String(object.value);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HTTPHeader message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.HTTPHeader
                         * @static
                         * @param {google.cloud.run.v2.HTTPHeader} message HTTPHeader
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HTTPHeader.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.value = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.value != null && message.hasOwnProperty("value"))
                                object.value = message.value;
                            return object;
                        };
    
                        /**
                         * Converts this HTTPHeader to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.HTTPHeader
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HTTPHeader.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HTTPHeader
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.HTTPHeader
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HTTPHeader.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.HTTPHeader";
                        };
    
                        return HTTPHeader;
                    })();
    
                    v2.TCPSocketAction = (function() {
    
                        /**
                         * Properties of a TCPSocketAction.
                         * @memberof google.cloud.run.v2
                         * @interface ITCPSocketAction
                         * @property {number|null} [port] TCPSocketAction port
                         */
    
                        /**
                         * Constructs a new TCPSocketAction.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a TCPSocketAction.
                         * @implements ITCPSocketAction
                         * @constructor
                         * @param {google.cloud.run.v2.ITCPSocketAction=} [properties] Properties to set
                         */
                        function TCPSocketAction(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TCPSocketAction port.
                         * @member {number} port
                         * @memberof google.cloud.run.v2.TCPSocketAction
                         * @instance
                         */
                        TCPSocketAction.prototype.port = 0;
    
                        /**
                         * Creates a new TCPSocketAction instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.TCPSocketAction
                         * @static
                         * @param {google.cloud.run.v2.ITCPSocketAction=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.TCPSocketAction} TCPSocketAction instance
                         */
                        TCPSocketAction.create = function create(properties) {
                            return new TCPSocketAction(properties);
                        };
    
                        /**
                         * Encodes the specified TCPSocketAction message. Does not implicitly {@link google.cloud.run.v2.TCPSocketAction.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.TCPSocketAction
                         * @static
                         * @param {google.cloud.run.v2.ITCPSocketAction} message TCPSocketAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TCPSocketAction.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.port);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TCPSocketAction message, length delimited. Does not implicitly {@link google.cloud.run.v2.TCPSocketAction.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.TCPSocketAction
                         * @static
                         * @param {google.cloud.run.v2.ITCPSocketAction} message TCPSocketAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TCPSocketAction.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TCPSocketAction message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.TCPSocketAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.TCPSocketAction} TCPSocketAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TCPSocketAction.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.TCPSocketAction();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.port = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TCPSocketAction message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.TCPSocketAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.TCPSocketAction} TCPSocketAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TCPSocketAction.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TCPSocketAction message.
                         * @function verify
                         * @memberof google.cloud.run.v2.TCPSocketAction
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TCPSocketAction.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.port != null && message.hasOwnProperty("port"))
                                if (!$util.isInteger(message.port))
                                    return "port: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a TCPSocketAction message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.TCPSocketAction
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.TCPSocketAction} TCPSocketAction
                         */
                        TCPSocketAction.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.TCPSocketAction)
                                return object;
                            var message = new $root.google.cloud.run.v2.TCPSocketAction();
                            if (object.port != null)
                                message.port = object.port | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TCPSocketAction message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.TCPSocketAction
                         * @static
                         * @param {google.cloud.run.v2.TCPSocketAction} message TCPSocketAction
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TCPSocketAction.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.port = 0;
                            if (message.port != null && message.hasOwnProperty("port"))
                                object.port = message.port;
                            return object;
                        };
    
                        /**
                         * Converts this TCPSocketAction to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.TCPSocketAction
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TCPSocketAction.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TCPSocketAction
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.TCPSocketAction
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TCPSocketAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.TCPSocketAction";
                        };
    
                        return TCPSocketAction;
                    })();
    
                    v2.GRPCAction = (function() {
    
                        /**
                         * Properties of a GRPCAction.
                         * @memberof google.cloud.run.v2
                         * @interface IGRPCAction
                         * @property {number|null} [port] GRPCAction port
                         * @property {string|null} [service] GRPCAction service
                         */
    
                        /**
                         * Constructs a new GRPCAction.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a GRPCAction.
                         * @implements IGRPCAction
                         * @constructor
                         * @param {google.cloud.run.v2.IGRPCAction=} [properties] Properties to set
                         */
                        function GRPCAction(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GRPCAction port.
                         * @member {number} port
                         * @memberof google.cloud.run.v2.GRPCAction
                         * @instance
                         */
                        GRPCAction.prototype.port = 0;
    
                        /**
                         * GRPCAction service.
                         * @member {string} service
                         * @memberof google.cloud.run.v2.GRPCAction
                         * @instance
                         */
                        GRPCAction.prototype.service = "";
    
                        /**
                         * Creates a new GRPCAction instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.GRPCAction
                         * @static
                         * @param {google.cloud.run.v2.IGRPCAction=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.GRPCAction} GRPCAction instance
                         */
                        GRPCAction.create = function create(properties) {
                            return new GRPCAction(properties);
                        };
    
                        /**
                         * Encodes the specified GRPCAction message. Does not implicitly {@link google.cloud.run.v2.GRPCAction.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.GRPCAction
                         * @static
                         * @param {google.cloud.run.v2.IGRPCAction} message GRPCAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GRPCAction.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.port != null && Object.hasOwnProperty.call(message, "port"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.port);
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.service);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GRPCAction message, length delimited. Does not implicitly {@link google.cloud.run.v2.GRPCAction.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.GRPCAction
                         * @static
                         * @param {google.cloud.run.v2.IGRPCAction} message GRPCAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GRPCAction.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GRPCAction message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.GRPCAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.GRPCAction} GRPCAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GRPCAction.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.GRPCAction();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.port = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.service = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GRPCAction message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.GRPCAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.GRPCAction} GRPCAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GRPCAction.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GRPCAction message.
                         * @function verify
                         * @memberof google.cloud.run.v2.GRPCAction
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GRPCAction.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.port != null && message.hasOwnProperty("port"))
                                if (!$util.isInteger(message.port))
                                    return "port: integer expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GRPCAction message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.GRPCAction
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.GRPCAction} GRPCAction
                         */
                        GRPCAction.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.GRPCAction)
                                return object;
                            var message = new $root.google.cloud.run.v2.GRPCAction();
                            if (object.port != null)
                                message.port = object.port | 0;
                            if (object.service != null)
                                message.service = String(object.service);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GRPCAction message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.GRPCAction
                         * @static
                         * @param {google.cloud.run.v2.GRPCAction} message GRPCAction
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GRPCAction.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.port = 0;
                                object.service = "";
                            }
                            if (message.port != null && message.hasOwnProperty("port"))
                                object.port = message.port;
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            return object;
                        };
    
                        /**
                         * Converts this GRPCAction to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.GRPCAction
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GRPCAction.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GRPCAction
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.GRPCAction
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GRPCAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.GRPCAction";
                        };
    
                        return GRPCAction;
                    })();
    
                    v2.VpcAccess = (function() {
    
                        /**
                         * Properties of a VpcAccess.
                         * @memberof google.cloud.run.v2
                         * @interface IVpcAccess
                         * @property {string|null} [connector] VpcAccess connector
                         * @property {google.cloud.run.v2.VpcAccess.VpcEgress|null} [egress] VpcAccess egress
                         */
    
                        /**
                         * Constructs a new VpcAccess.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a VpcAccess.
                         * @implements IVpcAccess
                         * @constructor
                         * @param {google.cloud.run.v2.IVpcAccess=} [properties] Properties to set
                         */
                        function VpcAccess(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VpcAccess connector.
                         * @member {string} connector
                         * @memberof google.cloud.run.v2.VpcAccess
                         * @instance
                         */
                        VpcAccess.prototype.connector = "";
    
                        /**
                         * VpcAccess egress.
                         * @member {google.cloud.run.v2.VpcAccess.VpcEgress} egress
                         * @memberof google.cloud.run.v2.VpcAccess
                         * @instance
                         */
                        VpcAccess.prototype.egress = 0;
    
                        /**
                         * Creates a new VpcAccess instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.VpcAccess
                         * @static
                         * @param {google.cloud.run.v2.IVpcAccess=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.VpcAccess} VpcAccess instance
                         */
                        VpcAccess.create = function create(properties) {
                            return new VpcAccess(properties);
                        };
    
                        /**
                         * Encodes the specified VpcAccess message. Does not implicitly {@link google.cloud.run.v2.VpcAccess.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.VpcAccess
                         * @static
                         * @param {google.cloud.run.v2.IVpcAccess} message VpcAccess message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VpcAccess.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.connector != null && Object.hasOwnProperty.call(message, "connector"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.connector);
                            if (message.egress != null && Object.hasOwnProperty.call(message, "egress"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.egress);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VpcAccess message, length delimited. Does not implicitly {@link google.cloud.run.v2.VpcAccess.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.VpcAccess
                         * @static
                         * @param {google.cloud.run.v2.IVpcAccess} message VpcAccess message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VpcAccess.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VpcAccess message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.VpcAccess
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.VpcAccess} VpcAccess
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VpcAccess.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.VpcAccess();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.connector = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.egress = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VpcAccess message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.VpcAccess
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.VpcAccess} VpcAccess
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VpcAccess.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VpcAccess message.
                         * @function verify
                         * @memberof google.cloud.run.v2.VpcAccess
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VpcAccess.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.connector != null && message.hasOwnProperty("connector"))
                                if (!$util.isString(message.connector))
                                    return "connector: string expected";
                            if (message.egress != null && message.hasOwnProperty("egress"))
                                switch (message.egress) {
                                default:
                                    return "egress: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a VpcAccess message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.VpcAccess
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.VpcAccess} VpcAccess
                         */
                        VpcAccess.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.VpcAccess)
                                return object;
                            var message = new $root.google.cloud.run.v2.VpcAccess();
                            if (object.connector != null)
                                message.connector = String(object.connector);
                            switch (object.egress) {
                            default:
                                if (typeof object.egress === "number") {
                                    message.egress = object.egress;
                                    break;
                                }
                                break;
                            case "VPC_EGRESS_UNSPECIFIED":
                            case 0:
                                message.egress = 0;
                                break;
                            case "ALL_TRAFFIC":
                            case 1:
                                message.egress = 1;
                                break;
                            case "PRIVATE_RANGES_ONLY":
                            case 2:
                                message.egress = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VpcAccess message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.VpcAccess
                         * @static
                         * @param {google.cloud.run.v2.VpcAccess} message VpcAccess
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VpcAccess.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.connector = "";
                                object.egress = options.enums === String ? "VPC_EGRESS_UNSPECIFIED" : 0;
                            }
                            if (message.connector != null && message.hasOwnProperty("connector"))
                                object.connector = message.connector;
                            if (message.egress != null && message.hasOwnProperty("egress"))
                                object.egress = options.enums === String ? $root.google.cloud.run.v2.VpcAccess.VpcEgress[message.egress] === undefined ? message.egress : $root.google.cloud.run.v2.VpcAccess.VpcEgress[message.egress] : message.egress;
                            return object;
                        };
    
                        /**
                         * Converts this VpcAccess to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.VpcAccess
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VpcAccess.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VpcAccess
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.VpcAccess
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VpcAccess.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.VpcAccess";
                        };
    
                        /**
                         * VpcEgress enum.
                         * @name google.cloud.run.v2.VpcAccess.VpcEgress
                         * @enum {number}
                         * @property {number} VPC_EGRESS_UNSPECIFIED=0 VPC_EGRESS_UNSPECIFIED value
                         * @property {number} ALL_TRAFFIC=1 ALL_TRAFFIC value
                         * @property {number} PRIVATE_RANGES_ONLY=2 PRIVATE_RANGES_ONLY value
                         */
                        VpcAccess.VpcEgress = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "VPC_EGRESS_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ALL_TRAFFIC"] = 1;
                            values[valuesById[2] = "PRIVATE_RANGES_ONLY"] = 2;
                            return values;
                        })();
    
                        return VpcAccess;
                    })();
    
                    v2.BinaryAuthorization = (function() {
    
                        /**
                         * Properties of a BinaryAuthorization.
                         * @memberof google.cloud.run.v2
                         * @interface IBinaryAuthorization
                         * @property {boolean|null} [useDefault] BinaryAuthorization useDefault
                         * @property {string|null} [breakglassJustification] BinaryAuthorization breakglassJustification
                         */
    
                        /**
                         * Constructs a new BinaryAuthorization.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a BinaryAuthorization.
                         * @implements IBinaryAuthorization
                         * @constructor
                         * @param {google.cloud.run.v2.IBinaryAuthorization=} [properties] Properties to set
                         */
                        function BinaryAuthorization(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BinaryAuthorization useDefault.
                         * @member {boolean|null|undefined} useDefault
                         * @memberof google.cloud.run.v2.BinaryAuthorization
                         * @instance
                         */
                        BinaryAuthorization.prototype.useDefault = null;
    
                        /**
                         * BinaryAuthorization breakglassJustification.
                         * @member {string} breakglassJustification
                         * @memberof google.cloud.run.v2.BinaryAuthorization
                         * @instance
                         */
                        BinaryAuthorization.prototype.breakglassJustification = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * BinaryAuthorization binauthzMethod.
                         * @member {"useDefault"|undefined} binauthzMethod
                         * @memberof google.cloud.run.v2.BinaryAuthorization
                         * @instance
                         */
                        Object.defineProperty(BinaryAuthorization.prototype, "binauthzMethod", {
                            get: $util.oneOfGetter($oneOfFields = ["useDefault"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new BinaryAuthorization instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.BinaryAuthorization
                         * @static
                         * @param {google.cloud.run.v2.IBinaryAuthorization=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.BinaryAuthorization} BinaryAuthorization instance
                         */
                        BinaryAuthorization.create = function create(properties) {
                            return new BinaryAuthorization(properties);
                        };
    
                        /**
                         * Encodes the specified BinaryAuthorization message. Does not implicitly {@link google.cloud.run.v2.BinaryAuthorization.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.BinaryAuthorization
                         * @static
                         * @param {google.cloud.run.v2.IBinaryAuthorization} message BinaryAuthorization message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BinaryAuthorization.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.useDefault != null && Object.hasOwnProperty.call(message, "useDefault"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.useDefault);
                            if (message.breakglassJustification != null && Object.hasOwnProperty.call(message, "breakglassJustification"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.breakglassJustification);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BinaryAuthorization message, length delimited. Does not implicitly {@link google.cloud.run.v2.BinaryAuthorization.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.BinaryAuthorization
                         * @static
                         * @param {google.cloud.run.v2.IBinaryAuthorization} message BinaryAuthorization message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BinaryAuthorization.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BinaryAuthorization message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.BinaryAuthorization
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.BinaryAuthorization} BinaryAuthorization
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BinaryAuthorization.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.BinaryAuthorization();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.useDefault = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.breakglassJustification = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BinaryAuthorization message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.BinaryAuthorization
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.BinaryAuthorization} BinaryAuthorization
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BinaryAuthorization.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BinaryAuthorization message.
                         * @function verify
                         * @memberof google.cloud.run.v2.BinaryAuthorization
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BinaryAuthorization.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.useDefault != null && message.hasOwnProperty("useDefault")) {
                                properties.binauthzMethod = 1;
                                if (typeof message.useDefault !== "boolean")
                                    return "useDefault: boolean expected";
                            }
                            if (message.breakglassJustification != null && message.hasOwnProperty("breakglassJustification"))
                                if (!$util.isString(message.breakglassJustification))
                                    return "breakglassJustification: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BinaryAuthorization message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.BinaryAuthorization
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.BinaryAuthorization} BinaryAuthorization
                         */
                        BinaryAuthorization.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.BinaryAuthorization)
                                return object;
                            var message = new $root.google.cloud.run.v2.BinaryAuthorization();
                            if (object.useDefault != null)
                                message.useDefault = Boolean(object.useDefault);
                            if (object.breakglassJustification != null)
                                message.breakglassJustification = String(object.breakglassJustification);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BinaryAuthorization message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.BinaryAuthorization
                         * @static
                         * @param {google.cloud.run.v2.BinaryAuthorization} message BinaryAuthorization
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BinaryAuthorization.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.breakglassJustification = "";
                            if (message.useDefault != null && message.hasOwnProperty("useDefault")) {
                                object.useDefault = message.useDefault;
                                if (options.oneofs)
                                    object.binauthzMethod = "useDefault";
                            }
                            if (message.breakglassJustification != null && message.hasOwnProperty("breakglassJustification"))
                                object.breakglassJustification = message.breakglassJustification;
                            return object;
                        };
    
                        /**
                         * Converts this BinaryAuthorization to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.BinaryAuthorization
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BinaryAuthorization.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BinaryAuthorization
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.BinaryAuthorization
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BinaryAuthorization.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.BinaryAuthorization";
                        };
    
                        return BinaryAuthorization;
                    })();
    
                    v2.RevisionScaling = (function() {
    
                        /**
                         * Properties of a RevisionScaling.
                         * @memberof google.cloud.run.v2
                         * @interface IRevisionScaling
                         * @property {number|null} [minInstanceCount] RevisionScaling minInstanceCount
                         * @property {number|null} [maxInstanceCount] RevisionScaling maxInstanceCount
                         */
    
                        /**
                         * Constructs a new RevisionScaling.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a RevisionScaling.
                         * @implements IRevisionScaling
                         * @constructor
                         * @param {google.cloud.run.v2.IRevisionScaling=} [properties] Properties to set
                         */
                        function RevisionScaling(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RevisionScaling minInstanceCount.
                         * @member {number} minInstanceCount
                         * @memberof google.cloud.run.v2.RevisionScaling
                         * @instance
                         */
                        RevisionScaling.prototype.minInstanceCount = 0;
    
                        /**
                         * RevisionScaling maxInstanceCount.
                         * @member {number} maxInstanceCount
                         * @memberof google.cloud.run.v2.RevisionScaling
                         * @instance
                         */
                        RevisionScaling.prototype.maxInstanceCount = 0;
    
                        /**
                         * Creates a new RevisionScaling instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.RevisionScaling
                         * @static
                         * @param {google.cloud.run.v2.IRevisionScaling=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.RevisionScaling} RevisionScaling instance
                         */
                        RevisionScaling.create = function create(properties) {
                            return new RevisionScaling(properties);
                        };
    
                        /**
                         * Encodes the specified RevisionScaling message. Does not implicitly {@link google.cloud.run.v2.RevisionScaling.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.RevisionScaling
                         * @static
                         * @param {google.cloud.run.v2.IRevisionScaling} message RevisionScaling message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RevisionScaling.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.minInstanceCount != null && Object.hasOwnProperty.call(message, "minInstanceCount"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.minInstanceCount);
                            if (message.maxInstanceCount != null && Object.hasOwnProperty.call(message, "maxInstanceCount"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxInstanceCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RevisionScaling message, length delimited. Does not implicitly {@link google.cloud.run.v2.RevisionScaling.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.RevisionScaling
                         * @static
                         * @param {google.cloud.run.v2.IRevisionScaling} message RevisionScaling message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RevisionScaling.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RevisionScaling message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.RevisionScaling
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.RevisionScaling} RevisionScaling
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RevisionScaling.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.RevisionScaling();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.minInstanceCount = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.maxInstanceCount = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RevisionScaling message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.RevisionScaling
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.RevisionScaling} RevisionScaling
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RevisionScaling.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RevisionScaling message.
                         * @function verify
                         * @memberof google.cloud.run.v2.RevisionScaling
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RevisionScaling.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.minInstanceCount != null && message.hasOwnProperty("minInstanceCount"))
                                if (!$util.isInteger(message.minInstanceCount))
                                    return "minInstanceCount: integer expected";
                            if (message.maxInstanceCount != null && message.hasOwnProperty("maxInstanceCount"))
                                if (!$util.isInteger(message.maxInstanceCount))
                                    return "maxInstanceCount: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RevisionScaling message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.RevisionScaling
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.RevisionScaling} RevisionScaling
                         */
                        RevisionScaling.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.RevisionScaling)
                                return object;
                            var message = new $root.google.cloud.run.v2.RevisionScaling();
                            if (object.minInstanceCount != null)
                                message.minInstanceCount = object.minInstanceCount | 0;
                            if (object.maxInstanceCount != null)
                                message.maxInstanceCount = object.maxInstanceCount | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RevisionScaling message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.RevisionScaling
                         * @static
                         * @param {google.cloud.run.v2.RevisionScaling} message RevisionScaling
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RevisionScaling.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.minInstanceCount = 0;
                                object.maxInstanceCount = 0;
                            }
                            if (message.minInstanceCount != null && message.hasOwnProperty("minInstanceCount"))
                                object.minInstanceCount = message.minInstanceCount;
                            if (message.maxInstanceCount != null && message.hasOwnProperty("maxInstanceCount"))
                                object.maxInstanceCount = message.maxInstanceCount;
                            return object;
                        };
    
                        /**
                         * Converts this RevisionScaling to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.RevisionScaling
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RevisionScaling.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RevisionScaling
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.RevisionScaling
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RevisionScaling.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.RevisionScaling";
                        };
    
                        return RevisionScaling;
                    })();
    
                    /**
                     * IngressTraffic enum.
                     * @name google.cloud.run.v2.IngressTraffic
                     * @enum {number}
                     * @property {number} INGRESS_TRAFFIC_UNSPECIFIED=0 INGRESS_TRAFFIC_UNSPECIFIED value
                     * @property {number} INGRESS_TRAFFIC_ALL=1 INGRESS_TRAFFIC_ALL value
                     * @property {number} INGRESS_TRAFFIC_INTERNAL_ONLY=2 INGRESS_TRAFFIC_INTERNAL_ONLY value
                     * @property {number} INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER=3 INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER value
                     */
                    v2.IngressTraffic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "INGRESS_TRAFFIC_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "INGRESS_TRAFFIC_ALL"] = 1;
                        values[valuesById[2] = "INGRESS_TRAFFIC_INTERNAL_ONLY"] = 2;
                        values[valuesById[3] = "INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER"] = 3;
                        return values;
                    })();
    
                    /**
                     * ExecutionEnvironment enum.
                     * @name google.cloud.run.v2.ExecutionEnvironment
                     * @enum {number}
                     * @property {number} EXECUTION_ENVIRONMENT_UNSPECIFIED=0 EXECUTION_ENVIRONMENT_UNSPECIFIED value
                     * @property {number} EXECUTION_ENVIRONMENT_GEN1=1 EXECUTION_ENVIRONMENT_GEN1 value
                     * @property {number} EXECUTION_ENVIRONMENT_GEN2=2 EXECUTION_ENVIRONMENT_GEN2 value
                     */
                    v2.ExecutionEnvironment = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "EXECUTION_ENVIRONMENT_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "EXECUTION_ENVIRONMENT_GEN1"] = 1;
                        values[valuesById[2] = "EXECUTION_ENVIRONMENT_GEN2"] = 2;
                        return values;
                    })();
    
                    v2.ExecutionTemplate = (function() {
    
                        /**
                         * Properties of an ExecutionTemplate.
                         * @memberof google.cloud.run.v2
                         * @interface IExecutionTemplate
                         * @property {Object.<string,string>|null} [labels] ExecutionTemplate labels
                         * @property {Object.<string,string>|null} [annotations] ExecutionTemplate annotations
                         * @property {number|null} [parallelism] ExecutionTemplate parallelism
                         * @property {number|null} [taskCount] ExecutionTemplate taskCount
                         * @property {google.cloud.run.v2.ITaskTemplate|null} [template] ExecutionTemplate template
                         */
    
                        /**
                         * Constructs a new ExecutionTemplate.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents an ExecutionTemplate.
                         * @implements IExecutionTemplate
                         * @constructor
                         * @param {google.cloud.run.v2.IExecutionTemplate=} [properties] Properties to set
                         */
                        function ExecutionTemplate(properties) {
                            this.labels = {};
                            this.annotations = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ExecutionTemplate labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.run.v2.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.labels = $util.emptyObject;
    
                        /**
                         * ExecutionTemplate annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.cloud.run.v2.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.annotations = $util.emptyObject;
    
                        /**
                         * ExecutionTemplate parallelism.
                         * @member {number} parallelism
                         * @memberof google.cloud.run.v2.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.parallelism = 0;
    
                        /**
                         * ExecutionTemplate taskCount.
                         * @member {number} taskCount
                         * @memberof google.cloud.run.v2.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.taskCount = 0;
    
                        /**
                         * ExecutionTemplate template.
                         * @member {google.cloud.run.v2.ITaskTemplate|null|undefined} template
                         * @memberof google.cloud.run.v2.ExecutionTemplate
                         * @instance
                         */
                        ExecutionTemplate.prototype.template = null;
    
                        /**
                         * Creates a new ExecutionTemplate instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.ExecutionTemplate
                         * @static
                         * @param {google.cloud.run.v2.IExecutionTemplate=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.ExecutionTemplate} ExecutionTemplate instance
                         */
                        ExecutionTemplate.create = function create(properties) {
                            return new ExecutionTemplate(properties);
                        };
    
                        /**
                         * Encodes the specified ExecutionTemplate message. Does not implicitly {@link google.cloud.run.v2.ExecutionTemplate.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.ExecutionTemplate
                         * @static
                         * @param {google.cloud.run.v2.IExecutionTemplate} message ExecutionTemplate message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExecutionTemplate.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.parallelism != null && Object.hasOwnProperty.call(message, "parallelism"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.parallelism);
                            if (message.taskCount != null && Object.hasOwnProperty.call(message, "taskCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.taskCount);
                            if (message.template != null && Object.hasOwnProperty.call(message, "template"))
                                $root.google.cloud.run.v2.TaskTemplate.encode(message.template, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ExecutionTemplate message, length delimited. Does not implicitly {@link google.cloud.run.v2.ExecutionTemplate.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.ExecutionTemplate
                         * @static
                         * @param {google.cloud.run.v2.IExecutionTemplate} message ExecutionTemplate message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExecutionTemplate.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ExecutionTemplate message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.ExecutionTemplate
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.ExecutionTemplate} ExecutionTemplate
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExecutionTemplate.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.ExecutionTemplate(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 2: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 3: {
                                        message.parallelism = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.taskCount = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.template = $root.google.cloud.run.v2.TaskTemplate.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ExecutionTemplate message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.ExecutionTemplate
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.ExecutionTemplate} ExecutionTemplate
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExecutionTemplate.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ExecutionTemplate message.
                         * @function verify
                         * @memberof google.cloud.run.v2.ExecutionTemplate
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ExecutionTemplate.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.parallelism != null && message.hasOwnProperty("parallelism"))
                                if (!$util.isInteger(message.parallelism))
                                    return "parallelism: integer expected";
                            if (message.taskCount != null && message.hasOwnProperty("taskCount"))
                                if (!$util.isInteger(message.taskCount))
                                    return "taskCount: integer expected";
                            if (message.template != null && message.hasOwnProperty("template")) {
                                var error = $root.google.cloud.run.v2.TaskTemplate.verify(message.template);
                                if (error)
                                    return "template." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ExecutionTemplate message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.ExecutionTemplate
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.ExecutionTemplate} ExecutionTemplate
                         */
                        ExecutionTemplate.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.ExecutionTemplate)
                                return object;
                            var message = new $root.google.cloud.run.v2.ExecutionTemplate();
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.run.v2.ExecutionTemplate.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.cloud.run.v2.ExecutionTemplate.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            if (object.parallelism != null)
                                message.parallelism = object.parallelism | 0;
                            if (object.taskCount != null)
                                message.taskCount = object.taskCount | 0;
                            if (object.template != null) {
                                if (typeof object.template !== "object")
                                    throw TypeError(".google.cloud.run.v2.ExecutionTemplate.template: object expected");
                                message.template = $root.google.cloud.run.v2.TaskTemplate.fromObject(object.template);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ExecutionTemplate message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.ExecutionTemplate
                         * @static
                         * @param {google.cloud.run.v2.ExecutionTemplate} message ExecutionTemplate
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ExecutionTemplate.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.annotations = {};
                            }
                            if (options.defaults) {
                                object.parallelism = 0;
                                object.taskCount = 0;
                                object.template = null;
                            }
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.parallelism != null && message.hasOwnProperty("parallelism"))
                                object.parallelism = message.parallelism;
                            if (message.taskCount != null && message.hasOwnProperty("taskCount"))
                                object.taskCount = message.taskCount;
                            if (message.template != null && message.hasOwnProperty("template"))
                                object.template = $root.google.cloud.run.v2.TaskTemplate.toObject(message.template, options);
                            return object;
                        };
    
                        /**
                         * Converts this ExecutionTemplate to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.ExecutionTemplate
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ExecutionTemplate.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ExecutionTemplate
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.ExecutionTemplate
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ExecutionTemplate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.ExecutionTemplate";
                        };
    
                        return ExecutionTemplate;
                    })();
    
                    v2.Jobs = (function() {
    
                        /**
                         * Constructs a new Jobs service.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a Jobs
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function Jobs(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (Jobs.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Jobs;
    
                        /**
                         * Creates new Jobs service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.run.v2.Jobs
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {Jobs} RPC service. Useful where requests and/or responses are streamed.
                         */
                        Jobs.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Jobs|createJob}.
                         * @memberof google.cloud.run.v2.Jobs
                         * @typedef CreateJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateJob.
                         * @function createJob
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.cloud.run.v2.ICreateJobRequest} request CreateJobRequest message or plain object
                         * @param {google.cloud.run.v2.Jobs.CreateJobCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Jobs.prototype.createJob = function createJob(request, callback) {
                            return this.rpcCall(createJob, $root.google.cloud.run.v2.CreateJobRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateJob" });
    
                        /**
                         * Calls CreateJob.
                         * @function createJob
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.cloud.run.v2.ICreateJobRequest} request CreateJobRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Jobs|getJob}.
                         * @memberof google.cloud.run.v2.Jobs
                         * @typedef GetJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.run.v2.Job} [response] Job
                         */
    
                        /**
                         * Calls GetJob.
                         * @function getJob
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.cloud.run.v2.IGetJobRequest} request GetJobRequest message or plain object
                         * @param {google.cloud.run.v2.Jobs.GetJobCallback} callback Node-style callback called with the error, if any, and Job
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Jobs.prototype.getJob = function getJob(request, callback) {
                            return this.rpcCall(getJob, $root.google.cloud.run.v2.GetJobRequest, $root.google.cloud.run.v2.Job, request, callback);
                        }, "name", { value: "GetJob" });
    
                        /**
                         * Calls GetJob.
                         * @function getJob
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.cloud.run.v2.IGetJobRequest} request GetJobRequest message or plain object
                         * @returns {Promise<google.cloud.run.v2.Job>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Jobs|listJobs}.
                         * @memberof google.cloud.run.v2.Jobs
                         * @typedef ListJobsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.run.v2.ListJobsResponse} [response] ListJobsResponse
                         */
    
                        /**
                         * Calls ListJobs.
                         * @function listJobs
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.cloud.run.v2.IListJobsRequest} request ListJobsRequest message or plain object
                         * @param {google.cloud.run.v2.Jobs.ListJobsCallback} callback Node-style callback called with the error, if any, and ListJobsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Jobs.prototype.listJobs = function listJobs(request, callback) {
                            return this.rpcCall(listJobs, $root.google.cloud.run.v2.ListJobsRequest, $root.google.cloud.run.v2.ListJobsResponse, request, callback);
                        }, "name", { value: "ListJobs" });
    
                        /**
                         * Calls ListJobs.
                         * @function listJobs
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.cloud.run.v2.IListJobsRequest} request ListJobsRequest message or plain object
                         * @returns {Promise<google.cloud.run.v2.ListJobsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Jobs|updateJob}.
                         * @memberof google.cloud.run.v2.Jobs
                         * @typedef UpdateJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateJob.
                         * @function updateJob
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.cloud.run.v2.IUpdateJobRequest} request UpdateJobRequest message or plain object
                         * @param {google.cloud.run.v2.Jobs.UpdateJobCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Jobs.prototype.updateJob = function updateJob(request, callback) {
                            return this.rpcCall(updateJob, $root.google.cloud.run.v2.UpdateJobRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateJob" });
    
                        /**
                         * Calls UpdateJob.
                         * @function updateJob
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.cloud.run.v2.IUpdateJobRequest} request UpdateJobRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Jobs|deleteJob}.
                         * @memberof google.cloud.run.v2.Jobs
                         * @typedef DeleteJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteJob.
                         * @function deleteJob
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.cloud.run.v2.IDeleteJobRequest} request DeleteJobRequest message or plain object
                         * @param {google.cloud.run.v2.Jobs.DeleteJobCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Jobs.prototype.deleteJob = function deleteJob(request, callback) {
                            return this.rpcCall(deleteJob, $root.google.cloud.run.v2.DeleteJobRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteJob" });
    
                        /**
                         * Calls DeleteJob.
                         * @function deleteJob
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.cloud.run.v2.IDeleteJobRequest} request DeleteJobRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Jobs|runJob}.
                         * @memberof google.cloud.run.v2.Jobs
                         * @typedef RunJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RunJob.
                         * @function runJob
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.cloud.run.v2.IRunJobRequest} request RunJobRequest message or plain object
                         * @param {google.cloud.run.v2.Jobs.RunJobCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Jobs.prototype.runJob = function runJob(request, callback) {
                            return this.rpcCall(runJob, $root.google.cloud.run.v2.RunJobRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "RunJob" });
    
                        /**
                         * Calls RunJob.
                         * @function runJob
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.cloud.run.v2.IRunJobRequest} request RunJobRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Jobs|getIamPolicy}.
                         * @memberof google.cloud.run.v2.Jobs
                         * @typedef GetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @param {google.cloud.run.v2.Jobs.GetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Jobs.prototype.getIamPolicy = function getIamPolicy(request, callback) {
                            return this.rpcCall(getIamPolicy, $root.google.iam.v1.GetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "GetIamPolicy" });
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Jobs|setIamPolicy}.
                         * @memberof google.cloud.run.v2.Jobs
                         * @typedef SetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @param {google.cloud.run.v2.Jobs.SetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Jobs.prototype.setIamPolicy = function setIamPolicy(request, callback) {
                            return this.rpcCall(setIamPolicy, $root.google.iam.v1.SetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "SetIamPolicy" });
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Jobs|testIamPermissions}.
                         * @memberof google.cloud.run.v2.Jobs
                         * @typedef TestIamPermissionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.TestIamPermissionsResponse} [response] TestIamPermissionsResponse
                         */
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @param {google.cloud.run.v2.Jobs.TestIamPermissionsCallback} callback Node-style callback called with the error, if any, and TestIamPermissionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Jobs.prototype.testIamPermissions = function testIamPermissions(request, callback) {
                            return this.rpcCall(testIamPermissions, $root.google.iam.v1.TestIamPermissionsRequest, $root.google.iam.v1.TestIamPermissionsResponse, request, callback);
                        }, "name", { value: "TestIamPermissions" });
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.run.v2.Jobs
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @returns {Promise<google.iam.v1.TestIamPermissionsResponse>} Promise
                         * @variation 2
                         */
    
                        return Jobs;
                    })();
    
                    v2.CreateJobRequest = (function() {
    
                        /**
                         * Properties of a CreateJobRequest.
                         * @memberof google.cloud.run.v2
                         * @interface ICreateJobRequest
                         * @property {string|null} [parent] CreateJobRequest parent
                         * @property {google.cloud.run.v2.IJob|null} [job] CreateJobRequest job
                         * @property {string|null} [jobId] CreateJobRequest jobId
                         * @property {boolean|null} [validateOnly] CreateJobRequest validateOnly
                         */
    
                        /**
                         * Constructs a new CreateJobRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a CreateJobRequest.
                         * @implements ICreateJobRequest
                         * @constructor
                         * @param {google.cloud.run.v2.ICreateJobRequest=} [properties] Properties to set
                         */
                        function CreateJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateJobRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.run.v2.CreateJobRequest
                         * @instance
                         */
                        CreateJobRequest.prototype.parent = "";
    
                        /**
                         * CreateJobRequest job.
                         * @member {google.cloud.run.v2.IJob|null|undefined} job
                         * @memberof google.cloud.run.v2.CreateJobRequest
                         * @instance
                         */
                        CreateJobRequest.prototype.job = null;
    
                        /**
                         * CreateJobRequest jobId.
                         * @member {string} jobId
                         * @memberof google.cloud.run.v2.CreateJobRequest
                         * @instance
                         */
                        CreateJobRequest.prototype.jobId = "";
    
                        /**
                         * CreateJobRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.run.v2.CreateJobRequest
                         * @instance
                         */
                        CreateJobRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new CreateJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.CreateJobRequest
                         * @static
                         * @param {google.cloud.run.v2.ICreateJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.CreateJobRequest} CreateJobRequest instance
                         */
                        CreateJobRequest.create = function create(properties) {
                            return new CreateJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateJobRequest message. Does not implicitly {@link google.cloud.run.v2.CreateJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.CreateJobRequest
                         * @static
                         * @param {google.cloud.run.v2.ICreateJobRequest} message CreateJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.job != null && Object.hasOwnProperty.call(message, "job"))
                                $root.google.cloud.run.v2.Job.encode(message.job, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.jobId != null && Object.hasOwnProperty.call(message, "jobId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.jobId);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateJobRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.CreateJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.CreateJobRequest
                         * @static
                         * @param {google.cloud.run.v2.ICreateJobRequest} message CreateJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.CreateJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.CreateJobRequest} CreateJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.CreateJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.job = $root.google.cloud.run.v2.Job.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.jobId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.CreateJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.CreateJobRequest} CreateJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateJobRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.CreateJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.job != null && message.hasOwnProperty("job")) {
                                var error = $root.google.cloud.run.v2.Job.verify(message.job);
                                if (error)
                                    return "job." + error;
                            }
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                if (!$util.isString(message.jobId))
                                    return "jobId: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.CreateJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.CreateJobRequest} CreateJobRequest
                         */
                        CreateJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.CreateJobRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.CreateJobRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.job != null) {
                                if (typeof object.job !== "object")
                                    throw TypeError(".google.cloud.run.v2.CreateJobRequest.job: object expected");
                                message.job = $root.google.cloud.run.v2.Job.fromObject(object.job);
                            }
                            if (object.jobId != null)
                                message.jobId = String(object.jobId);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.CreateJobRequest
                         * @static
                         * @param {google.cloud.run.v2.CreateJobRequest} message CreateJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.job = null;
                                object.jobId = "";
                                object.validateOnly = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.job != null && message.hasOwnProperty("job"))
                                object.job = $root.google.cloud.run.v2.Job.toObject(message.job, options);
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                object.jobId = message.jobId;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this CreateJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.CreateJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateJobRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.CreateJobRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateJobRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.CreateJobRequest";
                        };
    
                        return CreateJobRequest;
                    })();
    
                    v2.GetJobRequest = (function() {
    
                        /**
                         * Properties of a GetJobRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IGetJobRequest
                         * @property {string|null} [name] GetJobRequest name
                         */
    
                        /**
                         * Constructs a new GetJobRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a GetJobRequest.
                         * @implements IGetJobRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IGetJobRequest=} [properties] Properties to set
                         */
                        function GetJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetJobRequest name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.GetJobRequest
                         * @instance
                         */
                        GetJobRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.GetJobRequest
                         * @static
                         * @param {google.cloud.run.v2.IGetJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.GetJobRequest} GetJobRequest instance
                         */
                        GetJobRequest.create = function create(properties) {
                            return new GetJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetJobRequest message. Does not implicitly {@link google.cloud.run.v2.GetJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.GetJobRequest
                         * @static
                         * @param {google.cloud.run.v2.IGetJobRequest} message GetJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetJobRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.GetJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.GetJobRequest
                         * @static
                         * @param {google.cloud.run.v2.IGetJobRequest} message GetJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.GetJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.GetJobRequest} GetJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.GetJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.GetJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.GetJobRequest} GetJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetJobRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.GetJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.GetJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.GetJobRequest} GetJobRequest
                         */
                        GetJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.GetJobRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.GetJobRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.GetJobRequest
                         * @static
                         * @param {google.cloud.run.v2.GetJobRequest} message GetJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.GetJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetJobRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.GetJobRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetJobRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.GetJobRequest";
                        };
    
                        return GetJobRequest;
                    })();
    
                    v2.UpdateJobRequest = (function() {
    
                        /**
                         * Properties of an UpdateJobRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IUpdateJobRequest
                         * @property {google.cloud.run.v2.IJob|null} [job] UpdateJobRequest job
                         * @property {boolean|null} [validateOnly] UpdateJobRequest validateOnly
                         * @property {boolean|null} [allowMissing] UpdateJobRequest allowMissing
                         */
    
                        /**
                         * Constructs a new UpdateJobRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents an UpdateJobRequest.
                         * @implements IUpdateJobRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IUpdateJobRequest=} [properties] Properties to set
                         */
                        function UpdateJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateJobRequest job.
                         * @member {google.cloud.run.v2.IJob|null|undefined} job
                         * @memberof google.cloud.run.v2.UpdateJobRequest
                         * @instance
                         */
                        UpdateJobRequest.prototype.job = null;
    
                        /**
                         * UpdateJobRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.run.v2.UpdateJobRequest
                         * @instance
                         */
                        UpdateJobRequest.prototype.validateOnly = false;
    
                        /**
                         * UpdateJobRequest allowMissing.
                         * @member {boolean} allowMissing
                         * @memberof google.cloud.run.v2.UpdateJobRequest
                         * @instance
                         */
                        UpdateJobRequest.prototype.allowMissing = false;
    
                        /**
                         * Creates a new UpdateJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.UpdateJobRequest
                         * @static
                         * @param {google.cloud.run.v2.IUpdateJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.UpdateJobRequest} UpdateJobRequest instance
                         */
                        UpdateJobRequest.create = function create(properties) {
                            return new UpdateJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateJobRequest message. Does not implicitly {@link google.cloud.run.v2.UpdateJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.UpdateJobRequest
                         * @static
                         * @param {google.cloud.run.v2.IUpdateJobRequest} message UpdateJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.job != null && Object.hasOwnProperty.call(message, "job"))
                                $root.google.cloud.run.v2.Job.encode(message.job, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.validateOnly);
                            if (message.allowMissing != null && Object.hasOwnProperty.call(message, "allowMissing"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.allowMissing);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateJobRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.UpdateJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.UpdateJobRequest
                         * @static
                         * @param {google.cloud.run.v2.IUpdateJobRequest} message UpdateJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.UpdateJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.UpdateJobRequest} UpdateJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.UpdateJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.job = $root.google.cloud.run.v2.Job.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.allowMissing = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.UpdateJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.UpdateJobRequest} UpdateJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateJobRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.UpdateJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.job != null && message.hasOwnProperty("job")) {
                                var error = $root.google.cloud.run.v2.Job.verify(message.job);
                                if (error)
                                    return "job." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                if (typeof message.allowMissing !== "boolean")
                                    return "allowMissing: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.UpdateJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.UpdateJobRequest} UpdateJobRequest
                         */
                        UpdateJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.UpdateJobRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.UpdateJobRequest();
                            if (object.job != null) {
                                if (typeof object.job !== "object")
                                    throw TypeError(".google.cloud.run.v2.UpdateJobRequest.job: object expected");
                                message.job = $root.google.cloud.run.v2.Job.fromObject(object.job);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.allowMissing != null)
                                message.allowMissing = Boolean(object.allowMissing);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.UpdateJobRequest
                         * @static
                         * @param {google.cloud.run.v2.UpdateJobRequest} message UpdateJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.job = null;
                                object.validateOnly = false;
                                object.allowMissing = false;
                            }
                            if (message.job != null && message.hasOwnProperty("job"))
                                object.job = $root.google.cloud.run.v2.Job.toObject(message.job, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                object.allowMissing = message.allowMissing;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.UpdateJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateJobRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.UpdateJobRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateJobRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.UpdateJobRequest";
                        };
    
                        return UpdateJobRequest;
                    })();
    
                    v2.ListJobsRequest = (function() {
    
                        /**
                         * Properties of a ListJobsRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IListJobsRequest
                         * @property {string|null} [parent] ListJobsRequest parent
                         * @property {number|null} [pageSize] ListJobsRequest pageSize
                         * @property {string|null} [pageToken] ListJobsRequest pageToken
                         * @property {boolean|null} [showDeleted] ListJobsRequest showDeleted
                         */
    
                        /**
                         * Constructs a new ListJobsRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a ListJobsRequest.
                         * @implements IListJobsRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IListJobsRequest=} [properties] Properties to set
                         */
                        function ListJobsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListJobsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.run.v2.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.parent = "";
    
                        /**
                         * ListJobsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.run.v2.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListJobsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.run.v2.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.pageToken = "";
    
                        /**
                         * ListJobsRequest showDeleted.
                         * @member {boolean} showDeleted
                         * @memberof google.cloud.run.v2.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.showDeleted = false;
    
                        /**
                         * Creates a new ListJobsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.ListJobsRequest
                         * @static
                         * @param {google.cloud.run.v2.IListJobsRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.ListJobsRequest} ListJobsRequest instance
                         */
                        ListJobsRequest.create = function create(properties) {
                            return new ListJobsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListJobsRequest message. Does not implicitly {@link google.cloud.run.v2.ListJobsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.ListJobsRequest
                         * @static
                         * @param {google.cloud.run.v2.IListJobsRequest} message ListJobsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.showDeleted != null && Object.hasOwnProperty.call(message, "showDeleted"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.showDeleted);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListJobsRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.ListJobsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.ListJobsRequest
                         * @static
                         * @param {google.cloud.run.v2.IListJobsRequest} message ListJobsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListJobsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.ListJobsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.ListJobsRequest} ListJobsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.ListJobsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.showDeleted = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListJobsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.ListJobsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.ListJobsRequest} ListJobsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListJobsRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.ListJobsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListJobsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                if (typeof message.showDeleted !== "boolean")
                                    return "showDeleted: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListJobsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.ListJobsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.ListJobsRequest} ListJobsRequest
                         */
                        ListJobsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.ListJobsRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.ListJobsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.showDeleted != null)
                                message.showDeleted = Boolean(object.showDeleted);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListJobsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.ListJobsRequest
                         * @static
                         * @param {google.cloud.run.v2.ListJobsRequest} message ListJobsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListJobsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.showDeleted = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                object.showDeleted = message.showDeleted;
                            return object;
                        };
    
                        /**
                         * Converts this ListJobsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.ListJobsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListJobsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListJobsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.ListJobsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListJobsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.ListJobsRequest";
                        };
    
                        return ListJobsRequest;
                    })();
    
                    v2.ListJobsResponse = (function() {
    
                        /**
                         * Properties of a ListJobsResponse.
                         * @memberof google.cloud.run.v2
                         * @interface IListJobsResponse
                         * @property {Array.<google.cloud.run.v2.IJob>|null} [jobs] ListJobsResponse jobs
                         * @property {string|null} [nextPageToken] ListJobsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListJobsResponse.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a ListJobsResponse.
                         * @implements IListJobsResponse
                         * @constructor
                         * @param {google.cloud.run.v2.IListJobsResponse=} [properties] Properties to set
                         */
                        function ListJobsResponse(properties) {
                            this.jobs = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListJobsResponse jobs.
                         * @member {Array.<google.cloud.run.v2.IJob>} jobs
                         * @memberof google.cloud.run.v2.ListJobsResponse
                         * @instance
                         */
                        ListJobsResponse.prototype.jobs = $util.emptyArray;
    
                        /**
                         * ListJobsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.run.v2.ListJobsResponse
                         * @instance
                         */
                        ListJobsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListJobsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.ListJobsResponse
                         * @static
                         * @param {google.cloud.run.v2.IListJobsResponse=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.ListJobsResponse} ListJobsResponse instance
                         */
                        ListJobsResponse.create = function create(properties) {
                            return new ListJobsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListJobsResponse message. Does not implicitly {@link google.cloud.run.v2.ListJobsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.ListJobsResponse
                         * @static
                         * @param {google.cloud.run.v2.IListJobsResponse} message ListJobsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.jobs != null && message.jobs.length)
                                for (var i = 0; i < message.jobs.length; ++i)
                                    $root.google.cloud.run.v2.Job.encode(message.jobs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListJobsResponse message, length delimited. Does not implicitly {@link google.cloud.run.v2.ListJobsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.ListJobsResponse
                         * @static
                         * @param {google.cloud.run.v2.IListJobsResponse} message ListJobsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListJobsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.ListJobsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.ListJobsResponse} ListJobsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.ListJobsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.jobs && message.jobs.length))
                                            message.jobs = [];
                                        message.jobs.push($root.google.cloud.run.v2.Job.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListJobsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.ListJobsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.ListJobsResponse} ListJobsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListJobsResponse message.
                         * @function verify
                         * @memberof google.cloud.run.v2.ListJobsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListJobsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.jobs != null && message.hasOwnProperty("jobs")) {
                                if (!Array.isArray(message.jobs))
                                    return "jobs: array expected";
                                for (var i = 0; i < message.jobs.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Job.verify(message.jobs[i]);
                                    if (error)
                                        return "jobs." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListJobsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.ListJobsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.ListJobsResponse} ListJobsResponse
                         */
                        ListJobsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.ListJobsResponse)
                                return object;
                            var message = new $root.google.cloud.run.v2.ListJobsResponse();
                            if (object.jobs) {
                                if (!Array.isArray(object.jobs))
                                    throw TypeError(".google.cloud.run.v2.ListJobsResponse.jobs: array expected");
                                message.jobs = [];
                                for (var i = 0; i < object.jobs.length; ++i) {
                                    if (typeof object.jobs[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.ListJobsResponse.jobs: object expected");
                                    message.jobs[i] = $root.google.cloud.run.v2.Job.fromObject(object.jobs[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListJobsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.ListJobsResponse
                         * @static
                         * @param {google.cloud.run.v2.ListJobsResponse} message ListJobsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListJobsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.jobs = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.jobs && message.jobs.length) {
                                object.jobs = [];
                                for (var j = 0; j < message.jobs.length; ++j)
                                    object.jobs[j] = $root.google.cloud.run.v2.Job.toObject(message.jobs[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListJobsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.ListJobsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListJobsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListJobsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.ListJobsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListJobsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.ListJobsResponse";
                        };
    
                        return ListJobsResponse;
                    })();
    
                    v2.DeleteJobRequest = (function() {
    
                        /**
                         * Properties of a DeleteJobRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IDeleteJobRequest
                         * @property {string|null} [name] DeleteJobRequest name
                         * @property {boolean|null} [validateOnly] DeleteJobRequest validateOnly
                         * @property {string|null} [etag] DeleteJobRequest etag
                         */
    
                        /**
                         * Constructs a new DeleteJobRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a DeleteJobRequest.
                         * @implements IDeleteJobRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IDeleteJobRequest=} [properties] Properties to set
                         */
                        function DeleteJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteJobRequest name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.DeleteJobRequest
                         * @instance
                         */
                        DeleteJobRequest.prototype.name = "";
    
                        /**
                         * DeleteJobRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.run.v2.DeleteJobRequest
                         * @instance
                         */
                        DeleteJobRequest.prototype.validateOnly = false;
    
                        /**
                         * DeleteJobRequest etag.
                         * @member {string} etag
                         * @memberof google.cloud.run.v2.DeleteJobRequest
                         * @instance
                         */
                        DeleteJobRequest.prototype.etag = "";
    
                        /**
                         * Creates a new DeleteJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.DeleteJobRequest
                         * @static
                         * @param {google.cloud.run.v2.IDeleteJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.DeleteJobRequest} DeleteJobRequest instance
                         */
                        DeleteJobRequest.create = function create(properties) {
                            return new DeleteJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteJobRequest message. Does not implicitly {@link google.cloud.run.v2.DeleteJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.DeleteJobRequest
                         * @static
                         * @param {google.cloud.run.v2.IDeleteJobRequest} message DeleteJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.validateOnly);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteJobRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.DeleteJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.DeleteJobRequest
                         * @static
                         * @param {google.cloud.run.v2.IDeleteJobRequest} message DeleteJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.DeleteJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.DeleteJobRequest} DeleteJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.DeleteJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.DeleteJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.DeleteJobRequest} DeleteJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteJobRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.DeleteJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.DeleteJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.DeleteJobRequest} DeleteJobRequest
                         */
                        DeleteJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.DeleteJobRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.DeleteJobRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.DeleteJobRequest
                         * @static
                         * @param {google.cloud.run.v2.DeleteJobRequest} message DeleteJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.validateOnly = false;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.DeleteJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteJobRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.DeleteJobRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteJobRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.DeleteJobRequest";
                        };
    
                        return DeleteJobRequest;
                    })();
    
                    v2.RunJobRequest = (function() {
    
                        /**
                         * Properties of a RunJobRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IRunJobRequest
                         * @property {string|null} [name] RunJobRequest name
                         * @property {boolean|null} [validateOnly] RunJobRequest validateOnly
                         * @property {string|null} [etag] RunJobRequest etag
                         */
    
                        /**
                         * Constructs a new RunJobRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a RunJobRequest.
                         * @implements IRunJobRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IRunJobRequest=} [properties] Properties to set
                         */
                        function RunJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RunJobRequest name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.RunJobRequest
                         * @instance
                         */
                        RunJobRequest.prototype.name = "";
    
                        /**
                         * RunJobRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.run.v2.RunJobRequest
                         * @instance
                         */
                        RunJobRequest.prototype.validateOnly = false;
    
                        /**
                         * RunJobRequest etag.
                         * @member {string} etag
                         * @memberof google.cloud.run.v2.RunJobRequest
                         * @instance
                         */
                        RunJobRequest.prototype.etag = "";
    
                        /**
                         * Creates a new RunJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.RunJobRequest
                         * @static
                         * @param {google.cloud.run.v2.IRunJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.RunJobRequest} RunJobRequest instance
                         */
                        RunJobRequest.create = function create(properties) {
                            return new RunJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RunJobRequest message. Does not implicitly {@link google.cloud.run.v2.RunJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.RunJobRequest
                         * @static
                         * @param {google.cloud.run.v2.IRunJobRequest} message RunJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.validateOnly);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RunJobRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.RunJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.RunJobRequest
                         * @static
                         * @param {google.cloud.run.v2.IRunJobRequest} message RunJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RunJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RunJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.RunJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.RunJobRequest} RunJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.RunJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RunJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.RunJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.RunJobRequest} RunJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RunJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RunJobRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.RunJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RunJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RunJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.RunJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.RunJobRequest} RunJobRequest
                         */
                        RunJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.RunJobRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.RunJobRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RunJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.RunJobRequest
                         * @static
                         * @param {google.cloud.run.v2.RunJobRequest} message RunJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RunJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.validateOnly = false;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this RunJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.RunJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RunJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RunJobRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.RunJobRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RunJobRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.RunJobRequest";
                        };
    
                        return RunJobRequest;
                    })();
    
                    v2.Job = (function() {
    
                        /**
                         * Properties of a Job.
                         * @memberof google.cloud.run.v2
                         * @interface IJob
                         * @property {string|null} [name] Job name
                         * @property {string|null} [uid] Job uid
                         * @property {number|Long|null} [generation] Job generation
                         * @property {Object.<string,string>|null} [labels] Job labels
                         * @property {Object.<string,string>|null} [annotations] Job annotations
                         * @property {google.protobuf.ITimestamp|null} [createTime] Job createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Job updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] Job deleteTime
                         * @property {google.protobuf.ITimestamp|null} [expireTime] Job expireTime
                         * @property {string|null} [creator] Job creator
                         * @property {string|null} [lastModifier] Job lastModifier
                         * @property {string|null} [client] Job client
                         * @property {string|null} [clientVersion] Job clientVersion
                         * @property {google.api.LaunchStage|null} [launchStage] Job launchStage
                         * @property {google.cloud.run.v2.IBinaryAuthorization|null} [binaryAuthorization] Job binaryAuthorization
                         * @property {google.cloud.run.v2.IExecutionTemplate|null} [template] Job template
                         * @property {number|Long|null} [observedGeneration] Job observedGeneration
                         * @property {google.cloud.run.v2.ICondition|null} [terminalCondition] Job terminalCondition
                         * @property {Array.<google.cloud.run.v2.ICondition>|null} [conditions] Job conditions
                         * @property {number|null} [executionCount] Job executionCount
                         * @property {google.cloud.run.v2.IExecutionReference|null} [latestCreatedExecution] Job latestCreatedExecution
                         * @property {boolean|null} [reconciling] Job reconciling
                         * @property {string|null} [etag] Job etag
                         */
    
                        /**
                         * Constructs a new Job.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a Job.
                         * @implements IJob
                         * @constructor
                         * @param {google.cloud.run.v2.IJob=} [properties] Properties to set
                         */
                        function Job(properties) {
                            this.labels = {};
                            this.annotations = {};
                            this.conditions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Job name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.name = "";
    
                        /**
                         * Job uid.
                         * @member {string} uid
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.uid = "";
    
                        /**
                         * Job generation.
                         * @member {number|Long} generation
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.generation = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Job labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.labels = $util.emptyObject;
    
                        /**
                         * Job annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.annotations = $util.emptyObject;
    
                        /**
                         * Job createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.createTime = null;
    
                        /**
                         * Job updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.updateTime = null;
    
                        /**
                         * Job deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.deleteTime = null;
    
                        /**
                         * Job expireTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.expireTime = null;
    
                        /**
                         * Job creator.
                         * @member {string} creator
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.creator = "";
    
                        /**
                         * Job lastModifier.
                         * @member {string} lastModifier
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.lastModifier = "";
    
                        /**
                         * Job client.
                         * @member {string} client
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.client = "";
    
                        /**
                         * Job clientVersion.
                         * @member {string} clientVersion
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.clientVersion = "";
    
                        /**
                         * Job launchStage.
                         * @member {google.api.LaunchStage} launchStage
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.launchStage = 0;
    
                        /**
                         * Job binaryAuthorization.
                         * @member {google.cloud.run.v2.IBinaryAuthorization|null|undefined} binaryAuthorization
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.binaryAuthorization = null;
    
                        /**
                         * Job template.
                         * @member {google.cloud.run.v2.IExecutionTemplate|null|undefined} template
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.template = null;
    
                        /**
                         * Job observedGeneration.
                         * @member {number|Long} observedGeneration
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.observedGeneration = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Job terminalCondition.
                         * @member {google.cloud.run.v2.ICondition|null|undefined} terminalCondition
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.terminalCondition = null;
    
                        /**
                         * Job conditions.
                         * @member {Array.<google.cloud.run.v2.ICondition>} conditions
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.conditions = $util.emptyArray;
    
                        /**
                         * Job executionCount.
                         * @member {number} executionCount
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.executionCount = 0;
    
                        /**
                         * Job latestCreatedExecution.
                         * @member {google.cloud.run.v2.IExecutionReference|null|undefined} latestCreatedExecution
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.latestCreatedExecution = null;
    
                        /**
                         * Job reconciling.
                         * @member {boolean} reconciling
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.reconciling = false;
    
                        /**
                         * Job etag.
                         * @member {string} etag
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         */
                        Job.prototype.etag = "";
    
                        /**
                         * Creates a new Job instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.Job
                         * @static
                         * @param {google.cloud.run.v2.IJob=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.Job} Job instance
                         */
                        Job.create = function create(properties) {
                            return new Job(properties);
                        };
    
                        /**
                         * Encodes the specified Job message. Does not implicitly {@link google.cloud.run.v2.Job.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.Job
                         * @static
                         * @param {google.cloud.run.v2.IJob} message Job message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Job.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uid);
                            if (message.generation != null && Object.hasOwnProperty.call(message, "generation"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.generation);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.creator != null && Object.hasOwnProperty.call(message, "creator"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.creator);
                            if (message.lastModifier != null && Object.hasOwnProperty.call(message, "lastModifier"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.lastModifier);
                            if (message.client != null && Object.hasOwnProperty.call(message, "client"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.client);
                            if (message.clientVersion != null && Object.hasOwnProperty.call(message, "clientVersion"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.clientVersion);
                            if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.launchStage);
                            if (message.binaryAuthorization != null && Object.hasOwnProperty.call(message, "binaryAuthorization"))
                                $root.google.cloud.run.v2.BinaryAuthorization.encode(message.binaryAuthorization, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.template != null && Object.hasOwnProperty.call(message, "template"))
                                $root.google.cloud.run.v2.ExecutionTemplate.encode(message.template, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                            if (message.observedGeneration != null && Object.hasOwnProperty.call(message, "observedGeneration"))
                                writer.uint32(/* id 17, wireType 0 =*/136).int64(message.observedGeneration);
                            if (message.terminalCondition != null && Object.hasOwnProperty.call(message, "terminalCondition"))
                                $root.google.cloud.run.v2.Condition.encode(message.terminalCondition, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                            if (message.conditions != null && message.conditions.length)
                                for (var i = 0; i < message.conditions.length; ++i)
                                    $root.google.cloud.run.v2.Condition.encode(message.conditions[i], writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.executionCount != null && Object.hasOwnProperty.call(message, "executionCount"))
                                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.executionCount);
                            if (message.latestCreatedExecution != null && Object.hasOwnProperty.call(message, "latestCreatedExecution"))
                                $root.google.cloud.run.v2.ExecutionReference.encode(message.latestCreatedExecution, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                            if (message.reconciling != null && Object.hasOwnProperty.call(message, "reconciling"))
                                writer.uint32(/* id 23, wireType 0 =*/184).bool(message.reconciling);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 99, wireType 2 =*/794).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Job message, length delimited. Does not implicitly {@link google.cloud.run.v2.Job.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.Job
                         * @static
                         * @param {google.cloud.run.v2.IJob} message Job message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Job.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Job message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.Job
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.Job} Job
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Job.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.Job(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.generation = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.creator = reader.string();
                                        break;
                                    }
                                case 11: {
                                        message.lastModifier = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.client = reader.string();
                                        break;
                                    }
                                case 13: {
                                        message.clientVersion = reader.string();
                                        break;
                                    }
                                case 14: {
                                        message.launchStage = reader.int32();
                                        break;
                                    }
                                case 15: {
                                        message.binaryAuthorization = $root.google.cloud.run.v2.BinaryAuthorization.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.template = $root.google.cloud.run.v2.ExecutionTemplate.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 17: {
                                        message.observedGeneration = reader.int64();
                                        break;
                                    }
                                case 18: {
                                        message.terminalCondition = $root.google.cloud.run.v2.Condition.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 19: {
                                        if (!(message.conditions && message.conditions.length))
                                            message.conditions = [];
                                        message.conditions.push($root.google.cloud.run.v2.Condition.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 20: {
                                        message.executionCount = reader.int32();
                                        break;
                                    }
                                case 22: {
                                        message.latestCreatedExecution = $root.google.cloud.run.v2.ExecutionReference.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 23: {
                                        message.reconciling = reader.bool();
                                        break;
                                    }
                                case 99: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Job message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.Job
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.Job} Job
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Job.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Job message.
                         * @function verify
                         * @memberof google.cloud.run.v2.Job
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Job.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (!$util.isInteger(message.generation) && !(message.generation && $util.isInteger(message.generation.low) && $util.isInteger(message.generation.high)))
                                    return "generation: integer|Long expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                if (error)
                                    return "expireTime." + error;
                            }
                            if (message.creator != null && message.hasOwnProperty("creator"))
                                if (!$util.isString(message.creator))
                                    return "creator: string expected";
                            if (message.lastModifier != null && message.hasOwnProperty("lastModifier"))
                                if (!$util.isString(message.lastModifier))
                                    return "lastModifier: string expected";
                            if (message.client != null && message.hasOwnProperty("client"))
                                if (!$util.isString(message.client))
                                    return "client: string expected";
                            if (message.clientVersion != null && message.hasOwnProperty("clientVersion"))
                                if (!$util.isString(message.clientVersion))
                                    return "clientVersion: string expected";
                            if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                                switch (message.launchStage) {
                                default:
                                    return "launchStage: enum value expected";
                                case 0:
                                case 6:
                                case 7:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.binaryAuthorization != null && message.hasOwnProperty("binaryAuthorization")) {
                                var error = $root.google.cloud.run.v2.BinaryAuthorization.verify(message.binaryAuthorization);
                                if (error)
                                    return "binaryAuthorization." + error;
                            }
                            if (message.template != null && message.hasOwnProperty("template")) {
                                var error = $root.google.cloud.run.v2.ExecutionTemplate.verify(message.template);
                                if (error)
                                    return "template." + error;
                            }
                            if (message.observedGeneration != null && message.hasOwnProperty("observedGeneration"))
                                if (!$util.isInteger(message.observedGeneration) && !(message.observedGeneration && $util.isInteger(message.observedGeneration.low) && $util.isInteger(message.observedGeneration.high)))
                                    return "observedGeneration: integer|Long expected";
                            if (message.terminalCondition != null && message.hasOwnProperty("terminalCondition")) {
                                var error = $root.google.cloud.run.v2.Condition.verify(message.terminalCondition);
                                if (error)
                                    return "terminalCondition." + error;
                            }
                            if (message.conditions != null && message.hasOwnProperty("conditions")) {
                                if (!Array.isArray(message.conditions))
                                    return "conditions: array expected";
                                for (var i = 0; i < message.conditions.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Condition.verify(message.conditions[i]);
                                    if (error)
                                        return "conditions." + error;
                                }
                            }
                            if (message.executionCount != null && message.hasOwnProperty("executionCount"))
                                if (!$util.isInteger(message.executionCount))
                                    return "executionCount: integer expected";
                            if (message.latestCreatedExecution != null && message.hasOwnProperty("latestCreatedExecution")) {
                                var error = $root.google.cloud.run.v2.ExecutionReference.verify(message.latestCreatedExecution);
                                if (error)
                                    return "latestCreatedExecution." + error;
                            }
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                if (typeof message.reconciling !== "boolean")
                                    return "reconciling: boolean expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Job message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.Job
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.Job} Job
                         */
                        Job.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.Job)
                                return object;
                            var message = new $root.google.cloud.run.v2.Job();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.generation != null)
                                if ($util.Long)
                                    (message.generation = $util.Long.fromValue(object.generation)).unsigned = false;
                                else if (typeof object.generation === "string")
                                    message.generation = parseInt(object.generation, 10);
                                else if (typeof object.generation === "number")
                                    message.generation = object.generation;
                                else if (typeof object.generation === "object")
                                    message.generation = new $util.LongBits(object.generation.low >>> 0, object.generation.high >>> 0).toNumber();
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.run.v2.Job.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.cloud.run.v2.Job.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Job.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Job.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Job.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            if (object.expireTime != null) {
                                if (typeof object.expireTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Job.expireTime: object expected");
                                message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                            }
                            if (object.creator != null)
                                message.creator = String(object.creator);
                            if (object.lastModifier != null)
                                message.lastModifier = String(object.lastModifier);
                            if (object.client != null)
                                message.client = String(object.client);
                            if (object.clientVersion != null)
                                message.clientVersion = String(object.clientVersion);
                            switch (object.launchStage) {
                            default:
                                if (typeof object.launchStage === "number") {
                                    message.launchStage = object.launchStage;
                                    break;
                                }
                                break;
                            case "LAUNCH_STAGE_UNSPECIFIED":
                            case 0:
                                message.launchStage = 0;
                                break;
                            case "UNIMPLEMENTED":
                            case 6:
                                message.launchStage = 6;
                                break;
                            case "PRELAUNCH":
                            case 7:
                                message.launchStage = 7;
                                break;
                            case "EARLY_ACCESS":
                            case 1:
                                message.launchStage = 1;
                                break;
                            case "ALPHA":
                            case 2:
                                message.launchStage = 2;
                                break;
                            case "BETA":
                            case 3:
                                message.launchStage = 3;
                                break;
                            case "GA":
                            case 4:
                                message.launchStage = 4;
                                break;
                            case "DEPRECATED":
                            case 5:
                                message.launchStage = 5;
                                break;
                            }
                            if (object.binaryAuthorization != null) {
                                if (typeof object.binaryAuthorization !== "object")
                                    throw TypeError(".google.cloud.run.v2.Job.binaryAuthorization: object expected");
                                message.binaryAuthorization = $root.google.cloud.run.v2.BinaryAuthorization.fromObject(object.binaryAuthorization);
                            }
                            if (object.template != null) {
                                if (typeof object.template !== "object")
                                    throw TypeError(".google.cloud.run.v2.Job.template: object expected");
                                message.template = $root.google.cloud.run.v2.ExecutionTemplate.fromObject(object.template);
                            }
                            if (object.observedGeneration != null)
                                if ($util.Long)
                                    (message.observedGeneration = $util.Long.fromValue(object.observedGeneration)).unsigned = false;
                                else if (typeof object.observedGeneration === "string")
                                    message.observedGeneration = parseInt(object.observedGeneration, 10);
                                else if (typeof object.observedGeneration === "number")
                                    message.observedGeneration = object.observedGeneration;
                                else if (typeof object.observedGeneration === "object")
                                    message.observedGeneration = new $util.LongBits(object.observedGeneration.low >>> 0, object.observedGeneration.high >>> 0).toNumber();
                            if (object.terminalCondition != null) {
                                if (typeof object.terminalCondition !== "object")
                                    throw TypeError(".google.cloud.run.v2.Job.terminalCondition: object expected");
                                message.terminalCondition = $root.google.cloud.run.v2.Condition.fromObject(object.terminalCondition);
                            }
                            if (object.conditions) {
                                if (!Array.isArray(object.conditions))
                                    throw TypeError(".google.cloud.run.v2.Job.conditions: array expected");
                                message.conditions = [];
                                for (var i = 0; i < object.conditions.length; ++i) {
                                    if (typeof object.conditions[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.Job.conditions: object expected");
                                    message.conditions[i] = $root.google.cloud.run.v2.Condition.fromObject(object.conditions[i]);
                                }
                            }
                            if (object.executionCount != null)
                                message.executionCount = object.executionCount | 0;
                            if (object.latestCreatedExecution != null) {
                                if (typeof object.latestCreatedExecution !== "object")
                                    throw TypeError(".google.cloud.run.v2.Job.latestCreatedExecution: object expected");
                                message.latestCreatedExecution = $root.google.cloud.run.v2.ExecutionReference.fromObject(object.latestCreatedExecution);
                            }
                            if (object.reconciling != null)
                                message.reconciling = Boolean(object.reconciling);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Job message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.Job
                         * @static
                         * @param {google.cloud.run.v2.Job} message Job
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Job.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.conditions = [];
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.annotations = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.uid = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.generation = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.generation = options.longs === String ? "0" : 0;
                                object.createTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                                object.expireTime = null;
                                object.creator = "";
                                object.lastModifier = "";
                                object.client = "";
                                object.clientVersion = "";
                                object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                                object.binaryAuthorization = null;
                                object.template = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.observedGeneration = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.observedGeneration = options.longs === String ? "0" : 0;
                                object.terminalCondition = null;
                                object.executionCount = 0;
                                object.latestCreatedExecution = null;
                                object.reconciling = false;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (typeof message.generation === "number")
                                    object.generation = options.longs === String ? String(message.generation) : message.generation;
                                else
                                    object.generation = options.longs === String ? $util.Long.prototype.toString.call(message.generation) : options.longs === Number ? new $util.LongBits(message.generation.low >>> 0, message.generation.high >>> 0).toNumber() : message.generation;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                            if (message.creator != null && message.hasOwnProperty("creator"))
                                object.creator = message.creator;
                            if (message.lastModifier != null && message.hasOwnProperty("lastModifier"))
                                object.lastModifier = message.lastModifier;
                            if (message.client != null && message.hasOwnProperty("client"))
                                object.client = message.client;
                            if (message.clientVersion != null && message.hasOwnProperty("clientVersion"))
                                object.clientVersion = message.clientVersion;
                            if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                                object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                            if (message.binaryAuthorization != null && message.hasOwnProperty("binaryAuthorization"))
                                object.binaryAuthorization = $root.google.cloud.run.v2.BinaryAuthorization.toObject(message.binaryAuthorization, options);
                            if (message.template != null && message.hasOwnProperty("template"))
                                object.template = $root.google.cloud.run.v2.ExecutionTemplate.toObject(message.template, options);
                            if (message.observedGeneration != null && message.hasOwnProperty("observedGeneration"))
                                if (typeof message.observedGeneration === "number")
                                    object.observedGeneration = options.longs === String ? String(message.observedGeneration) : message.observedGeneration;
                                else
                                    object.observedGeneration = options.longs === String ? $util.Long.prototype.toString.call(message.observedGeneration) : options.longs === Number ? new $util.LongBits(message.observedGeneration.low >>> 0, message.observedGeneration.high >>> 0).toNumber() : message.observedGeneration;
                            if (message.terminalCondition != null && message.hasOwnProperty("terminalCondition"))
                                object.terminalCondition = $root.google.cloud.run.v2.Condition.toObject(message.terminalCondition, options);
                            if (message.conditions && message.conditions.length) {
                                object.conditions = [];
                                for (var j = 0; j < message.conditions.length; ++j)
                                    object.conditions[j] = $root.google.cloud.run.v2.Condition.toObject(message.conditions[j], options);
                            }
                            if (message.executionCount != null && message.hasOwnProperty("executionCount"))
                                object.executionCount = message.executionCount;
                            if (message.latestCreatedExecution != null && message.hasOwnProperty("latestCreatedExecution"))
                                object.latestCreatedExecution = $root.google.cloud.run.v2.ExecutionReference.toObject(message.latestCreatedExecution, options);
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                object.reconciling = message.reconciling;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this Job to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.Job
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Job.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Job
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.Job
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Job.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.Job";
                        };
    
                        return Job;
                    })();
    
                    v2.ExecutionReference = (function() {
    
                        /**
                         * Properties of an ExecutionReference.
                         * @memberof google.cloud.run.v2
                         * @interface IExecutionReference
                         * @property {string|null} [name] ExecutionReference name
                         * @property {google.protobuf.ITimestamp|null} [createTime] ExecutionReference createTime
                         * @property {google.protobuf.ITimestamp|null} [completionTime] ExecutionReference completionTime
                         */
    
                        /**
                         * Constructs a new ExecutionReference.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents an ExecutionReference.
                         * @implements IExecutionReference
                         * @constructor
                         * @param {google.cloud.run.v2.IExecutionReference=} [properties] Properties to set
                         */
                        function ExecutionReference(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ExecutionReference name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.ExecutionReference
                         * @instance
                         */
                        ExecutionReference.prototype.name = "";
    
                        /**
                         * ExecutionReference createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.run.v2.ExecutionReference
                         * @instance
                         */
                        ExecutionReference.prototype.createTime = null;
    
                        /**
                         * ExecutionReference completionTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} completionTime
                         * @memberof google.cloud.run.v2.ExecutionReference
                         * @instance
                         */
                        ExecutionReference.prototype.completionTime = null;
    
                        /**
                         * Creates a new ExecutionReference instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.ExecutionReference
                         * @static
                         * @param {google.cloud.run.v2.IExecutionReference=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.ExecutionReference} ExecutionReference instance
                         */
                        ExecutionReference.create = function create(properties) {
                            return new ExecutionReference(properties);
                        };
    
                        /**
                         * Encodes the specified ExecutionReference message. Does not implicitly {@link google.cloud.run.v2.ExecutionReference.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.ExecutionReference
                         * @static
                         * @param {google.cloud.run.v2.IExecutionReference} message ExecutionReference message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExecutionReference.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.completionTime != null && Object.hasOwnProperty.call(message, "completionTime"))
                                $root.google.protobuf.Timestamp.encode(message.completionTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ExecutionReference message, length delimited. Does not implicitly {@link google.cloud.run.v2.ExecutionReference.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.ExecutionReference
                         * @static
                         * @param {google.cloud.run.v2.IExecutionReference} message ExecutionReference message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExecutionReference.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ExecutionReference message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.ExecutionReference
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.ExecutionReference} ExecutionReference
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExecutionReference.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.ExecutionReference();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.completionTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ExecutionReference message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.ExecutionReference
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.ExecutionReference} ExecutionReference
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExecutionReference.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ExecutionReference message.
                         * @function verify
                         * @memberof google.cloud.run.v2.ExecutionReference
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ExecutionReference.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.completionTime != null && message.hasOwnProperty("completionTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.completionTime);
                                if (error)
                                    return "completionTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ExecutionReference message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.ExecutionReference
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.ExecutionReference} ExecutionReference
                         */
                        ExecutionReference.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.ExecutionReference)
                                return object;
                            var message = new $root.google.cloud.run.v2.ExecutionReference();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.ExecutionReference.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.completionTime != null) {
                                if (typeof object.completionTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.ExecutionReference.completionTime: object expected");
                                message.completionTime = $root.google.protobuf.Timestamp.fromObject(object.completionTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ExecutionReference message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.ExecutionReference
                         * @static
                         * @param {google.cloud.run.v2.ExecutionReference} message ExecutionReference
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ExecutionReference.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.completionTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.completionTime != null && message.hasOwnProperty("completionTime"))
                                object.completionTime = $root.google.protobuf.Timestamp.toObject(message.completionTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this ExecutionReference to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.ExecutionReference
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ExecutionReference.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ExecutionReference
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.ExecutionReference
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ExecutionReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.ExecutionReference";
                        };
    
                        return ExecutionReference;
                    })();
    
                    v2.Revisions = (function() {
    
                        /**
                         * Constructs a new Revisions service.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a Revisions
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function Revisions(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (Revisions.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Revisions;
    
                        /**
                         * Creates new Revisions service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.run.v2.Revisions
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {Revisions} RPC service. Useful where requests and/or responses are streamed.
                         */
                        Revisions.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Revisions|getRevision}.
                         * @memberof google.cloud.run.v2.Revisions
                         * @typedef GetRevisionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.run.v2.Revision} [response] Revision
                         */
    
                        /**
                         * Calls GetRevision.
                         * @function getRevision
                         * @memberof google.cloud.run.v2.Revisions
                         * @instance
                         * @param {google.cloud.run.v2.IGetRevisionRequest} request GetRevisionRequest message or plain object
                         * @param {google.cloud.run.v2.Revisions.GetRevisionCallback} callback Node-style callback called with the error, if any, and Revision
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Revisions.prototype.getRevision = function getRevision(request, callback) {
                            return this.rpcCall(getRevision, $root.google.cloud.run.v2.GetRevisionRequest, $root.google.cloud.run.v2.Revision, request, callback);
                        }, "name", { value: "GetRevision" });
    
                        /**
                         * Calls GetRevision.
                         * @function getRevision
                         * @memberof google.cloud.run.v2.Revisions
                         * @instance
                         * @param {google.cloud.run.v2.IGetRevisionRequest} request GetRevisionRequest message or plain object
                         * @returns {Promise<google.cloud.run.v2.Revision>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Revisions|listRevisions}.
                         * @memberof google.cloud.run.v2.Revisions
                         * @typedef ListRevisionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.run.v2.ListRevisionsResponse} [response] ListRevisionsResponse
                         */
    
                        /**
                         * Calls ListRevisions.
                         * @function listRevisions
                         * @memberof google.cloud.run.v2.Revisions
                         * @instance
                         * @param {google.cloud.run.v2.IListRevisionsRequest} request ListRevisionsRequest message or plain object
                         * @param {google.cloud.run.v2.Revisions.ListRevisionsCallback} callback Node-style callback called with the error, if any, and ListRevisionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Revisions.prototype.listRevisions = function listRevisions(request, callback) {
                            return this.rpcCall(listRevisions, $root.google.cloud.run.v2.ListRevisionsRequest, $root.google.cloud.run.v2.ListRevisionsResponse, request, callback);
                        }, "name", { value: "ListRevisions" });
    
                        /**
                         * Calls ListRevisions.
                         * @function listRevisions
                         * @memberof google.cloud.run.v2.Revisions
                         * @instance
                         * @param {google.cloud.run.v2.IListRevisionsRequest} request ListRevisionsRequest message or plain object
                         * @returns {Promise<google.cloud.run.v2.ListRevisionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Revisions|deleteRevision}.
                         * @memberof google.cloud.run.v2.Revisions
                         * @typedef DeleteRevisionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteRevision.
                         * @function deleteRevision
                         * @memberof google.cloud.run.v2.Revisions
                         * @instance
                         * @param {google.cloud.run.v2.IDeleteRevisionRequest} request DeleteRevisionRequest message or plain object
                         * @param {google.cloud.run.v2.Revisions.DeleteRevisionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Revisions.prototype.deleteRevision = function deleteRevision(request, callback) {
                            return this.rpcCall(deleteRevision, $root.google.cloud.run.v2.DeleteRevisionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteRevision" });
    
                        /**
                         * Calls DeleteRevision.
                         * @function deleteRevision
                         * @memberof google.cloud.run.v2.Revisions
                         * @instance
                         * @param {google.cloud.run.v2.IDeleteRevisionRequest} request DeleteRevisionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return Revisions;
                    })();
    
                    v2.GetRevisionRequest = (function() {
    
                        /**
                         * Properties of a GetRevisionRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IGetRevisionRequest
                         * @property {string|null} [name] GetRevisionRequest name
                         */
    
                        /**
                         * Constructs a new GetRevisionRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a GetRevisionRequest.
                         * @implements IGetRevisionRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IGetRevisionRequest=} [properties] Properties to set
                         */
                        function GetRevisionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetRevisionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.GetRevisionRequest
                         * @instance
                         */
                        GetRevisionRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetRevisionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.GetRevisionRequest
                         * @static
                         * @param {google.cloud.run.v2.IGetRevisionRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.GetRevisionRequest} GetRevisionRequest instance
                         */
                        GetRevisionRequest.create = function create(properties) {
                            return new GetRevisionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetRevisionRequest message. Does not implicitly {@link google.cloud.run.v2.GetRevisionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.GetRevisionRequest
                         * @static
                         * @param {google.cloud.run.v2.IGetRevisionRequest} message GetRevisionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRevisionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetRevisionRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.GetRevisionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.GetRevisionRequest
                         * @static
                         * @param {google.cloud.run.v2.IGetRevisionRequest} message GetRevisionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRevisionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetRevisionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.GetRevisionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.GetRevisionRequest} GetRevisionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRevisionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.GetRevisionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetRevisionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.GetRevisionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.GetRevisionRequest} GetRevisionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRevisionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetRevisionRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.GetRevisionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetRevisionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetRevisionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.GetRevisionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.GetRevisionRequest} GetRevisionRequest
                         */
                        GetRevisionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.GetRevisionRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.GetRevisionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetRevisionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.GetRevisionRequest
                         * @static
                         * @param {google.cloud.run.v2.GetRevisionRequest} message GetRevisionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetRevisionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetRevisionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.GetRevisionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetRevisionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetRevisionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.GetRevisionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetRevisionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.GetRevisionRequest";
                        };
    
                        return GetRevisionRequest;
                    })();
    
                    v2.ListRevisionsRequest = (function() {
    
                        /**
                         * Properties of a ListRevisionsRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IListRevisionsRequest
                         * @property {string|null} [parent] ListRevisionsRequest parent
                         * @property {number|null} [pageSize] ListRevisionsRequest pageSize
                         * @property {string|null} [pageToken] ListRevisionsRequest pageToken
                         * @property {boolean|null} [showDeleted] ListRevisionsRequest showDeleted
                         */
    
                        /**
                         * Constructs a new ListRevisionsRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a ListRevisionsRequest.
                         * @implements IListRevisionsRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IListRevisionsRequest=} [properties] Properties to set
                         */
                        function ListRevisionsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRevisionsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.run.v2.ListRevisionsRequest
                         * @instance
                         */
                        ListRevisionsRequest.prototype.parent = "";
    
                        /**
                         * ListRevisionsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.run.v2.ListRevisionsRequest
                         * @instance
                         */
                        ListRevisionsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListRevisionsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.run.v2.ListRevisionsRequest
                         * @instance
                         */
                        ListRevisionsRequest.prototype.pageToken = "";
    
                        /**
                         * ListRevisionsRequest showDeleted.
                         * @member {boolean} showDeleted
                         * @memberof google.cloud.run.v2.ListRevisionsRequest
                         * @instance
                         */
                        ListRevisionsRequest.prototype.showDeleted = false;
    
                        /**
                         * Creates a new ListRevisionsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.ListRevisionsRequest
                         * @static
                         * @param {google.cloud.run.v2.IListRevisionsRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.ListRevisionsRequest} ListRevisionsRequest instance
                         */
                        ListRevisionsRequest.create = function create(properties) {
                            return new ListRevisionsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListRevisionsRequest message. Does not implicitly {@link google.cloud.run.v2.ListRevisionsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.ListRevisionsRequest
                         * @static
                         * @param {google.cloud.run.v2.IListRevisionsRequest} message ListRevisionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRevisionsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.showDeleted != null && Object.hasOwnProperty.call(message, "showDeleted"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.showDeleted);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRevisionsRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.ListRevisionsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.ListRevisionsRequest
                         * @static
                         * @param {google.cloud.run.v2.IListRevisionsRequest} message ListRevisionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRevisionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRevisionsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.ListRevisionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.ListRevisionsRequest} ListRevisionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRevisionsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.ListRevisionsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.showDeleted = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRevisionsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.ListRevisionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.ListRevisionsRequest} ListRevisionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRevisionsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRevisionsRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.ListRevisionsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRevisionsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                if (typeof message.showDeleted !== "boolean")
                                    return "showDeleted: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRevisionsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.ListRevisionsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.ListRevisionsRequest} ListRevisionsRequest
                         */
                        ListRevisionsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.ListRevisionsRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.ListRevisionsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.showDeleted != null)
                                message.showDeleted = Boolean(object.showDeleted);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRevisionsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.ListRevisionsRequest
                         * @static
                         * @param {google.cloud.run.v2.ListRevisionsRequest} message ListRevisionsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRevisionsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.showDeleted = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                object.showDeleted = message.showDeleted;
                            return object;
                        };
    
                        /**
                         * Converts this ListRevisionsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.ListRevisionsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRevisionsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRevisionsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.ListRevisionsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRevisionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.ListRevisionsRequest";
                        };
    
                        return ListRevisionsRequest;
                    })();
    
                    v2.ListRevisionsResponse = (function() {
    
                        /**
                         * Properties of a ListRevisionsResponse.
                         * @memberof google.cloud.run.v2
                         * @interface IListRevisionsResponse
                         * @property {Array.<google.cloud.run.v2.IRevision>|null} [revisions] ListRevisionsResponse revisions
                         * @property {string|null} [nextPageToken] ListRevisionsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListRevisionsResponse.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a ListRevisionsResponse.
                         * @implements IListRevisionsResponse
                         * @constructor
                         * @param {google.cloud.run.v2.IListRevisionsResponse=} [properties] Properties to set
                         */
                        function ListRevisionsResponse(properties) {
                            this.revisions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRevisionsResponse revisions.
                         * @member {Array.<google.cloud.run.v2.IRevision>} revisions
                         * @memberof google.cloud.run.v2.ListRevisionsResponse
                         * @instance
                         */
                        ListRevisionsResponse.prototype.revisions = $util.emptyArray;
    
                        /**
                         * ListRevisionsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.run.v2.ListRevisionsResponse
                         * @instance
                         */
                        ListRevisionsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListRevisionsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.ListRevisionsResponse
                         * @static
                         * @param {google.cloud.run.v2.IListRevisionsResponse=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.ListRevisionsResponse} ListRevisionsResponse instance
                         */
                        ListRevisionsResponse.create = function create(properties) {
                            return new ListRevisionsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListRevisionsResponse message. Does not implicitly {@link google.cloud.run.v2.ListRevisionsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.ListRevisionsResponse
                         * @static
                         * @param {google.cloud.run.v2.IListRevisionsResponse} message ListRevisionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRevisionsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.revisions != null && message.revisions.length)
                                for (var i = 0; i < message.revisions.length; ++i)
                                    $root.google.cloud.run.v2.Revision.encode(message.revisions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRevisionsResponse message, length delimited. Does not implicitly {@link google.cloud.run.v2.ListRevisionsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.ListRevisionsResponse
                         * @static
                         * @param {google.cloud.run.v2.IListRevisionsResponse} message ListRevisionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRevisionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRevisionsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.ListRevisionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.ListRevisionsResponse} ListRevisionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRevisionsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.ListRevisionsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.revisions && message.revisions.length))
                                            message.revisions = [];
                                        message.revisions.push($root.google.cloud.run.v2.Revision.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRevisionsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.ListRevisionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.ListRevisionsResponse} ListRevisionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRevisionsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRevisionsResponse message.
                         * @function verify
                         * @memberof google.cloud.run.v2.ListRevisionsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRevisionsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.revisions != null && message.hasOwnProperty("revisions")) {
                                if (!Array.isArray(message.revisions))
                                    return "revisions: array expected";
                                for (var i = 0; i < message.revisions.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Revision.verify(message.revisions[i]);
                                    if (error)
                                        return "revisions." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRevisionsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.ListRevisionsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.ListRevisionsResponse} ListRevisionsResponse
                         */
                        ListRevisionsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.ListRevisionsResponse)
                                return object;
                            var message = new $root.google.cloud.run.v2.ListRevisionsResponse();
                            if (object.revisions) {
                                if (!Array.isArray(object.revisions))
                                    throw TypeError(".google.cloud.run.v2.ListRevisionsResponse.revisions: array expected");
                                message.revisions = [];
                                for (var i = 0; i < object.revisions.length; ++i) {
                                    if (typeof object.revisions[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.ListRevisionsResponse.revisions: object expected");
                                    message.revisions[i] = $root.google.cloud.run.v2.Revision.fromObject(object.revisions[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRevisionsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.ListRevisionsResponse
                         * @static
                         * @param {google.cloud.run.v2.ListRevisionsResponse} message ListRevisionsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRevisionsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.revisions = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.revisions && message.revisions.length) {
                                object.revisions = [];
                                for (var j = 0; j < message.revisions.length; ++j)
                                    object.revisions[j] = $root.google.cloud.run.v2.Revision.toObject(message.revisions[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListRevisionsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.ListRevisionsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRevisionsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRevisionsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.ListRevisionsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRevisionsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.ListRevisionsResponse";
                        };
    
                        return ListRevisionsResponse;
                    })();
    
                    v2.DeleteRevisionRequest = (function() {
    
                        /**
                         * Properties of a DeleteRevisionRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IDeleteRevisionRequest
                         * @property {string|null} [name] DeleteRevisionRequest name
                         * @property {boolean|null} [validateOnly] DeleteRevisionRequest validateOnly
                         * @property {string|null} [etag] DeleteRevisionRequest etag
                         */
    
                        /**
                         * Constructs a new DeleteRevisionRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a DeleteRevisionRequest.
                         * @implements IDeleteRevisionRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IDeleteRevisionRequest=} [properties] Properties to set
                         */
                        function DeleteRevisionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteRevisionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.DeleteRevisionRequest
                         * @instance
                         */
                        DeleteRevisionRequest.prototype.name = "";
    
                        /**
                         * DeleteRevisionRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.run.v2.DeleteRevisionRequest
                         * @instance
                         */
                        DeleteRevisionRequest.prototype.validateOnly = false;
    
                        /**
                         * DeleteRevisionRequest etag.
                         * @member {string} etag
                         * @memberof google.cloud.run.v2.DeleteRevisionRequest
                         * @instance
                         */
                        DeleteRevisionRequest.prototype.etag = "";
    
                        /**
                         * Creates a new DeleteRevisionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.DeleteRevisionRequest
                         * @static
                         * @param {google.cloud.run.v2.IDeleteRevisionRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.DeleteRevisionRequest} DeleteRevisionRequest instance
                         */
                        DeleteRevisionRequest.create = function create(properties) {
                            return new DeleteRevisionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteRevisionRequest message. Does not implicitly {@link google.cloud.run.v2.DeleteRevisionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.DeleteRevisionRequest
                         * @static
                         * @param {google.cloud.run.v2.IDeleteRevisionRequest} message DeleteRevisionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRevisionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.validateOnly);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteRevisionRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.DeleteRevisionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.DeleteRevisionRequest
                         * @static
                         * @param {google.cloud.run.v2.IDeleteRevisionRequest} message DeleteRevisionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRevisionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteRevisionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.DeleteRevisionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.DeleteRevisionRequest} DeleteRevisionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRevisionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.DeleteRevisionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteRevisionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.DeleteRevisionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.DeleteRevisionRequest} DeleteRevisionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRevisionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteRevisionRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.DeleteRevisionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteRevisionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteRevisionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.DeleteRevisionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.DeleteRevisionRequest} DeleteRevisionRequest
                         */
                        DeleteRevisionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.DeleteRevisionRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.DeleteRevisionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteRevisionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.DeleteRevisionRequest
                         * @static
                         * @param {google.cloud.run.v2.DeleteRevisionRequest} message DeleteRevisionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteRevisionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.validateOnly = false;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteRevisionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.DeleteRevisionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteRevisionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteRevisionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.DeleteRevisionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteRevisionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.DeleteRevisionRequest";
                        };
    
                        return DeleteRevisionRequest;
                    })();
    
                    v2.Revision = (function() {
    
                        /**
                         * Properties of a Revision.
                         * @memberof google.cloud.run.v2
                         * @interface IRevision
                         * @property {string|null} [name] Revision name
                         * @property {string|null} [uid] Revision uid
                         * @property {number|Long|null} [generation] Revision generation
                         * @property {Object.<string,string>|null} [labels] Revision labels
                         * @property {Object.<string,string>|null} [annotations] Revision annotations
                         * @property {google.protobuf.ITimestamp|null} [createTime] Revision createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Revision updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] Revision deleteTime
                         * @property {google.protobuf.ITimestamp|null} [expireTime] Revision expireTime
                         * @property {google.api.LaunchStage|null} [launchStage] Revision launchStage
                         * @property {string|null} [service] Revision service
                         * @property {google.cloud.run.v2.IRevisionScaling|null} [scaling] Revision scaling
                         * @property {google.cloud.run.v2.IVpcAccess|null} [vpcAccess] Revision vpcAccess
                         * @property {number|null} [maxInstanceRequestConcurrency] Revision maxInstanceRequestConcurrency
                         * @property {google.protobuf.IDuration|null} [timeout] Revision timeout
                         * @property {string|null} [serviceAccount] Revision serviceAccount
                         * @property {Array.<google.cloud.run.v2.IContainer>|null} [containers] Revision containers
                         * @property {Array.<google.cloud.run.v2.IVolume>|null} [volumes] Revision volumes
                         * @property {google.cloud.run.v2.ExecutionEnvironment|null} [executionEnvironment] Revision executionEnvironment
                         * @property {string|null} [encryptionKey] Revision encryptionKey
                         * @property {boolean|null} [reconciling] Revision reconciling
                         * @property {Array.<google.cloud.run.v2.ICondition>|null} [conditions] Revision conditions
                         * @property {number|Long|null} [observedGeneration] Revision observedGeneration
                         * @property {string|null} [logUri] Revision logUri
                         * @property {string|null} [etag] Revision etag
                         */
    
                        /**
                         * Constructs a new Revision.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a Revision.
                         * @implements IRevision
                         * @constructor
                         * @param {google.cloud.run.v2.IRevision=} [properties] Properties to set
                         */
                        function Revision(properties) {
                            this.labels = {};
                            this.annotations = {};
                            this.containers = [];
                            this.volumes = [];
                            this.conditions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Revision name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.name = "";
    
                        /**
                         * Revision uid.
                         * @member {string} uid
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.uid = "";
    
                        /**
                         * Revision generation.
                         * @member {number|Long} generation
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.generation = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Revision labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.labels = $util.emptyObject;
    
                        /**
                         * Revision annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.annotations = $util.emptyObject;
    
                        /**
                         * Revision createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.createTime = null;
    
                        /**
                         * Revision updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.updateTime = null;
    
                        /**
                         * Revision deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.deleteTime = null;
    
                        /**
                         * Revision expireTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.expireTime = null;
    
                        /**
                         * Revision launchStage.
                         * @member {google.api.LaunchStage} launchStage
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.launchStage = 0;
    
                        /**
                         * Revision service.
                         * @member {string} service
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.service = "";
    
                        /**
                         * Revision scaling.
                         * @member {google.cloud.run.v2.IRevisionScaling|null|undefined} scaling
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.scaling = null;
    
                        /**
                         * Revision vpcAccess.
                         * @member {google.cloud.run.v2.IVpcAccess|null|undefined} vpcAccess
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.vpcAccess = null;
    
                        /**
                         * Revision maxInstanceRequestConcurrency.
                         * @member {number} maxInstanceRequestConcurrency
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.maxInstanceRequestConcurrency = 0;
    
                        /**
                         * Revision timeout.
                         * @member {google.protobuf.IDuration|null|undefined} timeout
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.timeout = null;
    
                        /**
                         * Revision serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.serviceAccount = "";
    
                        /**
                         * Revision containers.
                         * @member {Array.<google.cloud.run.v2.IContainer>} containers
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.containers = $util.emptyArray;
    
                        /**
                         * Revision volumes.
                         * @member {Array.<google.cloud.run.v2.IVolume>} volumes
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.volumes = $util.emptyArray;
    
                        /**
                         * Revision executionEnvironment.
                         * @member {google.cloud.run.v2.ExecutionEnvironment} executionEnvironment
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.executionEnvironment = 0;
    
                        /**
                         * Revision encryptionKey.
                         * @member {string} encryptionKey
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.encryptionKey = "";
    
                        /**
                         * Revision reconciling.
                         * @member {boolean} reconciling
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.reconciling = false;
    
                        /**
                         * Revision conditions.
                         * @member {Array.<google.cloud.run.v2.ICondition>} conditions
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.conditions = $util.emptyArray;
    
                        /**
                         * Revision observedGeneration.
                         * @member {number|Long} observedGeneration
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.observedGeneration = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Revision logUri.
                         * @member {string} logUri
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.logUri = "";
    
                        /**
                         * Revision etag.
                         * @member {string} etag
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         */
                        Revision.prototype.etag = "";
    
                        /**
                         * Creates a new Revision instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.Revision
                         * @static
                         * @param {google.cloud.run.v2.IRevision=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.Revision} Revision instance
                         */
                        Revision.create = function create(properties) {
                            return new Revision(properties);
                        };
    
                        /**
                         * Encodes the specified Revision message. Does not implicitly {@link google.cloud.run.v2.Revision.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.Revision
                         * @static
                         * @param {google.cloud.run.v2.IRevision} message Revision message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Revision.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uid);
                            if (message.generation != null && Object.hasOwnProperty.call(message, "generation"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.generation);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.launchStage);
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.service);
                            if (message.scaling != null && Object.hasOwnProperty.call(message, "scaling"))
                                $root.google.cloud.run.v2.RevisionScaling.encode(message.scaling, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.vpcAccess != null && Object.hasOwnProperty.call(message, "vpcAccess"))
                                $root.google.cloud.run.v2.VpcAccess.encode(message.vpcAccess, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                                $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.serviceAccount);
                            if (message.containers != null && message.containers.length)
                                for (var i = 0; i < message.containers.length; ++i)
                                    $root.google.cloud.run.v2.Container.encode(message.containers[i], writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.volumes != null && message.volumes.length)
                                for (var i = 0; i < message.volumes.length; ++i)
                                    $root.google.cloud.run.v2.Volume.encode(message.volumes[i], writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                            if (message.executionEnvironment != null && Object.hasOwnProperty.call(message, "executionEnvironment"))
                                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.executionEnvironment);
                            if (message.encryptionKey != null && Object.hasOwnProperty.call(message, "encryptionKey"))
                                writer.uint32(/* id 21, wireType 2 =*/170).string(message.encryptionKey);
                            if (message.reconciling != null && Object.hasOwnProperty.call(message, "reconciling"))
                                writer.uint32(/* id 30, wireType 0 =*/240).bool(message.reconciling);
                            if (message.conditions != null && message.conditions.length)
                                for (var i = 0; i < message.conditions.length; ++i)
                                    $root.google.cloud.run.v2.Condition.encode(message.conditions[i], writer.uint32(/* id 31, wireType 2 =*/250).fork()).ldelim();
                            if (message.observedGeneration != null && Object.hasOwnProperty.call(message, "observedGeneration"))
                                writer.uint32(/* id 32, wireType 0 =*/256).int64(message.observedGeneration);
                            if (message.logUri != null && Object.hasOwnProperty.call(message, "logUri"))
                                writer.uint32(/* id 33, wireType 2 =*/266).string(message.logUri);
                            if (message.maxInstanceRequestConcurrency != null && Object.hasOwnProperty.call(message, "maxInstanceRequestConcurrency"))
                                writer.uint32(/* id 34, wireType 0 =*/272).int32(message.maxInstanceRequestConcurrency);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 99, wireType 2 =*/794).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Revision message, length delimited. Does not implicitly {@link google.cloud.run.v2.Revision.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.Revision
                         * @static
                         * @param {google.cloud.run.v2.IRevision} message Revision message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Revision.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Revision message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.Revision
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.Revision} Revision
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Revision.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.Revision(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.generation = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.launchStage = reader.int32();
                                        break;
                                    }
                                case 11: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.scaling = $root.google.cloud.run.v2.RevisionScaling.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.vpcAccess = $root.google.cloud.run.v2.VpcAccess.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 34: {
                                        message.maxInstanceRequestConcurrency = reader.int32();
                                        break;
                                    }
                                case 15: {
                                        message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                case 17: {
                                        if (!(message.containers && message.containers.length))
                                            message.containers = [];
                                        message.containers.push($root.google.cloud.run.v2.Container.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 18: {
                                        if (!(message.volumes && message.volumes.length))
                                            message.volumes = [];
                                        message.volumes.push($root.google.cloud.run.v2.Volume.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 20: {
                                        message.executionEnvironment = reader.int32();
                                        break;
                                    }
                                case 21: {
                                        message.encryptionKey = reader.string();
                                        break;
                                    }
                                case 30: {
                                        message.reconciling = reader.bool();
                                        break;
                                    }
                                case 31: {
                                        if (!(message.conditions && message.conditions.length))
                                            message.conditions = [];
                                        message.conditions.push($root.google.cloud.run.v2.Condition.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 32: {
                                        message.observedGeneration = reader.int64();
                                        break;
                                    }
                                case 33: {
                                        message.logUri = reader.string();
                                        break;
                                    }
                                case 99: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Revision message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.Revision
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.Revision} Revision
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Revision.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Revision message.
                         * @function verify
                         * @memberof google.cloud.run.v2.Revision
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Revision.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (!$util.isInteger(message.generation) && !(message.generation && $util.isInteger(message.generation.low) && $util.isInteger(message.generation.high)))
                                    return "generation: integer|Long expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                if (error)
                                    return "expireTime." + error;
                            }
                            if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                                switch (message.launchStage) {
                                default:
                                    return "launchStage: enum value expected";
                                case 0:
                                case 6:
                                case 7:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.scaling != null && message.hasOwnProperty("scaling")) {
                                var error = $root.google.cloud.run.v2.RevisionScaling.verify(message.scaling);
                                if (error)
                                    return "scaling." + error;
                            }
                            if (message.vpcAccess != null && message.hasOwnProperty("vpcAccess")) {
                                var error = $root.google.cloud.run.v2.VpcAccess.verify(message.vpcAccess);
                                if (error)
                                    return "vpcAccess." + error;
                            }
                            if (message.maxInstanceRequestConcurrency != null && message.hasOwnProperty("maxInstanceRequestConcurrency"))
                                if (!$util.isInteger(message.maxInstanceRequestConcurrency))
                                    return "maxInstanceRequestConcurrency: integer expected";
                            if (message.timeout != null && message.hasOwnProperty("timeout")) {
                                var error = $root.google.protobuf.Duration.verify(message.timeout);
                                if (error)
                                    return "timeout." + error;
                            }
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            if (message.containers != null && message.hasOwnProperty("containers")) {
                                if (!Array.isArray(message.containers))
                                    return "containers: array expected";
                                for (var i = 0; i < message.containers.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Container.verify(message.containers[i]);
                                    if (error)
                                        return "containers." + error;
                                }
                            }
                            if (message.volumes != null && message.hasOwnProperty("volumes")) {
                                if (!Array.isArray(message.volumes))
                                    return "volumes: array expected";
                                for (var i = 0; i < message.volumes.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Volume.verify(message.volumes[i]);
                                    if (error)
                                        return "volumes." + error;
                                }
                            }
                            if (message.executionEnvironment != null && message.hasOwnProperty("executionEnvironment"))
                                switch (message.executionEnvironment) {
                                default:
                                    return "executionEnvironment: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.encryptionKey != null && message.hasOwnProperty("encryptionKey"))
                                if (!$util.isString(message.encryptionKey))
                                    return "encryptionKey: string expected";
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                if (typeof message.reconciling !== "boolean")
                                    return "reconciling: boolean expected";
                            if (message.conditions != null && message.hasOwnProperty("conditions")) {
                                if (!Array.isArray(message.conditions))
                                    return "conditions: array expected";
                                for (var i = 0; i < message.conditions.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Condition.verify(message.conditions[i]);
                                    if (error)
                                        return "conditions." + error;
                                }
                            }
                            if (message.observedGeneration != null && message.hasOwnProperty("observedGeneration"))
                                if (!$util.isInteger(message.observedGeneration) && !(message.observedGeneration && $util.isInteger(message.observedGeneration.low) && $util.isInteger(message.observedGeneration.high)))
                                    return "observedGeneration: integer|Long expected";
                            if (message.logUri != null && message.hasOwnProperty("logUri"))
                                if (!$util.isString(message.logUri))
                                    return "logUri: string expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Revision message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.Revision
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.Revision} Revision
                         */
                        Revision.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.Revision)
                                return object;
                            var message = new $root.google.cloud.run.v2.Revision();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.generation != null)
                                if ($util.Long)
                                    (message.generation = $util.Long.fromValue(object.generation)).unsigned = false;
                                else if (typeof object.generation === "string")
                                    message.generation = parseInt(object.generation, 10);
                                else if (typeof object.generation === "number")
                                    message.generation = object.generation;
                                else if (typeof object.generation === "object")
                                    message.generation = new $util.LongBits(object.generation.low >>> 0, object.generation.high >>> 0).toNumber();
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.run.v2.Revision.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.cloud.run.v2.Revision.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Revision.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Revision.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Revision.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            if (object.expireTime != null) {
                                if (typeof object.expireTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Revision.expireTime: object expected");
                                message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                            }
                            switch (object.launchStage) {
                            default:
                                if (typeof object.launchStage === "number") {
                                    message.launchStage = object.launchStage;
                                    break;
                                }
                                break;
                            case "LAUNCH_STAGE_UNSPECIFIED":
                            case 0:
                                message.launchStage = 0;
                                break;
                            case "UNIMPLEMENTED":
                            case 6:
                                message.launchStage = 6;
                                break;
                            case "PRELAUNCH":
                            case 7:
                                message.launchStage = 7;
                                break;
                            case "EARLY_ACCESS":
                            case 1:
                                message.launchStage = 1;
                                break;
                            case "ALPHA":
                            case 2:
                                message.launchStage = 2;
                                break;
                            case "BETA":
                            case 3:
                                message.launchStage = 3;
                                break;
                            case "GA":
                            case 4:
                                message.launchStage = 4;
                                break;
                            case "DEPRECATED":
                            case 5:
                                message.launchStage = 5;
                                break;
                            }
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.scaling != null) {
                                if (typeof object.scaling !== "object")
                                    throw TypeError(".google.cloud.run.v2.Revision.scaling: object expected");
                                message.scaling = $root.google.cloud.run.v2.RevisionScaling.fromObject(object.scaling);
                            }
                            if (object.vpcAccess != null) {
                                if (typeof object.vpcAccess !== "object")
                                    throw TypeError(".google.cloud.run.v2.Revision.vpcAccess: object expected");
                                message.vpcAccess = $root.google.cloud.run.v2.VpcAccess.fromObject(object.vpcAccess);
                            }
                            if (object.maxInstanceRequestConcurrency != null)
                                message.maxInstanceRequestConcurrency = object.maxInstanceRequestConcurrency | 0;
                            if (object.timeout != null) {
                                if (typeof object.timeout !== "object")
                                    throw TypeError(".google.cloud.run.v2.Revision.timeout: object expected");
                                message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                            }
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            if (object.containers) {
                                if (!Array.isArray(object.containers))
                                    throw TypeError(".google.cloud.run.v2.Revision.containers: array expected");
                                message.containers = [];
                                for (var i = 0; i < object.containers.length; ++i) {
                                    if (typeof object.containers[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.Revision.containers: object expected");
                                    message.containers[i] = $root.google.cloud.run.v2.Container.fromObject(object.containers[i]);
                                }
                            }
                            if (object.volumes) {
                                if (!Array.isArray(object.volumes))
                                    throw TypeError(".google.cloud.run.v2.Revision.volumes: array expected");
                                message.volumes = [];
                                for (var i = 0; i < object.volumes.length; ++i) {
                                    if (typeof object.volumes[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.Revision.volumes: object expected");
                                    message.volumes[i] = $root.google.cloud.run.v2.Volume.fromObject(object.volumes[i]);
                                }
                            }
                            switch (object.executionEnvironment) {
                            default:
                                if (typeof object.executionEnvironment === "number") {
                                    message.executionEnvironment = object.executionEnvironment;
                                    break;
                                }
                                break;
                            case "EXECUTION_ENVIRONMENT_UNSPECIFIED":
                            case 0:
                                message.executionEnvironment = 0;
                                break;
                            case "EXECUTION_ENVIRONMENT_GEN1":
                            case 1:
                                message.executionEnvironment = 1;
                                break;
                            case "EXECUTION_ENVIRONMENT_GEN2":
                            case 2:
                                message.executionEnvironment = 2;
                                break;
                            }
                            if (object.encryptionKey != null)
                                message.encryptionKey = String(object.encryptionKey);
                            if (object.reconciling != null)
                                message.reconciling = Boolean(object.reconciling);
                            if (object.conditions) {
                                if (!Array.isArray(object.conditions))
                                    throw TypeError(".google.cloud.run.v2.Revision.conditions: array expected");
                                message.conditions = [];
                                for (var i = 0; i < object.conditions.length; ++i) {
                                    if (typeof object.conditions[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.Revision.conditions: object expected");
                                    message.conditions[i] = $root.google.cloud.run.v2.Condition.fromObject(object.conditions[i]);
                                }
                            }
                            if (object.observedGeneration != null)
                                if ($util.Long)
                                    (message.observedGeneration = $util.Long.fromValue(object.observedGeneration)).unsigned = false;
                                else if (typeof object.observedGeneration === "string")
                                    message.observedGeneration = parseInt(object.observedGeneration, 10);
                                else if (typeof object.observedGeneration === "number")
                                    message.observedGeneration = object.observedGeneration;
                                else if (typeof object.observedGeneration === "object")
                                    message.observedGeneration = new $util.LongBits(object.observedGeneration.low >>> 0, object.observedGeneration.high >>> 0).toNumber();
                            if (object.logUri != null)
                                message.logUri = String(object.logUri);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Revision message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.Revision
                         * @static
                         * @param {google.cloud.run.v2.Revision} message Revision
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Revision.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.containers = [];
                                object.volumes = [];
                                object.conditions = [];
                            }
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.annotations = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.uid = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.generation = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.generation = options.longs === String ? "0" : 0;
                                object.createTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                                object.expireTime = null;
                                object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                                object.service = "";
                                object.scaling = null;
                                object.vpcAccess = null;
                                object.timeout = null;
                                object.serviceAccount = "";
                                object.executionEnvironment = options.enums === String ? "EXECUTION_ENVIRONMENT_UNSPECIFIED" : 0;
                                object.encryptionKey = "";
                                object.reconciling = false;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.observedGeneration = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.observedGeneration = options.longs === String ? "0" : 0;
                                object.logUri = "";
                                object.maxInstanceRequestConcurrency = 0;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (typeof message.generation === "number")
                                    object.generation = options.longs === String ? String(message.generation) : message.generation;
                                else
                                    object.generation = options.longs === String ? $util.Long.prototype.toString.call(message.generation) : options.longs === Number ? new $util.LongBits(message.generation.low >>> 0, message.generation.high >>> 0).toNumber() : message.generation;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                            if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                                object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.scaling != null && message.hasOwnProperty("scaling"))
                                object.scaling = $root.google.cloud.run.v2.RevisionScaling.toObject(message.scaling, options);
                            if (message.vpcAccess != null && message.hasOwnProperty("vpcAccess"))
                                object.vpcAccess = $root.google.cloud.run.v2.VpcAccess.toObject(message.vpcAccess, options);
                            if (message.timeout != null && message.hasOwnProperty("timeout"))
                                object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            if (message.containers && message.containers.length) {
                                object.containers = [];
                                for (var j = 0; j < message.containers.length; ++j)
                                    object.containers[j] = $root.google.cloud.run.v2.Container.toObject(message.containers[j], options);
                            }
                            if (message.volumes && message.volumes.length) {
                                object.volumes = [];
                                for (var j = 0; j < message.volumes.length; ++j)
                                    object.volumes[j] = $root.google.cloud.run.v2.Volume.toObject(message.volumes[j], options);
                            }
                            if (message.executionEnvironment != null && message.hasOwnProperty("executionEnvironment"))
                                object.executionEnvironment = options.enums === String ? $root.google.cloud.run.v2.ExecutionEnvironment[message.executionEnvironment] === undefined ? message.executionEnvironment : $root.google.cloud.run.v2.ExecutionEnvironment[message.executionEnvironment] : message.executionEnvironment;
                            if (message.encryptionKey != null && message.hasOwnProperty("encryptionKey"))
                                object.encryptionKey = message.encryptionKey;
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                object.reconciling = message.reconciling;
                            if (message.conditions && message.conditions.length) {
                                object.conditions = [];
                                for (var j = 0; j < message.conditions.length; ++j)
                                    object.conditions[j] = $root.google.cloud.run.v2.Condition.toObject(message.conditions[j], options);
                            }
                            if (message.observedGeneration != null && message.hasOwnProperty("observedGeneration"))
                                if (typeof message.observedGeneration === "number")
                                    object.observedGeneration = options.longs === String ? String(message.observedGeneration) : message.observedGeneration;
                                else
                                    object.observedGeneration = options.longs === String ? $util.Long.prototype.toString.call(message.observedGeneration) : options.longs === Number ? new $util.LongBits(message.observedGeneration.low >>> 0, message.observedGeneration.high >>> 0).toNumber() : message.observedGeneration;
                            if (message.logUri != null && message.hasOwnProperty("logUri"))
                                object.logUri = message.logUri;
                            if (message.maxInstanceRequestConcurrency != null && message.hasOwnProperty("maxInstanceRequestConcurrency"))
                                object.maxInstanceRequestConcurrency = message.maxInstanceRequestConcurrency;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this Revision to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.Revision
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Revision.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Revision
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.Revision
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Revision.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.Revision";
                        };
    
                        return Revision;
                    })();
    
                    v2.RevisionTemplate = (function() {
    
                        /**
                         * Properties of a RevisionTemplate.
                         * @memberof google.cloud.run.v2
                         * @interface IRevisionTemplate
                         * @property {string|null} [revision] RevisionTemplate revision
                         * @property {Object.<string,string>|null} [labels] RevisionTemplate labels
                         * @property {Object.<string,string>|null} [annotations] RevisionTemplate annotations
                         * @property {google.cloud.run.v2.IRevisionScaling|null} [scaling] RevisionTemplate scaling
                         * @property {google.cloud.run.v2.IVpcAccess|null} [vpcAccess] RevisionTemplate vpcAccess
                         * @property {google.protobuf.IDuration|null} [timeout] RevisionTemplate timeout
                         * @property {string|null} [serviceAccount] RevisionTemplate serviceAccount
                         * @property {Array.<google.cloud.run.v2.IContainer>|null} [containers] RevisionTemplate containers
                         * @property {Array.<google.cloud.run.v2.IVolume>|null} [volumes] RevisionTemplate volumes
                         * @property {google.cloud.run.v2.ExecutionEnvironment|null} [executionEnvironment] RevisionTemplate executionEnvironment
                         * @property {string|null} [encryptionKey] RevisionTemplate encryptionKey
                         * @property {number|null} [maxInstanceRequestConcurrency] RevisionTemplate maxInstanceRequestConcurrency
                         */
    
                        /**
                         * Constructs a new RevisionTemplate.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a RevisionTemplate.
                         * @implements IRevisionTemplate
                         * @constructor
                         * @param {google.cloud.run.v2.IRevisionTemplate=} [properties] Properties to set
                         */
                        function RevisionTemplate(properties) {
                            this.labels = {};
                            this.annotations = {};
                            this.containers = [];
                            this.volumes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RevisionTemplate revision.
                         * @member {string} revision
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @instance
                         */
                        RevisionTemplate.prototype.revision = "";
    
                        /**
                         * RevisionTemplate labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @instance
                         */
                        RevisionTemplate.prototype.labels = $util.emptyObject;
    
                        /**
                         * RevisionTemplate annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @instance
                         */
                        RevisionTemplate.prototype.annotations = $util.emptyObject;
    
                        /**
                         * RevisionTemplate scaling.
                         * @member {google.cloud.run.v2.IRevisionScaling|null|undefined} scaling
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @instance
                         */
                        RevisionTemplate.prototype.scaling = null;
    
                        /**
                         * RevisionTemplate vpcAccess.
                         * @member {google.cloud.run.v2.IVpcAccess|null|undefined} vpcAccess
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @instance
                         */
                        RevisionTemplate.prototype.vpcAccess = null;
    
                        /**
                         * RevisionTemplate timeout.
                         * @member {google.protobuf.IDuration|null|undefined} timeout
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @instance
                         */
                        RevisionTemplate.prototype.timeout = null;
    
                        /**
                         * RevisionTemplate serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @instance
                         */
                        RevisionTemplate.prototype.serviceAccount = "";
    
                        /**
                         * RevisionTemplate containers.
                         * @member {Array.<google.cloud.run.v2.IContainer>} containers
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @instance
                         */
                        RevisionTemplate.prototype.containers = $util.emptyArray;
    
                        /**
                         * RevisionTemplate volumes.
                         * @member {Array.<google.cloud.run.v2.IVolume>} volumes
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @instance
                         */
                        RevisionTemplate.prototype.volumes = $util.emptyArray;
    
                        /**
                         * RevisionTemplate executionEnvironment.
                         * @member {google.cloud.run.v2.ExecutionEnvironment} executionEnvironment
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @instance
                         */
                        RevisionTemplate.prototype.executionEnvironment = 0;
    
                        /**
                         * RevisionTemplate encryptionKey.
                         * @member {string} encryptionKey
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @instance
                         */
                        RevisionTemplate.prototype.encryptionKey = "";
    
                        /**
                         * RevisionTemplate maxInstanceRequestConcurrency.
                         * @member {number} maxInstanceRequestConcurrency
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @instance
                         */
                        RevisionTemplate.prototype.maxInstanceRequestConcurrency = 0;
    
                        /**
                         * Creates a new RevisionTemplate instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @static
                         * @param {google.cloud.run.v2.IRevisionTemplate=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.RevisionTemplate} RevisionTemplate instance
                         */
                        RevisionTemplate.create = function create(properties) {
                            return new RevisionTemplate(properties);
                        };
    
                        /**
                         * Encodes the specified RevisionTemplate message. Does not implicitly {@link google.cloud.run.v2.RevisionTemplate.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @static
                         * @param {google.cloud.run.v2.IRevisionTemplate} message RevisionTemplate message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RevisionTemplate.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.revision);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.scaling != null && Object.hasOwnProperty.call(message, "scaling"))
                                $root.google.cloud.run.v2.RevisionScaling.encode(message.scaling, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.vpcAccess != null && Object.hasOwnProperty.call(message, "vpcAccess"))
                                $root.google.cloud.run.v2.VpcAccess.encode(message.vpcAccess, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                                $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.serviceAccount);
                            if (message.containers != null && message.containers.length)
                                for (var i = 0; i < message.containers.length; ++i)
                                    $root.google.cloud.run.v2.Container.encode(message.containers[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.volumes != null && message.volumes.length)
                                for (var i = 0; i < message.volumes.length; ++i)
                                    $root.google.cloud.run.v2.Volume.encode(message.volumes[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.executionEnvironment != null && Object.hasOwnProperty.call(message, "executionEnvironment"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.executionEnvironment);
                            if (message.encryptionKey != null && Object.hasOwnProperty.call(message, "encryptionKey"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.encryptionKey);
                            if (message.maxInstanceRequestConcurrency != null && Object.hasOwnProperty.call(message, "maxInstanceRequestConcurrency"))
                                writer.uint32(/* id 15, wireType 0 =*/120).int32(message.maxInstanceRequestConcurrency);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RevisionTemplate message, length delimited. Does not implicitly {@link google.cloud.run.v2.RevisionTemplate.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @static
                         * @param {google.cloud.run.v2.IRevisionTemplate} message RevisionTemplate message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RevisionTemplate.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RevisionTemplate message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.RevisionTemplate} RevisionTemplate
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RevisionTemplate.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.RevisionTemplate(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.revision = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 3: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 4: {
                                        message.scaling = $root.google.cloud.run.v2.RevisionScaling.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.vpcAccess = $root.google.cloud.run.v2.VpcAccess.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                case 10: {
                                        if (!(message.containers && message.containers.length))
                                            message.containers = [];
                                        message.containers.push($root.google.cloud.run.v2.Container.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 11: {
                                        if (!(message.volumes && message.volumes.length))
                                            message.volumes = [];
                                        message.volumes.push($root.google.cloud.run.v2.Volume.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 13: {
                                        message.executionEnvironment = reader.int32();
                                        break;
                                    }
                                case 14: {
                                        message.encryptionKey = reader.string();
                                        break;
                                    }
                                case 15: {
                                        message.maxInstanceRequestConcurrency = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RevisionTemplate message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.RevisionTemplate} RevisionTemplate
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RevisionTemplate.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RevisionTemplate message.
                         * @function verify
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RevisionTemplate.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                if (!$util.isString(message.revision))
                                    return "revision: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.scaling != null && message.hasOwnProperty("scaling")) {
                                var error = $root.google.cloud.run.v2.RevisionScaling.verify(message.scaling);
                                if (error)
                                    return "scaling." + error;
                            }
                            if (message.vpcAccess != null && message.hasOwnProperty("vpcAccess")) {
                                var error = $root.google.cloud.run.v2.VpcAccess.verify(message.vpcAccess);
                                if (error)
                                    return "vpcAccess." + error;
                            }
                            if (message.timeout != null && message.hasOwnProperty("timeout")) {
                                var error = $root.google.protobuf.Duration.verify(message.timeout);
                                if (error)
                                    return "timeout." + error;
                            }
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            if (message.containers != null && message.hasOwnProperty("containers")) {
                                if (!Array.isArray(message.containers))
                                    return "containers: array expected";
                                for (var i = 0; i < message.containers.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Container.verify(message.containers[i]);
                                    if (error)
                                        return "containers." + error;
                                }
                            }
                            if (message.volumes != null && message.hasOwnProperty("volumes")) {
                                if (!Array.isArray(message.volumes))
                                    return "volumes: array expected";
                                for (var i = 0; i < message.volumes.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Volume.verify(message.volumes[i]);
                                    if (error)
                                        return "volumes." + error;
                                }
                            }
                            if (message.executionEnvironment != null && message.hasOwnProperty("executionEnvironment"))
                                switch (message.executionEnvironment) {
                                default:
                                    return "executionEnvironment: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.encryptionKey != null && message.hasOwnProperty("encryptionKey"))
                                if (!$util.isString(message.encryptionKey))
                                    return "encryptionKey: string expected";
                            if (message.maxInstanceRequestConcurrency != null && message.hasOwnProperty("maxInstanceRequestConcurrency"))
                                if (!$util.isInteger(message.maxInstanceRequestConcurrency))
                                    return "maxInstanceRequestConcurrency: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a RevisionTemplate message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.RevisionTemplate} RevisionTemplate
                         */
                        RevisionTemplate.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.RevisionTemplate)
                                return object;
                            var message = new $root.google.cloud.run.v2.RevisionTemplate();
                            if (object.revision != null)
                                message.revision = String(object.revision);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.run.v2.RevisionTemplate.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.cloud.run.v2.RevisionTemplate.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            if (object.scaling != null) {
                                if (typeof object.scaling !== "object")
                                    throw TypeError(".google.cloud.run.v2.RevisionTemplate.scaling: object expected");
                                message.scaling = $root.google.cloud.run.v2.RevisionScaling.fromObject(object.scaling);
                            }
                            if (object.vpcAccess != null) {
                                if (typeof object.vpcAccess !== "object")
                                    throw TypeError(".google.cloud.run.v2.RevisionTemplate.vpcAccess: object expected");
                                message.vpcAccess = $root.google.cloud.run.v2.VpcAccess.fromObject(object.vpcAccess);
                            }
                            if (object.timeout != null) {
                                if (typeof object.timeout !== "object")
                                    throw TypeError(".google.cloud.run.v2.RevisionTemplate.timeout: object expected");
                                message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                            }
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            if (object.containers) {
                                if (!Array.isArray(object.containers))
                                    throw TypeError(".google.cloud.run.v2.RevisionTemplate.containers: array expected");
                                message.containers = [];
                                for (var i = 0; i < object.containers.length; ++i) {
                                    if (typeof object.containers[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.RevisionTemplate.containers: object expected");
                                    message.containers[i] = $root.google.cloud.run.v2.Container.fromObject(object.containers[i]);
                                }
                            }
                            if (object.volumes) {
                                if (!Array.isArray(object.volumes))
                                    throw TypeError(".google.cloud.run.v2.RevisionTemplate.volumes: array expected");
                                message.volumes = [];
                                for (var i = 0; i < object.volumes.length; ++i) {
                                    if (typeof object.volumes[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.RevisionTemplate.volumes: object expected");
                                    message.volumes[i] = $root.google.cloud.run.v2.Volume.fromObject(object.volumes[i]);
                                }
                            }
                            switch (object.executionEnvironment) {
                            default:
                                if (typeof object.executionEnvironment === "number") {
                                    message.executionEnvironment = object.executionEnvironment;
                                    break;
                                }
                                break;
                            case "EXECUTION_ENVIRONMENT_UNSPECIFIED":
                            case 0:
                                message.executionEnvironment = 0;
                                break;
                            case "EXECUTION_ENVIRONMENT_GEN1":
                            case 1:
                                message.executionEnvironment = 1;
                                break;
                            case "EXECUTION_ENVIRONMENT_GEN2":
                            case 2:
                                message.executionEnvironment = 2;
                                break;
                            }
                            if (object.encryptionKey != null)
                                message.encryptionKey = String(object.encryptionKey);
                            if (object.maxInstanceRequestConcurrency != null)
                                message.maxInstanceRequestConcurrency = object.maxInstanceRequestConcurrency | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RevisionTemplate message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @static
                         * @param {google.cloud.run.v2.RevisionTemplate} message RevisionTemplate
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RevisionTemplate.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.containers = [];
                                object.volumes = [];
                            }
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.annotations = {};
                            }
                            if (options.defaults) {
                                object.revision = "";
                                object.scaling = null;
                                object.vpcAccess = null;
                                object.timeout = null;
                                object.serviceAccount = "";
                                object.executionEnvironment = options.enums === String ? "EXECUTION_ENVIRONMENT_UNSPECIFIED" : 0;
                                object.encryptionKey = "";
                                object.maxInstanceRequestConcurrency = 0;
                            }
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                object.revision = message.revision;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.scaling != null && message.hasOwnProperty("scaling"))
                                object.scaling = $root.google.cloud.run.v2.RevisionScaling.toObject(message.scaling, options);
                            if (message.vpcAccess != null && message.hasOwnProperty("vpcAccess"))
                                object.vpcAccess = $root.google.cloud.run.v2.VpcAccess.toObject(message.vpcAccess, options);
                            if (message.timeout != null && message.hasOwnProperty("timeout"))
                                object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            if (message.containers && message.containers.length) {
                                object.containers = [];
                                for (var j = 0; j < message.containers.length; ++j)
                                    object.containers[j] = $root.google.cloud.run.v2.Container.toObject(message.containers[j], options);
                            }
                            if (message.volumes && message.volumes.length) {
                                object.volumes = [];
                                for (var j = 0; j < message.volumes.length; ++j)
                                    object.volumes[j] = $root.google.cloud.run.v2.Volume.toObject(message.volumes[j], options);
                            }
                            if (message.executionEnvironment != null && message.hasOwnProperty("executionEnvironment"))
                                object.executionEnvironment = options.enums === String ? $root.google.cloud.run.v2.ExecutionEnvironment[message.executionEnvironment] === undefined ? message.executionEnvironment : $root.google.cloud.run.v2.ExecutionEnvironment[message.executionEnvironment] : message.executionEnvironment;
                            if (message.encryptionKey != null && message.hasOwnProperty("encryptionKey"))
                                object.encryptionKey = message.encryptionKey;
                            if (message.maxInstanceRequestConcurrency != null && message.hasOwnProperty("maxInstanceRequestConcurrency"))
                                object.maxInstanceRequestConcurrency = message.maxInstanceRequestConcurrency;
                            return object;
                        };
    
                        /**
                         * Converts this RevisionTemplate to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RevisionTemplate.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RevisionTemplate
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.RevisionTemplate
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RevisionTemplate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.RevisionTemplate";
                        };
    
                        return RevisionTemplate;
                    })();
    
                    v2.Services = (function() {
    
                        /**
                         * Constructs a new Services service.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a Services
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function Services(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (Services.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Services;
    
                        /**
                         * Creates new Services service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.run.v2.Services
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {Services} RPC service. Useful where requests and/or responses are streamed.
                         */
                        Services.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Services|createService}.
                         * @memberof google.cloud.run.v2.Services
                         * @typedef CreateServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateService.
                         * @function createService
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.cloud.run.v2.ICreateServiceRequest} request CreateServiceRequest message or plain object
                         * @param {google.cloud.run.v2.Services.CreateServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Services.prototype.createService = function createService(request, callback) {
                            return this.rpcCall(createService, $root.google.cloud.run.v2.CreateServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateService" });
    
                        /**
                         * Calls CreateService.
                         * @function createService
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.cloud.run.v2.ICreateServiceRequest} request CreateServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Services|getService}.
                         * @memberof google.cloud.run.v2.Services
                         * @typedef GetServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.run.v2.Service} [response] Service
                         */
    
                        /**
                         * Calls GetService.
                         * @function getService
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.cloud.run.v2.IGetServiceRequest} request GetServiceRequest message or plain object
                         * @param {google.cloud.run.v2.Services.GetServiceCallback} callback Node-style callback called with the error, if any, and Service
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Services.prototype.getService = function getService(request, callback) {
                            return this.rpcCall(getService, $root.google.cloud.run.v2.GetServiceRequest, $root.google.cloud.run.v2.Service, request, callback);
                        }, "name", { value: "GetService" });
    
                        /**
                         * Calls GetService.
                         * @function getService
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.cloud.run.v2.IGetServiceRequest} request GetServiceRequest message or plain object
                         * @returns {Promise<google.cloud.run.v2.Service>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Services|listServices}.
                         * @memberof google.cloud.run.v2.Services
                         * @typedef ListServicesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.run.v2.ListServicesResponse} [response] ListServicesResponse
                         */
    
                        /**
                         * Calls ListServices.
                         * @function listServices
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.cloud.run.v2.IListServicesRequest} request ListServicesRequest message or plain object
                         * @param {google.cloud.run.v2.Services.ListServicesCallback} callback Node-style callback called with the error, if any, and ListServicesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Services.prototype.listServices = function listServices(request, callback) {
                            return this.rpcCall(listServices, $root.google.cloud.run.v2.ListServicesRequest, $root.google.cloud.run.v2.ListServicesResponse, request, callback);
                        }, "name", { value: "ListServices" });
    
                        /**
                         * Calls ListServices.
                         * @function listServices
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.cloud.run.v2.IListServicesRequest} request ListServicesRequest message or plain object
                         * @returns {Promise<google.cloud.run.v2.ListServicesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Services|updateService}.
                         * @memberof google.cloud.run.v2.Services
                         * @typedef UpdateServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateService.
                         * @function updateService
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.cloud.run.v2.IUpdateServiceRequest} request UpdateServiceRequest message or plain object
                         * @param {google.cloud.run.v2.Services.UpdateServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Services.prototype.updateService = function updateService(request, callback) {
                            return this.rpcCall(updateService, $root.google.cloud.run.v2.UpdateServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateService" });
    
                        /**
                         * Calls UpdateService.
                         * @function updateService
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.cloud.run.v2.IUpdateServiceRequest} request UpdateServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Services|deleteService}.
                         * @memberof google.cloud.run.v2.Services
                         * @typedef DeleteServiceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteService.
                         * @function deleteService
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.cloud.run.v2.IDeleteServiceRequest} request DeleteServiceRequest message or plain object
                         * @param {google.cloud.run.v2.Services.DeleteServiceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Services.prototype.deleteService = function deleteService(request, callback) {
                            return this.rpcCall(deleteService, $root.google.cloud.run.v2.DeleteServiceRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteService" });
    
                        /**
                         * Calls DeleteService.
                         * @function deleteService
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.cloud.run.v2.IDeleteServiceRequest} request DeleteServiceRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Services|getIamPolicy}.
                         * @memberof google.cloud.run.v2.Services
                         * @typedef GetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @param {google.cloud.run.v2.Services.GetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Services.prototype.getIamPolicy = function getIamPolicy(request, callback) {
                            return this.rpcCall(getIamPolicy, $root.google.iam.v1.GetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "GetIamPolicy" });
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Services|setIamPolicy}.
                         * @memberof google.cloud.run.v2.Services
                         * @typedef SetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @param {google.cloud.run.v2.Services.SetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Services.prototype.setIamPolicy = function setIamPolicy(request, callback) {
                            return this.rpcCall(setIamPolicy, $root.google.iam.v1.SetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "SetIamPolicy" });
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Services|testIamPermissions}.
                         * @memberof google.cloud.run.v2.Services
                         * @typedef TestIamPermissionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.TestIamPermissionsResponse} [response] TestIamPermissionsResponse
                         */
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @param {google.cloud.run.v2.Services.TestIamPermissionsCallback} callback Node-style callback called with the error, if any, and TestIamPermissionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Services.prototype.testIamPermissions = function testIamPermissions(request, callback) {
                            return this.rpcCall(testIamPermissions, $root.google.iam.v1.TestIamPermissionsRequest, $root.google.iam.v1.TestIamPermissionsResponse, request, callback);
                        }, "name", { value: "TestIamPermissions" });
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.run.v2.Services
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @returns {Promise<google.iam.v1.TestIamPermissionsResponse>} Promise
                         * @variation 2
                         */
    
                        return Services;
                    })();
    
                    v2.CreateServiceRequest = (function() {
    
                        /**
                         * Properties of a CreateServiceRequest.
                         * @memberof google.cloud.run.v2
                         * @interface ICreateServiceRequest
                         * @property {string|null} [parent] CreateServiceRequest parent
                         * @property {google.cloud.run.v2.IService|null} [service] CreateServiceRequest service
                         * @property {string|null} [serviceId] CreateServiceRequest serviceId
                         * @property {boolean|null} [validateOnly] CreateServiceRequest validateOnly
                         */
    
                        /**
                         * Constructs a new CreateServiceRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a CreateServiceRequest.
                         * @implements ICreateServiceRequest
                         * @constructor
                         * @param {google.cloud.run.v2.ICreateServiceRequest=} [properties] Properties to set
                         */
                        function CreateServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateServiceRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.run.v2.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.parent = "";
    
                        /**
                         * CreateServiceRequest service.
                         * @member {google.cloud.run.v2.IService|null|undefined} service
                         * @memberof google.cloud.run.v2.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.service = null;
    
                        /**
                         * CreateServiceRequest serviceId.
                         * @member {string} serviceId
                         * @memberof google.cloud.run.v2.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.serviceId = "";
    
                        /**
                         * CreateServiceRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.run.v2.CreateServiceRequest
                         * @instance
                         */
                        CreateServiceRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new CreateServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.CreateServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.ICreateServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.CreateServiceRequest} CreateServiceRequest instance
                         */
                        CreateServiceRequest.create = function create(properties) {
                            return new CreateServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateServiceRequest message. Does not implicitly {@link google.cloud.run.v2.CreateServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.CreateServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.ICreateServiceRequest} message CreateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                $root.google.cloud.run.v2.Service.encode(message.service, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.serviceId != null && Object.hasOwnProperty.call(message, "serviceId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.serviceId);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateServiceRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.CreateServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.CreateServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.ICreateServiceRequest} message CreateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.CreateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.CreateServiceRequest} CreateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.CreateServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.service = $root.google.cloud.run.v2.Service.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.serviceId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.CreateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.CreateServiceRequest} CreateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.CreateServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.service != null && message.hasOwnProperty("service")) {
                                var error = $root.google.cloud.run.v2.Service.verify(message.service);
                                if (error)
                                    return "service." + error;
                            }
                            if (message.serviceId != null && message.hasOwnProperty("serviceId"))
                                if (!$util.isString(message.serviceId))
                                    return "serviceId: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.CreateServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.CreateServiceRequest} CreateServiceRequest
                         */
                        CreateServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.CreateServiceRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.CreateServiceRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.service != null) {
                                if (typeof object.service !== "object")
                                    throw TypeError(".google.cloud.run.v2.CreateServiceRequest.service: object expected");
                                message.service = $root.google.cloud.run.v2.Service.fromObject(object.service);
                            }
                            if (object.serviceId != null)
                                message.serviceId = String(object.serviceId);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.CreateServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.CreateServiceRequest} message CreateServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.service = null;
                                object.serviceId = "";
                                object.validateOnly = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = $root.google.cloud.run.v2.Service.toObject(message.service, options);
                            if (message.serviceId != null && message.hasOwnProperty("serviceId"))
                                object.serviceId = message.serviceId;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this CreateServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.CreateServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.CreateServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.CreateServiceRequest";
                        };
    
                        return CreateServiceRequest;
                    })();
    
                    v2.UpdateServiceRequest = (function() {
    
                        /**
                         * Properties of an UpdateServiceRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IUpdateServiceRequest
                         * @property {google.cloud.run.v2.IService|null} [service] UpdateServiceRequest service
                         * @property {boolean|null} [validateOnly] UpdateServiceRequest validateOnly
                         * @property {boolean|null} [allowMissing] UpdateServiceRequest allowMissing
                         */
    
                        /**
                         * Constructs a new UpdateServiceRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents an UpdateServiceRequest.
                         * @implements IUpdateServiceRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IUpdateServiceRequest=} [properties] Properties to set
                         */
                        function UpdateServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateServiceRequest service.
                         * @member {google.cloud.run.v2.IService|null|undefined} service
                         * @memberof google.cloud.run.v2.UpdateServiceRequest
                         * @instance
                         */
                        UpdateServiceRequest.prototype.service = null;
    
                        /**
                         * UpdateServiceRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.run.v2.UpdateServiceRequest
                         * @instance
                         */
                        UpdateServiceRequest.prototype.validateOnly = false;
    
                        /**
                         * UpdateServiceRequest allowMissing.
                         * @member {boolean} allowMissing
                         * @memberof google.cloud.run.v2.UpdateServiceRequest
                         * @instance
                         */
                        UpdateServiceRequest.prototype.allowMissing = false;
    
                        /**
                         * Creates a new UpdateServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.IUpdateServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.UpdateServiceRequest} UpdateServiceRequest instance
                         */
                        UpdateServiceRequest.create = function create(properties) {
                            return new UpdateServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateServiceRequest message. Does not implicitly {@link google.cloud.run.v2.UpdateServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.IUpdateServiceRequest} message UpdateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                $root.google.cloud.run.v2.Service.encode(message.service, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.validateOnly);
                            if (message.allowMissing != null && Object.hasOwnProperty.call(message, "allowMissing"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.allowMissing);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateServiceRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.UpdateServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.IUpdateServiceRequest} message UpdateServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.UpdateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.UpdateServiceRequest} UpdateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.UpdateServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = $root.google.cloud.run.v2.Service.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.allowMissing = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.UpdateServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.UpdateServiceRequest} UpdateServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.UpdateServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service")) {
                                var error = $root.google.cloud.run.v2.Service.verify(message.service);
                                if (error)
                                    return "service." + error;
                            }
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                if (typeof message.allowMissing !== "boolean")
                                    return "allowMissing: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.UpdateServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.UpdateServiceRequest} UpdateServiceRequest
                         */
                        UpdateServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.UpdateServiceRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.UpdateServiceRequest();
                            if (object.service != null) {
                                if (typeof object.service !== "object")
                                    throw TypeError(".google.cloud.run.v2.UpdateServiceRequest.service: object expected");
                                message.service = $root.google.cloud.run.v2.Service.fromObject(object.service);
                            }
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.allowMissing != null)
                                message.allowMissing = Boolean(object.allowMissing);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.UpdateServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.UpdateServiceRequest} message UpdateServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.service = null;
                                object.validateOnly = false;
                                object.allowMissing = false;
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = $root.google.cloud.run.v2.Service.toObject(message.service, options);
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                object.allowMissing = message.allowMissing;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.UpdateServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.UpdateServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.UpdateServiceRequest";
                        };
    
                        return UpdateServiceRequest;
                    })();
    
                    v2.ListServicesRequest = (function() {
    
                        /**
                         * Properties of a ListServicesRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IListServicesRequest
                         * @property {string|null} [parent] ListServicesRequest parent
                         * @property {number|null} [pageSize] ListServicesRequest pageSize
                         * @property {string|null} [pageToken] ListServicesRequest pageToken
                         * @property {boolean|null} [showDeleted] ListServicesRequest showDeleted
                         */
    
                        /**
                         * Constructs a new ListServicesRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a ListServicesRequest.
                         * @implements IListServicesRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IListServicesRequest=} [properties] Properties to set
                         */
                        function ListServicesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListServicesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.run.v2.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.parent = "";
    
                        /**
                         * ListServicesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.run.v2.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListServicesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.run.v2.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.pageToken = "";
    
                        /**
                         * ListServicesRequest showDeleted.
                         * @member {boolean} showDeleted
                         * @memberof google.cloud.run.v2.ListServicesRequest
                         * @instance
                         */
                        ListServicesRequest.prototype.showDeleted = false;
    
                        /**
                         * Creates a new ListServicesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.ListServicesRequest
                         * @static
                         * @param {google.cloud.run.v2.IListServicesRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.ListServicesRequest} ListServicesRequest instance
                         */
                        ListServicesRequest.create = function create(properties) {
                            return new ListServicesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListServicesRequest message. Does not implicitly {@link google.cloud.run.v2.ListServicesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.ListServicesRequest
                         * @static
                         * @param {google.cloud.run.v2.IListServicesRequest} message ListServicesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.showDeleted != null && Object.hasOwnProperty.call(message, "showDeleted"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.showDeleted);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListServicesRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.ListServicesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.ListServicesRequest
                         * @static
                         * @param {google.cloud.run.v2.IListServicesRequest} message ListServicesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListServicesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.ListServicesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.ListServicesRequest} ListServicesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.ListServicesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.showDeleted = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListServicesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.ListServicesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.ListServicesRequest} ListServicesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListServicesRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.ListServicesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListServicesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                if (typeof message.showDeleted !== "boolean")
                                    return "showDeleted: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListServicesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.ListServicesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.ListServicesRequest} ListServicesRequest
                         */
                        ListServicesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.ListServicesRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.ListServicesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.showDeleted != null)
                                message.showDeleted = Boolean(object.showDeleted);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListServicesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.ListServicesRequest
                         * @static
                         * @param {google.cloud.run.v2.ListServicesRequest} message ListServicesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListServicesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.showDeleted = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                object.showDeleted = message.showDeleted;
                            return object;
                        };
    
                        /**
                         * Converts this ListServicesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.ListServicesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListServicesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListServicesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.ListServicesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListServicesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.ListServicesRequest";
                        };
    
                        return ListServicesRequest;
                    })();
    
                    v2.ListServicesResponse = (function() {
    
                        /**
                         * Properties of a ListServicesResponse.
                         * @memberof google.cloud.run.v2
                         * @interface IListServicesResponse
                         * @property {Array.<google.cloud.run.v2.IService>|null} [services] ListServicesResponse services
                         * @property {string|null} [nextPageToken] ListServicesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListServicesResponse.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a ListServicesResponse.
                         * @implements IListServicesResponse
                         * @constructor
                         * @param {google.cloud.run.v2.IListServicesResponse=} [properties] Properties to set
                         */
                        function ListServicesResponse(properties) {
                            this.services = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListServicesResponse services.
                         * @member {Array.<google.cloud.run.v2.IService>} services
                         * @memberof google.cloud.run.v2.ListServicesResponse
                         * @instance
                         */
                        ListServicesResponse.prototype.services = $util.emptyArray;
    
                        /**
                         * ListServicesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.run.v2.ListServicesResponse
                         * @instance
                         */
                        ListServicesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListServicesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.ListServicesResponse
                         * @static
                         * @param {google.cloud.run.v2.IListServicesResponse=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.ListServicesResponse} ListServicesResponse instance
                         */
                        ListServicesResponse.create = function create(properties) {
                            return new ListServicesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListServicesResponse message. Does not implicitly {@link google.cloud.run.v2.ListServicesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.ListServicesResponse
                         * @static
                         * @param {google.cloud.run.v2.IListServicesResponse} message ListServicesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.services != null && message.services.length)
                                for (var i = 0; i < message.services.length; ++i)
                                    $root.google.cloud.run.v2.Service.encode(message.services[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListServicesResponse message, length delimited. Does not implicitly {@link google.cloud.run.v2.ListServicesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.ListServicesResponse
                         * @static
                         * @param {google.cloud.run.v2.IListServicesResponse} message ListServicesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListServicesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListServicesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.ListServicesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.ListServicesResponse} ListServicesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.ListServicesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.services && message.services.length))
                                            message.services = [];
                                        message.services.push($root.google.cloud.run.v2.Service.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListServicesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.ListServicesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.ListServicesResponse} ListServicesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListServicesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListServicesResponse message.
                         * @function verify
                         * @memberof google.cloud.run.v2.ListServicesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListServicesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.services != null && message.hasOwnProperty("services")) {
                                if (!Array.isArray(message.services))
                                    return "services: array expected";
                                for (var i = 0; i < message.services.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Service.verify(message.services[i]);
                                    if (error)
                                        return "services." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListServicesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.ListServicesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.ListServicesResponse} ListServicesResponse
                         */
                        ListServicesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.ListServicesResponse)
                                return object;
                            var message = new $root.google.cloud.run.v2.ListServicesResponse();
                            if (object.services) {
                                if (!Array.isArray(object.services))
                                    throw TypeError(".google.cloud.run.v2.ListServicesResponse.services: array expected");
                                message.services = [];
                                for (var i = 0; i < object.services.length; ++i) {
                                    if (typeof object.services[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.ListServicesResponse.services: object expected");
                                    message.services[i] = $root.google.cloud.run.v2.Service.fromObject(object.services[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListServicesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.ListServicesResponse
                         * @static
                         * @param {google.cloud.run.v2.ListServicesResponse} message ListServicesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListServicesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.services = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.services && message.services.length) {
                                object.services = [];
                                for (var j = 0; j < message.services.length; ++j)
                                    object.services[j] = $root.google.cloud.run.v2.Service.toObject(message.services[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListServicesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.ListServicesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListServicesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListServicesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.ListServicesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListServicesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.ListServicesResponse";
                        };
    
                        return ListServicesResponse;
                    })();
    
                    v2.GetServiceRequest = (function() {
    
                        /**
                         * Properties of a GetServiceRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IGetServiceRequest
                         * @property {string|null} [name] GetServiceRequest name
                         */
    
                        /**
                         * Constructs a new GetServiceRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a GetServiceRequest.
                         * @implements IGetServiceRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IGetServiceRequest=} [properties] Properties to set
                         */
                        function GetServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetServiceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.GetServiceRequest
                         * @instance
                         */
                        GetServiceRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.GetServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.IGetServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.GetServiceRequest} GetServiceRequest instance
                         */
                        GetServiceRequest.create = function create(properties) {
                            return new GetServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetServiceRequest message. Does not implicitly {@link google.cloud.run.v2.GetServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.GetServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.IGetServiceRequest} message GetServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetServiceRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.GetServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.GetServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.IGetServiceRequest} message GetServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.GetServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.GetServiceRequest} GetServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.GetServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.GetServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.GetServiceRequest} GetServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.GetServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.GetServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.GetServiceRequest} GetServiceRequest
                         */
                        GetServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.GetServiceRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.GetServiceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.GetServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.GetServiceRequest} message GetServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.GetServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.GetServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.GetServiceRequest";
                        };
    
                        return GetServiceRequest;
                    })();
    
                    v2.DeleteServiceRequest = (function() {
    
                        /**
                         * Properties of a DeleteServiceRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IDeleteServiceRequest
                         * @property {string|null} [name] DeleteServiceRequest name
                         * @property {boolean|null} [validateOnly] DeleteServiceRequest validateOnly
                         * @property {string|null} [etag] DeleteServiceRequest etag
                         */
    
                        /**
                         * Constructs a new DeleteServiceRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a DeleteServiceRequest.
                         * @implements IDeleteServiceRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IDeleteServiceRequest=} [properties] Properties to set
                         */
                        function DeleteServiceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteServiceRequest name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.DeleteServiceRequest
                         * @instance
                         */
                        DeleteServiceRequest.prototype.name = "";
    
                        /**
                         * DeleteServiceRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.run.v2.DeleteServiceRequest
                         * @instance
                         */
                        DeleteServiceRequest.prototype.validateOnly = false;
    
                        /**
                         * DeleteServiceRequest etag.
                         * @member {string} etag
                         * @memberof google.cloud.run.v2.DeleteServiceRequest
                         * @instance
                         */
                        DeleteServiceRequest.prototype.etag = "";
    
                        /**
                         * Creates a new DeleteServiceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.IDeleteServiceRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.DeleteServiceRequest} DeleteServiceRequest instance
                         */
                        DeleteServiceRequest.create = function create(properties) {
                            return new DeleteServiceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteServiceRequest message. Does not implicitly {@link google.cloud.run.v2.DeleteServiceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.IDeleteServiceRequest} message DeleteServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteServiceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.validateOnly);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteServiceRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.DeleteServiceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.IDeleteServiceRequest} message DeleteServiceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteServiceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteServiceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.DeleteServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.DeleteServiceRequest} DeleteServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteServiceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.DeleteServiceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteServiceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.DeleteServiceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.DeleteServiceRequest} DeleteServiceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteServiceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteServiceRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.DeleteServiceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteServiceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteServiceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.DeleteServiceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.DeleteServiceRequest} DeleteServiceRequest
                         */
                        DeleteServiceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.DeleteServiceRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.DeleteServiceRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteServiceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.DeleteServiceRequest
                         * @static
                         * @param {google.cloud.run.v2.DeleteServiceRequest} message DeleteServiceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteServiceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.validateOnly = false;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteServiceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.DeleteServiceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteServiceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteServiceRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.DeleteServiceRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteServiceRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.DeleteServiceRequest";
                        };
    
                        return DeleteServiceRequest;
                    })();
    
                    v2.Service = (function() {
    
                        /**
                         * Properties of a Service.
                         * @memberof google.cloud.run.v2
                         * @interface IService
                         * @property {string|null} [name] Service name
                         * @property {string|null} [description] Service description
                         * @property {string|null} [uid] Service uid
                         * @property {number|Long|null} [generation] Service generation
                         * @property {Object.<string,string>|null} [labels] Service labels
                         * @property {Object.<string,string>|null} [annotations] Service annotations
                         * @property {google.protobuf.ITimestamp|null} [createTime] Service createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Service updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] Service deleteTime
                         * @property {google.protobuf.ITimestamp|null} [expireTime] Service expireTime
                         * @property {string|null} [creator] Service creator
                         * @property {string|null} [lastModifier] Service lastModifier
                         * @property {string|null} [client] Service client
                         * @property {string|null} [clientVersion] Service clientVersion
                         * @property {google.cloud.run.v2.IngressTraffic|null} [ingress] Service ingress
                         * @property {google.api.LaunchStage|null} [launchStage] Service launchStage
                         * @property {google.cloud.run.v2.IBinaryAuthorization|null} [binaryAuthorization] Service binaryAuthorization
                         * @property {google.cloud.run.v2.IRevisionTemplate|null} [template] Service template
                         * @property {Array.<google.cloud.run.v2.ITrafficTarget>|null} [traffic] Service traffic
                         * @property {number|Long|null} [observedGeneration] Service observedGeneration
                         * @property {google.cloud.run.v2.ICondition|null} [terminalCondition] Service terminalCondition
                         * @property {Array.<google.cloud.run.v2.ICondition>|null} [conditions] Service conditions
                         * @property {string|null} [latestReadyRevision] Service latestReadyRevision
                         * @property {string|null} [latestCreatedRevision] Service latestCreatedRevision
                         * @property {Array.<google.cloud.run.v2.ITrafficTargetStatus>|null} [trafficStatuses] Service trafficStatuses
                         * @property {string|null} [uri] Service uri
                         * @property {boolean|null} [reconciling] Service reconciling
                         * @property {string|null} [etag] Service etag
                         */
    
                        /**
                         * Constructs a new Service.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a Service.
                         * @implements IService
                         * @constructor
                         * @param {google.cloud.run.v2.IService=} [properties] Properties to set
                         */
                        function Service(properties) {
                            this.labels = {};
                            this.annotations = {};
                            this.traffic = [];
                            this.conditions = [];
                            this.trafficStatuses = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Service name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.name = "";
    
                        /**
                         * Service description.
                         * @member {string} description
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.description = "";
    
                        /**
                         * Service uid.
                         * @member {string} uid
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.uid = "";
    
                        /**
                         * Service generation.
                         * @member {number|Long} generation
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.generation = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Service labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.labels = $util.emptyObject;
    
                        /**
                         * Service annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.annotations = $util.emptyObject;
    
                        /**
                         * Service createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.createTime = null;
    
                        /**
                         * Service updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.updateTime = null;
    
                        /**
                         * Service deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.deleteTime = null;
    
                        /**
                         * Service expireTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.expireTime = null;
    
                        /**
                         * Service creator.
                         * @member {string} creator
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.creator = "";
    
                        /**
                         * Service lastModifier.
                         * @member {string} lastModifier
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.lastModifier = "";
    
                        /**
                         * Service client.
                         * @member {string} client
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.client = "";
    
                        /**
                         * Service clientVersion.
                         * @member {string} clientVersion
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.clientVersion = "";
    
                        /**
                         * Service ingress.
                         * @member {google.cloud.run.v2.IngressTraffic} ingress
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.ingress = 0;
    
                        /**
                         * Service launchStage.
                         * @member {google.api.LaunchStage} launchStage
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.launchStage = 0;
    
                        /**
                         * Service binaryAuthorization.
                         * @member {google.cloud.run.v2.IBinaryAuthorization|null|undefined} binaryAuthorization
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.binaryAuthorization = null;
    
                        /**
                         * Service template.
                         * @member {google.cloud.run.v2.IRevisionTemplate|null|undefined} template
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.template = null;
    
                        /**
                         * Service traffic.
                         * @member {Array.<google.cloud.run.v2.ITrafficTarget>} traffic
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.traffic = $util.emptyArray;
    
                        /**
                         * Service observedGeneration.
                         * @member {number|Long} observedGeneration
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.observedGeneration = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Service terminalCondition.
                         * @member {google.cloud.run.v2.ICondition|null|undefined} terminalCondition
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.terminalCondition = null;
    
                        /**
                         * Service conditions.
                         * @member {Array.<google.cloud.run.v2.ICondition>} conditions
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.conditions = $util.emptyArray;
    
                        /**
                         * Service latestReadyRevision.
                         * @member {string} latestReadyRevision
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.latestReadyRevision = "";
    
                        /**
                         * Service latestCreatedRevision.
                         * @member {string} latestCreatedRevision
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.latestCreatedRevision = "";
    
                        /**
                         * Service trafficStatuses.
                         * @member {Array.<google.cloud.run.v2.ITrafficTargetStatus>} trafficStatuses
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.trafficStatuses = $util.emptyArray;
    
                        /**
                         * Service uri.
                         * @member {string} uri
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.uri = "";
    
                        /**
                         * Service reconciling.
                         * @member {boolean} reconciling
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.reconciling = false;
    
                        /**
                         * Service etag.
                         * @member {string} etag
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         */
                        Service.prototype.etag = "";
    
                        /**
                         * Creates a new Service instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.Service
                         * @static
                         * @param {google.cloud.run.v2.IService=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.Service} Service instance
                         */
                        Service.create = function create(properties) {
                            return new Service(properties);
                        };
    
                        /**
                         * Encodes the specified Service message. Does not implicitly {@link google.cloud.run.v2.Service.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.Service
                         * @static
                         * @param {google.cloud.run.v2.IService} message Service message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Service.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.uid);
                            if (message.generation != null && Object.hasOwnProperty.call(message, "generation"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.generation);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.creator != null && Object.hasOwnProperty.call(message, "creator"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.creator);
                            if (message.lastModifier != null && Object.hasOwnProperty.call(message, "lastModifier"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.lastModifier);
                            if (message.client != null && Object.hasOwnProperty.call(message, "client"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.client);
                            if (message.clientVersion != null && Object.hasOwnProperty.call(message, "clientVersion"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.clientVersion);
                            if (message.ingress != null && Object.hasOwnProperty.call(message, "ingress"))
                                writer.uint32(/* id 15, wireType 0 =*/120).int32(message.ingress);
                            if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                                writer.uint32(/* id 16, wireType 0 =*/128).int32(message.launchStage);
                            if (message.binaryAuthorization != null && Object.hasOwnProperty.call(message, "binaryAuthorization"))
                                $root.google.cloud.run.v2.BinaryAuthorization.encode(message.binaryAuthorization, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.template != null && Object.hasOwnProperty.call(message, "template"))
                                $root.google.cloud.run.v2.RevisionTemplate.encode(message.template, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                            if (message.traffic != null && message.traffic.length)
                                for (var i = 0; i < message.traffic.length; ++i)
                                    $root.google.cloud.run.v2.TrafficTarget.encode(message.traffic[i], writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.observedGeneration != null && Object.hasOwnProperty.call(message, "observedGeneration"))
                                writer.uint32(/* id 30, wireType 0 =*/240).int64(message.observedGeneration);
                            if (message.terminalCondition != null && Object.hasOwnProperty.call(message, "terminalCondition"))
                                $root.google.cloud.run.v2.Condition.encode(message.terminalCondition, writer.uint32(/* id 31, wireType 2 =*/250).fork()).ldelim();
                            if (message.conditions != null && message.conditions.length)
                                for (var i = 0; i < message.conditions.length; ++i)
                                    $root.google.cloud.run.v2.Condition.encode(message.conditions[i], writer.uint32(/* id 32, wireType 2 =*/258).fork()).ldelim();
                            if (message.latestReadyRevision != null && Object.hasOwnProperty.call(message, "latestReadyRevision"))
                                writer.uint32(/* id 33, wireType 2 =*/266).string(message.latestReadyRevision);
                            if (message.latestCreatedRevision != null && Object.hasOwnProperty.call(message, "latestCreatedRevision"))
                                writer.uint32(/* id 34, wireType 2 =*/274).string(message.latestCreatedRevision);
                            if (message.trafficStatuses != null && message.trafficStatuses.length)
                                for (var i = 0; i < message.trafficStatuses.length; ++i)
                                    $root.google.cloud.run.v2.TrafficTargetStatus.encode(message.trafficStatuses[i], writer.uint32(/* id 35, wireType 2 =*/282).fork()).ldelim();
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 36, wireType 2 =*/290).string(message.uri);
                            if (message.reconciling != null && Object.hasOwnProperty.call(message, "reconciling"))
                                writer.uint32(/* id 98, wireType 0 =*/784).bool(message.reconciling);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 99, wireType 2 =*/794).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Service message, length delimited. Does not implicitly {@link google.cloud.run.v2.Service.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.Service
                         * @static
                         * @param {google.cloud.run.v2.IService} message Service message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Service.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Service message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.Service
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.Service} Service
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Service.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.Service(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.generation = reader.int64();
                                        break;
                                    }
                                case 5: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 6: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 7: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.creator = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.lastModifier = reader.string();
                                        break;
                                    }
                                case 13: {
                                        message.client = reader.string();
                                        break;
                                    }
                                case 14: {
                                        message.clientVersion = reader.string();
                                        break;
                                    }
                                case 15: {
                                        message.ingress = reader.int32();
                                        break;
                                    }
                                case 16: {
                                        message.launchStage = reader.int32();
                                        break;
                                    }
                                case 17: {
                                        message.binaryAuthorization = $root.google.cloud.run.v2.BinaryAuthorization.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 18: {
                                        message.template = $root.google.cloud.run.v2.RevisionTemplate.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 19: {
                                        if (!(message.traffic && message.traffic.length))
                                            message.traffic = [];
                                        message.traffic.push($root.google.cloud.run.v2.TrafficTarget.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 30: {
                                        message.observedGeneration = reader.int64();
                                        break;
                                    }
                                case 31: {
                                        message.terminalCondition = $root.google.cloud.run.v2.Condition.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 32: {
                                        if (!(message.conditions && message.conditions.length))
                                            message.conditions = [];
                                        message.conditions.push($root.google.cloud.run.v2.Condition.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 33: {
                                        message.latestReadyRevision = reader.string();
                                        break;
                                    }
                                case 34: {
                                        message.latestCreatedRevision = reader.string();
                                        break;
                                    }
                                case 35: {
                                        if (!(message.trafficStatuses && message.trafficStatuses.length))
                                            message.trafficStatuses = [];
                                        message.trafficStatuses.push($root.google.cloud.run.v2.TrafficTargetStatus.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 36: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 98: {
                                        message.reconciling = reader.bool();
                                        break;
                                    }
                                case 99: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Service message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.Service
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.Service} Service
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Service.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Service message.
                         * @function verify
                         * @memberof google.cloud.run.v2.Service
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Service.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (!$util.isInteger(message.generation) && !(message.generation && $util.isInteger(message.generation.low) && $util.isInteger(message.generation.high)))
                                    return "generation: integer|Long expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                if (error)
                                    return "expireTime." + error;
                            }
                            if (message.creator != null && message.hasOwnProperty("creator"))
                                if (!$util.isString(message.creator))
                                    return "creator: string expected";
                            if (message.lastModifier != null && message.hasOwnProperty("lastModifier"))
                                if (!$util.isString(message.lastModifier))
                                    return "lastModifier: string expected";
                            if (message.client != null && message.hasOwnProperty("client"))
                                if (!$util.isString(message.client))
                                    return "client: string expected";
                            if (message.clientVersion != null && message.hasOwnProperty("clientVersion"))
                                if (!$util.isString(message.clientVersion))
                                    return "clientVersion: string expected";
                            if (message.ingress != null && message.hasOwnProperty("ingress"))
                                switch (message.ingress) {
                                default:
                                    return "ingress: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                                switch (message.launchStage) {
                                default:
                                    return "launchStage: enum value expected";
                                case 0:
                                case 6:
                                case 7:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.binaryAuthorization != null && message.hasOwnProperty("binaryAuthorization")) {
                                var error = $root.google.cloud.run.v2.BinaryAuthorization.verify(message.binaryAuthorization);
                                if (error)
                                    return "binaryAuthorization." + error;
                            }
                            if (message.template != null && message.hasOwnProperty("template")) {
                                var error = $root.google.cloud.run.v2.RevisionTemplate.verify(message.template);
                                if (error)
                                    return "template." + error;
                            }
                            if (message.traffic != null && message.hasOwnProperty("traffic")) {
                                if (!Array.isArray(message.traffic))
                                    return "traffic: array expected";
                                for (var i = 0; i < message.traffic.length; ++i) {
                                    var error = $root.google.cloud.run.v2.TrafficTarget.verify(message.traffic[i]);
                                    if (error)
                                        return "traffic." + error;
                                }
                            }
                            if (message.observedGeneration != null && message.hasOwnProperty("observedGeneration"))
                                if (!$util.isInteger(message.observedGeneration) && !(message.observedGeneration && $util.isInteger(message.observedGeneration.low) && $util.isInteger(message.observedGeneration.high)))
                                    return "observedGeneration: integer|Long expected";
                            if (message.terminalCondition != null && message.hasOwnProperty("terminalCondition")) {
                                var error = $root.google.cloud.run.v2.Condition.verify(message.terminalCondition);
                                if (error)
                                    return "terminalCondition." + error;
                            }
                            if (message.conditions != null && message.hasOwnProperty("conditions")) {
                                if (!Array.isArray(message.conditions))
                                    return "conditions: array expected";
                                for (var i = 0; i < message.conditions.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Condition.verify(message.conditions[i]);
                                    if (error)
                                        return "conditions." + error;
                                }
                            }
                            if (message.latestReadyRevision != null && message.hasOwnProperty("latestReadyRevision"))
                                if (!$util.isString(message.latestReadyRevision))
                                    return "latestReadyRevision: string expected";
                            if (message.latestCreatedRevision != null && message.hasOwnProperty("latestCreatedRevision"))
                                if (!$util.isString(message.latestCreatedRevision))
                                    return "latestCreatedRevision: string expected";
                            if (message.trafficStatuses != null && message.hasOwnProperty("trafficStatuses")) {
                                if (!Array.isArray(message.trafficStatuses))
                                    return "trafficStatuses: array expected";
                                for (var i = 0; i < message.trafficStatuses.length; ++i) {
                                    var error = $root.google.cloud.run.v2.TrafficTargetStatus.verify(message.trafficStatuses[i]);
                                    if (error)
                                        return "trafficStatuses." + error;
                                }
                            }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                if (typeof message.reconciling !== "boolean")
                                    return "reconciling: boolean expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Service message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.Service
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.Service} Service
                         */
                        Service.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.Service)
                                return object;
                            var message = new $root.google.cloud.run.v2.Service();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.generation != null)
                                if ($util.Long)
                                    (message.generation = $util.Long.fromValue(object.generation)).unsigned = false;
                                else if (typeof object.generation === "string")
                                    message.generation = parseInt(object.generation, 10);
                                else if (typeof object.generation === "number")
                                    message.generation = object.generation;
                                else if (typeof object.generation === "object")
                                    message.generation = new $util.LongBits(object.generation.low >>> 0, object.generation.high >>> 0).toNumber();
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.run.v2.Service.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.cloud.run.v2.Service.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Service.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Service.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Service.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            if (object.expireTime != null) {
                                if (typeof object.expireTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Service.expireTime: object expected");
                                message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                            }
                            if (object.creator != null)
                                message.creator = String(object.creator);
                            if (object.lastModifier != null)
                                message.lastModifier = String(object.lastModifier);
                            if (object.client != null)
                                message.client = String(object.client);
                            if (object.clientVersion != null)
                                message.clientVersion = String(object.clientVersion);
                            switch (object.ingress) {
                            default:
                                if (typeof object.ingress === "number") {
                                    message.ingress = object.ingress;
                                    break;
                                }
                                break;
                            case "INGRESS_TRAFFIC_UNSPECIFIED":
                            case 0:
                                message.ingress = 0;
                                break;
                            case "INGRESS_TRAFFIC_ALL":
                            case 1:
                                message.ingress = 1;
                                break;
                            case "INGRESS_TRAFFIC_INTERNAL_ONLY":
                            case 2:
                                message.ingress = 2;
                                break;
                            case "INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER":
                            case 3:
                                message.ingress = 3;
                                break;
                            }
                            switch (object.launchStage) {
                            default:
                                if (typeof object.launchStage === "number") {
                                    message.launchStage = object.launchStage;
                                    break;
                                }
                                break;
                            case "LAUNCH_STAGE_UNSPECIFIED":
                            case 0:
                                message.launchStage = 0;
                                break;
                            case "UNIMPLEMENTED":
                            case 6:
                                message.launchStage = 6;
                                break;
                            case "PRELAUNCH":
                            case 7:
                                message.launchStage = 7;
                                break;
                            case "EARLY_ACCESS":
                            case 1:
                                message.launchStage = 1;
                                break;
                            case "ALPHA":
                            case 2:
                                message.launchStage = 2;
                                break;
                            case "BETA":
                            case 3:
                                message.launchStage = 3;
                                break;
                            case "GA":
                            case 4:
                                message.launchStage = 4;
                                break;
                            case "DEPRECATED":
                            case 5:
                                message.launchStage = 5;
                                break;
                            }
                            if (object.binaryAuthorization != null) {
                                if (typeof object.binaryAuthorization !== "object")
                                    throw TypeError(".google.cloud.run.v2.Service.binaryAuthorization: object expected");
                                message.binaryAuthorization = $root.google.cloud.run.v2.BinaryAuthorization.fromObject(object.binaryAuthorization);
                            }
                            if (object.template != null) {
                                if (typeof object.template !== "object")
                                    throw TypeError(".google.cloud.run.v2.Service.template: object expected");
                                message.template = $root.google.cloud.run.v2.RevisionTemplate.fromObject(object.template);
                            }
                            if (object.traffic) {
                                if (!Array.isArray(object.traffic))
                                    throw TypeError(".google.cloud.run.v2.Service.traffic: array expected");
                                message.traffic = [];
                                for (var i = 0; i < object.traffic.length; ++i) {
                                    if (typeof object.traffic[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.Service.traffic: object expected");
                                    message.traffic[i] = $root.google.cloud.run.v2.TrafficTarget.fromObject(object.traffic[i]);
                                }
                            }
                            if (object.observedGeneration != null)
                                if ($util.Long)
                                    (message.observedGeneration = $util.Long.fromValue(object.observedGeneration)).unsigned = false;
                                else if (typeof object.observedGeneration === "string")
                                    message.observedGeneration = parseInt(object.observedGeneration, 10);
                                else if (typeof object.observedGeneration === "number")
                                    message.observedGeneration = object.observedGeneration;
                                else if (typeof object.observedGeneration === "object")
                                    message.observedGeneration = new $util.LongBits(object.observedGeneration.low >>> 0, object.observedGeneration.high >>> 0).toNumber();
                            if (object.terminalCondition != null) {
                                if (typeof object.terminalCondition !== "object")
                                    throw TypeError(".google.cloud.run.v2.Service.terminalCondition: object expected");
                                message.terminalCondition = $root.google.cloud.run.v2.Condition.fromObject(object.terminalCondition);
                            }
                            if (object.conditions) {
                                if (!Array.isArray(object.conditions))
                                    throw TypeError(".google.cloud.run.v2.Service.conditions: array expected");
                                message.conditions = [];
                                for (var i = 0; i < object.conditions.length; ++i) {
                                    if (typeof object.conditions[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.Service.conditions: object expected");
                                    message.conditions[i] = $root.google.cloud.run.v2.Condition.fromObject(object.conditions[i]);
                                }
                            }
                            if (object.latestReadyRevision != null)
                                message.latestReadyRevision = String(object.latestReadyRevision);
                            if (object.latestCreatedRevision != null)
                                message.latestCreatedRevision = String(object.latestCreatedRevision);
                            if (object.trafficStatuses) {
                                if (!Array.isArray(object.trafficStatuses))
                                    throw TypeError(".google.cloud.run.v2.Service.trafficStatuses: array expected");
                                message.trafficStatuses = [];
                                for (var i = 0; i < object.trafficStatuses.length; ++i) {
                                    if (typeof object.trafficStatuses[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.Service.trafficStatuses: object expected");
                                    message.trafficStatuses[i] = $root.google.cloud.run.v2.TrafficTargetStatus.fromObject(object.trafficStatuses[i]);
                                }
                            }
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.reconciling != null)
                                message.reconciling = Boolean(object.reconciling);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Service message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.Service
                         * @static
                         * @param {google.cloud.run.v2.Service} message Service
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Service.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.traffic = [];
                                object.conditions = [];
                                object.trafficStatuses = [];
                            }
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.annotations = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.description = "";
                                object.uid = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.generation = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.generation = options.longs === String ? "0" : 0;
                                object.createTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                                object.expireTime = null;
                                object.creator = "";
                                object.lastModifier = "";
                                object.client = "";
                                object.clientVersion = "";
                                object.ingress = options.enums === String ? "INGRESS_TRAFFIC_UNSPECIFIED" : 0;
                                object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                                object.binaryAuthorization = null;
                                object.template = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.observedGeneration = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.observedGeneration = options.longs === String ? "0" : 0;
                                object.terminalCondition = null;
                                object.latestReadyRevision = "";
                                object.latestCreatedRevision = "";
                                object.uri = "";
                                object.reconciling = false;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (typeof message.generation === "number")
                                    object.generation = options.longs === String ? String(message.generation) : message.generation;
                                else
                                    object.generation = options.longs === String ? $util.Long.prototype.toString.call(message.generation) : options.longs === Number ? new $util.LongBits(message.generation.low >>> 0, message.generation.high >>> 0).toNumber() : message.generation;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                            if (message.creator != null && message.hasOwnProperty("creator"))
                                object.creator = message.creator;
                            if (message.lastModifier != null && message.hasOwnProperty("lastModifier"))
                                object.lastModifier = message.lastModifier;
                            if (message.client != null && message.hasOwnProperty("client"))
                                object.client = message.client;
                            if (message.clientVersion != null && message.hasOwnProperty("clientVersion"))
                                object.clientVersion = message.clientVersion;
                            if (message.ingress != null && message.hasOwnProperty("ingress"))
                                object.ingress = options.enums === String ? $root.google.cloud.run.v2.IngressTraffic[message.ingress] === undefined ? message.ingress : $root.google.cloud.run.v2.IngressTraffic[message.ingress] : message.ingress;
                            if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                                object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                            if (message.binaryAuthorization != null && message.hasOwnProperty("binaryAuthorization"))
                                object.binaryAuthorization = $root.google.cloud.run.v2.BinaryAuthorization.toObject(message.binaryAuthorization, options);
                            if (message.template != null && message.hasOwnProperty("template"))
                                object.template = $root.google.cloud.run.v2.RevisionTemplate.toObject(message.template, options);
                            if (message.traffic && message.traffic.length) {
                                object.traffic = [];
                                for (var j = 0; j < message.traffic.length; ++j)
                                    object.traffic[j] = $root.google.cloud.run.v2.TrafficTarget.toObject(message.traffic[j], options);
                            }
                            if (message.observedGeneration != null && message.hasOwnProperty("observedGeneration"))
                                if (typeof message.observedGeneration === "number")
                                    object.observedGeneration = options.longs === String ? String(message.observedGeneration) : message.observedGeneration;
                                else
                                    object.observedGeneration = options.longs === String ? $util.Long.prototype.toString.call(message.observedGeneration) : options.longs === Number ? new $util.LongBits(message.observedGeneration.low >>> 0, message.observedGeneration.high >>> 0).toNumber() : message.observedGeneration;
                            if (message.terminalCondition != null && message.hasOwnProperty("terminalCondition"))
                                object.terminalCondition = $root.google.cloud.run.v2.Condition.toObject(message.terminalCondition, options);
                            if (message.conditions && message.conditions.length) {
                                object.conditions = [];
                                for (var j = 0; j < message.conditions.length; ++j)
                                    object.conditions[j] = $root.google.cloud.run.v2.Condition.toObject(message.conditions[j], options);
                            }
                            if (message.latestReadyRevision != null && message.hasOwnProperty("latestReadyRevision"))
                                object.latestReadyRevision = message.latestReadyRevision;
                            if (message.latestCreatedRevision != null && message.hasOwnProperty("latestCreatedRevision"))
                                object.latestCreatedRevision = message.latestCreatedRevision;
                            if (message.trafficStatuses && message.trafficStatuses.length) {
                                object.trafficStatuses = [];
                                for (var j = 0; j < message.trafficStatuses.length; ++j)
                                    object.trafficStatuses[j] = $root.google.cloud.run.v2.TrafficTargetStatus.toObject(message.trafficStatuses[j], options);
                            }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                object.reconciling = message.reconciling;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this Service to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.Service
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Service.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Service
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.Service
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Service.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.Service";
                        };
    
                        return Service;
                    })();
    
                    v2.TrafficTarget = (function() {
    
                        /**
                         * Properties of a TrafficTarget.
                         * @memberof google.cloud.run.v2
                         * @interface ITrafficTarget
                         * @property {google.cloud.run.v2.TrafficTargetAllocationType|null} [type] TrafficTarget type
                         * @property {string|null} [revision] TrafficTarget revision
                         * @property {number|null} [percent] TrafficTarget percent
                         * @property {string|null} [tag] TrafficTarget tag
                         */
    
                        /**
                         * Constructs a new TrafficTarget.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a TrafficTarget.
                         * @implements ITrafficTarget
                         * @constructor
                         * @param {google.cloud.run.v2.ITrafficTarget=} [properties] Properties to set
                         */
                        function TrafficTarget(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TrafficTarget type.
                         * @member {google.cloud.run.v2.TrafficTargetAllocationType} type
                         * @memberof google.cloud.run.v2.TrafficTarget
                         * @instance
                         */
                        TrafficTarget.prototype.type = 0;
    
                        /**
                         * TrafficTarget revision.
                         * @member {string} revision
                         * @memberof google.cloud.run.v2.TrafficTarget
                         * @instance
                         */
                        TrafficTarget.prototype.revision = "";
    
                        /**
                         * TrafficTarget percent.
                         * @member {number} percent
                         * @memberof google.cloud.run.v2.TrafficTarget
                         * @instance
                         */
                        TrafficTarget.prototype.percent = 0;
    
                        /**
                         * TrafficTarget tag.
                         * @member {string} tag
                         * @memberof google.cloud.run.v2.TrafficTarget
                         * @instance
                         */
                        TrafficTarget.prototype.tag = "";
    
                        /**
                         * Creates a new TrafficTarget instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.TrafficTarget
                         * @static
                         * @param {google.cloud.run.v2.ITrafficTarget=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.TrafficTarget} TrafficTarget instance
                         */
                        TrafficTarget.create = function create(properties) {
                            return new TrafficTarget(properties);
                        };
    
                        /**
                         * Encodes the specified TrafficTarget message. Does not implicitly {@link google.cloud.run.v2.TrafficTarget.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.TrafficTarget
                         * @static
                         * @param {google.cloud.run.v2.ITrafficTarget} message TrafficTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TrafficTarget.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                            if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.revision);
                            if (message.percent != null && Object.hasOwnProperty.call(message, "percent"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.percent);
                            if (message.tag != null && Object.hasOwnProperty.call(message, "tag"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.tag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TrafficTarget message, length delimited. Does not implicitly {@link google.cloud.run.v2.TrafficTarget.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.TrafficTarget
                         * @static
                         * @param {google.cloud.run.v2.ITrafficTarget} message TrafficTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TrafficTarget.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TrafficTarget message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.TrafficTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.TrafficTarget} TrafficTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TrafficTarget.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.TrafficTarget();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.revision = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.percent = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.tag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TrafficTarget message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.TrafficTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.TrafficTarget} TrafficTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TrafficTarget.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TrafficTarget message.
                         * @function verify
                         * @memberof google.cloud.run.v2.TrafficTarget
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TrafficTarget.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                if (!$util.isString(message.revision))
                                    return "revision: string expected";
                            if (message.percent != null && message.hasOwnProperty("percent"))
                                if (!$util.isInteger(message.percent))
                                    return "percent: integer expected";
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                if (!$util.isString(message.tag))
                                    return "tag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TrafficTarget message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.TrafficTarget
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.TrafficTarget} TrafficTarget
                         */
                        TrafficTarget.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.TrafficTarget)
                                return object;
                            var message = new $root.google.cloud.run.v2.TrafficTarget();
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST":
                            case 1:
                                message.type = 1;
                                break;
                            case "TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            if (object.revision != null)
                                message.revision = String(object.revision);
                            if (object.percent != null)
                                message.percent = object.percent | 0;
                            if (object.tag != null)
                                message.tag = String(object.tag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TrafficTarget message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.TrafficTarget
                         * @static
                         * @param {google.cloud.run.v2.TrafficTarget} message TrafficTarget
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TrafficTarget.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.type = options.enums === String ? "TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED" : 0;
                                object.revision = "";
                                object.percent = 0;
                                object.tag = "";
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.run.v2.TrafficTargetAllocationType[message.type] === undefined ? message.type : $root.google.cloud.run.v2.TrafficTargetAllocationType[message.type] : message.type;
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                object.revision = message.revision;
                            if (message.percent != null && message.hasOwnProperty("percent"))
                                object.percent = message.percent;
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                object.tag = message.tag;
                            return object;
                        };
    
                        /**
                         * Converts this TrafficTarget to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.TrafficTarget
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TrafficTarget.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TrafficTarget
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.TrafficTarget
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TrafficTarget.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.TrafficTarget";
                        };
    
                        return TrafficTarget;
                    })();
    
                    v2.TrafficTargetStatus = (function() {
    
                        /**
                         * Properties of a TrafficTargetStatus.
                         * @memberof google.cloud.run.v2
                         * @interface ITrafficTargetStatus
                         * @property {google.cloud.run.v2.TrafficTargetAllocationType|null} [type] TrafficTargetStatus type
                         * @property {string|null} [revision] TrafficTargetStatus revision
                         * @property {number|null} [percent] TrafficTargetStatus percent
                         * @property {string|null} [tag] TrafficTargetStatus tag
                         * @property {string|null} [uri] TrafficTargetStatus uri
                         */
    
                        /**
                         * Constructs a new TrafficTargetStatus.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a TrafficTargetStatus.
                         * @implements ITrafficTargetStatus
                         * @constructor
                         * @param {google.cloud.run.v2.ITrafficTargetStatus=} [properties] Properties to set
                         */
                        function TrafficTargetStatus(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TrafficTargetStatus type.
                         * @member {google.cloud.run.v2.TrafficTargetAllocationType} type
                         * @memberof google.cloud.run.v2.TrafficTargetStatus
                         * @instance
                         */
                        TrafficTargetStatus.prototype.type = 0;
    
                        /**
                         * TrafficTargetStatus revision.
                         * @member {string} revision
                         * @memberof google.cloud.run.v2.TrafficTargetStatus
                         * @instance
                         */
                        TrafficTargetStatus.prototype.revision = "";
    
                        /**
                         * TrafficTargetStatus percent.
                         * @member {number} percent
                         * @memberof google.cloud.run.v2.TrafficTargetStatus
                         * @instance
                         */
                        TrafficTargetStatus.prototype.percent = 0;
    
                        /**
                         * TrafficTargetStatus tag.
                         * @member {string} tag
                         * @memberof google.cloud.run.v2.TrafficTargetStatus
                         * @instance
                         */
                        TrafficTargetStatus.prototype.tag = "";
    
                        /**
                         * TrafficTargetStatus uri.
                         * @member {string} uri
                         * @memberof google.cloud.run.v2.TrafficTargetStatus
                         * @instance
                         */
                        TrafficTargetStatus.prototype.uri = "";
    
                        /**
                         * Creates a new TrafficTargetStatus instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.TrafficTargetStatus
                         * @static
                         * @param {google.cloud.run.v2.ITrafficTargetStatus=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.TrafficTargetStatus} TrafficTargetStatus instance
                         */
                        TrafficTargetStatus.create = function create(properties) {
                            return new TrafficTargetStatus(properties);
                        };
    
                        /**
                         * Encodes the specified TrafficTargetStatus message. Does not implicitly {@link google.cloud.run.v2.TrafficTargetStatus.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.TrafficTargetStatus
                         * @static
                         * @param {google.cloud.run.v2.ITrafficTargetStatus} message TrafficTargetStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TrafficTargetStatus.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                            if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.revision);
                            if (message.percent != null && Object.hasOwnProperty.call(message, "percent"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.percent);
                            if (message.tag != null && Object.hasOwnProperty.call(message, "tag"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.tag);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.uri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TrafficTargetStatus message, length delimited. Does not implicitly {@link google.cloud.run.v2.TrafficTargetStatus.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.TrafficTargetStatus
                         * @static
                         * @param {google.cloud.run.v2.ITrafficTargetStatus} message TrafficTargetStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TrafficTargetStatus.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TrafficTargetStatus message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.TrafficTargetStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.TrafficTargetStatus} TrafficTargetStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TrafficTargetStatus.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.TrafficTargetStatus();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.revision = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.percent = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.tag = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TrafficTargetStatus message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.TrafficTargetStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.TrafficTargetStatus} TrafficTargetStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TrafficTargetStatus.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TrafficTargetStatus message.
                         * @function verify
                         * @memberof google.cloud.run.v2.TrafficTargetStatus
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TrafficTargetStatus.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                if (!$util.isString(message.revision))
                                    return "revision: string expected";
                            if (message.percent != null && message.hasOwnProperty("percent"))
                                if (!$util.isInteger(message.percent))
                                    return "percent: integer expected";
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                if (!$util.isString(message.tag))
                                    return "tag: string expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TrafficTargetStatus message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.TrafficTargetStatus
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.TrafficTargetStatus} TrafficTargetStatus
                         */
                        TrafficTargetStatus.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.TrafficTargetStatus)
                                return object;
                            var message = new $root.google.cloud.run.v2.TrafficTargetStatus();
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST":
                            case 1:
                                message.type = 1;
                                break;
                            case "TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            if (object.revision != null)
                                message.revision = String(object.revision);
                            if (object.percent != null)
                                message.percent = object.percent | 0;
                            if (object.tag != null)
                                message.tag = String(object.tag);
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TrafficTargetStatus message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.TrafficTargetStatus
                         * @static
                         * @param {google.cloud.run.v2.TrafficTargetStatus} message TrafficTargetStatus
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TrafficTargetStatus.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.type = options.enums === String ? "TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED" : 0;
                                object.revision = "";
                                object.percent = 0;
                                object.tag = "";
                                object.uri = "";
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.run.v2.TrafficTargetAllocationType[message.type] === undefined ? message.type : $root.google.cloud.run.v2.TrafficTargetAllocationType[message.type] : message.type;
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                object.revision = message.revision;
                            if (message.percent != null && message.hasOwnProperty("percent"))
                                object.percent = message.percent;
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                object.tag = message.tag;
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            return object;
                        };
    
                        /**
                         * Converts this TrafficTargetStatus to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.TrafficTargetStatus
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TrafficTargetStatus.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TrafficTargetStatus
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.TrafficTargetStatus
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TrafficTargetStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.TrafficTargetStatus";
                        };
    
                        return TrafficTargetStatus;
                    })();
    
                    /**
                     * TrafficTargetAllocationType enum.
                     * @name google.cloud.run.v2.TrafficTargetAllocationType
                     * @enum {number}
                     * @property {number} TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED=0 TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED value
                     * @property {number} TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST=1 TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST value
                     * @property {number} TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION=2 TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION value
                     */
                    v2.TrafficTargetAllocationType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "TRAFFIC_TARGET_ALLOCATION_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "TRAFFIC_TARGET_ALLOCATION_TYPE_LATEST"] = 1;
                        values[valuesById[2] = "TRAFFIC_TARGET_ALLOCATION_TYPE_REVISION"] = 2;
                        return values;
                    })();
    
                    v2.Tasks = (function() {
    
                        /**
                         * Constructs a new Tasks service.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a Tasks
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function Tasks(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (Tasks.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Tasks;
    
                        /**
                         * Creates new Tasks service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.run.v2.Tasks
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {Tasks} RPC service. Useful where requests and/or responses are streamed.
                         */
                        Tasks.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Tasks|getTask}.
                         * @memberof google.cloud.run.v2.Tasks
                         * @typedef GetTaskCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.run.v2.Task} [response] Task
                         */
    
                        /**
                         * Calls GetTask.
                         * @function getTask
                         * @memberof google.cloud.run.v2.Tasks
                         * @instance
                         * @param {google.cloud.run.v2.IGetTaskRequest} request GetTaskRequest message or plain object
                         * @param {google.cloud.run.v2.Tasks.GetTaskCallback} callback Node-style callback called with the error, if any, and Task
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Tasks.prototype.getTask = function getTask(request, callback) {
                            return this.rpcCall(getTask, $root.google.cloud.run.v2.GetTaskRequest, $root.google.cloud.run.v2.Task, request, callback);
                        }, "name", { value: "GetTask" });
    
                        /**
                         * Calls GetTask.
                         * @function getTask
                         * @memberof google.cloud.run.v2.Tasks
                         * @instance
                         * @param {google.cloud.run.v2.IGetTaskRequest} request GetTaskRequest message or plain object
                         * @returns {Promise<google.cloud.run.v2.Task>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.run.v2.Tasks|listTasks}.
                         * @memberof google.cloud.run.v2.Tasks
                         * @typedef ListTasksCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.run.v2.ListTasksResponse} [response] ListTasksResponse
                         */
    
                        /**
                         * Calls ListTasks.
                         * @function listTasks
                         * @memberof google.cloud.run.v2.Tasks
                         * @instance
                         * @param {google.cloud.run.v2.IListTasksRequest} request ListTasksRequest message or plain object
                         * @param {google.cloud.run.v2.Tasks.ListTasksCallback} callback Node-style callback called with the error, if any, and ListTasksResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(Tasks.prototype.listTasks = function listTasks(request, callback) {
                            return this.rpcCall(listTasks, $root.google.cloud.run.v2.ListTasksRequest, $root.google.cloud.run.v2.ListTasksResponse, request, callback);
                        }, "name", { value: "ListTasks" });
    
                        /**
                         * Calls ListTasks.
                         * @function listTasks
                         * @memberof google.cloud.run.v2.Tasks
                         * @instance
                         * @param {google.cloud.run.v2.IListTasksRequest} request ListTasksRequest message or plain object
                         * @returns {Promise<google.cloud.run.v2.ListTasksResponse>} Promise
                         * @variation 2
                         */
    
                        return Tasks;
                    })();
    
                    v2.GetTaskRequest = (function() {
    
                        /**
                         * Properties of a GetTaskRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IGetTaskRequest
                         * @property {string|null} [name] GetTaskRequest name
                         */
    
                        /**
                         * Constructs a new GetTaskRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a GetTaskRequest.
                         * @implements IGetTaskRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IGetTaskRequest=} [properties] Properties to set
                         */
                        function GetTaskRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetTaskRequest name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.GetTaskRequest
                         * @instance
                         */
                        GetTaskRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetTaskRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.GetTaskRequest
                         * @static
                         * @param {google.cloud.run.v2.IGetTaskRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.GetTaskRequest} GetTaskRequest instance
                         */
                        GetTaskRequest.create = function create(properties) {
                            return new GetTaskRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetTaskRequest message. Does not implicitly {@link google.cloud.run.v2.GetTaskRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.GetTaskRequest
                         * @static
                         * @param {google.cloud.run.v2.IGetTaskRequest} message GetTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTaskRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetTaskRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.GetTaskRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.GetTaskRequest
                         * @static
                         * @param {google.cloud.run.v2.IGetTaskRequest} message GetTaskRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTaskRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetTaskRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.GetTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.GetTaskRequest} GetTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTaskRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.GetTaskRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetTaskRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.GetTaskRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.GetTaskRequest} GetTaskRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTaskRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetTaskRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.GetTaskRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetTaskRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetTaskRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.GetTaskRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.GetTaskRequest} GetTaskRequest
                         */
                        GetTaskRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.GetTaskRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.GetTaskRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetTaskRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.GetTaskRequest
                         * @static
                         * @param {google.cloud.run.v2.GetTaskRequest} message GetTaskRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetTaskRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetTaskRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.GetTaskRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetTaskRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetTaskRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.GetTaskRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetTaskRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.GetTaskRequest";
                        };
    
                        return GetTaskRequest;
                    })();
    
                    v2.ListTasksRequest = (function() {
    
                        /**
                         * Properties of a ListTasksRequest.
                         * @memberof google.cloud.run.v2
                         * @interface IListTasksRequest
                         * @property {string|null} [parent] ListTasksRequest parent
                         * @property {number|null} [pageSize] ListTasksRequest pageSize
                         * @property {string|null} [pageToken] ListTasksRequest pageToken
                         * @property {boolean|null} [showDeleted] ListTasksRequest showDeleted
                         */
    
                        /**
                         * Constructs a new ListTasksRequest.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a ListTasksRequest.
                         * @implements IListTasksRequest
                         * @constructor
                         * @param {google.cloud.run.v2.IListTasksRequest=} [properties] Properties to set
                         */
                        function ListTasksRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTasksRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.run.v2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.parent = "";
    
                        /**
                         * ListTasksRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.run.v2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.pageSize = 0;
    
                        /**
                         * ListTasksRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.run.v2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.pageToken = "";
    
                        /**
                         * ListTasksRequest showDeleted.
                         * @member {boolean} showDeleted
                         * @memberof google.cloud.run.v2.ListTasksRequest
                         * @instance
                         */
                        ListTasksRequest.prototype.showDeleted = false;
    
                        /**
                         * Creates a new ListTasksRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.ListTasksRequest
                         * @static
                         * @param {google.cloud.run.v2.IListTasksRequest=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.ListTasksRequest} ListTasksRequest instance
                         */
                        ListTasksRequest.create = function create(properties) {
                            return new ListTasksRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListTasksRequest message. Does not implicitly {@link google.cloud.run.v2.ListTasksRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.ListTasksRequest
                         * @static
                         * @param {google.cloud.run.v2.IListTasksRequest} message ListTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.showDeleted != null && Object.hasOwnProperty.call(message, "showDeleted"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.showDeleted);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTasksRequest message, length delimited. Does not implicitly {@link google.cloud.run.v2.ListTasksRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.ListTasksRequest
                         * @static
                         * @param {google.cloud.run.v2.IListTasksRequest} message ListTasksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTasksRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.ListTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.ListTasksRequest} ListTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.ListTasksRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.showDeleted = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTasksRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.ListTasksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.ListTasksRequest} ListTasksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTasksRequest message.
                         * @function verify
                         * @memberof google.cloud.run.v2.ListTasksRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTasksRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                if (typeof message.showDeleted !== "boolean")
                                    return "showDeleted: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTasksRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.ListTasksRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.ListTasksRequest} ListTasksRequest
                         */
                        ListTasksRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.ListTasksRequest)
                                return object;
                            var message = new $root.google.cloud.run.v2.ListTasksRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.showDeleted != null)
                                message.showDeleted = Boolean(object.showDeleted);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTasksRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.ListTasksRequest
                         * @static
                         * @param {google.cloud.run.v2.ListTasksRequest} message ListTasksRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTasksRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.showDeleted = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.showDeleted != null && message.hasOwnProperty("showDeleted"))
                                object.showDeleted = message.showDeleted;
                            return object;
                        };
    
                        /**
                         * Converts this ListTasksRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.ListTasksRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTasksRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTasksRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.ListTasksRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTasksRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.ListTasksRequest";
                        };
    
                        return ListTasksRequest;
                    })();
    
                    v2.ListTasksResponse = (function() {
    
                        /**
                         * Properties of a ListTasksResponse.
                         * @memberof google.cloud.run.v2
                         * @interface IListTasksResponse
                         * @property {Array.<google.cloud.run.v2.ITask>|null} [tasks] ListTasksResponse tasks
                         * @property {string|null} [nextPageToken] ListTasksResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListTasksResponse.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a ListTasksResponse.
                         * @implements IListTasksResponse
                         * @constructor
                         * @param {google.cloud.run.v2.IListTasksResponse=} [properties] Properties to set
                         */
                        function ListTasksResponse(properties) {
                            this.tasks = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTasksResponse tasks.
                         * @member {Array.<google.cloud.run.v2.ITask>} tasks
                         * @memberof google.cloud.run.v2.ListTasksResponse
                         * @instance
                         */
                        ListTasksResponse.prototype.tasks = $util.emptyArray;
    
                        /**
                         * ListTasksResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.run.v2.ListTasksResponse
                         * @instance
                         */
                        ListTasksResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListTasksResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.ListTasksResponse
                         * @static
                         * @param {google.cloud.run.v2.IListTasksResponse=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.ListTasksResponse} ListTasksResponse instance
                         */
                        ListTasksResponse.create = function create(properties) {
                            return new ListTasksResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListTasksResponse message. Does not implicitly {@link google.cloud.run.v2.ListTasksResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.ListTasksResponse
                         * @static
                         * @param {google.cloud.run.v2.IListTasksResponse} message ListTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tasks != null && message.tasks.length)
                                for (var i = 0; i < message.tasks.length; ++i)
                                    $root.google.cloud.run.v2.Task.encode(message.tasks[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTasksResponse message, length delimited. Does not implicitly {@link google.cloud.run.v2.ListTasksResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.ListTasksResponse
                         * @static
                         * @param {google.cloud.run.v2.IListTasksResponse} message ListTasksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTasksResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTasksResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.ListTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.ListTasksResponse} ListTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.ListTasksResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.tasks && message.tasks.length))
                                            message.tasks = [];
                                        message.tasks.push($root.google.cloud.run.v2.Task.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTasksResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.ListTasksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.ListTasksResponse} ListTasksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTasksResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTasksResponse message.
                         * @function verify
                         * @memberof google.cloud.run.v2.ListTasksResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTasksResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tasks != null && message.hasOwnProperty("tasks")) {
                                if (!Array.isArray(message.tasks))
                                    return "tasks: array expected";
                                for (var i = 0; i < message.tasks.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Task.verify(message.tasks[i]);
                                    if (error)
                                        return "tasks." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTasksResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.ListTasksResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.ListTasksResponse} ListTasksResponse
                         */
                        ListTasksResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.ListTasksResponse)
                                return object;
                            var message = new $root.google.cloud.run.v2.ListTasksResponse();
                            if (object.tasks) {
                                if (!Array.isArray(object.tasks))
                                    throw TypeError(".google.cloud.run.v2.ListTasksResponse.tasks: array expected");
                                message.tasks = [];
                                for (var i = 0; i < object.tasks.length; ++i) {
                                    if (typeof object.tasks[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.ListTasksResponse.tasks: object expected");
                                    message.tasks[i] = $root.google.cloud.run.v2.Task.fromObject(object.tasks[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTasksResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.ListTasksResponse
                         * @static
                         * @param {google.cloud.run.v2.ListTasksResponse} message ListTasksResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTasksResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.tasks = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.tasks && message.tasks.length) {
                                object.tasks = [];
                                for (var j = 0; j < message.tasks.length; ++j)
                                    object.tasks[j] = $root.google.cloud.run.v2.Task.toObject(message.tasks[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListTasksResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.ListTasksResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTasksResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTasksResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.ListTasksResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTasksResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.ListTasksResponse";
                        };
    
                        return ListTasksResponse;
                    })();
    
                    v2.Task = (function() {
    
                        /**
                         * Properties of a Task.
                         * @memberof google.cloud.run.v2
                         * @interface ITask
                         * @property {string|null} [name] Task name
                         * @property {string|null} [uid] Task uid
                         * @property {number|Long|null} [generation] Task generation
                         * @property {Object.<string,string>|null} [labels] Task labels
                         * @property {Object.<string,string>|null} [annotations] Task annotations
                         * @property {google.protobuf.ITimestamp|null} [createTime] Task createTime
                         * @property {google.protobuf.ITimestamp|null} [startTime] Task startTime
                         * @property {google.protobuf.ITimestamp|null} [completionTime] Task completionTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Task updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] Task deleteTime
                         * @property {google.protobuf.ITimestamp|null} [expireTime] Task expireTime
                         * @property {string|null} [job] Task job
                         * @property {string|null} [execution] Task execution
                         * @property {Array.<google.cloud.run.v2.IContainer>|null} [containers] Task containers
                         * @property {Array.<google.cloud.run.v2.IVolume>|null} [volumes] Task volumes
                         * @property {number|null} [maxRetries] Task maxRetries
                         * @property {google.protobuf.IDuration|null} [timeout] Task timeout
                         * @property {string|null} [serviceAccount] Task serviceAccount
                         * @property {google.cloud.run.v2.ExecutionEnvironment|null} [executionEnvironment] Task executionEnvironment
                         * @property {boolean|null} [reconciling] Task reconciling
                         * @property {Array.<google.cloud.run.v2.ICondition>|null} [conditions] Task conditions
                         * @property {number|Long|null} [observedGeneration] Task observedGeneration
                         * @property {number|null} [index] Task index
                         * @property {number|null} [retried] Task retried
                         * @property {google.cloud.run.v2.ITaskAttemptResult|null} [lastAttemptResult] Task lastAttemptResult
                         * @property {string|null} [encryptionKey] Task encryptionKey
                         * @property {google.cloud.run.v2.IVpcAccess|null} [vpcAccess] Task vpcAccess
                         * @property {string|null} [etag] Task etag
                         */
    
                        /**
                         * Constructs a new Task.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a Task.
                         * @implements ITask
                         * @constructor
                         * @param {google.cloud.run.v2.ITask=} [properties] Properties to set
                         */
                        function Task(properties) {
                            this.labels = {};
                            this.annotations = {};
                            this.containers = [];
                            this.volumes = [];
                            this.conditions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Task name.
                         * @member {string} name
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.name = "";
    
                        /**
                         * Task uid.
                         * @member {string} uid
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.uid = "";
    
                        /**
                         * Task generation.
                         * @member {number|Long} generation
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.generation = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Task labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.labels = $util.emptyObject;
    
                        /**
                         * Task annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.annotations = $util.emptyObject;
    
                        /**
                         * Task createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.createTime = null;
    
                        /**
                         * Task startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.startTime = null;
    
                        /**
                         * Task completionTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} completionTime
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.completionTime = null;
    
                        /**
                         * Task updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.updateTime = null;
    
                        /**
                         * Task deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.deleteTime = null;
    
                        /**
                         * Task expireTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.expireTime = null;
    
                        /**
                         * Task job.
                         * @member {string} job
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.job = "";
    
                        /**
                         * Task execution.
                         * @member {string} execution
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.execution = "";
    
                        /**
                         * Task containers.
                         * @member {Array.<google.cloud.run.v2.IContainer>} containers
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.containers = $util.emptyArray;
    
                        /**
                         * Task volumes.
                         * @member {Array.<google.cloud.run.v2.IVolume>} volumes
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.volumes = $util.emptyArray;
    
                        /**
                         * Task maxRetries.
                         * @member {number} maxRetries
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.maxRetries = 0;
    
                        /**
                         * Task timeout.
                         * @member {google.protobuf.IDuration|null|undefined} timeout
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.timeout = null;
    
                        /**
                         * Task serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.serviceAccount = "";
    
                        /**
                         * Task executionEnvironment.
                         * @member {google.cloud.run.v2.ExecutionEnvironment} executionEnvironment
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.executionEnvironment = 0;
    
                        /**
                         * Task reconciling.
                         * @member {boolean} reconciling
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.reconciling = false;
    
                        /**
                         * Task conditions.
                         * @member {Array.<google.cloud.run.v2.ICondition>} conditions
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.conditions = $util.emptyArray;
    
                        /**
                         * Task observedGeneration.
                         * @member {number|Long} observedGeneration
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.observedGeneration = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Task index.
                         * @member {number} index
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.index = 0;
    
                        /**
                         * Task retried.
                         * @member {number} retried
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.retried = 0;
    
                        /**
                         * Task lastAttemptResult.
                         * @member {google.cloud.run.v2.ITaskAttemptResult|null|undefined} lastAttemptResult
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.lastAttemptResult = null;
    
                        /**
                         * Task encryptionKey.
                         * @member {string} encryptionKey
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.encryptionKey = "";
    
                        /**
                         * Task vpcAccess.
                         * @member {google.cloud.run.v2.IVpcAccess|null|undefined} vpcAccess
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.vpcAccess = null;
    
                        /**
                         * Task etag.
                         * @member {string} etag
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         */
                        Task.prototype.etag = "";
    
                        /**
                         * Creates a new Task instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.Task
                         * @static
                         * @param {google.cloud.run.v2.ITask=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.Task} Task instance
                         */
                        Task.create = function create(properties) {
                            return new Task(properties);
                        };
    
                        /**
                         * Encodes the specified Task message. Does not implicitly {@link google.cloud.run.v2.Task.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.Task
                         * @static
                         * @param {google.cloud.run.v2.ITask} message Task message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Task.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uid);
                            if (message.generation != null && Object.hasOwnProperty.call(message, "generation"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.generation);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.completionTime != null && Object.hasOwnProperty.call(message, "completionTime"))
                                $root.google.protobuf.Timestamp.encode(message.completionTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.job != null && Object.hasOwnProperty.call(message, "job"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.job);
                            if (message.execution != null && Object.hasOwnProperty.call(message, "execution"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.execution);
                            if (message.containers != null && message.containers.length)
                                for (var i = 0; i < message.containers.length; ++i)
                                    $root.google.cloud.run.v2.Container.encode(message.containers[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.volumes != null && message.volumes.length)
                                for (var i = 0; i < message.volumes.length; ++i)
                                    $root.google.cloud.run.v2.Volume.encode(message.volumes[i], writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.maxRetries != null && Object.hasOwnProperty.call(message, "maxRetries"))
                                writer.uint32(/* id 16, wireType 0 =*/128).int32(message.maxRetries);
                            if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                                $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 18, wireType 2 =*/146).string(message.serviceAccount);
                            if (message.executionEnvironment != null && Object.hasOwnProperty.call(message, "executionEnvironment"))
                                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.executionEnvironment);
                            if (message.reconciling != null && Object.hasOwnProperty.call(message, "reconciling"))
                                writer.uint32(/* id 21, wireType 0 =*/168).bool(message.reconciling);
                            if (message.conditions != null && message.conditions.length)
                                for (var i = 0; i < message.conditions.length; ++i)
                                    $root.google.cloud.run.v2.Condition.encode(message.conditions[i], writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                            if (message.observedGeneration != null && Object.hasOwnProperty.call(message, "observedGeneration"))
                                writer.uint32(/* id 23, wireType 0 =*/184).int64(message.observedGeneration);
                            if (message.index != null && Object.hasOwnProperty.call(message, "index"))
                                writer.uint32(/* id 24, wireType 0 =*/192).int32(message.index);
                            if (message.retried != null && Object.hasOwnProperty.call(message, "retried"))
                                writer.uint32(/* id 25, wireType 0 =*/200).int32(message.retried);
                            if (message.lastAttemptResult != null && Object.hasOwnProperty.call(message, "lastAttemptResult"))
                                $root.google.cloud.run.v2.TaskAttemptResult.encode(message.lastAttemptResult, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                            if (message.encryptionKey != null && Object.hasOwnProperty.call(message, "encryptionKey"))
                                writer.uint32(/* id 28, wireType 2 =*/226).string(message.encryptionKey);
                            if (message.vpcAccess != null && Object.hasOwnProperty.call(message, "vpcAccess"))
                                $root.google.cloud.run.v2.VpcAccess.encode(message.vpcAccess, writer.uint32(/* id 29, wireType 2 =*/234).fork()).ldelim();
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 99, wireType 2 =*/794).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Task message, length delimited. Does not implicitly {@link google.cloud.run.v2.Task.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.Task
                         * @static
                         * @param {google.cloud.run.v2.ITask} message Task message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Task.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Task message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.Task
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.Task} Task
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Task.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.Task(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.generation = reader.int64();
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 5: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 27: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.completionTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.job = reader.string();
                                        break;
                                    }
                                case 13: {
                                        message.execution = reader.string();
                                        break;
                                    }
                                case 14: {
                                        if (!(message.containers && message.containers.length))
                                            message.containers = [];
                                        message.containers.push($root.google.cloud.run.v2.Container.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 15: {
                                        if (!(message.volumes && message.volumes.length))
                                            message.volumes = [];
                                        message.volumes.push($root.google.cloud.run.v2.Volume.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 16: {
                                        message.maxRetries = reader.int32();
                                        break;
                                    }
                                case 17: {
                                        message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 18: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                case 20: {
                                        message.executionEnvironment = reader.int32();
                                        break;
                                    }
                                case 21: {
                                        message.reconciling = reader.bool();
                                        break;
                                    }
                                case 22: {
                                        if (!(message.conditions && message.conditions.length))
                                            message.conditions = [];
                                        message.conditions.push($root.google.cloud.run.v2.Condition.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 23: {
                                        message.observedGeneration = reader.int64();
                                        break;
                                    }
                                case 24: {
                                        message.index = reader.int32();
                                        break;
                                    }
                                case 25: {
                                        message.retried = reader.int32();
                                        break;
                                    }
                                case 26: {
                                        message.lastAttemptResult = $root.google.cloud.run.v2.TaskAttemptResult.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 28: {
                                        message.encryptionKey = reader.string();
                                        break;
                                    }
                                case 29: {
                                        message.vpcAccess = $root.google.cloud.run.v2.VpcAccess.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 99: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Task message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.Task
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.Task} Task
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Task.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Task message.
                         * @function verify
                         * @memberof google.cloud.run.v2.Task
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Task.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (!$util.isInteger(message.generation) && !(message.generation && $util.isInteger(message.generation.low) && $util.isInteger(message.generation.high)))
                                    return "generation: integer|Long expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.completionTime != null && message.hasOwnProperty("completionTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.completionTime);
                                if (error)
                                    return "completionTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                if (error)
                                    return "expireTime." + error;
                            }
                            if (message.job != null && message.hasOwnProperty("job"))
                                if (!$util.isString(message.job))
                                    return "job: string expected";
                            if (message.execution != null && message.hasOwnProperty("execution"))
                                if (!$util.isString(message.execution))
                                    return "execution: string expected";
                            if (message.containers != null && message.hasOwnProperty("containers")) {
                                if (!Array.isArray(message.containers))
                                    return "containers: array expected";
                                for (var i = 0; i < message.containers.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Container.verify(message.containers[i]);
                                    if (error)
                                        return "containers." + error;
                                }
                            }
                            if (message.volumes != null && message.hasOwnProperty("volumes")) {
                                if (!Array.isArray(message.volumes))
                                    return "volumes: array expected";
                                for (var i = 0; i < message.volumes.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Volume.verify(message.volumes[i]);
                                    if (error)
                                        return "volumes." + error;
                                }
                            }
                            if (message.maxRetries != null && message.hasOwnProperty("maxRetries"))
                                if (!$util.isInteger(message.maxRetries))
                                    return "maxRetries: integer expected";
                            if (message.timeout != null && message.hasOwnProperty("timeout")) {
                                var error = $root.google.protobuf.Duration.verify(message.timeout);
                                if (error)
                                    return "timeout." + error;
                            }
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            if (message.executionEnvironment != null && message.hasOwnProperty("executionEnvironment"))
                                switch (message.executionEnvironment) {
                                default:
                                    return "executionEnvironment: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                if (typeof message.reconciling !== "boolean")
                                    return "reconciling: boolean expected";
                            if (message.conditions != null && message.hasOwnProperty("conditions")) {
                                if (!Array.isArray(message.conditions))
                                    return "conditions: array expected";
                                for (var i = 0; i < message.conditions.length; ++i) {
                                    var error = $root.google.cloud.run.v2.Condition.verify(message.conditions[i]);
                                    if (error)
                                        return "conditions." + error;
                                }
                            }
                            if (message.observedGeneration != null && message.hasOwnProperty("observedGeneration"))
                                if (!$util.isInteger(message.observedGeneration) && !(message.observedGeneration && $util.isInteger(message.observedGeneration.low) && $util.isInteger(message.observedGeneration.high)))
                                    return "observedGeneration: integer|Long expected";
                            if (message.index != null && message.hasOwnProperty("index"))
                                if (!$util.isInteger(message.index))
                                    return "index: integer expected";
                            if (message.retried != null && message.hasOwnProperty("retried"))
                                if (!$util.isInteger(message.retried))
                                    return "retried: integer expected";
                            if (message.lastAttemptResult != null && message.hasOwnProperty("lastAttemptResult")) {
                                var error = $root.google.cloud.run.v2.TaskAttemptResult.verify(message.lastAttemptResult);
                                if (error)
                                    return "lastAttemptResult." + error;
                            }
                            if (message.encryptionKey != null && message.hasOwnProperty("encryptionKey"))
                                if (!$util.isString(message.encryptionKey))
                                    return "encryptionKey: string expected";
                            if (message.vpcAccess != null && message.hasOwnProperty("vpcAccess")) {
                                var error = $root.google.cloud.run.v2.VpcAccess.verify(message.vpcAccess);
                                if (error)
                                    return "vpcAccess." + error;
                            }
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Task message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.Task
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.Task} Task
                         */
                        Task.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.Task)
                                return object;
                            var message = new $root.google.cloud.run.v2.Task();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.generation != null)
                                if ($util.Long)
                                    (message.generation = $util.Long.fromValue(object.generation)).unsigned = false;
                                else if (typeof object.generation === "string")
                                    message.generation = parseInt(object.generation, 10);
                                else if (typeof object.generation === "number")
                                    message.generation = object.generation;
                                else if (typeof object.generation === "object")
                                    message.generation = new $util.LongBits(object.generation.low >>> 0, object.generation.high >>> 0).toNumber();
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.run.v2.Task.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.cloud.run.v2.Task.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Task.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Task.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.completionTime != null) {
                                if (typeof object.completionTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Task.completionTime: object expected");
                                message.completionTime = $root.google.protobuf.Timestamp.fromObject(object.completionTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Task.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Task.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            if (object.expireTime != null) {
                                if (typeof object.expireTime !== "object")
                                    throw TypeError(".google.cloud.run.v2.Task.expireTime: object expected");
                                message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                            }
                            if (object.job != null)
                                message.job = String(object.job);
                            if (object.execution != null)
                                message.execution = String(object.execution);
                            if (object.containers) {
                                if (!Array.isArray(object.containers))
                                    throw TypeError(".google.cloud.run.v2.Task.containers: array expected");
                                message.containers = [];
                                for (var i = 0; i < object.containers.length; ++i) {
                                    if (typeof object.containers[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.Task.containers: object expected");
                                    message.containers[i] = $root.google.cloud.run.v2.Container.fromObject(object.containers[i]);
                                }
                            }
                            if (object.volumes) {
                                if (!Array.isArray(object.volumes))
                                    throw TypeError(".google.cloud.run.v2.Task.volumes: array expected");
                                message.volumes = [];
                                for (var i = 0; i < object.volumes.length; ++i) {
                                    if (typeof object.volumes[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.Task.volumes: object expected");
                                    message.volumes[i] = $root.google.cloud.run.v2.Volume.fromObject(object.volumes[i]);
                                }
                            }
                            if (object.maxRetries != null)
                                message.maxRetries = object.maxRetries | 0;
                            if (object.timeout != null) {
                                if (typeof object.timeout !== "object")
                                    throw TypeError(".google.cloud.run.v2.Task.timeout: object expected");
                                message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                            }
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            switch (object.executionEnvironment) {
                            default:
                                if (typeof object.executionEnvironment === "number") {
                                    message.executionEnvironment = object.executionEnvironment;
                                    break;
                                }
                                break;
                            case "EXECUTION_ENVIRONMENT_UNSPECIFIED":
                            case 0:
                                message.executionEnvironment = 0;
                                break;
                            case "EXECUTION_ENVIRONMENT_GEN1":
                            case 1:
                                message.executionEnvironment = 1;
                                break;
                            case "EXECUTION_ENVIRONMENT_GEN2":
                            case 2:
                                message.executionEnvironment = 2;
                                break;
                            }
                            if (object.reconciling != null)
                                message.reconciling = Boolean(object.reconciling);
                            if (object.conditions) {
                                if (!Array.isArray(object.conditions))
                                    throw TypeError(".google.cloud.run.v2.Task.conditions: array expected");
                                message.conditions = [];
                                for (var i = 0; i < object.conditions.length; ++i) {
                                    if (typeof object.conditions[i] !== "object")
                                        throw TypeError(".google.cloud.run.v2.Task.conditions: object expected");
                                    message.conditions[i] = $root.google.cloud.run.v2.Condition.fromObject(object.conditions[i]);
                                }
                            }
                            if (object.observedGeneration != null)
                                if ($util.Long)
                                    (message.observedGeneration = $util.Long.fromValue(object.observedGeneration)).unsigned = false;
                                else if (typeof object.observedGeneration === "string")
                                    message.observedGeneration = parseInt(object.observedGeneration, 10);
                                else if (typeof object.observedGeneration === "number")
                                    message.observedGeneration = object.observedGeneration;
                                else if (typeof object.observedGeneration === "object")
                                    message.observedGeneration = new $util.LongBits(object.observedGeneration.low >>> 0, object.observedGeneration.high >>> 0).toNumber();
                            if (object.index != null)
                                message.index = object.index | 0;
                            if (object.retried != null)
                                message.retried = object.retried | 0;
                            if (object.lastAttemptResult != null) {
                                if (typeof object.lastAttemptResult !== "object")
                                    throw TypeError(".google.cloud.run.v2.Task.lastAttemptResult: object expected");
                                message.lastAttemptResult = $root.google.cloud.run.v2.TaskAttemptResult.fromObject(object.lastAttemptResult);
                            }
                            if (object.encryptionKey != null)
                                message.encryptionKey = String(object.encryptionKey);
                            if (object.vpcAccess != null) {
                                if (typeof object.vpcAccess !== "object")
                                    throw TypeError(".google.cloud.run.v2.Task.vpcAccess: object expected");
                                message.vpcAccess = $root.google.cloud.run.v2.VpcAccess.fromObject(object.vpcAccess);
                            }
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Task message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.Task
                         * @static
                         * @param {google.cloud.run.v2.Task} message Task
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Task.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.containers = [];
                                object.volumes = [];
                                object.conditions = [];
                            }
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.annotations = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.uid = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.generation = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.generation = options.longs === String ? "0" : 0;
                                object.createTime = null;
                                object.completionTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                                object.expireTime = null;
                                object.job = "";
                                object.execution = "";
                                object.maxRetries = 0;
                                object.timeout = null;
                                object.serviceAccount = "";
                                object.executionEnvironment = options.enums === String ? "EXECUTION_ENVIRONMENT_UNSPECIFIED" : 0;
                                object.reconciling = false;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.observedGeneration = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.observedGeneration = options.longs === String ? "0" : 0;
                                object.index = 0;
                                object.retried = 0;
                                object.lastAttemptResult = null;
                                object.startTime = null;
                                object.encryptionKey = "";
                                object.vpcAccess = null;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (typeof message.generation === "number")
                                    object.generation = options.longs === String ? String(message.generation) : message.generation;
                                else
                                    object.generation = options.longs === String ? $util.Long.prototype.toString.call(message.generation) : options.longs === Number ? new $util.LongBits(message.generation.low >>> 0, message.generation.high >>> 0).toNumber() : message.generation;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.completionTime != null && message.hasOwnProperty("completionTime"))
                                object.completionTime = $root.google.protobuf.Timestamp.toObject(message.completionTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                            if (message.job != null && message.hasOwnProperty("job"))
                                object.job = message.job;
                            if (message.execution != null && message.hasOwnProperty("execution"))
                                object.execution = message.execution;
                            if (message.containers && message.containers.length) {
                                object.containers = [];
                                for (var j = 0; j < message.containers.length; ++j)
                                    object.containers[j] = $root.google.cloud.run.v2.Container.toObject(message.containers[j], options);
                            }
                            if (message.volumes && message.volumes.length) {
                                object.volumes = [];
                                for (var j = 0; j < message.volumes.length; ++j)
                                    object.volumes[j] = $root.google.cloud.run.v2.Volume.toObject(message.volumes[j], options);
                            }
                            if (message.maxRetries != null && message.hasOwnProperty("maxRetries"))
                                object.maxRetries = message.maxRetries;
                            if (message.timeout != null && message.hasOwnProperty("timeout"))
                                object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            if (message.executionEnvironment != null && message.hasOwnProperty("executionEnvironment"))
                                object.executionEnvironment = options.enums === String ? $root.google.cloud.run.v2.ExecutionEnvironment[message.executionEnvironment] === undefined ? message.executionEnvironment : $root.google.cloud.run.v2.ExecutionEnvironment[message.executionEnvironment] : message.executionEnvironment;
                            if (message.reconciling != null && message.hasOwnProperty("reconciling"))
                                object.reconciling = message.reconciling;
                            if (message.conditions && message.conditions.length) {
                                object.conditions = [];
                                for (var j = 0; j < message.conditions.length; ++j)
                                    object.conditions[j] = $root.google.cloud.run.v2.Condition.toObject(message.conditions[j], options);
                            }
                            if (message.observedGeneration != null && message.hasOwnProperty("observedGeneration"))
                                if (typeof message.observedGeneration === "number")
                                    object.observedGeneration = options.longs === String ? String(message.observedGeneration) : message.observedGeneration;
                                else
                                    object.observedGeneration = options.longs === String ? $util.Long.prototype.toString.call(message.observedGeneration) : options.longs === Number ? new $util.LongBits(message.observedGeneration.low >>> 0, message.observedGeneration.high >>> 0).toNumber() : message.observedGeneration;
                            if (message.index != null && message.hasOwnProperty("index"))
                                object.index = message.index;
                            if (message.retried != null && message.hasOwnProperty("retried"))
                                object.retried = message.retried;
                            if (message.lastAttemptResult != null && message.hasOwnProperty("lastAttemptResult"))
                                object.lastAttemptResult = $root.google.cloud.run.v2.TaskAttemptResult.toObject(message.lastAttemptResult, options);
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.encryptionKey != null && message.hasOwnProperty("encryptionKey"))
                                object.encryptionKey = message.encryptionKey;
                            if (message.vpcAccess != null && message.hasOwnProperty("vpcAccess"))
                                object.vpcAccess = $root.google.cloud.run.v2.VpcAccess.toObject(message.vpcAccess, options);
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this Task to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.Task
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Task.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Task
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.Task
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Task.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.Task";
                        };
    
                        return Task;
                    })();
    
                    v2.TaskAttemptResult = (function() {
    
                        /**
                         * Properties of a TaskAttemptResult.
                         * @memberof google.cloud.run.v2
                         * @interface ITaskAttemptResult
                         * @property {google.rpc.IStatus|null} [status] TaskAttemptResult status
                         * @property {number|null} [exitCode] TaskAttemptResult exitCode
                         */
    
                        /**
                         * Constructs a new TaskAttemptResult.
                         * @memberof google.cloud.run.v2
                         * @classdesc Represents a TaskAttemptResult.
                         * @implements ITaskAttemptResult
                         * @constructor
                         * @param {google.cloud.run.v2.ITaskAttemptResult=} [properties] Properties to set
                         */
                        function TaskAttemptResult(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TaskAttemptResult status.
                         * @member {google.rpc.IStatus|null|undefined} status
                         * @memberof google.cloud.run.v2.TaskAttemptResult
                         * @instance
                         */
                        TaskAttemptResult.prototype.status = null;
    
                        /**
                         * TaskAttemptResult exitCode.
                         * @member {number} exitCode
                         * @memberof google.cloud.run.v2.TaskAttemptResult
                         * @instance
                         */
                        TaskAttemptResult.prototype.exitCode = 0;
    
                        /**
                         * Creates a new TaskAttemptResult instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.run.v2.TaskAttemptResult
                         * @static
                         * @param {google.cloud.run.v2.ITaskAttemptResult=} [properties] Properties to set
                         * @returns {google.cloud.run.v2.TaskAttemptResult} TaskAttemptResult instance
                         */
                        TaskAttemptResult.create = function create(properties) {
                            return new TaskAttemptResult(properties);
                        };
    
                        /**
                         * Encodes the specified TaskAttemptResult message. Does not implicitly {@link google.cloud.run.v2.TaskAttemptResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.run.v2.TaskAttemptResult
                         * @static
                         * @param {google.cloud.run.v2.ITaskAttemptResult} message TaskAttemptResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TaskAttemptResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                $root.google.rpc.Status.encode(message.status, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.exitCode != null && Object.hasOwnProperty.call(message, "exitCode"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.exitCode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TaskAttemptResult message, length delimited. Does not implicitly {@link google.cloud.run.v2.TaskAttemptResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.run.v2.TaskAttemptResult
                         * @static
                         * @param {google.cloud.run.v2.ITaskAttemptResult} message TaskAttemptResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TaskAttemptResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TaskAttemptResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.run.v2.TaskAttemptResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.run.v2.TaskAttemptResult} TaskAttemptResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TaskAttemptResult.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.run.v2.TaskAttemptResult();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.status = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.exitCode = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TaskAttemptResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.run.v2.TaskAttemptResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.run.v2.TaskAttemptResult} TaskAttemptResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TaskAttemptResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TaskAttemptResult message.
                         * @function verify
                         * @memberof google.cloud.run.v2.TaskAttemptResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TaskAttemptResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.status != null && message.hasOwnProperty("status")) {
                                var error = $root.google.rpc.Status.verify(message.status);
                                if (error)
                                    return "status." + error;
                            }
                            if (message.exitCode != null && message.hasOwnProperty("exitCode"))
                                if (!$util.isInteger(message.exitCode))
                                    return "exitCode: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a TaskAttemptResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.run.v2.TaskAttemptResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.run.v2.TaskAttemptResult} TaskAttemptResult
                         */
                        TaskAttemptResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.run.v2.TaskAttemptResult)
                                return object;
                            var message = new $root.google.cloud.run.v2.TaskAttemptResult();
                            if (object.status != null) {
                                if (typeof object.status !== "object")
                                    throw TypeError(".google.cloud.run.v2.TaskAttemptResult.status: object expected");
                                message.status = $root.google.rpc.Status.fromObject(object.status);
                            }
                            if (object.exitCode != null)
                                message.exitCode = object.exitCode | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TaskAttemptResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.run.v2.TaskAttemptResult
                         * @static
                         * @param {google.cloud.run.v2.TaskAttemptResult} message TaskAttemptResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TaskAttemptResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.status = null;
                                object.exitCode = 0;
                            }
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = $root.google.rpc.Status.toObject(message.status, options);
                            if (message.exitCode != null && message.hasOwnProperty("exitCode"))
                                object.exitCode = message.exitCode;
                            return object;
                        };
    
                        /**
                         * Converts this TaskAttemptResult to JSON.
                         * @function toJSON
                         * @memberof google.cloud.run.v2.TaskAttemptResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TaskAttemptResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TaskAttemptResult
                         * @function getTypeUrl
                         * @memberof google.cloud.run.v2.TaskAttemptResult
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TaskAttemptResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.run.v2.TaskAttemptResult";
                        };
    
                        return TaskAttemptResult;
                    })();
    
                    return v2;
                })();
    
                return run;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            /**
             * LaunchStage enum.
             * @name google.api.LaunchStage
             * @enum {number}
             * @property {number} LAUNCH_STAGE_UNSPECIFIED=0 LAUNCH_STAGE_UNSPECIFIED value
             * @property {number} UNIMPLEMENTED=6 UNIMPLEMENTED value
             * @property {number} PRELAUNCH=7 PRELAUNCH value
             * @property {number} EARLY_ACCESS=1 EARLY_ACCESS value
             * @property {number} ALPHA=2 ALPHA value
             * @property {number} BETA=3 BETA value
             * @property {number} GA=4 GA value
             * @property {number} DEPRECATED=5 DEPRECATED value
             */
            api.LaunchStage = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "LAUNCH_STAGE_UNSPECIFIED"] = 0;
                values[valuesById[6] = "UNIMPLEMENTED"] = 6;
                values[valuesById[7] = "PRELAUNCH"] = 7;
                values[valuesById[1] = "EARLY_ACCESS"] = 1;
                values[valuesById[2] = "ALPHA"] = 2;
                values[valuesById[3] = "BETA"] = 3;
                values[valuesById[4] = "GA"] = 4;
                values[valuesById[5] = "DEPRECATED"] = 5;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            api.RoutingRule = (function() {
    
                /**
                 * Properties of a RoutingRule.
                 * @memberof google.api
                 * @interface IRoutingRule
                 * @property {Array.<google.api.IRoutingParameter>|null} [routingParameters] RoutingRule routingParameters
                 */
    
                /**
                 * Constructs a new RoutingRule.
                 * @memberof google.api
                 * @classdesc Represents a RoutingRule.
                 * @implements IRoutingRule
                 * @constructor
                 * @param {google.api.IRoutingRule=} [properties] Properties to set
                 */
                function RoutingRule(properties) {
                    this.routingParameters = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RoutingRule routingParameters.
                 * @member {Array.<google.api.IRoutingParameter>} routingParameters
                 * @memberof google.api.RoutingRule
                 * @instance
                 */
                RoutingRule.prototype.routingParameters = $util.emptyArray;
    
                /**
                 * Creates a new RoutingRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {google.api.IRoutingRule=} [properties] Properties to set
                 * @returns {google.api.RoutingRule} RoutingRule instance
                 */
                RoutingRule.create = function create(properties) {
                    return new RoutingRule(properties);
                };
    
                /**
                 * Encodes the specified RoutingRule message. Does not implicitly {@link google.api.RoutingRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {google.api.IRoutingRule} message RoutingRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RoutingRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.routingParameters != null && message.routingParameters.length)
                        for (var i = 0; i < message.routingParameters.length; ++i)
                            $root.google.api.RoutingParameter.encode(message.routingParameters[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified RoutingRule message, length delimited. Does not implicitly {@link google.api.RoutingRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {google.api.IRoutingRule} message RoutingRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RoutingRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RoutingRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.RoutingRule} RoutingRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RoutingRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.RoutingRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.routingParameters && message.routingParameters.length))
                                    message.routingParameters = [];
                                message.routingParameters.push($root.google.api.RoutingParameter.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RoutingRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.RoutingRule} RoutingRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RoutingRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RoutingRule message.
                 * @function verify
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RoutingRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.routingParameters != null && message.hasOwnProperty("routingParameters")) {
                        if (!Array.isArray(message.routingParameters))
                            return "routingParameters: array expected";
                        for (var i = 0; i < message.routingParameters.length; ++i) {
                            var error = $root.google.api.RoutingParameter.verify(message.routingParameters[i]);
                            if (error)
                                return "routingParameters." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a RoutingRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.RoutingRule} RoutingRule
                 */
                RoutingRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.RoutingRule)
                        return object;
                    var message = new $root.google.api.RoutingRule();
                    if (object.routingParameters) {
                        if (!Array.isArray(object.routingParameters))
                            throw TypeError(".google.api.RoutingRule.routingParameters: array expected");
                        message.routingParameters = [];
                        for (var i = 0; i < object.routingParameters.length; ++i) {
                            if (typeof object.routingParameters[i] !== "object")
                                throw TypeError(".google.api.RoutingRule.routingParameters: object expected");
                            message.routingParameters[i] = $root.google.api.RoutingParameter.fromObject(object.routingParameters[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a RoutingRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {google.api.RoutingRule} message RoutingRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RoutingRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.routingParameters = [];
                    if (message.routingParameters && message.routingParameters.length) {
                        object.routingParameters = [];
                        for (var j = 0; j < message.routingParameters.length; ++j)
                            object.routingParameters[j] = $root.google.api.RoutingParameter.toObject(message.routingParameters[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this RoutingRule to JSON.
                 * @function toJSON
                 * @memberof google.api.RoutingRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RoutingRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RoutingRule
                 * @function getTypeUrl
                 * @memberof google.api.RoutingRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RoutingRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.RoutingRule";
                };
    
                return RoutingRule;
            })();
    
            api.RoutingParameter = (function() {
    
                /**
                 * Properties of a RoutingParameter.
                 * @memberof google.api
                 * @interface IRoutingParameter
                 * @property {string|null} [field] RoutingParameter field
                 * @property {string|null} [pathTemplate] RoutingParameter pathTemplate
                 */
    
                /**
                 * Constructs a new RoutingParameter.
                 * @memberof google.api
                 * @classdesc Represents a RoutingParameter.
                 * @implements IRoutingParameter
                 * @constructor
                 * @param {google.api.IRoutingParameter=} [properties] Properties to set
                 */
                function RoutingParameter(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RoutingParameter field.
                 * @member {string} field
                 * @memberof google.api.RoutingParameter
                 * @instance
                 */
                RoutingParameter.prototype.field = "";
    
                /**
                 * RoutingParameter pathTemplate.
                 * @member {string} pathTemplate
                 * @memberof google.api.RoutingParameter
                 * @instance
                 */
                RoutingParameter.prototype.pathTemplate = "";
    
                /**
                 * Creates a new RoutingParameter instance using the specified properties.
                 * @function create
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {google.api.IRoutingParameter=} [properties] Properties to set
                 * @returns {google.api.RoutingParameter} RoutingParameter instance
                 */
                RoutingParameter.create = function create(properties) {
                    return new RoutingParameter(properties);
                };
    
                /**
                 * Encodes the specified RoutingParameter message. Does not implicitly {@link google.api.RoutingParameter.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {google.api.IRoutingParameter} message RoutingParameter message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RoutingParameter.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.field != null && Object.hasOwnProperty.call(message, "field"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.field);
                    if (message.pathTemplate != null && Object.hasOwnProperty.call(message, "pathTemplate"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.pathTemplate);
                    return writer;
                };
    
                /**
                 * Encodes the specified RoutingParameter message, length delimited. Does not implicitly {@link google.api.RoutingParameter.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {google.api.IRoutingParameter} message RoutingParameter message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RoutingParameter.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RoutingParameter message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.RoutingParameter} RoutingParameter
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RoutingParameter.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.RoutingParameter();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.field = reader.string();
                                break;
                            }
                        case 2: {
                                message.pathTemplate = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RoutingParameter message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.RoutingParameter} RoutingParameter
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RoutingParameter.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RoutingParameter message.
                 * @function verify
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RoutingParameter.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.field != null && message.hasOwnProperty("field"))
                        if (!$util.isString(message.field))
                            return "field: string expected";
                    if (message.pathTemplate != null && message.hasOwnProperty("pathTemplate"))
                        if (!$util.isString(message.pathTemplate))
                            return "pathTemplate: string expected";
                    return null;
                };
    
                /**
                 * Creates a RoutingParameter message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.RoutingParameter} RoutingParameter
                 */
                RoutingParameter.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.RoutingParameter)
                        return object;
                    var message = new $root.google.api.RoutingParameter();
                    if (object.field != null)
                        message.field = String(object.field);
                    if (object.pathTemplate != null)
                        message.pathTemplate = String(object.pathTemplate);
                    return message;
                };
    
                /**
                 * Creates a plain object from a RoutingParameter message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {google.api.RoutingParameter} message RoutingParameter
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RoutingParameter.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.field = "";
                        object.pathTemplate = "";
                    }
                    if (message.field != null && message.hasOwnProperty("field"))
                        object.field = message.field;
                    if (message.pathTemplate != null && message.hasOwnProperty("pathTemplate"))
                        object.pathTemplate = message.pathTemplate;
                    return object;
                };
    
                /**
                 * Converts this RoutingParameter to JSON.
                 * @function toJSON
                 * @memberof google.api.RoutingParameter
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RoutingParameter.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RoutingParameter
                 * @function getTypeUrl
                 * @memberof google.api.RoutingParameter
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RoutingParameter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.RoutingParameter";
                };
    
                return RoutingParameter;
            })();
    
            return api;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.done = reader.bool();
                                break;
                            }
                        case 4: {
                                message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Operation
                 * @function getTypeUrl
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Operation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.Operation";
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GetOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GetOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.GetOperationRequest";
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 4: {
                                message.name = reader.string();
                                break;
                            }
                        case 1: {
                                message.filter = reader.string();
                                break;
                            }
                        case 2: {
                                message.pageSize = reader.int32();
                                break;
                            }
                        case 3: {
                                message.pageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsRequest";
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operations && message.operations.length))
                                    message.operations = [];
                                message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.nextPageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsResponse
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsResponse";
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CancelOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CancelOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.CancelOperationRequest";
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DeleteOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DeleteOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.DeleteOperationRequest";
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for WaitOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                WaitOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.WaitOperationRequest";
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && Object.hasOwnProperty.call(message, "responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && Object.hasOwnProperty.call(message, "metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.responseType = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadataType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OperationInfo
                 * @function getTypeUrl
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OperationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.OperationInfo";
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        google.iam = (function() {
    
            /**
             * Namespace iam.
             * @memberof google
             * @namespace
             */
            var iam = {};
    
            iam.v1 = (function() {
    
                /**
                 * Namespace v1.
                 * @memberof google.iam
                 * @namespace
                 */
                var v1 = {};
    
                v1.IAMPolicy = (function() {
    
                    /**
                     * Constructs a new IAMPolicy service.
                     * @memberof google.iam.v1
                     * @classdesc Represents a IAMPolicy
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function IAMPolicy(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (IAMPolicy.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = IAMPolicy;
    
                    /**
                     * Creates new IAMPolicy service using the specified rpc implementation.
                     * @function create
                     * @memberof google.iam.v1.IAMPolicy
                     * @static
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     * @returns {IAMPolicy} RPC service. Useful where requests and/or responses are streamed.
                     */
                    IAMPolicy.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                        return new this(rpcImpl, requestDelimited, responseDelimited);
                    };
    
                    /**
                     * Callback as used by {@link google.iam.v1.IAMPolicy|setIamPolicy}.
                     * @memberof google.iam.v1.IAMPolicy
                     * @typedef SetIamPolicyCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.iam.v1.Policy} [response] Policy
                     */
    
                    /**
                     * Calls SetIamPolicy.
                     * @function setIamPolicy
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                     * @param {google.iam.v1.IAMPolicy.SetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(IAMPolicy.prototype.setIamPolicy = function setIamPolicy(request, callback) {
                        return this.rpcCall(setIamPolicy, $root.google.iam.v1.SetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                    }, "name", { value: "SetIamPolicy" });
    
                    /**
                     * Calls SetIamPolicy.
                     * @function setIamPolicy
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                     * @returns {Promise<google.iam.v1.Policy>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.iam.v1.IAMPolicy|getIamPolicy}.
                     * @memberof google.iam.v1.IAMPolicy
                     * @typedef GetIamPolicyCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.iam.v1.Policy} [response] Policy
                     */
    
                    /**
                     * Calls GetIamPolicy.
                     * @function getIamPolicy
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                     * @param {google.iam.v1.IAMPolicy.GetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(IAMPolicy.prototype.getIamPolicy = function getIamPolicy(request, callback) {
                        return this.rpcCall(getIamPolicy, $root.google.iam.v1.GetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                    }, "name", { value: "GetIamPolicy" });
    
                    /**
                     * Calls GetIamPolicy.
                     * @function getIamPolicy
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                     * @returns {Promise<google.iam.v1.Policy>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.iam.v1.IAMPolicy|testIamPermissions}.
                     * @memberof google.iam.v1.IAMPolicy
                     * @typedef TestIamPermissionsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.iam.v1.TestIamPermissionsResponse} [response] TestIamPermissionsResponse
                     */
    
                    /**
                     * Calls TestIamPermissions.
                     * @function testIamPermissions
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                     * @param {google.iam.v1.IAMPolicy.TestIamPermissionsCallback} callback Node-style callback called with the error, if any, and TestIamPermissionsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(IAMPolicy.prototype.testIamPermissions = function testIamPermissions(request, callback) {
                        return this.rpcCall(testIamPermissions, $root.google.iam.v1.TestIamPermissionsRequest, $root.google.iam.v1.TestIamPermissionsResponse, request, callback);
                    }, "name", { value: "TestIamPermissions" });
    
                    /**
                     * Calls TestIamPermissions.
                     * @function testIamPermissions
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                     * @returns {Promise<google.iam.v1.TestIamPermissionsResponse>} Promise
                     * @variation 2
                     */
    
                    return IAMPolicy;
                })();
    
                v1.SetIamPolicyRequest = (function() {
    
                    /**
                     * Properties of a SetIamPolicyRequest.
                     * @memberof google.iam.v1
                     * @interface ISetIamPolicyRequest
                     * @property {string|null} [resource] SetIamPolicyRequest resource
                     * @property {google.iam.v1.IPolicy|null} [policy] SetIamPolicyRequest policy
                     * @property {google.protobuf.IFieldMask|null} [updateMask] SetIamPolicyRequest updateMask
                     */
    
                    /**
                     * Constructs a new SetIamPolicyRequest.
                     * @memberof google.iam.v1
                     * @classdesc Represents a SetIamPolicyRequest.
                     * @implements ISetIamPolicyRequest
                     * @constructor
                     * @param {google.iam.v1.ISetIamPolicyRequest=} [properties] Properties to set
                     */
                    function SetIamPolicyRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SetIamPolicyRequest resource.
                     * @member {string} resource
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @instance
                     */
                    SetIamPolicyRequest.prototype.resource = "";
    
                    /**
                     * SetIamPolicyRequest policy.
                     * @member {google.iam.v1.IPolicy|null|undefined} policy
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @instance
                     */
                    SetIamPolicyRequest.prototype.policy = null;
    
                    /**
                     * SetIamPolicyRequest updateMask.
                     * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @instance
                     */
                    SetIamPolicyRequest.prototype.updateMask = null;
    
                    /**
                     * Creates a new SetIamPolicyRequest instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.ISetIamPolicyRequest=} [properties] Properties to set
                     * @returns {google.iam.v1.SetIamPolicyRequest} SetIamPolicyRequest instance
                     */
                    SetIamPolicyRequest.create = function create(properties) {
                        return new SetIamPolicyRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SetIamPolicyRequest message. Does not implicitly {@link google.iam.v1.SetIamPolicyRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.ISetIamPolicyRequest} message SetIamPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetIamPolicyRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resource);
                        if (message.policy != null && Object.hasOwnProperty.call(message, "policy"))
                            $root.google.iam.v1.Policy.encode(message.policy, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                            $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SetIamPolicyRequest message, length delimited. Does not implicitly {@link google.iam.v1.SetIamPolicyRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.ISetIamPolicyRequest} message SetIamPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetIamPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SetIamPolicyRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.SetIamPolicyRequest} SetIamPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetIamPolicyRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.SetIamPolicyRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.resource = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.policy = $root.google.iam.v1.Policy.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SetIamPolicyRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.SetIamPolicyRequest} SetIamPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetIamPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SetIamPolicyRequest message.
                     * @function verify
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SetIamPolicyRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            if (!$util.isString(message.resource))
                                return "resource: string expected";
                        if (message.policy != null && message.hasOwnProperty("policy")) {
                            var error = $root.google.iam.v1.Policy.verify(message.policy);
                            if (error)
                                return "policy." + error;
                        }
                        if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                            var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                            if (error)
                                return "updateMask." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a SetIamPolicyRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.SetIamPolicyRequest} SetIamPolicyRequest
                     */
                    SetIamPolicyRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.SetIamPolicyRequest)
                            return object;
                        var message = new $root.google.iam.v1.SetIamPolicyRequest();
                        if (object.resource != null)
                            message.resource = String(object.resource);
                        if (object.policy != null) {
                            if (typeof object.policy !== "object")
                                throw TypeError(".google.iam.v1.SetIamPolicyRequest.policy: object expected");
                            message.policy = $root.google.iam.v1.Policy.fromObject(object.policy);
                        }
                        if (object.updateMask != null) {
                            if (typeof object.updateMask !== "object")
                                throw TypeError(".google.iam.v1.SetIamPolicyRequest.updateMask: object expected");
                            message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SetIamPolicyRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.SetIamPolicyRequest} message SetIamPolicyRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SetIamPolicyRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.resource = "";
                            object.policy = null;
                            object.updateMask = null;
                        }
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            object.resource = message.resource;
                        if (message.policy != null && message.hasOwnProperty("policy"))
                            object.policy = $root.google.iam.v1.Policy.toObject(message.policy, options);
                        if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                            object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                        return object;
                    };
    
                    /**
                     * Converts this SetIamPolicyRequest to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SetIamPolicyRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SetIamPolicyRequest
                     * @function getTypeUrl
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SetIamPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.SetIamPolicyRequest";
                    };
    
                    return SetIamPolicyRequest;
                })();
    
                v1.GetIamPolicyRequest = (function() {
    
                    /**
                     * Properties of a GetIamPolicyRequest.
                     * @memberof google.iam.v1
                     * @interface IGetIamPolicyRequest
                     * @property {string|null} [resource] GetIamPolicyRequest resource
                     * @property {google.iam.v1.IGetPolicyOptions|null} [options] GetIamPolicyRequest options
                     */
    
                    /**
                     * Constructs a new GetIamPolicyRequest.
                     * @memberof google.iam.v1
                     * @classdesc Represents a GetIamPolicyRequest.
                     * @implements IGetIamPolicyRequest
                     * @constructor
                     * @param {google.iam.v1.IGetIamPolicyRequest=} [properties] Properties to set
                     */
                    function GetIamPolicyRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetIamPolicyRequest resource.
                     * @member {string} resource
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @instance
                     */
                    GetIamPolicyRequest.prototype.resource = "";
    
                    /**
                     * GetIamPolicyRequest options.
                     * @member {google.iam.v1.IGetPolicyOptions|null|undefined} options
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @instance
                     */
                    GetIamPolicyRequest.prototype.options = null;
    
                    /**
                     * Creates a new GetIamPolicyRequest instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.IGetIamPolicyRequest=} [properties] Properties to set
                     * @returns {google.iam.v1.GetIamPolicyRequest} GetIamPolicyRequest instance
                     */
                    GetIamPolicyRequest.create = function create(properties) {
                        return new GetIamPolicyRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetIamPolicyRequest message. Does not implicitly {@link google.iam.v1.GetIamPolicyRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.IGetIamPolicyRequest} message GetIamPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetIamPolicyRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resource);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.iam.v1.GetPolicyOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetIamPolicyRequest message, length delimited. Does not implicitly {@link google.iam.v1.GetIamPolicyRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.IGetIamPolicyRequest} message GetIamPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetIamPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetIamPolicyRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.GetIamPolicyRequest} GetIamPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetIamPolicyRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.GetIamPolicyRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.resource = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.options = $root.google.iam.v1.GetPolicyOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetIamPolicyRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.GetIamPolicyRequest} GetIamPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetIamPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetIamPolicyRequest message.
                     * @function verify
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetIamPolicyRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            if (!$util.isString(message.resource))
                                return "resource: string expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.iam.v1.GetPolicyOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a GetIamPolicyRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.GetIamPolicyRequest} GetIamPolicyRequest
                     */
                    GetIamPolicyRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.GetIamPolicyRequest)
                            return object;
                        var message = new $root.google.iam.v1.GetIamPolicyRequest();
                        if (object.resource != null)
                            message.resource = String(object.resource);
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.iam.v1.GetIamPolicyRequest.options: object expected");
                            message.options = $root.google.iam.v1.GetPolicyOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetIamPolicyRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.GetIamPolicyRequest} message GetIamPolicyRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetIamPolicyRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.resource = "";
                            object.options = null;
                        }
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            object.resource = message.resource;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.iam.v1.GetPolicyOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this GetIamPolicyRequest to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetIamPolicyRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetIamPolicyRequest
                     * @function getTypeUrl
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetIamPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.GetIamPolicyRequest";
                    };
    
                    return GetIamPolicyRequest;
                })();
    
                v1.TestIamPermissionsRequest = (function() {
    
                    /**
                     * Properties of a TestIamPermissionsRequest.
                     * @memberof google.iam.v1
                     * @interface ITestIamPermissionsRequest
                     * @property {string|null} [resource] TestIamPermissionsRequest resource
                     * @property {Array.<string>|null} [permissions] TestIamPermissionsRequest permissions
                     */
    
                    /**
                     * Constructs a new TestIamPermissionsRequest.
                     * @memberof google.iam.v1
                     * @classdesc Represents a TestIamPermissionsRequest.
                     * @implements ITestIamPermissionsRequest
                     * @constructor
                     * @param {google.iam.v1.ITestIamPermissionsRequest=} [properties] Properties to set
                     */
                    function TestIamPermissionsRequest(properties) {
                        this.permissions = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TestIamPermissionsRequest resource.
                     * @member {string} resource
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @instance
                     */
                    TestIamPermissionsRequest.prototype.resource = "";
    
                    /**
                     * TestIamPermissionsRequest permissions.
                     * @member {Array.<string>} permissions
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @instance
                     */
                    TestIamPermissionsRequest.prototype.permissions = $util.emptyArray;
    
                    /**
                     * Creates a new TestIamPermissionsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsRequest=} [properties] Properties to set
                     * @returns {google.iam.v1.TestIamPermissionsRequest} TestIamPermissionsRequest instance
                     */
                    TestIamPermissionsRequest.create = function create(properties) {
                        return new TestIamPermissionsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified TestIamPermissionsRequest message. Does not implicitly {@link google.iam.v1.TestIamPermissionsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsRequest} message TestIamPermissionsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TestIamPermissionsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resource);
                        if (message.permissions != null && message.permissions.length)
                            for (var i = 0; i < message.permissions.length; ++i)
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.permissions[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TestIamPermissionsRequest message, length delimited. Does not implicitly {@link google.iam.v1.TestIamPermissionsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsRequest} message TestIamPermissionsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TestIamPermissionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TestIamPermissionsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.TestIamPermissionsRequest} TestIamPermissionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TestIamPermissionsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.TestIamPermissionsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.resource = reader.string();
                                    break;
                                }
                            case 2: {
                                    if (!(message.permissions && message.permissions.length))
                                        message.permissions = [];
                                    message.permissions.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TestIamPermissionsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.TestIamPermissionsRequest} TestIamPermissionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TestIamPermissionsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TestIamPermissionsRequest message.
                     * @function verify
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TestIamPermissionsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            if (!$util.isString(message.resource))
                                return "resource: string expected";
                        if (message.permissions != null && message.hasOwnProperty("permissions")) {
                            if (!Array.isArray(message.permissions))
                                return "permissions: array expected";
                            for (var i = 0; i < message.permissions.length; ++i)
                                if (!$util.isString(message.permissions[i]))
                                    return "permissions: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a TestIamPermissionsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.TestIamPermissionsRequest} TestIamPermissionsRequest
                     */
                    TestIamPermissionsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.TestIamPermissionsRequest)
                            return object;
                        var message = new $root.google.iam.v1.TestIamPermissionsRequest();
                        if (object.resource != null)
                            message.resource = String(object.resource);
                        if (object.permissions) {
                            if (!Array.isArray(object.permissions))
                                throw TypeError(".google.iam.v1.TestIamPermissionsRequest.permissions: array expected");
                            message.permissions = [];
                            for (var i = 0; i < object.permissions.length; ++i)
                                message.permissions[i] = String(object.permissions[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TestIamPermissionsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {google.iam.v1.TestIamPermissionsRequest} message TestIamPermissionsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TestIamPermissionsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.permissions = [];
                        if (options.defaults)
                            object.resource = "";
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            object.resource = message.resource;
                        if (message.permissions && message.permissions.length) {
                            object.permissions = [];
                            for (var j = 0; j < message.permissions.length; ++j)
                                object.permissions[j] = message.permissions[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this TestIamPermissionsRequest to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TestIamPermissionsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TestIamPermissionsRequest
                     * @function getTypeUrl
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TestIamPermissionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.TestIamPermissionsRequest";
                    };
    
                    return TestIamPermissionsRequest;
                })();
    
                v1.TestIamPermissionsResponse = (function() {
    
                    /**
                     * Properties of a TestIamPermissionsResponse.
                     * @memberof google.iam.v1
                     * @interface ITestIamPermissionsResponse
                     * @property {Array.<string>|null} [permissions] TestIamPermissionsResponse permissions
                     */
    
                    /**
                     * Constructs a new TestIamPermissionsResponse.
                     * @memberof google.iam.v1
                     * @classdesc Represents a TestIamPermissionsResponse.
                     * @implements ITestIamPermissionsResponse
                     * @constructor
                     * @param {google.iam.v1.ITestIamPermissionsResponse=} [properties] Properties to set
                     */
                    function TestIamPermissionsResponse(properties) {
                        this.permissions = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TestIamPermissionsResponse permissions.
                     * @member {Array.<string>} permissions
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @instance
                     */
                    TestIamPermissionsResponse.prototype.permissions = $util.emptyArray;
    
                    /**
                     * Creates a new TestIamPermissionsResponse instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsResponse=} [properties] Properties to set
                     * @returns {google.iam.v1.TestIamPermissionsResponse} TestIamPermissionsResponse instance
                     */
                    TestIamPermissionsResponse.create = function create(properties) {
                        return new TestIamPermissionsResponse(properties);
                    };
    
                    /**
                     * Encodes the specified TestIamPermissionsResponse message. Does not implicitly {@link google.iam.v1.TestIamPermissionsResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsResponse} message TestIamPermissionsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TestIamPermissionsResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.permissions != null && message.permissions.length)
                            for (var i = 0; i < message.permissions.length; ++i)
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.permissions[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TestIamPermissionsResponse message, length delimited. Does not implicitly {@link google.iam.v1.TestIamPermissionsResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsResponse} message TestIamPermissionsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TestIamPermissionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TestIamPermissionsResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.TestIamPermissionsResponse} TestIamPermissionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TestIamPermissionsResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.TestIamPermissionsResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.permissions && message.permissions.length))
                                        message.permissions = [];
                                    message.permissions.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TestIamPermissionsResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.TestIamPermissionsResponse} TestIamPermissionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TestIamPermissionsResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TestIamPermissionsResponse message.
                     * @function verify
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TestIamPermissionsResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.permissions != null && message.hasOwnProperty("permissions")) {
                            if (!Array.isArray(message.permissions))
                                return "permissions: array expected";
                            for (var i = 0; i < message.permissions.length; ++i)
                                if (!$util.isString(message.permissions[i]))
                                    return "permissions: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a TestIamPermissionsResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.TestIamPermissionsResponse} TestIamPermissionsResponse
                     */
                    TestIamPermissionsResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.TestIamPermissionsResponse)
                            return object;
                        var message = new $root.google.iam.v1.TestIamPermissionsResponse();
                        if (object.permissions) {
                            if (!Array.isArray(object.permissions))
                                throw TypeError(".google.iam.v1.TestIamPermissionsResponse.permissions: array expected");
                            message.permissions = [];
                            for (var i = 0; i < object.permissions.length; ++i)
                                message.permissions[i] = String(object.permissions[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TestIamPermissionsResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {google.iam.v1.TestIamPermissionsResponse} message TestIamPermissionsResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TestIamPermissionsResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.permissions = [];
                        if (message.permissions && message.permissions.length) {
                            object.permissions = [];
                            for (var j = 0; j < message.permissions.length; ++j)
                                object.permissions[j] = message.permissions[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this TestIamPermissionsResponse to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TestIamPermissionsResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TestIamPermissionsResponse
                     * @function getTypeUrl
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TestIamPermissionsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.TestIamPermissionsResponse";
                    };
    
                    return TestIamPermissionsResponse;
                })();
    
                v1.GetPolicyOptions = (function() {
    
                    /**
                     * Properties of a GetPolicyOptions.
                     * @memberof google.iam.v1
                     * @interface IGetPolicyOptions
                     * @property {number|null} [requestedPolicyVersion] GetPolicyOptions requestedPolicyVersion
                     */
    
                    /**
                     * Constructs a new GetPolicyOptions.
                     * @memberof google.iam.v1
                     * @classdesc Represents a GetPolicyOptions.
                     * @implements IGetPolicyOptions
                     * @constructor
                     * @param {google.iam.v1.IGetPolicyOptions=} [properties] Properties to set
                     */
                    function GetPolicyOptions(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetPolicyOptions requestedPolicyVersion.
                     * @member {number} requestedPolicyVersion
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @instance
                     */
                    GetPolicyOptions.prototype.requestedPolicyVersion = 0;
    
                    /**
                     * Creates a new GetPolicyOptions instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {google.iam.v1.IGetPolicyOptions=} [properties] Properties to set
                     * @returns {google.iam.v1.GetPolicyOptions} GetPolicyOptions instance
                     */
                    GetPolicyOptions.create = function create(properties) {
                        return new GetPolicyOptions(properties);
                    };
    
                    /**
                     * Encodes the specified GetPolicyOptions message. Does not implicitly {@link google.iam.v1.GetPolicyOptions.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {google.iam.v1.IGetPolicyOptions} message GetPolicyOptions message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetPolicyOptions.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.requestedPolicyVersion != null && Object.hasOwnProperty.call(message, "requestedPolicyVersion"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.requestedPolicyVersion);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetPolicyOptions message, length delimited. Does not implicitly {@link google.iam.v1.GetPolicyOptions.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {google.iam.v1.IGetPolicyOptions} message GetPolicyOptions message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetPolicyOptions.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetPolicyOptions message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.GetPolicyOptions} GetPolicyOptions
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetPolicyOptions.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.GetPolicyOptions();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.requestedPolicyVersion = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetPolicyOptions message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.GetPolicyOptions} GetPolicyOptions
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetPolicyOptions.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetPolicyOptions message.
                     * @function verify
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetPolicyOptions.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.requestedPolicyVersion != null && message.hasOwnProperty("requestedPolicyVersion"))
                            if (!$util.isInteger(message.requestedPolicyVersion))
                                return "requestedPolicyVersion: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetPolicyOptions message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.GetPolicyOptions} GetPolicyOptions
                     */
                    GetPolicyOptions.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.GetPolicyOptions)
                            return object;
                        var message = new $root.google.iam.v1.GetPolicyOptions();
                        if (object.requestedPolicyVersion != null)
                            message.requestedPolicyVersion = object.requestedPolicyVersion | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetPolicyOptions message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {google.iam.v1.GetPolicyOptions} message GetPolicyOptions
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetPolicyOptions.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.requestedPolicyVersion = 0;
                        if (message.requestedPolicyVersion != null && message.hasOwnProperty("requestedPolicyVersion"))
                            object.requestedPolicyVersion = message.requestedPolicyVersion;
                        return object;
                    };
    
                    /**
                     * Converts this GetPolicyOptions to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetPolicyOptions.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetPolicyOptions
                     * @function getTypeUrl
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetPolicyOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.GetPolicyOptions";
                    };
    
                    return GetPolicyOptions;
                })();
    
                v1.Policy = (function() {
    
                    /**
                     * Properties of a Policy.
                     * @memberof google.iam.v1
                     * @interface IPolicy
                     * @property {number|null} [version] Policy version
                     * @property {Array.<google.iam.v1.IBinding>|null} [bindings] Policy bindings
                     * @property {Array.<google.iam.v1.IAuditConfig>|null} [auditConfigs] Policy auditConfigs
                     * @property {Uint8Array|null} [etag] Policy etag
                     */
    
                    /**
                     * Constructs a new Policy.
                     * @memberof google.iam.v1
                     * @classdesc Represents a Policy.
                     * @implements IPolicy
                     * @constructor
                     * @param {google.iam.v1.IPolicy=} [properties] Properties to set
                     */
                    function Policy(properties) {
                        this.bindings = [];
                        this.auditConfigs = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Policy version.
                     * @member {number} version
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.version = 0;
    
                    /**
                     * Policy bindings.
                     * @member {Array.<google.iam.v1.IBinding>} bindings
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.bindings = $util.emptyArray;
    
                    /**
                     * Policy auditConfigs.
                     * @member {Array.<google.iam.v1.IAuditConfig>} auditConfigs
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.auditConfigs = $util.emptyArray;
    
                    /**
                     * Policy etag.
                     * @member {Uint8Array} etag
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.etag = $util.newBuffer([]);
    
                    /**
                     * Creates a new Policy instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.IPolicy=} [properties] Properties to set
                     * @returns {google.iam.v1.Policy} Policy instance
                     */
                    Policy.create = function create(properties) {
                        return new Policy(properties);
                    };
    
                    /**
                     * Encodes the specified Policy message. Does not implicitly {@link google.iam.v1.Policy.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.IPolicy} message Policy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Policy.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.version);
                        if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.etag);
                        if (message.bindings != null && message.bindings.length)
                            for (var i = 0; i < message.bindings.length; ++i)
                                $root.google.iam.v1.Binding.encode(message.bindings[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.auditConfigs != null && message.auditConfigs.length)
                            for (var i = 0; i < message.auditConfigs.length; ++i)
                                $root.google.iam.v1.AuditConfig.encode(message.auditConfigs[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Policy message, length delimited. Does not implicitly {@link google.iam.v1.Policy.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.IPolicy} message Policy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Policy.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Policy message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.Policy} Policy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Policy.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.Policy();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.version = reader.int32();
                                    break;
                                }
                            case 4: {
                                    if (!(message.bindings && message.bindings.length))
                                        message.bindings = [];
                                    message.bindings.push($root.google.iam.v1.Binding.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 6: {
                                    if (!(message.auditConfigs && message.auditConfigs.length))
                                        message.auditConfigs = [];
                                    message.auditConfigs.push($root.google.iam.v1.AuditConfig.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 3: {
                                    message.etag = reader.bytes();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Policy message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.Policy} Policy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Policy.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Policy message.
                     * @function verify
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Policy.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.version != null && message.hasOwnProperty("version"))
                            if (!$util.isInteger(message.version))
                                return "version: integer expected";
                        if (message.bindings != null && message.hasOwnProperty("bindings")) {
                            if (!Array.isArray(message.bindings))
                                return "bindings: array expected";
                            for (var i = 0; i < message.bindings.length; ++i) {
                                var error = $root.google.iam.v1.Binding.verify(message.bindings[i]);
                                if (error)
                                    return "bindings." + error;
                            }
                        }
                        if (message.auditConfigs != null && message.hasOwnProperty("auditConfigs")) {
                            if (!Array.isArray(message.auditConfigs))
                                return "auditConfigs: array expected";
                            for (var i = 0; i < message.auditConfigs.length; ++i) {
                                var error = $root.google.iam.v1.AuditConfig.verify(message.auditConfigs[i]);
                                if (error)
                                    return "auditConfigs." + error;
                            }
                        }
                        if (message.etag != null && message.hasOwnProperty("etag"))
                            if (!(message.etag && typeof message.etag.length === "number" || $util.isString(message.etag)))
                                return "etag: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a Policy message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.Policy} Policy
                     */
                    Policy.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.Policy)
                            return object;
                        var message = new $root.google.iam.v1.Policy();
                        if (object.version != null)
                            message.version = object.version | 0;
                        if (object.bindings) {
                            if (!Array.isArray(object.bindings))
                                throw TypeError(".google.iam.v1.Policy.bindings: array expected");
                            message.bindings = [];
                            for (var i = 0; i < object.bindings.length; ++i) {
                                if (typeof object.bindings[i] !== "object")
                                    throw TypeError(".google.iam.v1.Policy.bindings: object expected");
                                message.bindings[i] = $root.google.iam.v1.Binding.fromObject(object.bindings[i]);
                            }
                        }
                        if (object.auditConfigs) {
                            if (!Array.isArray(object.auditConfigs))
                                throw TypeError(".google.iam.v1.Policy.auditConfigs: array expected");
                            message.auditConfigs = [];
                            for (var i = 0; i < object.auditConfigs.length; ++i) {
                                if (typeof object.auditConfigs[i] !== "object")
                                    throw TypeError(".google.iam.v1.Policy.auditConfigs: object expected");
                                message.auditConfigs[i] = $root.google.iam.v1.AuditConfig.fromObject(object.auditConfigs[i]);
                            }
                        }
                        if (object.etag != null)
                            if (typeof object.etag === "string")
                                $util.base64.decode(object.etag, message.etag = $util.newBuffer($util.base64.length(object.etag)), 0);
                            else if (object.etag.length >= 0)
                                message.etag = object.etag;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Policy message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.Policy} message Policy
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Policy.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.bindings = [];
                            object.auditConfigs = [];
                        }
                        if (options.defaults) {
                            object.version = 0;
                            if (options.bytes === String)
                                object.etag = "";
                            else {
                                object.etag = [];
                                if (options.bytes !== Array)
                                    object.etag = $util.newBuffer(object.etag);
                            }
                        }
                        if (message.version != null && message.hasOwnProperty("version"))
                            object.version = message.version;
                        if (message.etag != null && message.hasOwnProperty("etag"))
                            object.etag = options.bytes === String ? $util.base64.encode(message.etag, 0, message.etag.length) : options.bytes === Array ? Array.prototype.slice.call(message.etag) : message.etag;
                        if (message.bindings && message.bindings.length) {
                            object.bindings = [];
                            for (var j = 0; j < message.bindings.length; ++j)
                                object.bindings[j] = $root.google.iam.v1.Binding.toObject(message.bindings[j], options);
                        }
                        if (message.auditConfigs && message.auditConfigs.length) {
                            object.auditConfigs = [];
                            for (var j = 0; j < message.auditConfigs.length; ++j)
                                object.auditConfigs[j] = $root.google.iam.v1.AuditConfig.toObject(message.auditConfigs[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Policy to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.Policy
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Policy.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Policy
                     * @function getTypeUrl
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Policy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.Policy";
                    };
    
                    return Policy;
                })();
    
                v1.Binding = (function() {
    
                    /**
                     * Properties of a Binding.
                     * @memberof google.iam.v1
                     * @interface IBinding
                     * @property {string|null} [role] Binding role
                     * @property {Array.<string>|null} [members] Binding members
                     * @property {google.type.IExpr|null} [condition] Binding condition
                     */
    
                    /**
                     * Constructs a new Binding.
                     * @memberof google.iam.v1
                     * @classdesc Represents a Binding.
                     * @implements IBinding
                     * @constructor
                     * @param {google.iam.v1.IBinding=} [properties] Properties to set
                     */
                    function Binding(properties) {
                        this.members = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Binding role.
                     * @member {string} role
                     * @memberof google.iam.v1.Binding
                     * @instance
                     */
                    Binding.prototype.role = "";
    
                    /**
                     * Binding members.
                     * @member {Array.<string>} members
                     * @memberof google.iam.v1.Binding
                     * @instance
                     */
                    Binding.prototype.members = $util.emptyArray;
    
                    /**
                     * Binding condition.
                     * @member {google.type.IExpr|null|undefined} condition
                     * @memberof google.iam.v1.Binding
                     * @instance
                     */
                    Binding.prototype.condition = null;
    
                    /**
                     * Creates a new Binding instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.IBinding=} [properties] Properties to set
                     * @returns {google.iam.v1.Binding} Binding instance
                     */
                    Binding.create = function create(properties) {
                        return new Binding(properties);
                    };
    
                    /**
                     * Encodes the specified Binding message. Does not implicitly {@link google.iam.v1.Binding.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.IBinding} message Binding message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Binding.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.role != null && Object.hasOwnProperty.call(message, "role"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.role);
                        if (message.members != null && message.members.length)
                            for (var i = 0; i < message.members.length; ++i)
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.members[i]);
                        if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                            $root.google.type.Expr.encode(message.condition, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Binding message, length delimited. Does not implicitly {@link google.iam.v1.Binding.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.IBinding} message Binding message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Binding.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Binding message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.Binding} Binding
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Binding.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.Binding();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.role = reader.string();
                                    break;
                                }
                            case 2: {
                                    if (!(message.members && message.members.length))
                                        message.members = [];
                                    message.members.push(reader.string());
                                    break;
                                }
                            case 3: {
                                    message.condition = $root.google.type.Expr.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Binding message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.Binding} Binding
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Binding.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Binding message.
                     * @function verify
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Binding.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.role != null && message.hasOwnProperty("role"))
                            if (!$util.isString(message.role))
                                return "role: string expected";
                        if (message.members != null && message.hasOwnProperty("members")) {
                            if (!Array.isArray(message.members))
                                return "members: array expected";
                            for (var i = 0; i < message.members.length; ++i)
                                if (!$util.isString(message.members[i]))
                                    return "members: string[] expected";
                        }
                        if (message.condition != null && message.hasOwnProperty("condition")) {
                            var error = $root.google.type.Expr.verify(message.condition);
                            if (error)
                                return "condition." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Binding message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.Binding} Binding
                     */
                    Binding.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.Binding)
                            return object;
                        var message = new $root.google.iam.v1.Binding();
                        if (object.role != null)
                            message.role = String(object.role);
                        if (object.members) {
                            if (!Array.isArray(object.members))
                                throw TypeError(".google.iam.v1.Binding.members: array expected");
                            message.members = [];
                            for (var i = 0; i < object.members.length; ++i)
                                message.members[i] = String(object.members[i]);
                        }
                        if (object.condition != null) {
                            if (typeof object.condition !== "object")
                                throw TypeError(".google.iam.v1.Binding.condition: object expected");
                            message.condition = $root.google.type.Expr.fromObject(object.condition);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Binding message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.Binding} message Binding
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Binding.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.members = [];
                        if (options.defaults) {
                            object.role = "";
                            object.condition = null;
                        }
                        if (message.role != null && message.hasOwnProperty("role"))
                            object.role = message.role;
                        if (message.members && message.members.length) {
                            object.members = [];
                            for (var j = 0; j < message.members.length; ++j)
                                object.members[j] = message.members[j];
                        }
                        if (message.condition != null && message.hasOwnProperty("condition"))
                            object.condition = $root.google.type.Expr.toObject(message.condition, options);
                        return object;
                    };
    
                    /**
                     * Converts this Binding to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.Binding
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Binding.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Binding
                     * @function getTypeUrl
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Binding.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.Binding";
                    };
    
                    return Binding;
                })();
    
                v1.AuditConfig = (function() {
    
                    /**
                     * Properties of an AuditConfig.
                     * @memberof google.iam.v1
                     * @interface IAuditConfig
                     * @property {string|null} [service] AuditConfig service
                     * @property {Array.<google.iam.v1.IAuditLogConfig>|null} [auditLogConfigs] AuditConfig auditLogConfigs
                     */
    
                    /**
                     * Constructs a new AuditConfig.
                     * @memberof google.iam.v1
                     * @classdesc Represents an AuditConfig.
                     * @implements IAuditConfig
                     * @constructor
                     * @param {google.iam.v1.IAuditConfig=} [properties] Properties to set
                     */
                    function AuditConfig(properties) {
                        this.auditLogConfigs = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AuditConfig service.
                     * @member {string} service
                     * @memberof google.iam.v1.AuditConfig
                     * @instance
                     */
                    AuditConfig.prototype.service = "";
    
                    /**
                     * AuditConfig auditLogConfigs.
                     * @member {Array.<google.iam.v1.IAuditLogConfig>} auditLogConfigs
                     * @memberof google.iam.v1.AuditConfig
                     * @instance
                     */
                    AuditConfig.prototype.auditLogConfigs = $util.emptyArray;
    
                    /**
                     * Creates a new AuditConfig instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.IAuditConfig=} [properties] Properties to set
                     * @returns {google.iam.v1.AuditConfig} AuditConfig instance
                     */
                    AuditConfig.create = function create(properties) {
                        return new AuditConfig(properties);
                    };
    
                    /**
                     * Encodes the specified AuditConfig message. Does not implicitly {@link google.iam.v1.AuditConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.IAuditConfig} message AuditConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                        if (message.auditLogConfigs != null && message.auditLogConfigs.length)
                            for (var i = 0; i < message.auditLogConfigs.length; ++i)
                                $root.google.iam.v1.AuditLogConfig.encode(message.auditLogConfigs[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AuditConfig message, length delimited. Does not implicitly {@link google.iam.v1.AuditConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.IAuditConfig} message AuditConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AuditConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.AuditConfig} AuditConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.AuditConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.service = reader.string();
                                    break;
                                }
                            case 3: {
                                    if (!(message.auditLogConfigs && message.auditLogConfigs.length))
                                        message.auditLogConfigs = [];
                                    message.auditLogConfigs.push($root.google.iam.v1.AuditLogConfig.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AuditConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.AuditConfig} AuditConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AuditConfig message.
                     * @function verify
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AuditConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.service != null && message.hasOwnProperty("service"))
                            if (!$util.isString(message.service))
                                return "service: string expected";
                        if (message.auditLogConfigs != null && message.hasOwnProperty("auditLogConfigs")) {
                            if (!Array.isArray(message.auditLogConfigs))
                                return "auditLogConfigs: array expected";
                            for (var i = 0; i < message.auditLogConfigs.length; ++i) {
                                var error = $root.google.iam.v1.AuditLogConfig.verify(message.auditLogConfigs[i]);
                                if (error)
                                    return "auditLogConfigs." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates an AuditConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.AuditConfig} AuditConfig
                     */
                    AuditConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.AuditConfig)
                            return object;
                        var message = new $root.google.iam.v1.AuditConfig();
                        if (object.service != null)
                            message.service = String(object.service);
                        if (object.auditLogConfigs) {
                            if (!Array.isArray(object.auditLogConfigs))
                                throw TypeError(".google.iam.v1.AuditConfig.auditLogConfigs: array expected");
                            message.auditLogConfigs = [];
                            for (var i = 0; i < object.auditLogConfigs.length; ++i) {
                                if (typeof object.auditLogConfigs[i] !== "object")
                                    throw TypeError(".google.iam.v1.AuditConfig.auditLogConfigs: object expected");
                                message.auditLogConfigs[i] = $root.google.iam.v1.AuditLogConfig.fromObject(object.auditLogConfigs[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AuditConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.AuditConfig} message AuditConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AuditConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.auditLogConfigs = [];
                        if (options.defaults)
                            object.service = "";
                        if (message.service != null && message.hasOwnProperty("service"))
                            object.service = message.service;
                        if (message.auditLogConfigs && message.auditLogConfigs.length) {
                            object.auditLogConfigs = [];
                            for (var j = 0; j < message.auditLogConfigs.length; ++j)
                                object.auditLogConfigs[j] = $root.google.iam.v1.AuditLogConfig.toObject(message.auditLogConfigs[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this AuditConfig to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.AuditConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AuditConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AuditConfig
                     * @function getTypeUrl
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AuditConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.AuditConfig";
                    };
    
                    return AuditConfig;
                })();
    
                v1.AuditLogConfig = (function() {
    
                    /**
                     * Properties of an AuditLogConfig.
                     * @memberof google.iam.v1
                     * @interface IAuditLogConfig
                     * @property {google.iam.v1.AuditLogConfig.LogType|null} [logType] AuditLogConfig logType
                     * @property {Array.<string>|null} [exemptedMembers] AuditLogConfig exemptedMembers
                     */
    
                    /**
                     * Constructs a new AuditLogConfig.
                     * @memberof google.iam.v1
                     * @classdesc Represents an AuditLogConfig.
                     * @implements IAuditLogConfig
                     * @constructor
                     * @param {google.iam.v1.IAuditLogConfig=} [properties] Properties to set
                     */
                    function AuditLogConfig(properties) {
                        this.exemptedMembers = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AuditLogConfig logType.
                     * @member {google.iam.v1.AuditLogConfig.LogType} logType
                     * @memberof google.iam.v1.AuditLogConfig
                     * @instance
                     */
                    AuditLogConfig.prototype.logType = 0;
    
                    /**
                     * AuditLogConfig exemptedMembers.
                     * @member {Array.<string>} exemptedMembers
                     * @memberof google.iam.v1.AuditLogConfig
                     * @instance
                     */
                    AuditLogConfig.prototype.exemptedMembers = $util.emptyArray;
    
                    /**
                     * Creates a new AuditLogConfig instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.IAuditLogConfig=} [properties] Properties to set
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig instance
                     */
                    AuditLogConfig.create = function create(properties) {
                        return new AuditLogConfig(properties);
                    };
    
                    /**
                     * Encodes the specified AuditLogConfig message. Does not implicitly {@link google.iam.v1.AuditLogConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.IAuditLogConfig} message AuditLogConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditLogConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.logType != null && Object.hasOwnProperty.call(message, "logType"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.logType);
                        if (message.exemptedMembers != null && message.exemptedMembers.length)
                            for (var i = 0; i < message.exemptedMembers.length; ++i)
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.exemptedMembers[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AuditLogConfig message, length delimited. Does not implicitly {@link google.iam.v1.AuditLogConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.IAuditLogConfig} message AuditLogConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditLogConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AuditLogConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditLogConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.AuditLogConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.logType = reader.int32();
                                    break;
                                }
                            case 2: {
                                    if (!(message.exemptedMembers && message.exemptedMembers.length))
                                        message.exemptedMembers = [];
                                    message.exemptedMembers.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AuditLogConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditLogConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AuditLogConfig message.
                     * @function verify
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AuditLogConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            switch (message.logType) {
                            default:
                                return "logType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        if (message.exemptedMembers != null && message.hasOwnProperty("exemptedMembers")) {
                            if (!Array.isArray(message.exemptedMembers))
                                return "exemptedMembers: array expected";
                            for (var i = 0; i < message.exemptedMembers.length; ++i)
                                if (!$util.isString(message.exemptedMembers[i]))
                                    return "exemptedMembers: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates an AuditLogConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig
                     */
                    AuditLogConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.AuditLogConfig)
                            return object;
                        var message = new $root.google.iam.v1.AuditLogConfig();
                        switch (object.logType) {
                        default:
                            if (typeof object.logType === "number") {
                                message.logType = object.logType;
                                break;
                            }
                            break;
                        case "LOG_TYPE_UNSPECIFIED":
                        case 0:
                            message.logType = 0;
                            break;
                        case "ADMIN_READ":
                        case 1:
                            message.logType = 1;
                            break;
                        case "DATA_WRITE":
                        case 2:
                            message.logType = 2;
                            break;
                        case "DATA_READ":
                        case 3:
                            message.logType = 3;
                            break;
                        }
                        if (object.exemptedMembers) {
                            if (!Array.isArray(object.exemptedMembers))
                                throw TypeError(".google.iam.v1.AuditLogConfig.exemptedMembers: array expected");
                            message.exemptedMembers = [];
                            for (var i = 0; i < object.exemptedMembers.length; ++i)
                                message.exemptedMembers[i] = String(object.exemptedMembers[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AuditLogConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.AuditLogConfig} message AuditLogConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AuditLogConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.exemptedMembers = [];
                        if (options.defaults)
                            object.logType = options.enums === String ? "LOG_TYPE_UNSPECIFIED" : 0;
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            object.logType = options.enums === String ? $root.google.iam.v1.AuditLogConfig.LogType[message.logType] === undefined ? message.logType : $root.google.iam.v1.AuditLogConfig.LogType[message.logType] : message.logType;
                        if (message.exemptedMembers && message.exemptedMembers.length) {
                            object.exemptedMembers = [];
                            for (var j = 0; j < message.exemptedMembers.length; ++j)
                                object.exemptedMembers[j] = message.exemptedMembers[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this AuditLogConfig to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.AuditLogConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AuditLogConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AuditLogConfig
                     * @function getTypeUrl
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AuditLogConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.AuditLogConfig";
                    };
    
                    /**
                     * LogType enum.
                     * @name google.iam.v1.AuditLogConfig.LogType
                     * @enum {number}
                     * @property {number} LOG_TYPE_UNSPECIFIED=0 LOG_TYPE_UNSPECIFIED value
                     * @property {number} ADMIN_READ=1 ADMIN_READ value
                     * @property {number} DATA_WRITE=2 DATA_WRITE value
                     * @property {number} DATA_READ=3 DATA_READ value
                     */
                    AuditLogConfig.LogType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "LOG_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ADMIN_READ"] = 1;
                        values[valuesById[2] = "DATA_WRITE"] = 2;
                        values[valuesById[3] = "DATA_READ"] = 3;
                        return values;
                    })();
    
                    return AuditLogConfig;
                })();
    
                v1.PolicyDelta = (function() {
    
                    /**
                     * Properties of a PolicyDelta.
                     * @memberof google.iam.v1
                     * @interface IPolicyDelta
                     * @property {Array.<google.iam.v1.IBindingDelta>|null} [bindingDeltas] PolicyDelta bindingDeltas
                     * @property {Array.<google.iam.v1.IAuditConfigDelta>|null} [auditConfigDeltas] PolicyDelta auditConfigDeltas
                     */
    
                    /**
                     * Constructs a new PolicyDelta.
                     * @memberof google.iam.v1
                     * @classdesc Represents a PolicyDelta.
                     * @implements IPolicyDelta
                     * @constructor
                     * @param {google.iam.v1.IPolicyDelta=} [properties] Properties to set
                     */
                    function PolicyDelta(properties) {
                        this.bindingDeltas = [];
                        this.auditConfigDeltas = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * PolicyDelta bindingDeltas.
                     * @member {Array.<google.iam.v1.IBindingDelta>} bindingDeltas
                     * @memberof google.iam.v1.PolicyDelta
                     * @instance
                     */
                    PolicyDelta.prototype.bindingDeltas = $util.emptyArray;
    
                    /**
                     * PolicyDelta auditConfigDeltas.
                     * @member {Array.<google.iam.v1.IAuditConfigDelta>} auditConfigDeltas
                     * @memberof google.iam.v1.PolicyDelta
                     * @instance
                     */
                    PolicyDelta.prototype.auditConfigDeltas = $util.emptyArray;
    
                    /**
                     * Creates a new PolicyDelta instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.IPolicyDelta=} [properties] Properties to set
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta instance
                     */
                    PolicyDelta.create = function create(properties) {
                        return new PolicyDelta(properties);
                    };
    
                    /**
                     * Encodes the specified PolicyDelta message. Does not implicitly {@link google.iam.v1.PolicyDelta.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.IPolicyDelta} message PolicyDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PolicyDelta.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.bindingDeltas != null && message.bindingDeltas.length)
                            for (var i = 0; i < message.bindingDeltas.length; ++i)
                                $root.google.iam.v1.BindingDelta.encode(message.bindingDeltas[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.auditConfigDeltas != null && message.auditConfigDeltas.length)
                            for (var i = 0; i < message.auditConfigDeltas.length; ++i)
                                $root.google.iam.v1.AuditConfigDelta.encode(message.auditConfigDeltas[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified PolicyDelta message, length delimited. Does not implicitly {@link google.iam.v1.PolicyDelta.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.IPolicyDelta} message PolicyDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PolicyDelta.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a PolicyDelta message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PolicyDelta.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.PolicyDelta();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.bindingDeltas && message.bindingDeltas.length))
                                        message.bindingDeltas = [];
                                    message.bindingDeltas.push($root.google.iam.v1.BindingDelta.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    if (!(message.auditConfigDeltas && message.auditConfigDeltas.length))
                                        message.auditConfigDeltas = [];
                                    message.auditConfigDeltas.push($root.google.iam.v1.AuditConfigDelta.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a PolicyDelta message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PolicyDelta.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a PolicyDelta message.
                     * @function verify
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    PolicyDelta.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.bindingDeltas != null && message.hasOwnProperty("bindingDeltas")) {
                            if (!Array.isArray(message.bindingDeltas))
                                return "bindingDeltas: array expected";
                            for (var i = 0; i < message.bindingDeltas.length; ++i) {
                                var error = $root.google.iam.v1.BindingDelta.verify(message.bindingDeltas[i]);
                                if (error)
                                    return "bindingDeltas." + error;
                            }
                        }
                        if (message.auditConfigDeltas != null && message.hasOwnProperty("auditConfigDeltas")) {
                            if (!Array.isArray(message.auditConfigDeltas))
                                return "auditConfigDeltas: array expected";
                            for (var i = 0; i < message.auditConfigDeltas.length; ++i) {
                                var error = $root.google.iam.v1.AuditConfigDelta.verify(message.auditConfigDeltas[i]);
                                if (error)
                                    return "auditConfigDeltas." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a PolicyDelta message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta
                     */
                    PolicyDelta.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.PolicyDelta)
                            return object;
                        var message = new $root.google.iam.v1.PolicyDelta();
                        if (object.bindingDeltas) {
                            if (!Array.isArray(object.bindingDeltas))
                                throw TypeError(".google.iam.v1.PolicyDelta.bindingDeltas: array expected");
                            message.bindingDeltas = [];
                            for (var i = 0; i < object.bindingDeltas.length; ++i) {
                                if (typeof object.bindingDeltas[i] !== "object")
                                    throw TypeError(".google.iam.v1.PolicyDelta.bindingDeltas: object expected");
                                message.bindingDeltas[i] = $root.google.iam.v1.BindingDelta.fromObject(object.bindingDeltas[i]);
                            }
                        }
                        if (object.auditConfigDeltas) {
                            if (!Array.isArray(object.auditConfigDeltas))
                                throw TypeError(".google.iam.v1.PolicyDelta.auditConfigDeltas: array expected");
                            message.auditConfigDeltas = [];
                            for (var i = 0; i < object.auditConfigDeltas.length; ++i) {
                                if (typeof object.auditConfigDeltas[i] !== "object")
                                    throw TypeError(".google.iam.v1.PolicyDelta.auditConfigDeltas: object expected");
                                message.auditConfigDeltas[i] = $root.google.iam.v1.AuditConfigDelta.fromObject(object.auditConfigDeltas[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a PolicyDelta message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.PolicyDelta} message PolicyDelta
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    PolicyDelta.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.bindingDeltas = [];
                            object.auditConfigDeltas = [];
                        }
                        if (message.bindingDeltas && message.bindingDeltas.length) {
                            object.bindingDeltas = [];
                            for (var j = 0; j < message.bindingDeltas.length; ++j)
                                object.bindingDeltas[j] = $root.google.iam.v1.BindingDelta.toObject(message.bindingDeltas[j], options);
                        }
                        if (message.auditConfigDeltas && message.auditConfigDeltas.length) {
                            object.auditConfigDeltas = [];
                            for (var j = 0; j < message.auditConfigDeltas.length; ++j)
                                object.auditConfigDeltas[j] = $root.google.iam.v1.AuditConfigDelta.toObject(message.auditConfigDeltas[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this PolicyDelta to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.PolicyDelta
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    PolicyDelta.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for PolicyDelta
                     * @function getTypeUrl
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    PolicyDelta.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.PolicyDelta";
                    };
    
                    return PolicyDelta;
                })();
    
                v1.BindingDelta = (function() {
    
                    /**
                     * Properties of a BindingDelta.
                     * @memberof google.iam.v1
                     * @interface IBindingDelta
                     * @property {google.iam.v1.BindingDelta.Action|null} [action] BindingDelta action
                     * @property {string|null} [role] BindingDelta role
                     * @property {string|null} [member] BindingDelta member
                     * @property {google.type.IExpr|null} [condition] BindingDelta condition
                     */
    
                    /**
                     * Constructs a new BindingDelta.
                     * @memberof google.iam.v1
                     * @classdesc Represents a BindingDelta.
                     * @implements IBindingDelta
                     * @constructor
                     * @param {google.iam.v1.IBindingDelta=} [properties] Properties to set
                     */
                    function BindingDelta(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * BindingDelta action.
                     * @member {google.iam.v1.BindingDelta.Action} action
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.action = 0;
    
                    /**
                     * BindingDelta role.
                     * @member {string} role
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.role = "";
    
                    /**
                     * BindingDelta member.
                     * @member {string} member
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.member = "";
    
                    /**
                     * BindingDelta condition.
                     * @member {google.type.IExpr|null|undefined} condition
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.condition = null;
    
                    /**
                     * Creates a new BindingDelta instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.IBindingDelta=} [properties] Properties to set
                     * @returns {google.iam.v1.BindingDelta} BindingDelta instance
                     */
                    BindingDelta.create = function create(properties) {
                        return new BindingDelta(properties);
                    };
    
                    /**
                     * Encodes the specified BindingDelta message. Does not implicitly {@link google.iam.v1.BindingDelta.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.IBindingDelta} message BindingDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BindingDelta.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.action != null && Object.hasOwnProperty.call(message, "action"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.action);
                        if (message.role != null && Object.hasOwnProperty.call(message, "role"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.role);
                        if (message.member != null && Object.hasOwnProperty.call(message, "member"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.member);
                        if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                            $root.google.type.Expr.encode(message.condition, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified BindingDelta message, length delimited. Does not implicitly {@link google.iam.v1.BindingDelta.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.IBindingDelta} message BindingDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BindingDelta.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a BindingDelta message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.BindingDelta} BindingDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BindingDelta.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.BindingDelta();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.action = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.role = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.member = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.condition = $root.google.type.Expr.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a BindingDelta message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.BindingDelta} BindingDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BindingDelta.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a BindingDelta message.
                     * @function verify
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    BindingDelta.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.action != null && message.hasOwnProperty("action"))
                            switch (message.action) {
                            default:
                                return "action: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.role != null && message.hasOwnProperty("role"))
                            if (!$util.isString(message.role))
                                return "role: string expected";
                        if (message.member != null && message.hasOwnProperty("member"))
                            if (!$util.isString(message.member))
                                return "member: string expected";
                        if (message.condition != null && message.hasOwnProperty("condition")) {
                            var error = $root.google.type.Expr.verify(message.condition);
                            if (error)
                                return "condition." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a BindingDelta message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.BindingDelta} BindingDelta
                     */
                    BindingDelta.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.BindingDelta)
                            return object;
                        var message = new $root.google.iam.v1.BindingDelta();
                        switch (object.action) {
                        default:
                            if (typeof object.action === "number") {
                                message.action = object.action;
                                break;
                            }
                            break;
                        case "ACTION_UNSPECIFIED":
                        case 0:
                            message.action = 0;
                            break;
                        case "ADD":
                        case 1:
                            message.action = 1;
                            break;
                        case "REMOVE":
                        case 2:
                            message.action = 2;
                            break;
                        }
                        if (object.role != null)
                            message.role = String(object.role);
                        if (object.member != null)
                            message.member = String(object.member);
                        if (object.condition != null) {
                            if (typeof object.condition !== "object")
                                throw TypeError(".google.iam.v1.BindingDelta.condition: object expected");
                            message.condition = $root.google.type.Expr.fromObject(object.condition);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a BindingDelta message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.BindingDelta} message BindingDelta
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    BindingDelta.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.action = options.enums === String ? "ACTION_UNSPECIFIED" : 0;
                            object.role = "";
                            object.member = "";
                            object.condition = null;
                        }
                        if (message.action != null && message.hasOwnProperty("action"))
                            object.action = options.enums === String ? $root.google.iam.v1.BindingDelta.Action[message.action] === undefined ? message.action : $root.google.iam.v1.BindingDelta.Action[message.action] : message.action;
                        if (message.role != null && message.hasOwnProperty("role"))
                            object.role = message.role;
                        if (message.member != null && message.hasOwnProperty("member"))
                            object.member = message.member;
                        if (message.condition != null && message.hasOwnProperty("condition"))
                            object.condition = $root.google.type.Expr.toObject(message.condition, options);
                        return object;
                    };
    
                    /**
                     * Converts this BindingDelta to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    BindingDelta.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for BindingDelta
                     * @function getTypeUrl
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    BindingDelta.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.BindingDelta";
                    };
    
                    /**
                     * Action enum.
                     * @name google.iam.v1.BindingDelta.Action
                     * @enum {number}
                     * @property {number} ACTION_UNSPECIFIED=0 ACTION_UNSPECIFIED value
                     * @property {number} ADD=1 ADD value
                     * @property {number} REMOVE=2 REMOVE value
                     */
                    BindingDelta.Action = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ACTION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ADD"] = 1;
                        values[valuesById[2] = "REMOVE"] = 2;
                        return values;
                    })();
    
                    return BindingDelta;
                })();
    
                v1.AuditConfigDelta = (function() {
    
                    /**
                     * Properties of an AuditConfigDelta.
                     * @memberof google.iam.v1
                     * @interface IAuditConfigDelta
                     * @property {google.iam.v1.AuditConfigDelta.Action|null} [action] AuditConfigDelta action
                     * @property {string|null} [service] AuditConfigDelta service
                     * @property {string|null} [exemptedMember] AuditConfigDelta exemptedMember
                     * @property {string|null} [logType] AuditConfigDelta logType
                     */
    
                    /**
                     * Constructs a new AuditConfigDelta.
                     * @memberof google.iam.v1
                     * @classdesc Represents an AuditConfigDelta.
                     * @implements IAuditConfigDelta
                     * @constructor
                     * @param {google.iam.v1.IAuditConfigDelta=} [properties] Properties to set
                     */
                    function AuditConfigDelta(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AuditConfigDelta action.
                     * @member {google.iam.v1.AuditConfigDelta.Action} action
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.action = 0;
    
                    /**
                     * AuditConfigDelta service.
                     * @member {string} service
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.service = "";
    
                    /**
                     * AuditConfigDelta exemptedMember.
                     * @member {string} exemptedMember
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.exemptedMember = "";
    
                    /**
                     * AuditConfigDelta logType.
                     * @member {string} logType
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.logType = "";
    
                    /**
                     * Creates a new AuditConfigDelta instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.IAuditConfigDelta=} [properties] Properties to set
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta instance
                     */
                    AuditConfigDelta.create = function create(properties) {
                        return new AuditConfigDelta(properties);
                    };
    
                    /**
                     * Encodes the specified AuditConfigDelta message. Does not implicitly {@link google.iam.v1.AuditConfigDelta.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.IAuditConfigDelta} message AuditConfigDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfigDelta.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.action != null && Object.hasOwnProperty.call(message, "action"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.action);
                        if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.service);
                        if (message.exemptedMember != null && Object.hasOwnProperty.call(message, "exemptedMember"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.exemptedMember);
                        if (message.logType != null && Object.hasOwnProperty.call(message, "logType"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.logType);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AuditConfigDelta message, length delimited. Does not implicitly {@link google.iam.v1.AuditConfigDelta.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.IAuditConfigDelta} message AuditConfigDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfigDelta.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AuditConfigDelta message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfigDelta.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.AuditConfigDelta();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.action = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.service = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.exemptedMember = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.logType = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AuditConfigDelta message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfigDelta.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AuditConfigDelta message.
                     * @function verify
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AuditConfigDelta.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.action != null && message.hasOwnProperty("action"))
                            switch (message.action) {
                            default:
                                return "action: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.service != null && message.hasOwnProperty("service"))
                            if (!$util.isString(message.service))
                                return "service: string expected";
                        if (message.exemptedMember != null && message.hasOwnProperty("exemptedMember"))
                            if (!$util.isString(message.exemptedMember))
                                return "exemptedMember: string expected";
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            if (!$util.isString(message.logType))
                                return "logType: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an AuditConfigDelta message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta
                     */
                    AuditConfigDelta.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.AuditConfigDelta)
                            return object;
                        var message = new $root.google.iam.v1.AuditConfigDelta();
                        switch (object.action) {
                        default:
                            if (typeof object.action === "number") {
                                message.action = object.action;
                                break;
                            }
                            break;
                        case "ACTION_UNSPECIFIED":
                        case 0:
                            message.action = 0;
                            break;
                        case "ADD":
                        case 1:
                            message.action = 1;
                            break;
                        case "REMOVE":
                        case 2:
                            message.action = 2;
                            break;
                        }
                        if (object.service != null)
                            message.service = String(object.service);
                        if (object.exemptedMember != null)
                            message.exemptedMember = String(object.exemptedMember);
                        if (object.logType != null)
                            message.logType = String(object.logType);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AuditConfigDelta message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.AuditConfigDelta} message AuditConfigDelta
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AuditConfigDelta.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.action = options.enums === String ? "ACTION_UNSPECIFIED" : 0;
                            object.service = "";
                            object.exemptedMember = "";
                            object.logType = "";
                        }
                        if (message.action != null && message.hasOwnProperty("action"))
                            object.action = options.enums === String ? $root.google.iam.v1.AuditConfigDelta.Action[message.action] === undefined ? message.action : $root.google.iam.v1.AuditConfigDelta.Action[message.action] : message.action;
                        if (message.service != null && message.hasOwnProperty("service"))
                            object.service = message.service;
                        if (message.exemptedMember != null && message.hasOwnProperty("exemptedMember"))
                            object.exemptedMember = message.exemptedMember;
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            object.logType = message.logType;
                        return object;
                    };
    
                    /**
                     * Converts this AuditConfigDelta to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AuditConfigDelta.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AuditConfigDelta
                     * @function getTypeUrl
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AuditConfigDelta.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.AuditConfigDelta";
                    };
    
                    /**
                     * Action enum.
                     * @name google.iam.v1.AuditConfigDelta.Action
                     * @enum {number}
                     * @property {number} ACTION_UNSPECIFIED=0 ACTION_UNSPECIFIED value
                     * @property {number} ADD=1 ADD value
                     * @property {number} REMOVE=2 REMOVE value
                     */
                    AuditConfigDelta.Action = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ACTION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ADD"] = 1;
                        values[valuesById[2] = "REMOVE"] = 2;
                        return values;
                    })();
    
                    return AuditConfigDelta;
                })();
    
                return v1;
            })();
    
            return iam;
        })();
    
        google.type = (function() {
    
            /**
             * Namespace type.
             * @memberof google
             * @namespace
             */
            var type = {};
    
            type.Expr = (function() {
    
                /**
                 * Properties of an Expr.
                 * @memberof google.type
                 * @interface IExpr
                 * @property {string|null} [expression] Expr expression
                 * @property {string|null} [title] Expr title
                 * @property {string|null} [description] Expr description
                 * @property {string|null} [location] Expr location
                 */
    
                /**
                 * Constructs a new Expr.
                 * @memberof google.type
                 * @classdesc Represents an Expr.
                 * @implements IExpr
                 * @constructor
                 * @param {google.type.IExpr=} [properties] Properties to set
                 */
                function Expr(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Expr expression.
                 * @member {string} expression
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.expression = "";
    
                /**
                 * Expr title.
                 * @member {string} title
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.title = "";
    
                /**
                 * Expr description.
                 * @member {string} description
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.description = "";
    
                /**
                 * Expr location.
                 * @member {string} location
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.location = "";
    
                /**
                 * Creates a new Expr instance using the specified properties.
                 * @function create
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.IExpr=} [properties] Properties to set
                 * @returns {google.type.Expr} Expr instance
                 */
                Expr.create = function create(properties) {
                    return new Expr(properties);
                };
    
                /**
                 * Encodes the specified Expr message. Does not implicitly {@link google.type.Expr.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.IExpr} message Expr message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Expr.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.expression != null && Object.hasOwnProperty.call(message, "expression"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.expression);
                    if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.title);
                    if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                    if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.location);
                    return writer;
                };
    
                /**
                 * Encodes the specified Expr message, length delimited. Does not implicitly {@link google.type.Expr.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.IExpr} message Expr message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Expr.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Expr message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Expr
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Expr} Expr
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Expr.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Expr();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.expression = reader.string();
                                break;
                            }
                        case 2: {
                                message.title = reader.string();
                                break;
                            }
                        case 3: {
                                message.description = reader.string();
                                break;
                            }
                        case 4: {
                                message.location = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Expr message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Expr
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Expr} Expr
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Expr.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Expr message.
                 * @function verify
                 * @memberof google.type.Expr
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Expr.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.expression != null && message.hasOwnProperty("expression"))
                        if (!$util.isString(message.expression))
                            return "expression: string expected";
                    if (message.title != null && message.hasOwnProperty("title"))
                        if (!$util.isString(message.title))
                            return "title: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    if (message.location != null && message.hasOwnProperty("location"))
                        if (!$util.isString(message.location))
                            return "location: string expected";
                    return null;
                };
    
                /**
                 * Creates an Expr message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Expr
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Expr} Expr
                 */
                Expr.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Expr)
                        return object;
                    var message = new $root.google.type.Expr();
                    if (object.expression != null)
                        message.expression = String(object.expression);
                    if (object.title != null)
                        message.title = String(object.title);
                    if (object.description != null)
                        message.description = String(object.description);
                    if (object.location != null)
                        message.location = String(object.location);
                    return message;
                };
    
                /**
                 * Creates a plain object from an Expr message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.Expr} message Expr
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Expr.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.expression = "";
                        object.title = "";
                        object.description = "";
                        object.location = "";
                    }
                    if (message.expression != null && message.hasOwnProperty("expression"))
                        object.expression = message.expression;
                    if (message.title != null && message.hasOwnProperty("title"))
                        object.title = message.title;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    if (message.location != null && message.hasOwnProperty("location"))
                        object.location = message.location;
                    return object;
                };
    
                /**
                 * Converts this Expr to JSON.
                 * @function toJSON
                 * @memberof google.type.Expr
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Expr.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Expr
                 * @function getTypeUrl
                 * @memberof google.type.Expr
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Expr.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Expr";
                };
    
                return Expr;
            })();
    
            return type;
        })();
    
        return google;
    })();

    return $root;
});
