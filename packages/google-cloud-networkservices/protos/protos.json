{
  "nested": {
    "google": {
      "nested": {
        "cloud": {
          "nested": {
            "networkservices": {
              "nested": {
                "v1": {
                  "options": {
                    "csharp_namespace": "Google.Cloud.NetworkServices.V1",
                    "go_package": "cloud.google.com/go/networkservices/apiv1/networkservicespb;networkservicespb",
                    "java_multiple_files": true,
                    "java_outer_classname": "TlsRouteProto",
                    "java_package": "com.google.cloud.networkservices.v1",
                    "php_namespace": "Google\\Cloud\\NetworkServices\\V1",
                    "ruby_package": "Google::Cloud::NetworkServices::V1",
                    "(google.api.resource_definition).type": "compute.googleapis.com/BackendService",
                    "(google.api.resource_definition).pattern": "projects/{project}/locations/{location}/backendServices/{backend_service}"
                  },
                  "nested": {
                    "OperationMetadata": {
                      "fields": {
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "target": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "verb": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "statusMessage": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "requestedCancellation": {
                          "type": "bool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "apiVersion": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "TrafficPortSelector": {
                      "fields": {
                        "ports": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "EndpointMatcher": {
                      "oneofs": {
                        "matcherType": {
                          "oneof": [
                            "metadataLabelMatcher"
                          ]
                        }
                      },
                      "fields": {
                        "metadataLabelMatcher": {
                          "type": "MetadataLabelMatcher",
                          "id": 1
                        }
                      },
                      "nested": {
                        "MetadataLabelMatcher": {
                          "fields": {
                            "metadataLabelMatchCriteria": {
                              "type": "MetadataLabelMatchCriteria",
                              "id": 1
                            },
                            "metadataLabels": {
                              "rule": "repeated",
                              "type": "MetadataLabels",
                              "id": 2
                            }
                          },
                          "nested": {
                            "MetadataLabels": {
                              "fields": {
                                "labelName": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "labelValue": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "MetadataLabelMatchCriteria": {
                              "values": {
                                "METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED": 0,
                                "MATCH_ANY": 1,
                                "MATCH_ALL": 2
                              }
                            }
                          }
                        }
                      }
                    },
                    "EndpointPolicy": {
                      "options": {
                        "(google.api.resource).type": "networkservices.googleapis.com/EndpointPolicy",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/endpointPolicies/{endpoint_policy}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "type": {
                          "type": "EndpointPolicyType",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "authorizationPolicy": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "networksecurity.googleapis.com/AuthorizationPolicy"
                          }
                        },
                        "endpointMatcher": {
                          "type": "EndpointMatcher",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trafficPortSelector": {
                          "type": "TrafficPortSelector",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "serverTlsPolicy": {
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "networksecurity.googleapis.com/ServerTlsPolicy"
                          }
                        },
                        "clientTlsPolicy": {
                          "type": "string",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "networksecurity.googleapis.com/ClientTlsPolicy"
                          }
                        }
                      },
                      "nested": {
                        "EndpointPolicyType": {
                          "values": {
                            "ENDPOINT_POLICY_TYPE_UNSPECIFIED": 0,
                            "SIDECAR_PROXY": 1,
                            "GRPC_SERVER": 2
                          }
                        }
                      }
                    },
                    "ListEndpointPoliciesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/EndpointPolicy"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListEndpointPoliciesResponse": {
                      "fields": {
                        "endpointPolicies": {
                          "rule": "repeated",
                          "type": "EndpointPolicy",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetEndpointPolicyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/EndpointPolicy"
                          }
                        }
                      }
                    },
                    "CreateEndpointPolicyRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/EndpointPolicy"
                          }
                        },
                        "endpointPolicyId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "endpointPolicy": {
                          "type": "EndpointPolicy",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateEndpointPolicyRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "endpointPolicy": {
                          "type": "EndpointPolicy",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteEndpointPolicyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/EndpointPolicy"
                          }
                        }
                      }
                    },
                    "Gateway": {
                      "options": {
                        "(google.api.resource).type": "networkservices.googleapis.com/Gateway",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/gateways/{gateway}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "selfLink": {
                          "type": "string",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "type": {
                          "type": "Type",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "ports": {
                          "rule": "repeated",
                          "type": "int32",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "scope": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "IMMUTABLE"
                          }
                        },
                        "serverTlsPolicy": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "OPEN_MESH": 1,
                            "SECURE_WEB_GATEWAY": 2
                          }
                        }
                      }
                    },
                    "ListGatewaysRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/Gateway"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListGatewaysResponse": {
                      "fields": {
                        "gateways": {
                          "rule": "repeated",
                          "type": "Gateway",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetGatewayRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/Gateway"
                          }
                        }
                      }
                    },
                    "CreateGatewayRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/Gateway"
                          }
                        },
                        "gatewayId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "gateway": {
                          "type": "Gateway",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateGatewayRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "gateway": {
                          "type": "Gateway",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteGatewayRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/Gateway"
                          }
                        }
                      }
                    },
                    "GrpcRoute": {
                      "options": {
                        "(google.api.resource).type": "networkservices.googleapis.com/GrpcRoute",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/grpcRoutes/{grpc_route}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "selfLink": {
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "hostnames": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "meshes": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/Mesh"
                          }
                        },
                        "gateways": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/Gateway"
                          }
                        },
                        "rules": {
                          "rule": "repeated",
                          "type": "RouteRule",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "MethodMatch": {
                          "oneofs": {
                            "_caseSensitive": {
                              "oneof": [
                                "caseSensitive"
                              ]
                            }
                          },
                          "fields": {
                            "type": {
                              "type": "Type",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "grpcService": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "grpcMethod": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "caseSensitive": {
                              "type": "bool",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          },
                          "nested": {
                            "Type": {
                              "values": {
                                "TYPE_UNSPECIFIED": 0,
                                "EXACT": 1,
                                "REGULAR_EXPRESSION": 2
                              }
                            }
                          }
                        },
                        "HeaderMatch": {
                          "fields": {
                            "type": {
                              "type": "Type",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "key": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "value": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "Type": {
                              "values": {
                                "TYPE_UNSPECIFIED": 0,
                                "EXACT": 1,
                                "REGULAR_EXPRESSION": 2
                              }
                            }
                          }
                        },
                        "RouteMatch": {
                          "oneofs": {
                            "_method": {
                              "oneof": [
                                "method"
                              ]
                            }
                          },
                          "fields": {
                            "method": {
                              "type": "MethodMatch",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            },
                            "headers": {
                              "rule": "repeated",
                              "type": "HeaderMatch",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "Destination": {
                          "oneofs": {
                            "destinationType": {
                              "oneof": [
                                "serviceName"
                              ]
                            },
                            "_weight": {
                              "oneof": [
                                "weight"
                              ]
                            }
                          },
                          "fields": {
                            "serviceName": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "compute.googleapis.com/BackendService"
                              }
                            },
                            "weight": {
                              "type": "int32",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "proto3_optional": true
                              }
                            }
                          }
                        },
                        "FaultInjectionPolicy": {
                          "oneofs": {
                            "_delay": {
                              "oneof": [
                                "delay"
                              ]
                            },
                            "_abort": {
                              "oneof": [
                                "abort"
                              ]
                            }
                          },
                          "fields": {
                            "delay": {
                              "type": "Delay",
                              "id": 1,
                              "options": {
                                "proto3_optional": true
                              }
                            },
                            "abort": {
                              "type": "Abort",
                              "id": 2,
                              "options": {
                                "proto3_optional": true
                              }
                            }
                          },
                          "nested": {
                            "Delay": {
                              "oneofs": {
                                "_fixedDelay": {
                                  "oneof": [
                                    "fixedDelay"
                                  ]
                                },
                                "_percentage": {
                                  "oneof": [
                                    "percentage"
                                  ]
                                }
                              },
                              "fields": {
                                "fixedDelay": {
                                  "type": "google.protobuf.Duration",
                                  "id": 1,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                },
                                "percentage": {
                                  "type": "int32",
                                  "id": 2,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                }
                              }
                            },
                            "Abort": {
                              "oneofs": {
                                "_httpStatus": {
                                  "oneof": [
                                    "httpStatus"
                                  ]
                                },
                                "_percentage": {
                                  "oneof": [
                                    "percentage"
                                  ]
                                }
                              },
                              "fields": {
                                "httpStatus": {
                                  "type": "int32",
                                  "id": 1,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                },
                                "percentage": {
                                  "type": "int32",
                                  "id": 2,
                                  "options": {
                                    "proto3_optional": true
                                  }
                                }
                              }
                            }
                          }
                        },
                        "RetryPolicy": {
                          "fields": {
                            "retryConditions": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "numRetries": {
                              "type": "uint32",
                              "id": 2
                            }
                          }
                        },
                        "RouteAction": {
                          "fields": {
                            "destinations": {
                              "rule": "repeated",
                              "type": "Destination",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "faultInjectionPolicy": {
                              "type": "FaultInjectionPolicy",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "timeout": {
                              "type": "google.protobuf.Duration",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "retryPolicy": {
                              "type": "RetryPolicy",
                              "id": 8,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "RouteRule": {
                          "fields": {
                            "matches": {
                              "rule": "repeated",
                              "type": "RouteMatch",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "action": {
                              "type": "RouteAction",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        }
                      }
                    },
                    "ListGrpcRoutesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/GrpcRoute"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListGrpcRoutesResponse": {
                      "fields": {
                        "grpcRoutes": {
                          "rule": "repeated",
                          "type": "GrpcRoute",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetGrpcRouteRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/GrpcRoute"
                          }
                        }
                      }
                    },
                    "CreateGrpcRouteRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/GrpcRoute"
                          }
                        },
                        "grpcRouteId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "grpcRoute": {
                          "type": "GrpcRoute",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateGrpcRouteRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "grpcRoute": {
                          "type": "GrpcRoute",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteGrpcRouteRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/GrpcRoute"
                          }
                        }
                      }
                    },
                    "HttpRoute": {
                      "options": {
                        "(google.api.resource).type": "networkservices.googleapis.com/HttpRoute",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/httpRoutes/{http_route}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "selfLink": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "hostnames": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "meshes": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/Mesh"
                          }
                        },
                        "gateways": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/Gateway"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "rules": {
                          "rule": "repeated",
                          "type": "RouteRule",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "HeaderMatch": {
                          "oneofs": {
                            "MatchType": {
                              "oneof": [
                                "exactMatch",
                                "regexMatch",
                                "prefixMatch",
                                "presentMatch",
                                "suffixMatch",
                                "rangeMatch"
                              ]
                            }
                          },
                          "fields": {
                            "exactMatch": {
                              "type": "string",
                              "id": 2
                            },
                            "regexMatch": {
                              "type": "string",
                              "id": 3
                            },
                            "prefixMatch": {
                              "type": "string",
                              "id": 4
                            },
                            "presentMatch": {
                              "type": "bool",
                              "id": 5
                            },
                            "suffixMatch": {
                              "type": "string",
                              "id": 6
                            },
                            "rangeMatch": {
                              "type": "IntegerRange",
                              "id": 7
                            },
                            "header": {
                              "type": "string",
                              "id": 1
                            },
                            "invertMatch": {
                              "type": "bool",
                              "id": 8
                            }
                          },
                          "nested": {
                            "IntegerRange": {
                              "fields": {
                                "start": {
                                  "type": "int32",
                                  "id": 1
                                },
                                "end": {
                                  "type": "int32",
                                  "id": 2
                                }
                              }
                            }
                          }
                        },
                        "QueryParameterMatch": {
                          "oneofs": {
                            "MatchType": {
                              "oneof": [
                                "exactMatch",
                                "regexMatch",
                                "presentMatch"
                              ]
                            }
                          },
                          "fields": {
                            "exactMatch": {
                              "type": "string",
                              "id": 2
                            },
                            "regexMatch": {
                              "type": "string",
                              "id": 3
                            },
                            "presentMatch": {
                              "type": "bool",
                              "id": 4
                            },
                            "queryParameter": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "RouteMatch": {
                          "oneofs": {
                            "PathMatch": {
                              "oneof": [
                                "fullPathMatch",
                                "prefixMatch",
                                "regexMatch"
                              ]
                            }
                          },
                          "fields": {
                            "fullPathMatch": {
                              "type": "string",
                              "id": 1
                            },
                            "prefixMatch": {
                              "type": "string",
                              "id": 2
                            },
                            "regexMatch": {
                              "type": "string",
                              "id": 3
                            },
                            "ignoreCase": {
                              "type": "bool",
                              "id": 4
                            },
                            "headers": {
                              "rule": "repeated",
                              "type": "HeaderMatch",
                              "id": 5
                            },
                            "queryParameters": {
                              "rule": "repeated",
                              "type": "QueryParameterMatch",
                              "id": 6
                            }
                          }
                        },
                        "Destination": {
                          "fields": {
                            "serviceName": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "compute.googleapis.com/BackendService"
                              }
                            },
                            "weight": {
                              "type": "int32",
                              "id": 2
                            }
                          }
                        },
                        "Redirect": {
                          "fields": {
                            "hostRedirect": {
                              "type": "string",
                              "id": 1
                            },
                            "pathRedirect": {
                              "type": "string",
                              "id": 2
                            },
                            "prefixRewrite": {
                              "type": "string",
                              "id": 3
                            },
                            "responseCode": {
                              "type": "ResponseCode",
                              "id": 4
                            },
                            "httpsRedirect": {
                              "type": "bool",
                              "id": 5
                            },
                            "stripQuery": {
                              "type": "bool",
                              "id": 6
                            },
                            "portRedirect": {
                              "type": "int32",
                              "id": 7
                            }
                          },
                          "nested": {
                            "ResponseCode": {
                              "values": {
                                "RESPONSE_CODE_UNSPECIFIED": 0,
                                "MOVED_PERMANENTLY_DEFAULT": 1,
                                "FOUND": 2,
                                "SEE_OTHER": 3,
                                "TEMPORARY_REDIRECT": 4,
                                "PERMANENT_REDIRECT": 5
                              }
                            }
                          }
                        },
                        "FaultInjectionPolicy": {
                          "fields": {
                            "delay": {
                              "type": "Delay",
                              "id": 1
                            },
                            "abort": {
                              "type": "Abort",
                              "id": 2
                            }
                          },
                          "nested": {
                            "Delay": {
                              "fields": {
                                "fixedDelay": {
                                  "type": "google.protobuf.Duration",
                                  "id": 1
                                },
                                "percentage": {
                                  "type": "int32",
                                  "id": 2
                                }
                              }
                            },
                            "Abort": {
                              "fields": {
                                "httpStatus": {
                                  "type": "int32",
                                  "id": 1
                                },
                                "percentage": {
                                  "type": "int32",
                                  "id": 2
                                }
                              }
                            }
                          }
                        },
                        "HeaderModifier": {
                          "fields": {
                            "set": {
                              "keyType": "string",
                              "type": "string",
                              "id": 1
                            },
                            "add": {
                              "keyType": "string",
                              "type": "string",
                              "id": 2
                            },
                            "remove": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "URLRewrite": {
                          "fields": {
                            "pathPrefixRewrite": {
                              "type": "string",
                              "id": 1
                            },
                            "hostRewrite": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "RetryPolicy": {
                          "fields": {
                            "retryConditions": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "numRetries": {
                              "type": "int32",
                              "id": 2
                            },
                            "perTryTimeout": {
                              "type": "google.protobuf.Duration",
                              "id": 3
                            }
                          }
                        },
                        "RequestMirrorPolicy": {
                          "fields": {
                            "destination": {
                              "type": "Destination",
                              "id": 1
                            }
                          }
                        },
                        "CorsPolicy": {
                          "fields": {
                            "allowOrigins": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "allowOriginRegexes": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            },
                            "allowMethods": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3
                            },
                            "allowHeaders": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 4
                            },
                            "exposeHeaders": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 5
                            },
                            "maxAge": {
                              "type": "string",
                              "id": 6
                            },
                            "allowCredentials": {
                              "type": "bool",
                              "id": 7
                            },
                            "disabled": {
                              "type": "bool",
                              "id": 8
                            }
                          }
                        },
                        "RouteAction": {
                          "fields": {
                            "destinations": {
                              "rule": "repeated",
                              "type": "Destination",
                              "id": 1
                            },
                            "redirect": {
                              "type": "Redirect",
                              "id": 2
                            },
                            "faultInjectionPolicy": {
                              "type": "FaultInjectionPolicy",
                              "id": 4
                            },
                            "requestHeaderModifier": {
                              "type": "HeaderModifier",
                              "id": 5
                            },
                            "responseHeaderModifier": {
                              "type": "HeaderModifier",
                              "id": 6
                            },
                            "urlRewrite": {
                              "type": "URLRewrite",
                              "id": 7
                            },
                            "timeout": {
                              "type": "google.protobuf.Duration",
                              "id": 8
                            },
                            "retryPolicy": {
                              "type": "RetryPolicy",
                              "id": 9
                            },
                            "requestMirrorPolicy": {
                              "type": "RequestMirrorPolicy",
                              "id": 10
                            },
                            "corsPolicy": {
                              "type": "CorsPolicy",
                              "id": 11
                            }
                          }
                        },
                        "RouteRule": {
                          "fields": {
                            "matches": {
                              "rule": "repeated",
                              "type": "RouteMatch",
                              "id": 1
                            },
                            "action": {
                              "type": "RouteAction",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "ListHttpRoutesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/HttpRoute"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListHttpRoutesResponse": {
                      "fields": {
                        "httpRoutes": {
                          "rule": "repeated",
                          "type": "HttpRoute",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetHttpRouteRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/HttpRoute"
                          }
                        }
                      }
                    },
                    "CreateHttpRouteRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/HttpRoute"
                          }
                        },
                        "httpRouteId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "httpRoute": {
                          "type": "HttpRoute",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateHttpRouteRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "httpRoute": {
                          "type": "HttpRoute",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteHttpRouteRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/HttpRoute"
                          }
                        }
                      }
                    },
                    "Mesh": {
                      "options": {
                        "(google.api.resource).type": "networkservices.googleapis.com/Mesh",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/meshes/{mesh}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "selfLink": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "interceptionPort": {
                          "type": "int32",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListMeshesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/Mesh"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListMeshesResponse": {
                      "fields": {
                        "meshes": {
                          "rule": "repeated",
                          "type": "Mesh",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetMeshRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/Mesh"
                          }
                        }
                      }
                    },
                    "CreateMeshRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/Mesh"
                          }
                        },
                        "meshId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "mesh": {
                          "type": "Mesh",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateMeshRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "mesh": {
                          "type": "Mesh",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteMeshRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/Mesh"
                          }
                        }
                      }
                    },
                    "NetworkServices": {
                      "options": {
                        "(google.api.default_host)": "networkservices.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ListEndpointPolicies": {
                          "requestType": "ListEndpointPoliciesRequest",
                          "responseType": "ListEndpointPoliciesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/endpointPolicies",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/endpointPolicies"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetEndpointPolicy": {
                          "requestType": "GetEndpointPolicyRequest",
                          "responseType": "EndpointPolicy",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/endpointPolicies/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/endpointPolicies/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateEndpointPolicy": {
                          "requestType": "CreateEndpointPolicyRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/endpointPolicies",
                            "(google.api.http).body": "endpoint_policy",
                            "(google.api.method_signature)": "parent,endpoint_policy,endpoint_policy_id",
                            "(google.longrunning.operation_info).response_type": "EndpointPolicy",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/endpointPolicies",
                                "body": "endpoint_policy"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,endpoint_policy,endpoint_policy_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "EndpointPolicy",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateEndpointPolicy": {
                          "requestType": "UpdateEndpointPolicyRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{endpoint_policy.name=projects/*/locations/*/endpointPolicies/*}",
                            "(google.api.http).body": "endpoint_policy",
                            "(google.api.method_signature)": "endpoint_policy,update_mask",
                            "(google.longrunning.operation_info).response_type": "EndpointPolicy",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{endpoint_policy.name=projects/*/locations/*/endpointPolicies/*}",
                                "body": "endpoint_policy"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint_policy,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "EndpointPolicy",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteEndpointPolicy": {
                          "requestType": "DeleteEndpointPolicyRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/endpointPolicies/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/endpointPolicies/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListGateways": {
                          "requestType": "ListGatewaysRequest",
                          "responseType": "ListGatewaysResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/gateways",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/gateways"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetGateway": {
                          "requestType": "GetGatewayRequest",
                          "responseType": "Gateway",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/gateways/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/gateways/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateGateway": {
                          "requestType": "CreateGatewayRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/gateways",
                            "(google.api.http).body": "gateway",
                            "(google.api.method_signature)": "parent,gateway,gateway_id",
                            "(google.longrunning.operation_info).response_type": "Gateway",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/gateways",
                                "body": "gateway"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,gateway,gateway_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Gateway",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateGateway": {
                          "requestType": "UpdateGatewayRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{gateway.name=projects/*/locations/*/gateways/*}",
                            "(google.api.http).body": "gateway",
                            "(google.api.method_signature)": "gateway,update_mask",
                            "(google.longrunning.operation_info).response_type": "Gateway",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{gateway.name=projects/*/locations/*/gateways/*}",
                                "body": "gateway"
                              }
                            },
                            {
                              "(google.api.method_signature)": "gateway,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Gateway",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteGateway": {
                          "requestType": "DeleteGatewayRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/gateways/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/gateways/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListGrpcRoutes": {
                          "requestType": "ListGrpcRoutesRequest",
                          "responseType": "ListGrpcRoutesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/grpcRoutes",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/grpcRoutes"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetGrpcRoute": {
                          "requestType": "GetGrpcRouteRequest",
                          "responseType": "GrpcRoute",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/grpcRoutes/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/grpcRoutes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateGrpcRoute": {
                          "requestType": "CreateGrpcRouteRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/grpcRoutes",
                            "(google.api.http).body": "grpc_route",
                            "(google.api.method_signature)": "parent,grpc_route,grpc_route_id",
                            "(google.longrunning.operation_info).response_type": "GrpcRoute",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/grpcRoutes",
                                "body": "grpc_route"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,grpc_route,grpc_route_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "GrpcRoute",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateGrpcRoute": {
                          "requestType": "UpdateGrpcRouteRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{grpc_route.name=projects/*/locations/*/grpcRoutes/*}",
                            "(google.api.http).body": "grpc_route",
                            "(google.api.method_signature)": "grpc_route,update_mask",
                            "(google.longrunning.operation_info).response_type": "GrpcRoute",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{grpc_route.name=projects/*/locations/*/grpcRoutes/*}",
                                "body": "grpc_route"
                              }
                            },
                            {
                              "(google.api.method_signature)": "grpc_route,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "GrpcRoute",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteGrpcRoute": {
                          "requestType": "DeleteGrpcRouteRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/grpcRoutes/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/grpcRoutes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListHttpRoutes": {
                          "requestType": "ListHttpRoutesRequest",
                          "responseType": "ListHttpRoutesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/httpRoutes",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/httpRoutes"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetHttpRoute": {
                          "requestType": "GetHttpRouteRequest",
                          "responseType": "HttpRoute",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/httpRoutes/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/httpRoutes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateHttpRoute": {
                          "requestType": "CreateHttpRouteRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/httpRoutes",
                            "(google.api.http).body": "http_route",
                            "(google.api.method_signature)": "parent,http_route,http_route_id",
                            "(google.longrunning.operation_info).response_type": "HttpRoute",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/httpRoutes",
                                "body": "http_route"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,http_route,http_route_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "HttpRoute",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateHttpRoute": {
                          "requestType": "UpdateHttpRouteRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{http_route.name=projects/*/locations/*/httpRoutes/*}",
                            "(google.api.http).body": "http_route",
                            "(google.api.method_signature)": "http_route,update_mask",
                            "(google.longrunning.operation_info).response_type": "HttpRoute",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{http_route.name=projects/*/locations/*/httpRoutes/*}",
                                "body": "http_route"
                              }
                            },
                            {
                              "(google.api.method_signature)": "http_route,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "HttpRoute",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteHttpRoute": {
                          "requestType": "DeleteHttpRouteRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/httpRoutes/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/httpRoutes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListTcpRoutes": {
                          "requestType": "ListTcpRoutesRequest",
                          "responseType": "ListTcpRoutesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/tcpRoutes",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/tcpRoutes"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetTcpRoute": {
                          "requestType": "GetTcpRouteRequest",
                          "responseType": "TcpRoute",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/tcpRoutes/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/tcpRoutes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateTcpRoute": {
                          "requestType": "CreateTcpRouteRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/tcpRoutes",
                            "(google.api.http).body": "tcp_route",
                            "(google.api.method_signature)": "parent,tcp_route,tcp_route_id",
                            "(google.longrunning.operation_info).response_type": "TcpRoute",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/tcpRoutes",
                                "body": "tcp_route"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tcp_route,tcp_route_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "TcpRoute",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateTcpRoute": {
                          "requestType": "UpdateTcpRouteRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{tcp_route.name=projects/*/locations/*/tcpRoutes/*}",
                            "(google.api.http).body": "tcp_route",
                            "(google.api.method_signature)": "tcp_route,update_mask",
                            "(google.longrunning.operation_info).response_type": "TcpRoute",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{tcp_route.name=projects/*/locations/*/tcpRoutes/*}",
                                "body": "tcp_route"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tcp_route,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "TcpRoute",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteTcpRoute": {
                          "requestType": "DeleteTcpRouteRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/tcpRoutes/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/tcpRoutes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListTlsRoutes": {
                          "requestType": "ListTlsRoutesRequest",
                          "responseType": "ListTlsRoutesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/tlsRoutes",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/tlsRoutes"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetTlsRoute": {
                          "requestType": "GetTlsRouteRequest",
                          "responseType": "TlsRoute",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/tlsRoutes/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/tlsRoutes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateTlsRoute": {
                          "requestType": "CreateTlsRouteRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/tlsRoutes",
                            "(google.api.http).body": "tls_route",
                            "(google.api.method_signature)": "parent,tls_route,tls_route_id",
                            "(google.longrunning.operation_info).response_type": "TlsRoute",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/tlsRoutes",
                                "body": "tls_route"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tls_route,tls_route_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "TlsRoute",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateTlsRoute": {
                          "requestType": "UpdateTlsRouteRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{tls_route.name=projects/*/locations/*/tlsRoutes/*}",
                            "(google.api.http).body": "tls_route",
                            "(google.api.method_signature)": "tls_route,update_mask",
                            "(google.longrunning.operation_info).response_type": "TlsRoute",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{tls_route.name=projects/*/locations/*/tlsRoutes/*}",
                                "body": "tls_route"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tls_route,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "TlsRoute",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteTlsRoute": {
                          "requestType": "DeleteTlsRouteRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/tlsRoutes/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/tlsRoutes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListServiceBindings": {
                          "requestType": "ListServiceBindingsRequest",
                          "responseType": "ListServiceBindingsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/serviceBindings",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/serviceBindings"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetServiceBinding": {
                          "requestType": "GetServiceBindingRequest",
                          "responseType": "ServiceBinding",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/serviceBindings/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/serviceBindings/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateServiceBinding": {
                          "requestType": "CreateServiceBindingRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/serviceBindings",
                            "(google.api.http).body": "service_binding",
                            "(google.api.method_signature)": "parent,service_binding,service_binding_id",
                            "(google.longrunning.operation_info).response_type": "ServiceBinding",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/serviceBindings",
                                "body": "service_binding"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,service_binding,service_binding_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ServiceBinding",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteServiceBinding": {
                          "requestType": "DeleteServiceBindingRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/serviceBindings/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/serviceBindings/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListMeshes": {
                          "requestType": "ListMeshesRequest",
                          "responseType": "ListMeshesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/meshes",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/meshes"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetMesh": {
                          "requestType": "GetMeshRequest",
                          "responseType": "Mesh",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/meshes/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/meshes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateMesh": {
                          "requestType": "CreateMeshRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/meshes",
                            "(google.api.http).body": "mesh",
                            "(google.api.method_signature)": "parent,mesh,mesh_id",
                            "(google.longrunning.operation_info).response_type": "Mesh",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/meshes",
                                "body": "mesh"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,mesh,mesh_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Mesh",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateMesh": {
                          "requestType": "UpdateMeshRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{mesh.name=projects/*/locations/*/meshes/*}",
                            "(google.api.http).body": "mesh",
                            "(google.api.method_signature)": "mesh,update_mask",
                            "(google.longrunning.operation_info).response_type": "Mesh",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{mesh.name=projects/*/locations/*/meshes/*}",
                                "body": "mesh"
                              }
                            },
                            {
                              "(google.api.method_signature)": "mesh,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "Mesh",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteMesh": {
                          "requestType": "DeleteMeshRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/meshes/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/meshes/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.networkservices.v1.OperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "ServiceBinding": {
                      "options": {
                        "(google.api.resource).type": "networkservices.googleapis.com/ServiceBinding",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/serviceBindings/{service_binding}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "service": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListServiceBindingsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/ServiceBinding"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListServiceBindingsResponse": {
                      "fields": {
                        "serviceBindings": {
                          "rule": "repeated",
                          "type": "ServiceBinding",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetServiceBindingRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/ServiceBinding"
                          }
                        }
                      }
                    },
                    "CreateServiceBindingRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/ServiceBinding"
                          }
                        },
                        "serviceBindingId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "serviceBinding": {
                          "type": "ServiceBinding",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteServiceBindingRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/ServiceBinding"
                          }
                        }
                      }
                    },
                    "TcpRoute": {
                      "options": {
                        "(google.api.resource).type": "networkservices.googleapis.com/TcpRoute",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/tcpRoutes/{tcp_route}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "selfLink": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "rules": {
                          "rule": "repeated",
                          "type": "RouteRule",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "meshes": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/Mesh"
                          }
                        },
                        "gateways": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/Gateway"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "RouteRule": {
                          "fields": {
                            "matches": {
                              "rule": "repeated",
                              "type": "RouteMatch",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "action": {
                              "type": "RouteAction",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "RouteMatch": {
                          "fields": {
                            "address": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "port": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "RouteAction": {
                          "fields": {
                            "destinations": {
                              "rule": "repeated",
                              "type": "RouteDestination",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "originalDestination": {
                              "type": "bool",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "RouteDestination": {
                          "fields": {
                            "serviceName": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "compute.googleapis.com/BackendService"
                              }
                            },
                            "weight": {
                              "type": "int32",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        }
                      }
                    },
                    "ListTcpRoutesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/TcpRoute"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListTcpRoutesResponse": {
                      "fields": {
                        "tcpRoutes": {
                          "rule": "repeated",
                          "type": "TcpRoute",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetTcpRouteRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/TcpRoute"
                          }
                        }
                      }
                    },
                    "CreateTcpRouteRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/TcpRoute"
                          }
                        },
                        "tcpRouteId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tcpRoute": {
                          "type": "TcpRoute",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateTcpRouteRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "tcpRoute": {
                          "type": "TcpRoute",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteTcpRouteRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/TcpRoute"
                          }
                        }
                      }
                    },
                    "TlsRoute": {
                      "options": {
                        "(google.api.resource).type": "networkservices.googleapis.com/TlsRoute",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/tlsRoutes/{tls_route}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "selfLink": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "rules": {
                          "rule": "repeated",
                          "type": "RouteRule",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "meshes": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/Mesh"
                          }
                        },
                        "gateways": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/Gateway"
                          }
                        }
                      },
                      "nested": {
                        "RouteRule": {
                          "fields": {
                            "matches": {
                              "rule": "repeated",
                              "type": "RouteMatch",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "action": {
                              "type": "RouteAction",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "RouteMatch": {
                          "fields": {
                            "sniHost": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "alpn": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "RouteAction": {
                          "fields": {
                            "destinations": {
                              "rule": "repeated",
                              "type": "RouteDestination",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "RouteDestination": {
                          "fields": {
                            "serviceName": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "compute.googleapis.com/BackendService"
                              }
                            },
                            "weight": {
                              "type": "int32",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        }
                      }
                    },
                    "ListTlsRoutesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/TlsRoute"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListTlsRoutesResponse": {
                      "fields": {
                        "tlsRoutes": {
                          "rule": "repeated",
                          "type": "TlsRoute",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetTlsRouteRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/TlsRoute"
                          }
                        }
                      }
                    },
                    "CreateTlsRouteRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/TlsRoute"
                          }
                        },
                        "tlsRouteId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tlsRoute": {
                          "type": "TlsRoute",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateTlsRouteRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "tlsRoute": {
                          "type": "TlsRoute",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteTlsRouteRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/TlsRoute"
                          }
                        }
                      }
                    }
                  }
                },
                "v1beta1": {
                  "options": {
                    "csharp_namespace": "Google.Cloud.NetworkServices.V1Beta1",
                    "go_package": "cloud.google.com/go/networkservices/apiv1beta1/networkservicespb;networkservicespb",
                    "java_multiple_files": true,
                    "java_outer_classname": "EndpointPolicyProto",
                    "java_package": "com.google.cloud.networkservices.v1beta1",
                    "php_namespace": "Google\\Cloud\\NetworkServices\\V1beta1",
                    "ruby_package": "Google::Cloud::NetworkServices::V1beta1",
                    "(google.api.resource_definition).type": "networksecurity.googleapis.com/ClientTlsPolicy",
                    "(google.api.resource_definition).pattern": "projects/{project}/locations/{location}/clientTlsPolicies/{client_tls_policy}"
                  },
                  "nested": {
                    "OperationMetadata": {
                      "fields": {
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "target": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "verb": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "statusMessage": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "requestedCancellation": {
                          "type": "bool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "apiVersion": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "TrafficPortSelector": {
                      "fields": {
                        "ports": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "EndpointMatcher": {
                      "oneofs": {
                        "matcherType": {
                          "oneof": [
                            "metadataLabelMatcher"
                          ]
                        }
                      },
                      "fields": {
                        "metadataLabelMatcher": {
                          "type": "MetadataLabelMatcher",
                          "id": 1
                        }
                      },
                      "nested": {
                        "MetadataLabelMatcher": {
                          "fields": {
                            "metadataLabelMatchCriteria": {
                              "type": "MetadataLabelMatchCriteria",
                              "id": 1
                            },
                            "metadataLabels": {
                              "rule": "repeated",
                              "type": "MetadataLabels",
                              "id": 2
                            }
                          },
                          "nested": {
                            "MetadataLabels": {
                              "fields": {
                                "labelName": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "labelValue": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "MetadataLabelMatchCriteria": {
                              "values": {
                                "METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED": 0,
                                "MATCH_ANY": 1,
                                "MATCH_ALL": 2
                              }
                            }
                          }
                        }
                      }
                    },
                    "DepService": {
                      "options": {
                        "(google.api.default_host)": "networkservices.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ListLbTrafficExtensions": {
                          "requestType": "ListLbTrafficExtensionsRequest",
                          "responseType": "ListLbTrafficExtensionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/lbTrafficExtensions",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/lbTrafficExtensions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetLbTrafficExtension": {
                          "requestType": "GetLbTrafficExtensionRequest",
                          "responseType": "LbTrafficExtension",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/lbTrafficExtensions/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/lbTrafficExtensions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateLbTrafficExtension": {
                          "requestType": "CreateLbTrafficExtensionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/lbTrafficExtensions",
                            "(google.api.http).body": "lb_traffic_extension",
                            "(google.api.method_signature)": "parent,lb_traffic_extension,lb_traffic_extension_id",
                            "(google.longrunning.operation_info).response_type": "LbTrafficExtension",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/lbTrafficExtensions",
                                "body": "lb_traffic_extension"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,lb_traffic_extension,lb_traffic_extension_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "LbTrafficExtension",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateLbTrafficExtension": {
                          "requestType": "UpdateLbTrafficExtensionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{lb_traffic_extension.name=projects/*/locations/*/lbTrafficExtensions/*}",
                            "(google.api.http).body": "lb_traffic_extension",
                            "(google.api.method_signature)": "lb_traffic_extension,update_mask",
                            "(google.longrunning.operation_info).response_type": "LbTrafficExtension",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{lb_traffic_extension.name=projects/*/locations/*/lbTrafficExtensions/*}",
                                "body": "lb_traffic_extension"
                              }
                            },
                            {
                              "(google.api.method_signature)": "lb_traffic_extension,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "LbTrafficExtension",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteLbTrafficExtension": {
                          "requestType": "DeleteLbTrafficExtensionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/lbTrafficExtensions/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/lbTrafficExtensions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListLbRouteExtensions": {
                          "requestType": "ListLbRouteExtensionsRequest",
                          "responseType": "ListLbRouteExtensionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/lbRouteExtensions",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/lbRouteExtensions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetLbRouteExtension": {
                          "requestType": "GetLbRouteExtensionRequest",
                          "responseType": "LbRouteExtension",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/lbRouteExtensions/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/lbRouteExtensions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateLbRouteExtension": {
                          "requestType": "CreateLbRouteExtensionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/lbRouteExtensions",
                            "(google.api.http).body": "lb_route_extension",
                            "(google.api.method_signature)": "parent,lb_route_extension,lb_route_extension_id",
                            "(google.longrunning.operation_info).response_type": "LbRouteExtension",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/lbRouteExtensions",
                                "body": "lb_route_extension"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,lb_route_extension,lb_route_extension_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "LbRouteExtension",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateLbRouteExtension": {
                          "requestType": "UpdateLbRouteExtensionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{lb_route_extension.name=projects/*/locations/*/lbRouteExtensions/*}",
                            "(google.api.http).body": "lb_route_extension",
                            "(google.api.method_signature)": "lb_route_extension,update_mask",
                            "(google.longrunning.operation_info).response_type": "LbRouteExtension",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{lb_route_extension.name=projects/*/locations/*/lbRouteExtensions/*}",
                                "body": "lb_route_extension"
                              }
                            },
                            {
                              "(google.api.method_signature)": "lb_route_extension,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "LbRouteExtension",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteLbRouteExtension": {
                          "requestType": "DeleteLbRouteExtensionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/lbRouteExtensions/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/lbRouteExtensions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "OperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "LoadBalancingScheme": {
                      "values": {
                        "LOAD_BALANCING_SCHEME_UNSPECIFIED": 0,
                        "INTERNAL_MANAGED": 1,
                        "EXTERNAL_MANAGED": 2
                      }
                    },
                    "ExtensionChain": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "matchCondition": {
                          "type": "MatchCondition",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "extensions": {
                          "rule": "repeated",
                          "type": "Extension",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      },
                      "nested": {
                        "MatchCondition": {
                          "fields": {
                            "celExpression": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "Extension": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "authority": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "service": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "supportedEvents": {
                              "rule": "repeated",
                              "type": "EventType",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "timeout": {
                              "type": "google.protobuf.Duration",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "failOpen": {
                              "type": "bool",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "forwardHeaders": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "EventType": {
                              "values": {
                                "EVENT_TYPE_UNSPECIFIED": 0,
                                "REQUEST_HEADERS": 1,
                                "REQUEST_BODY": 2,
                                "RESPONSE_HEADERS": 3,
                                "RESPONSE_BODY": 4
                              }
                            }
                          }
                        }
                      }
                    },
                    "LbTrafficExtension": {
                      "options": {
                        "(google.api.resource).type": "networkservices.googleapis.com/LbTrafficExtension",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/lbTrafficExtensions/{lb_traffic_extension}",
                        "(google.api.resource).plural": "lbTrafficExtensions",
                        "(google.api.resource).singular": "lbTrafficExtension"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IDENTIFIER"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "forwardingRules": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "extensionChains": {
                          "rule": "repeated",
                          "type": "ExtensionChain",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "loadBalancingScheme": {
                          "type": "LoadBalancingScheme",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ListLbTrafficExtensionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/LbTrafficExtension"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListLbTrafficExtensionsResponse": {
                      "fields": {
                        "lbTrafficExtensions": {
                          "rule": "repeated",
                          "type": "LbTrafficExtension",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetLbTrafficExtensionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/LbTrafficExtension"
                          }
                        }
                      }
                    },
                    "CreateLbTrafficExtensionRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/LbTrafficExtension"
                          }
                        },
                        "lbTrafficExtensionId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "lbTrafficExtension": {
                          "type": "LbTrafficExtension",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_info).format": "UUID4",
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateLbTrafficExtensionRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "lbTrafficExtension": {
                          "type": "LbTrafficExtension",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_info).format": "UUID4",
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteLbTrafficExtensionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/LbTrafficExtension"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_info).format": "UUID4",
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "LbRouteExtension": {
                      "options": {
                        "(google.api.resource).type": "networkservices.googleapis.com/LbRouteExtension",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/lbRouteExtensions/{lb_route_extension}",
                        "(google.api.resource).plural": "lbRouteExtensions",
                        "(google.api.resource).singular": "lbRouteExtension"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IDENTIFIER"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "forwardingRules": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "extensionChains": {
                          "rule": "repeated",
                          "type": "ExtensionChain",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "loadBalancingScheme": {
                          "type": "LoadBalancingScheme",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ListLbRouteExtensionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/LbRouteExtension"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListLbRouteExtensionsResponse": {
                      "fields": {
                        "lbRouteExtensions": {
                          "rule": "repeated",
                          "type": "LbRouteExtension",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetLbRouteExtensionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/LbRouteExtension"
                          }
                        }
                      }
                    },
                    "CreateLbRouteExtensionRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/LbRouteExtension"
                          }
                        },
                        "lbRouteExtensionId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "lbRouteExtension": {
                          "type": "LbRouteExtension",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_info).format": "UUID4",
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "UpdateLbRouteExtensionRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "lbRouteExtension": {
                          "type": "LbRouteExtension",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_info).format": "UUID4",
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DeleteLbRouteExtensionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/LbRouteExtension"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_info).format": "UUID4",
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "EndpointPolicy": {
                      "options": {
                        "(google.api.resource).type": "networkservices.googleapis.com/EndpointPolicy",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/endpointPolicies/{endpoint_policy}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "type": {
                          "type": "EndpointPolicyType",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "authorizationPolicy": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "networksecurity.googleapis.com/AuthorizationPolicy"
                          }
                        },
                        "endpointMatcher": {
                          "type": "EndpointMatcher",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "trafficPortSelector": {
                          "type": "TrafficPortSelector",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "serverTlsPolicy": {
                          "type": "string",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "networksecurity.googleapis.com/ServerTlsPolicy"
                          }
                        },
                        "clientTlsPolicy": {
                          "type": "string",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "networksecurity.googleapis.com/ClientTlsPolicy"
                          }
                        }
                      },
                      "nested": {
                        "EndpointPolicyType": {
                          "values": {
                            "ENDPOINT_POLICY_TYPE_UNSPECIFIED": 0,
                            "SIDECAR_PROXY": 1,
                            "GRPC_SERVER": 2
                          }
                        }
                      }
                    },
                    "ListEndpointPoliciesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/EndpointPolicy"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListEndpointPoliciesResponse": {
                      "fields": {
                        "endpointPolicies": {
                          "rule": "repeated",
                          "type": "EndpointPolicy",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetEndpointPolicyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/EndpointPolicy"
                          }
                        }
                      }
                    },
                    "CreateEndpointPolicyRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "networkservices.googleapis.com/EndpointPolicy"
                          }
                        },
                        "endpointPolicyId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "endpointPolicy": {
                          "type": "EndpointPolicy",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateEndpointPolicyRequest": {
                      "fields": {
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "endpointPolicy": {
                          "type": "EndpointPolicy",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteEndpointPolicyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "networkservices.googleapis.com/EndpointPolicy"
                          }
                        }
                      }
                    },
                    "NetworkServices": {
                      "options": {
                        "(google.api.default_host)": "networkservices.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ListEndpointPolicies": {
                          "requestType": "ListEndpointPoliciesRequest",
                          "responseType": "ListEndpointPoliciesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/endpointPolicies",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/endpointPolicies"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetEndpointPolicy": {
                          "requestType": "GetEndpointPolicyRequest",
                          "responseType": "EndpointPolicy",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/endpointPolicies/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/endpointPolicies/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateEndpointPolicy": {
                          "requestType": "CreateEndpointPolicyRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/endpointPolicies",
                            "(google.api.http).body": "endpoint_policy",
                            "(google.api.method_signature)": "parent,endpoint_policy,endpoint_policy_id",
                            "(google.longrunning.operation_info).response_type": "EndpointPolicy",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1beta1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/endpointPolicies",
                                "body": "endpoint_policy"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,endpoint_policy,endpoint_policy_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "EndpointPolicy",
                                "metadata_type": "google.cloud.networkservices.v1beta1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateEndpointPolicy": {
                          "requestType": "UpdateEndpointPolicyRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{endpoint_policy.name=projects/*/locations/*/endpointPolicies/*}",
                            "(google.api.http).body": "endpoint_policy",
                            "(google.api.method_signature)": "endpoint_policy,update_mask",
                            "(google.longrunning.operation_info).response_type": "EndpointPolicy",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1beta1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{endpoint_policy.name=projects/*/locations/*/endpointPolicies/*}",
                                "body": "endpoint_policy"
                              }
                            },
                            {
                              "(google.api.method_signature)": "endpoint_policy,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "EndpointPolicy",
                                "metadata_type": "google.cloud.networkservices.v1beta1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteEndpointPolicy": {
                          "requestType": "DeleteEndpointPolicyRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/endpointPolicies/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.networkservices.v1beta1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/endpointPolicies/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.networkservices.v1beta1.OperationMetadata"
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api;api",
            "java_multiple_files": true,
            "java_outer_classname": "LaunchStageProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "CommonLanguageSettings": {
              "fields": {
                "referenceDocsUri": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "deprecated": true
                  }
                },
                "destinations": {
                  "rule": "repeated",
                  "type": "ClientLibraryDestination",
                  "id": 2
                }
              }
            },
            "ClientLibrarySettings": {
              "fields": {
                "version": {
                  "type": "string",
                  "id": 1
                },
                "launchStage": {
                  "type": "LaunchStage",
                  "id": 2
                },
                "restNumericEnums": {
                  "type": "bool",
                  "id": 3
                },
                "javaSettings": {
                  "type": "JavaSettings",
                  "id": 21
                },
                "cppSettings": {
                  "type": "CppSettings",
                  "id": 22
                },
                "phpSettings": {
                  "type": "PhpSettings",
                  "id": 23
                },
                "pythonSettings": {
                  "type": "PythonSettings",
                  "id": 24
                },
                "nodeSettings": {
                  "type": "NodeSettings",
                  "id": 25
                },
                "dotnetSettings": {
                  "type": "DotnetSettings",
                  "id": 26
                },
                "rubySettings": {
                  "type": "RubySettings",
                  "id": 27
                },
                "goSettings": {
                  "type": "GoSettings",
                  "id": 28
                }
              }
            },
            "Publishing": {
              "fields": {
                "methodSettings": {
                  "rule": "repeated",
                  "type": "MethodSettings",
                  "id": 2
                },
                "newIssueUri": {
                  "type": "string",
                  "id": 101
                },
                "documentationUri": {
                  "type": "string",
                  "id": 102
                },
                "apiShortName": {
                  "type": "string",
                  "id": 103
                },
                "githubLabel": {
                  "type": "string",
                  "id": 104
                },
                "codeownerGithubTeams": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 105
                },
                "docTagPrefix": {
                  "type": "string",
                  "id": 106
                },
                "organization": {
                  "type": "ClientLibraryOrganization",
                  "id": 107
                },
                "librarySettings": {
                  "rule": "repeated",
                  "type": "ClientLibrarySettings",
                  "id": 109
                }
              }
            },
            "JavaSettings": {
              "fields": {
                "libraryPackage": {
                  "type": "string",
                  "id": 1
                },
                "serviceClassNames": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 3
                }
              }
            },
            "CppSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PhpSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PythonSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "NodeSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "DotnetSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "RubySettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "GoSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "MethodSettings": {
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "longRunning": {
                  "type": "LongRunning",
                  "id": 2
                }
              },
              "nested": {
                "LongRunning": {
                  "fields": {
                    "initialPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 1
                    },
                    "pollDelayMultiplier": {
                      "type": "float",
                      "id": 2
                    },
                    "maxPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 3
                    },
                    "totalPollTimeout": {
                      "type": "google.protobuf.Duration",
                      "id": 4
                    }
                  }
                }
              }
            },
            "ClientLibraryOrganization": {
              "values": {
                "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED": 0,
                "CLOUD": 1,
                "ADS": 2,
                "PHOTOS": 3,
                "STREET_VIEW": 4
              }
            },
            "ClientLibraryDestination": {
              "values": {
                "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED": 0,
                "GITHUB": 10,
                "PACKAGE_MANAGER": 20
              }
            },
            "LaunchStage": {
              "values": {
                "LAUNCH_STAGE_UNSPECIFIED": 0,
                "UNIMPLEMENTED": 6,
                "PRELAUNCH": 7,
                "EARLY_ACCESS": 1,
                "ALPHA": 2,
                "BETA": 3,
                "GA": 4,
                "DEPRECATED": 5
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "string",
                  "id": 13
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 11,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "retention": {
                  "type": "OptionRetention",
                  "id": 17
                },
                "target": {
                  "type": "OptionTargetType",
                  "id": 18
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                },
                "OptionRetention": {
                  "values": {
                    "RETENTION_UNKNOWN": 0,
                    "RETENTION_RUNTIME": 1,
                    "RETENTION_SOURCE": 2
                  }
                },
                "OptionTargetType": {
                  "values": {
                    "TARGET_TYPE_UNKNOWN": 0,
                    "TARGET_TYPE_FILE": 1,
                    "TARGET_TYPE_EXTENSION_RANGE": 2,
                    "TARGET_TYPE_MESSAGE": 3,
                    "TARGET_TYPE_FIELD": 4,
                    "TARGET_TYPE_ONEOF": 5,
                    "TARGET_TYPE_ENUM": 6,
                    "TARGET_TYPE_ENUM_ENTRY": 7,
                    "TARGET_TYPE_SERVICE": 8,
                    "TARGET_TYPE_METHOD": 9
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "google.golang.org/genproto/googleapis/longrunning;longrunning",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        }
      }
    }
  }
}