// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(name, targetId, rolloutId) {
  // [START clouddeploy_v1_generated_CloudDeploy_RollbackTarget_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The `DeliveryPipeline` for which the rollback `Rollout` should be
   *  created. Format should be
   *  `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
   */
  // const name = 'abc123'
  /**
   *  Required. ID of the `Target` that is being rolled back.
   */
  // const targetId = 'abc123'
  /**
   *  Required. ID of the rollback `Rollout` to create.
   */
  // const rolloutId = 'abc123'
  /**
   *  Optional. ID of the `Release` to roll back to. If this isn't specified, the
   *  previous successful `Rollout` to the specified target will be used to
   *  determine the `Release`.
   */
  // const releaseId = 'abc123'
  /**
   *  Optional. If provided, this must be the latest `Rollout` that is on the
   *  `Target`.
   */
  // const rolloutToRollBack = 'abc123'
  /**
   *  Optional. Configs for the rollback `Rollout`.
   */
  // const rollbackConfig = {}
  /**
   *  Optional. If set to true, the request is validated and the user is provided
   *  with a `RollbackTargetResponse`.
   */
  // const validateOnly = true
  /**
   *  Optional. Deploy policies to override. Format is
   *  `projects/{project}/locations/{location}/deployPolicies/{deploy_policy}`.
   */
  // const overrideDeployPolicy = ['abc','def']

  // Imports the Deploy library
  const {CloudDeployClient} = require('@google-cloud/deploy').v1;

  // Instantiates a client
  const deployClient = new CloudDeployClient();

  async function callRollbackTarget() {
    // Construct request
    const request = {
      name,
      targetId,
      rolloutId,
    };

    // Run request
    const response = await deployClient.rollbackTarget(request);
    console.log(response);
  }

  callRollbackTarget();
  // [END clouddeploy_v1_generated_CloudDeploy_RollbackTarget_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
