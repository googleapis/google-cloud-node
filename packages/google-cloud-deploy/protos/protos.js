// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_deploy_protos || ($protobuf.roots._google_cloud_deploy_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.deploy = (function() {
    
                /**
                 * Namespace deploy.
                 * @memberof google.cloud
                 * @namespace
                 */
                var deploy = {};
    
                deploy.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.cloud.deploy
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.CloudDeploy = (function() {
    
                        /**
                         * Constructs a new CloudDeploy service.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a CloudDeploy
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function CloudDeploy(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (CloudDeploy.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CloudDeploy;
    
                        /**
                         * Creates new CloudDeploy service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {CloudDeploy} RPC service. Useful where requests and/or responses are streamed.
                         */
                        CloudDeploy.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|listDeliveryPipelines}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef ListDeliveryPipelinesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.ListDeliveryPipelinesResponse} [response] ListDeliveryPipelinesResponse
                         */
    
                        /**
                         * Calls ListDeliveryPipelines.
                         * @function listDeliveryPipelines
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IListDeliveryPipelinesRequest} request ListDeliveryPipelinesRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.ListDeliveryPipelinesCallback} callback Node-style callback called with the error, if any, and ListDeliveryPipelinesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.listDeliveryPipelines = function listDeliveryPipelines(request, callback) {
                            return this.rpcCall(listDeliveryPipelines, $root.google.cloud.deploy.v1.ListDeliveryPipelinesRequest, $root.google.cloud.deploy.v1.ListDeliveryPipelinesResponse, request, callback);
                        }, "name", { value: "ListDeliveryPipelines" });
    
                        /**
                         * Calls ListDeliveryPipelines.
                         * @function listDeliveryPipelines
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IListDeliveryPipelinesRequest} request ListDeliveryPipelinesRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.ListDeliveryPipelinesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|getDeliveryPipeline}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef GetDeliveryPipelineCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.DeliveryPipeline} [response] DeliveryPipeline
                         */
    
                        /**
                         * Calls GetDeliveryPipeline.
                         * @function getDeliveryPipeline
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IGetDeliveryPipelineRequest} request GetDeliveryPipelineRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.GetDeliveryPipelineCallback} callback Node-style callback called with the error, if any, and DeliveryPipeline
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.getDeliveryPipeline = function getDeliveryPipeline(request, callback) {
                            return this.rpcCall(getDeliveryPipeline, $root.google.cloud.deploy.v1.GetDeliveryPipelineRequest, $root.google.cloud.deploy.v1.DeliveryPipeline, request, callback);
                        }, "name", { value: "GetDeliveryPipeline" });
    
                        /**
                         * Calls GetDeliveryPipeline.
                         * @function getDeliveryPipeline
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IGetDeliveryPipelineRequest} request GetDeliveryPipelineRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.DeliveryPipeline>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|createDeliveryPipeline}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef CreateDeliveryPipelineCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateDeliveryPipeline.
                         * @function createDeliveryPipeline
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.ICreateDeliveryPipelineRequest} request CreateDeliveryPipelineRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.CreateDeliveryPipelineCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.createDeliveryPipeline = function createDeliveryPipeline(request, callback) {
                            return this.rpcCall(createDeliveryPipeline, $root.google.cloud.deploy.v1.CreateDeliveryPipelineRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateDeliveryPipeline" });
    
                        /**
                         * Calls CreateDeliveryPipeline.
                         * @function createDeliveryPipeline
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.ICreateDeliveryPipelineRequest} request CreateDeliveryPipelineRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|updateDeliveryPipeline}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef UpdateDeliveryPipelineCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateDeliveryPipeline.
                         * @function updateDeliveryPipeline
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IUpdateDeliveryPipelineRequest} request UpdateDeliveryPipelineRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.UpdateDeliveryPipelineCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.updateDeliveryPipeline = function updateDeliveryPipeline(request, callback) {
                            return this.rpcCall(updateDeliveryPipeline, $root.google.cloud.deploy.v1.UpdateDeliveryPipelineRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateDeliveryPipeline" });
    
                        /**
                         * Calls UpdateDeliveryPipeline.
                         * @function updateDeliveryPipeline
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IUpdateDeliveryPipelineRequest} request UpdateDeliveryPipelineRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|deleteDeliveryPipeline}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef DeleteDeliveryPipelineCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteDeliveryPipeline.
                         * @function deleteDeliveryPipeline
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IDeleteDeliveryPipelineRequest} request DeleteDeliveryPipelineRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.DeleteDeliveryPipelineCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.deleteDeliveryPipeline = function deleteDeliveryPipeline(request, callback) {
                            return this.rpcCall(deleteDeliveryPipeline, $root.google.cloud.deploy.v1.DeleteDeliveryPipelineRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteDeliveryPipeline" });
    
                        /**
                         * Calls DeleteDeliveryPipeline.
                         * @function deleteDeliveryPipeline
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IDeleteDeliveryPipelineRequest} request DeleteDeliveryPipelineRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|listTargets}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef ListTargetsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.ListTargetsResponse} [response] ListTargetsResponse
                         */
    
                        /**
                         * Calls ListTargets.
                         * @function listTargets
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IListTargetsRequest} request ListTargetsRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.ListTargetsCallback} callback Node-style callback called with the error, if any, and ListTargetsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.listTargets = function listTargets(request, callback) {
                            return this.rpcCall(listTargets, $root.google.cloud.deploy.v1.ListTargetsRequest, $root.google.cloud.deploy.v1.ListTargetsResponse, request, callback);
                        }, "name", { value: "ListTargets" });
    
                        /**
                         * Calls ListTargets.
                         * @function listTargets
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IListTargetsRequest} request ListTargetsRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.ListTargetsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|getTarget}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef GetTargetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.Target} [response] Target
                         */
    
                        /**
                         * Calls GetTarget.
                         * @function getTarget
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IGetTargetRequest} request GetTargetRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.GetTargetCallback} callback Node-style callback called with the error, if any, and Target
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.getTarget = function getTarget(request, callback) {
                            return this.rpcCall(getTarget, $root.google.cloud.deploy.v1.GetTargetRequest, $root.google.cloud.deploy.v1.Target, request, callback);
                        }, "name", { value: "GetTarget" });
    
                        /**
                         * Calls GetTarget.
                         * @function getTarget
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IGetTargetRequest} request GetTargetRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.Target>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|createTarget}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef CreateTargetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateTarget.
                         * @function createTarget
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.ICreateTargetRequest} request CreateTargetRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.CreateTargetCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.createTarget = function createTarget(request, callback) {
                            return this.rpcCall(createTarget, $root.google.cloud.deploy.v1.CreateTargetRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateTarget" });
    
                        /**
                         * Calls CreateTarget.
                         * @function createTarget
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.ICreateTargetRequest} request CreateTargetRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|updateTarget}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef UpdateTargetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateTarget.
                         * @function updateTarget
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IUpdateTargetRequest} request UpdateTargetRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.UpdateTargetCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.updateTarget = function updateTarget(request, callback) {
                            return this.rpcCall(updateTarget, $root.google.cloud.deploy.v1.UpdateTargetRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateTarget" });
    
                        /**
                         * Calls UpdateTarget.
                         * @function updateTarget
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IUpdateTargetRequest} request UpdateTargetRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|deleteTarget}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef DeleteTargetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteTarget.
                         * @function deleteTarget
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IDeleteTargetRequest} request DeleteTargetRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.DeleteTargetCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.deleteTarget = function deleteTarget(request, callback) {
                            return this.rpcCall(deleteTarget, $root.google.cloud.deploy.v1.DeleteTargetRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteTarget" });
    
                        /**
                         * Calls DeleteTarget.
                         * @function deleteTarget
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IDeleteTargetRequest} request DeleteTargetRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|listReleases}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef ListReleasesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.ListReleasesResponse} [response] ListReleasesResponse
                         */
    
                        /**
                         * Calls ListReleases.
                         * @function listReleases
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IListReleasesRequest} request ListReleasesRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.ListReleasesCallback} callback Node-style callback called with the error, if any, and ListReleasesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.listReleases = function listReleases(request, callback) {
                            return this.rpcCall(listReleases, $root.google.cloud.deploy.v1.ListReleasesRequest, $root.google.cloud.deploy.v1.ListReleasesResponse, request, callback);
                        }, "name", { value: "ListReleases" });
    
                        /**
                         * Calls ListReleases.
                         * @function listReleases
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IListReleasesRequest} request ListReleasesRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.ListReleasesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|getRelease}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef GetReleaseCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.Release} [response] Release
                         */
    
                        /**
                         * Calls GetRelease.
                         * @function getRelease
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IGetReleaseRequest} request GetReleaseRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.GetReleaseCallback} callback Node-style callback called with the error, if any, and Release
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.getRelease = function getRelease(request, callback) {
                            return this.rpcCall(getRelease, $root.google.cloud.deploy.v1.GetReleaseRequest, $root.google.cloud.deploy.v1.Release, request, callback);
                        }, "name", { value: "GetRelease" });
    
                        /**
                         * Calls GetRelease.
                         * @function getRelease
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IGetReleaseRequest} request GetReleaseRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.Release>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|createRelease}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef CreateReleaseCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateRelease.
                         * @function createRelease
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.ICreateReleaseRequest} request CreateReleaseRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.CreateReleaseCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.createRelease = function createRelease(request, callback) {
                            return this.rpcCall(createRelease, $root.google.cloud.deploy.v1.CreateReleaseRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateRelease" });
    
                        /**
                         * Calls CreateRelease.
                         * @function createRelease
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.ICreateReleaseRequest} request CreateReleaseRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|abandonRelease}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef AbandonReleaseCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.AbandonReleaseResponse} [response] AbandonReleaseResponse
                         */
    
                        /**
                         * Calls AbandonRelease.
                         * @function abandonRelease
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IAbandonReleaseRequest} request AbandonReleaseRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.AbandonReleaseCallback} callback Node-style callback called with the error, if any, and AbandonReleaseResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.abandonRelease = function abandonRelease(request, callback) {
                            return this.rpcCall(abandonRelease, $root.google.cloud.deploy.v1.AbandonReleaseRequest, $root.google.cloud.deploy.v1.AbandonReleaseResponse, request, callback);
                        }, "name", { value: "AbandonRelease" });
    
                        /**
                         * Calls AbandonRelease.
                         * @function abandonRelease
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IAbandonReleaseRequest} request AbandonReleaseRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.AbandonReleaseResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|approveRollout}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef ApproveRolloutCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.ApproveRolloutResponse} [response] ApproveRolloutResponse
                         */
    
                        /**
                         * Calls ApproveRollout.
                         * @function approveRollout
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IApproveRolloutRequest} request ApproveRolloutRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.ApproveRolloutCallback} callback Node-style callback called with the error, if any, and ApproveRolloutResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.approveRollout = function approveRollout(request, callback) {
                            return this.rpcCall(approveRollout, $root.google.cloud.deploy.v1.ApproveRolloutRequest, $root.google.cloud.deploy.v1.ApproveRolloutResponse, request, callback);
                        }, "name", { value: "ApproveRollout" });
    
                        /**
                         * Calls ApproveRollout.
                         * @function approveRollout
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IApproveRolloutRequest} request ApproveRolloutRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.ApproveRolloutResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|advanceRollout}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef AdvanceRolloutCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.AdvanceRolloutResponse} [response] AdvanceRolloutResponse
                         */
    
                        /**
                         * Calls AdvanceRollout.
                         * @function advanceRollout
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IAdvanceRolloutRequest} request AdvanceRolloutRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.AdvanceRolloutCallback} callback Node-style callback called with the error, if any, and AdvanceRolloutResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.advanceRollout = function advanceRollout(request, callback) {
                            return this.rpcCall(advanceRollout, $root.google.cloud.deploy.v1.AdvanceRolloutRequest, $root.google.cloud.deploy.v1.AdvanceRolloutResponse, request, callback);
                        }, "name", { value: "AdvanceRollout" });
    
                        /**
                         * Calls AdvanceRollout.
                         * @function advanceRollout
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IAdvanceRolloutRequest} request AdvanceRolloutRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.AdvanceRolloutResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|cancelRollout}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef CancelRolloutCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.CancelRolloutResponse} [response] CancelRolloutResponse
                         */
    
                        /**
                         * Calls CancelRollout.
                         * @function cancelRollout
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.ICancelRolloutRequest} request CancelRolloutRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.CancelRolloutCallback} callback Node-style callback called with the error, if any, and CancelRolloutResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.cancelRollout = function cancelRollout(request, callback) {
                            return this.rpcCall(cancelRollout, $root.google.cloud.deploy.v1.CancelRolloutRequest, $root.google.cloud.deploy.v1.CancelRolloutResponse, request, callback);
                        }, "name", { value: "CancelRollout" });
    
                        /**
                         * Calls CancelRollout.
                         * @function cancelRollout
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.ICancelRolloutRequest} request CancelRolloutRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.CancelRolloutResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|listRollouts}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef ListRolloutsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.ListRolloutsResponse} [response] ListRolloutsResponse
                         */
    
                        /**
                         * Calls ListRollouts.
                         * @function listRollouts
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IListRolloutsRequest} request ListRolloutsRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.ListRolloutsCallback} callback Node-style callback called with the error, if any, and ListRolloutsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.listRollouts = function listRollouts(request, callback) {
                            return this.rpcCall(listRollouts, $root.google.cloud.deploy.v1.ListRolloutsRequest, $root.google.cloud.deploy.v1.ListRolloutsResponse, request, callback);
                        }, "name", { value: "ListRollouts" });
    
                        /**
                         * Calls ListRollouts.
                         * @function listRollouts
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IListRolloutsRequest} request ListRolloutsRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.ListRolloutsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|getRollout}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef GetRolloutCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.Rollout} [response] Rollout
                         */
    
                        /**
                         * Calls GetRollout.
                         * @function getRollout
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IGetRolloutRequest} request GetRolloutRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.GetRolloutCallback} callback Node-style callback called with the error, if any, and Rollout
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.getRollout = function getRollout(request, callback) {
                            return this.rpcCall(getRollout, $root.google.cloud.deploy.v1.GetRolloutRequest, $root.google.cloud.deploy.v1.Rollout, request, callback);
                        }, "name", { value: "GetRollout" });
    
                        /**
                         * Calls GetRollout.
                         * @function getRollout
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IGetRolloutRequest} request GetRolloutRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.Rollout>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|createRollout}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef CreateRolloutCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateRollout.
                         * @function createRollout
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.ICreateRolloutRequest} request CreateRolloutRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.CreateRolloutCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.createRollout = function createRollout(request, callback) {
                            return this.rpcCall(createRollout, $root.google.cloud.deploy.v1.CreateRolloutRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateRollout" });
    
                        /**
                         * Calls CreateRollout.
                         * @function createRollout
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.ICreateRolloutRequest} request CreateRolloutRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|ignoreJob}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef IgnoreJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.IgnoreJobResponse} [response] IgnoreJobResponse
                         */
    
                        /**
                         * Calls IgnoreJob.
                         * @function ignoreJob
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IIgnoreJobRequest} request IgnoreJobRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.IgnoreJobCallback} callback Node-style callback called with the error, if any, and IgnoreJobResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.ignoreJob = function ignoreJob(request, callback) {
                            return this.rpcCall(ignoreJob, $root.google.cloud.deploy.v1.IgnoreJobRequest, $root.google.cloud.deploy.v1.IgnoreJobResponse, request, callback);
                        }, "name", { value: "IgnoreJob" });
    
                        /**
                         * Calls IgnoreJob.
                         * @function ignoreJob
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IIgnoreJobRequest} request IgnoreJobRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.IgnoreJobResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|retryJob}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef RetryJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.RetryJobResponse} [response] RetryJobResponse
                         */
    
                        /**
                         * Calls RetryJob.
                         * @function retryJob
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IRetryJobRequest} request RetryJobRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.RetryJobCallback} callback Node-style callback called with the error, if any, and RetryJobResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.retryJob = function retryJob(request, callback) {
                            return this.rpcCall(retryJob, $root.google.cloud.deploy.v1.RetryJobRequest, $root.google.cloud.deploy.v1.RetryJobResponse, request, callback);
                        }, "name", { value: "RetryJob" });
    
                        /**
                         * Calls RetryJob.
                         * @function retryJob
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IRetryJobRequest} request RetryJobRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.RetryJobResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|listJobRuns}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef ListJobRunsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.ListJobRunsResponse} [response] ListJobRunsResponse
                         */
    
                        /**
                         * Calls ListJobRuns.
                         * @function listJobRuns
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IListJobRunsRequest} request ListJobRunsRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.ListJobRunsCallback} callback Node-style callback called with the error, if any, and ListJobRunsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.listJobRuns = function listJobRuns(request, callback) {
                            return this.rpcCall(listJobRuns, $root.google.cloud.deploy.v1.ListJobRunsRequest, $root.google.cloud.deploy.v1.ListJobRunsResponse, request, callback);
                        }, "name", { value: "ListJobRuns" });
    
                        /**
                         * Calls ListJobRuns.
                         * @function listJobRuns
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IListJobRunsRequest} request ListJobRunsRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.ListJobRunsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|getJobRun}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef GetJobRunCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.JobRun} [response] JobRun
                         */
    
                        /**
                         * Calls GetJobRun.
                         * @function getJobRun
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IGetJobRunRequest} request GetJobRunRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.GetJobRunCallback} callback Node-style callback called with the error, if any, and JobRun
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.getJobRun = function getJobRun(request, callback) {
                            return this.rpcCall(getJobRun, $root.google.cloud.deploy.v1.GetJobRunRequest, $root.google.cloud.deploy.v1.JobRun, request, callback);
                        }, "name", { value: "GetJobRun" });
    
                        /**
                         * Calls GetJobRun.
                         * @function getJobRun
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IGetJobRunRequest} request GetJobRunRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.JobRun>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|terminateJobRun}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef TerminateJobRunCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.TerminateJobRunResponse} [response] TerminateJobRunResponse
                         */
    
                        /**
                         * Calls TerminateJobRun.
                         * @function terminateJobRun
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.ITerminateJobRunRequest} request TerminateJobRunRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.TerminateJobRunCallback} callback Node-style callback called with the error, if any, and TerminateJobRunResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.terminateJobRun = function terminateJobRun(request, callback) {
                            return this.rpcCall(terminateJobRun, $root.google.cloud.deploy.v1.TerminateJobRunRequest, $root.google.cloud.deploy.v1.TerminateJobRunResponse, request, callback);
                        }, "name", { value: "TerminateJobRun" });
    
                        /**
                         * Calls TerminateJobRun.
                         * @function terminateJobRun
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.ITerminateJobRunRequest} request TerminateJobRunRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.TerminateJobRunResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.deploy.v1.CloudDeploy|getConfig}.
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @typedef GetConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.deploy.v1.Config} [response] Config
                         */
    
                        /**
                         * Calls GetConfig.
                         * @function getConfig
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IGetConfigRequest} request GetConfigRequest message or plain object
                         * @param {google.cloud.deploy.v1.CloudDeploy.GetConfigCallback} callback Node-style callback called with the error, if any, and Config
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudDeploy.prototype.getConfig = function getConfig(request, callback) {
                            return this.rpcCall(getConfig, $root.google.cloud.deploy.v1.GetConfigRequest, $root.google.cloud.deploy.v1.Config, request, callback);
                        }, "name", { value: "GetConfig" });
    
                        /**
                         * Calls GetConfig.
                         * @function getConfig
                         * @memberof google.cloud.deploy.v1.CloudDeploy
                         * @instance
                         * @param {google.cloud.deploy.v1.IGetConfigRequest} request GetConfigRequest message or plain object
                         * @returns {Promise<google.cloud.deploy.v1.Config>} Promise
                         * @variation 2
                         */
    
                        return CloudDeploy;
                    })();
    
                    v1.DeliveryPipeline = (function() {
    
                        /**
                         * Properties of a DeliveryPipeline.
                         * @memberof google.cloud.deploy.v1
                         * @interface IDeliveryPipeline
                         * @property {string|null} [name] DeliveryPipeline name
                         * @property {string|null} [uid] DeliveryPipeline uid
                         * @property {string|null} [description] DeliveryPipeline description
                         * @property {Object.<string,string>|null} [annotations] DeliveryPipeline annotations
                         * @property {Object.<string,string>|null} [labels] DeliveryPipeline labels
                         * @property {google.protobuf.ITimestamp|null} [createTime] DeliveryPipeline createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] DeliveryPipeline updateTime
                         * @property {google.cloud.deploy.v1.ISerialPipeline|null} [serialPipeline] DeliveryPipeline serialPipeline
                         * @property {google.cloud.deploy.v1.IPipelineCondition|null} [condition] DeliveryPipeline condition
                         * @property {string|null} [etag] DeliveryPipeline etag
                         * @property {boolean|null} [suspended] DeliveryPipeline suspended
                         */
    
                        /**
                         * Constructs a new DeliveryPipeline.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a DeliveryPipeline.
                         * @implements IDeliveryPipeline
                         * @constructor
                         * @param {google.cloud.deploy.v1.IDeliveryPipeline=} [properties] Properties to set
                         */
                        function DeliveryPipeline(properties) {
                            this.annotations = {};
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeliveryPipeline name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @instance
                         */
                        DeliveryPipeline.prototype.name = "";
    
                        /**
                         * DeliveryPipeline uid.
                         * @member {string} uid
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @instance
                         */
                        DeliveryPipeline.prototype.uid = "";
    
                        /**
                         * DeliveryPipeline description.
                         * @member {string} description
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @instance
                         */
                        DeliveryPipeline.prototype.description = "";
    
                        /**
                         * DeliveryPipeline annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @instance
                         */
                        DeliveryPipeline.prototype.annotations = $util.emptyObject;
    
                        /**
                         * DeliveryPipeline labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @instance
                         */
                        DeliveryPipeline.prototype.labels = $util.emptyObject;
    
                        /**
                         * DeliveryPipeline createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @instance
                         */
                        DeliveryPipeline.prototype.createTime = null;
    
                        /**
                         * DeliveryPipeline updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @instance
                         */
                        DeliveryPipeline.prototype.updateTime = null;
    
                        /**
                         * DeliveryPipeline serialPipeline.
                         * @member {google.cloud.deploy.v1.ISerialPipeline|null|undefined} serialPipeline
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @instance
                         */
                        DeliveryPipeline.prototype.serialPipeline = null;
    
                        /**
                         * DeliveryPipeline condition.
                         * @member {google.cloud.deploy.v1.IPipelineCondition|null|undefined} condition
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @instance
                         */
                        DeliveryPipeline.prototype.condition = null;
    
                        /**
                         * DeliveryPipeline etag.
                         * @member {string} etag
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @instance
                         */
                        DeliveryPipeline.prototype.etag = "";
    
                        /**
                         * DeliveryPipeline suspended.
                         * @member {boolean} suspended
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @instance
                         */
                        DeliveryPipeline.prototype.suspended = false;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DeliveryPipeline pipeline.
                         * @member {"serialPipeline"|undefined} pipeline
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @instance
                         */
                        Object.defineProperty(DeliveryPipeline.prototype, "pipeline", {
                            get: $util.oneOfGetter($oneOfFields = ["serialPipeline"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DeliveryPipeline instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @static
                         * @param {google.cloud.deploy.v1.IDeliveryPipeline=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.DeliveryPipeline} DeliveryPipeline instance
                         */
                        DeliveryPipeline.create = function create(properties) {
                            return new DeliveryPipeline(properties);
                        };
    
                        /**
                         * Encodes the specified DeliveryPipeline message. Does not implicitly {@link google.cloud.deploy.v1.DeliveryPipeline.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @static
                         * @param {google.cloud.deploy.v1.IDeliveryPipeline} message DeliveryPipeline message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeliveryPipeline.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uid);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.serialPipeline != null && Object.hasOwnProperty.call(message, "serialPipeline"))
                                $root.google.cloud.deploy.v1.SerialPipeline.encode(message.serialPipeline, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.etag);
                            if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                                $root.google.cloud.deploy.v1.PipelineCondition.encode(message.condition, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.suspended != null && Object.hasOwnProperty.call(message, "suspended"))
                                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.suspended);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeliveryPipeline message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.DeliveryPipeline.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @static
                         * @param {google.cloud.deploy.v1.IDeliveryPipeline} message DeliveryPipeline message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeliveryPipeline.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeliveryPipeline message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.DeliveryPipeline} DeliveryPipeline
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeliveryPipeline.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.DeliveryPipeline(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 5: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.serialPipeline = $root.google.cloud.deploy.v1.SerialPipeline.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.condition = $root.google.cloud.deploy.v1.PipelineCondition.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.suspended = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeliveryPipeline message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.DeliveryPipeline} DeliveryPipeline
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeliveryPipeline.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeliveryPipeline message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeliveryPipeline.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.serialPipeline != null && message.hasOwnProperty("serialPipeline")) {
                                properties.pipeline = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.SerialPipeline.verify(message.serialPipeline);
                                    if (error)
                                        return "serialPipeline." + error;
                                }
                            }
                            if (message.condition != null && message.hasOwnProperty("condition")) {
                                var error = $root.google.cloud.deploy.v1.PipelineCondition.verify(message.condition);
                                if (error)
                                    return "condition." + error;
                            }
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            if (message.suspended != null && message.hasOwnProperty("suspended"))
                                if (typeof message.suspended !== "boolean")
                                    return "suspended: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeliveryPipeline message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.DeliveryPipeline} DeliveryPipeline
                         */
                        DeliveryPipeline.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.DeliveryPipeline)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.DeliveryPipeline();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.DeliveryPipeline.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.DeliveryPipeline.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.DeliveryPipeline.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.DeliveryPipeline.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.serialPipeline != null) {
                                if (typeof object.serialPipeline !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.DeliveryPipeline.serialPipeline: object expected");
                                message.serialPipeline = $root.google.cloud.deploy.v1.SerialPipeline.fromObject(object.serialPipeline);
                            }
                            if (object.condition != null) {
                                if (typeof object.condition !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.DeliveryPipeline.condition: object expected");
                                message.condition = $root.google.cloud.deploy.v1.PipelineCondition.fromObject(object.condition);
                            }
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            if (object.suspended != null)
                                message.suspended = Boolean(object.suspended);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeliveryPipeline message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @static
                         * @param {google.cloud.deploy.v1.DeliveryPipeline} message DeliveryPipeline
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeliveryPipeline.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.annotations = {};
                                object.labels = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.uid = "";
                                object.description = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.etag = "";
                                object.condition = null;
                                object.suspended = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            var keys2;
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.serialPipeline != null && message.hasOwnProperty("serialPipeline")) {
                                object.serialPipeline = $root.google.cloud.deploy.v1.SerialPipeline.toObject(message.serialPipeline, options);
                                if (options.oneofs)
                                    object.pipeline = "serialPipeline";
                            }
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.condition != null && message.hasOwnProperty("condition"))
                                object.condition = $root.google.cloud.deploy.v1.PipelineCondition.toObject(message.condition, options);
                            if (message.suspended != null && message.hasOwnProperty("suspended"))
                                object.suspended = message.suspended;
                            return object;
                        };
    
                        /**
                         * Converts this DeliveryPipeline to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeliveryPipeline.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeliveryPipeline
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.DeliveryPipeline
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeliveryPipeline.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.DeliveryPipeline";
                        };
    
                        return DeliveryPipeline;
                    })();
    
                    v1.SerialPipeline = (function() {
    
                        /**
                         * Properties of a SerialPipeline.
                         * @memberof google.cloud.deploy.v1
                         * @interface ISerialPipeline
                         * @property {Array.<google.cloud.deploy.v1.IStage>|null} [stages] SerialPipeline stages
                         */
    
                        /**
                         * Constructs a new SerialPipeline.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a SerialPipeline.
                         * @implements ISerialPipeline
                         * @constructor
                         * @param {google.cloud.deploy.v1.ISerialPipeline=} [properties] Properties to set
                         */
                        function SerialPipeline(properties) {
                            this.stages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SerialPipeline stages.
                         * @member {Array.<google.cloud.deploy.v1.IStage>} stages
                         * @memberof google.cloud.deploy.v1.SerialPipeline
                         * @instance
                         */
                        SerialPipeline.prototype.stages = $util.emptyArray;
    
                        /**
                         * Creates a new SerialPipeline instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.SerialPipeline
                         * @static
                         * @param {google.cloud.deploy.v1.ISerialPipeline=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.SerialPipeline} SerialPipeline instance
                         */
                        SerialPipeline.create = function create(properties) {
                            return new SerialPipeline(properties);
                        };
    
                        /**
                         * Encodes the specified SerialPipeline message. Does not implicitly {@link google.cloud.deploy.v1.SerialPipeline.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.SerialPipeline
                         * @static
                         * @param {google.cloud.deploy.v1.ISerialPipeline} message SerialPipeline message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SerialPipeline.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.stages != null && message.stages.length)
                                for (var i = 0; i < message.stages.length; ++i)
                                    $root.google.cloud.deploy.v1.Stage.encode(message.stages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SerialPipeline message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.SerialPipeline.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.SerialPipeline
                         * @static
                         * @param {google.cloud.deploy.v1.ISerialPipeline} message SerialPipeline message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SerialPipeline.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SerialPipeline message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.SerialPipeline
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.SerialPipeline} SerialPipeline
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SerialPipeline.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.SerialPipeline();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.stages && message.stages.length))
                                            message.stages = [];
                                        message.stages.push($root.google.cloud.deploy.v1.Stage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SerialPipeline message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.SerialPipeline
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.SerialPipeline} SerialPipeline
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SerialPipeline.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SerialPipeline message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.SerialPipeline
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SerialPipeline.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.stages != null && message.hasOwnProperty("stages")) {
                                if (!Array.isArray(message.stages))
                                    return "stages: array expected";
                                for (var i = 0; i < message.stages.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.Stage.verify(message.stages[i]);
                                    if (error)
                                        return "stages." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SerialPipeline message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.SerialPipeline
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.SerialPipeline} SerialPipeline
                         */
                        SerialPipeline.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.SerialPipeline)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.SerialPipeline();
                            if (object.stages) {
                                if (!Array.isArray(object.stages))
                                    throw TypeError(".google.cloud.deploy.v1.SerialPipeline.stages: array expected");
                                message.stages = [];
                                for (var i = 0; i < object.stages.length; ++i) {
                                    if (typeof object.stages[i] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.SerialPipeline.stages: object expected");
                                    message.stages[i] = $root.google.cloud.deploy.v1.Stage.fromObject(object.stages[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SerialPipeline message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.SerialPipeline
                         * @static
                         * @param {google.cloud.deploy.v1.SerialPipeline} message SerialPipeline
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SerialPipeline.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.stages = [];
                            if (message.stages && message.stages.length) {
                                object.stages = [];
                                for (var j = 0; j < message.stages.length; ++j)
                                    object.stages[j] = $root.google.cloud.deploy.v1.Stage.toObject(message.stages[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SerialPipeline to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.SerialPipeline
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SerialPipeline.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SerialPipeline
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.SerialPipeline
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SerialPipeline.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.SerialPipeline";
                        };
    
                        return SerialPipeline;
                    })();
    
                    v1.Stage = (function() {
    
                        /**
                         * Properties of a Stage.
                         * @memberof google.cloud.deploy.v1
                         * @interface IStage
                         * @property {string|null} [targetId] Stage targetId
                         * @property {Array.<string>|null} [profiles] Stage profiles
                         * @property {google.cloud.deploy.v1.IStrategy|null} [strategy] Stage strategy
                         * @property {Array.<google.cloud.deploy.v1.IDeployParameters>|null} [deployParameters] Stage deployParameters
                         */
    
                        /**
                         * Constructs a new Stage.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a Stage.
                         * @implements IStage
                         * @constructor
                         * @param {google.cloud.deploy.v1.IStage=} [properties] Properties to set
                         */
                        function Stage(properties) {
                            this.profiles = [];
                            this.deployParameters = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Stage targetId.
                         * @member {string} targetId
                         * @memberof google.cloud.deploy.v1.Stage
                         * @instance
                         */
                        Stage.prototype.targetId = "";
    
                        /**
                         * Stage profiles.
                         * @member {Array.<string>} profiles
                         * @memberof google.cloud.deploy.v1.Stage
                         * @instance
                         */
                        Stage.prototype.profiles = $util.emptyArray;
    
                        /**
                         * Stage strategy.
                         * @member {google.cloud.deploy.v1.IStrategy|null|undefined} strategy
                         * @memberof google.cloud.deploy.v1.Stage
                         * @instance
                         */
                        Stage.prototype.strategy = null;
    
                        /**
                         * Stage deployParameters.
                         * @member {Array.<google.cloud.deploy.v1.IDeployParameters>} deployParameters
                         * @memberof google.cloud.deploy.v1.Stage
                         * @instance
                         */
                        Stage.prototype.deployParameters = $util.emptyArray;
    
                        /**
                         * Creates a new Stage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.Stage
                         * @static
                         * @param {google.cloud.deploy.v1.IStage=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.Stage} Stage instance
                         */
                        Stage.create = function create(properties) {
                            return new Stage(properties);
                        };
    
                        /**
                         * Encodes the specified Stage message. Does not implicitly {@link google.cloud.deploy.v1.Stage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.Stage
                         * @static
                         * @param {google.cloud.deploy.v1.IStage} message Stage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Stage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.targetId != null && Object.hasOwnProperty.call(message, "targetId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.targetId);
                            if (message.profiles != null && message.profiles.length)
                                for (var i = 0; i < message.profiles.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.profiles[i]);
                            if (message.strategy != null && Object.hasOwnProperty.call(message, "strategy"))
                                $root.google.cloud.deploy.v1.Strategy.encode(message.strategy, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.deployParameters != null && message.deployParameters.length)
                                for (var i = 0; i < message.deployParameters.length; ++i)
                                    $root.google.cloud.deploy.v1.DeployParameters.encode(message.deployParameters[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Stage message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Stage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.Stage
                         * @static
                         * @param {google.cloud.deploy.v1.IStage} message Stage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Stage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Stage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.Stage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.Stage} Stage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Stage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Stage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.targetId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.profiles && message.profiles.length))
                                            message.profiles = [];
                                        message.profiles.push(reader.string());
                                        break;
                                    }
                                case 5: {
                                        message.strategy = $root.google.cloud.deploy.v1.Strategy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        if (!(message.deployParameters && message.deployParameters.length))
                                            message.deployParameters = [];
                                        message.deployParameters.push($root.google.cloud.deploy.v1.DeployParameters.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Stage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.Stage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.Stage} Stage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Stage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Stage message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.Stage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Stage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.targetId != null && message.hasOwnProperty("targetId"))
                                if (!$util.isString(message.targetId))
                                    return "targetId: string expected";
                            if (message.profiles != null && message.hasOwnProperty("profiles")) {
                                if (!Array.isArray(message.profiles))
                                    return "profiles: array expected";
                                for (var i = 0; i < message.profiles.length; ++i)
                                    if (!$util.isString(message.profiles[i]))
                                        return "profiles: string[] expected";
                            }
                            if (message.strategy != null && message.hasOwnProperty("strategy")) {
                                var error = $root.google.cloud.deploy.v1.Strategy.verify(message.strategy);
                                if (error)
                                    return "strategy." + error;
                            }
                            if (message.deployParameters != null && message.hasOwnProperty("deployParameters")) {
                                if (!Array.isArray(message.deployParameters))
                                    return "deployParameters: array expected";
                                for (var i = 0; i < message.deployParameters.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.DeployParameters.verify(message.deployParameters[i]);
                                    if (error)
                                        return "deployParameters." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Stage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.Stage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.Stage} Stage
                         */
                        Stage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.Stage)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.Stage();
                            if (object.targetId != null)
                                message.targetId = String(object.targetId);
                            if (object.profiles) {
                                if (!Array.isArray(object.profiles))
                                    throw TypeError(".google.cloud.deploy.v1.Stage.profiles: array expected");
                                message.profiles = [];
                                for (var i = 0; i < object.profiles.length; ++i)
                                    message.profiles[i] = String(object.profiles[i]);
                            }
                            if (object.strategy != null) {
                                if (typeof object.strategy !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Stage.strategy: object expected");
                                message.strategy = $root.google.cloud.deploy.v1.Strategy.fromObject(object.strategy);
                            }
                            if (object.deployParameters) {
                                if (!Array.isArray(object.deployParameters))
                                    throw TypeError(".google.cloud.deploy.v1.Stage.deployParameters: array expected");
                                message.deployParameters = [];
                                for (var i = 0; i < object.deployParameters.length; ++i) {
                                    if (typeof object.deployParameters[i] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.Stage.deployParameters: object expected");
                                    message.deployParameters[i] = $root.google.cloud.deploy.v1.DeployParameters.fromObject(object.deployParameters[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Stage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.Stage
                         * @static
                         * @param {google.cloud.deploy.v1.Stage} message Stage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Stage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.profiles = [];
                                object.deployParameters = [];
                            }
                            if (options.defaults) {
                                object.targetId = "";
                                object.strategy = null;
                            }
                            if (message.targetId != null && message.hasOwnProperty("targetId"))
                                object.targetId = message.targetId;
                            if (message.profiles && message.profiles.length) {
                                object.profiles = [];
                                for (var j = 0; j < message.profiles.length; ++j)
                                    object.profiles[j] = message.profiles[j];
                            }
                            if (message.strategy != null && message.hasOwnProperty("strategy"))
                                object.strategy = $root.google.cloud.deploy.v1.Strategy.toObject(message.strategy, options);
                            if (message.deployParameters && message.deployParameters.length) {
                                object.deployParameters = [];
                                for (var j = 0; j < message.deployParameters.length; ++j)
                                    object.deployParameters[j] = $root.google.cloud.deploy.v1.DeployParameters.toObject(message.deployParameters[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Stage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.Stage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Stage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Stage
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.Stage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Stage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.Stage";
                        };
    
                        return Stage;
                    })();
    
                    v1.DeployParameters = (function() {
    
                        /**
                         * Properties of a DeployParameters.
                         * @memberof google.cloud.deploy.v1
                         * @interface IDeployParameters
                         * @property {Object.<string,string>|null} [values] DeployParameters values
                         * @property {Object.<string,string>|null} [matchTargetLabels] DeployParameters matchTargetLabels
                         */
    
                        /**
                         * Constructs a new DeployParameters.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a DeployParameters.
                         * @implements IDeployParameters
                         * @constructor
                         * @param {google.cloud.deploy.v1.IDeployParameters=} [properties] Properties to set
                         */
                        function DeployParameters(properties) {
                            this.values = {};
                            this.matchTargetLabels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeployParameters values.
                         * @member {Object.<string,string>} values
                         * @memberof google.cloud.deploy.v1.DeployParameters
                         * @instance
                         */
                        DeployParameters.prototype.values = $util.emptyObject;
    
                        /**
                         * DeployParameters matchTargetLabels.
                         * @member {Object.<string,string>} matchTargetLabels
                         * @memberof google.cloud.deploy.v1.DeployParameters
                         * @instance
                         */
                        DeployParameters.prototype.matchTargetLabels = $util.emptyObject;
    
                        /**
                         * Creates a new DeployParameters instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.DeployParameters
                         * @static
                         * @param {google.cloud.deploy.v1.IDeployParameters=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.DeployParameters} DeployParameters instance
                         */
                        DeployParameters.create = function create(properties) {
                            return new DeployParameters(properties);
                        };
    
                        /**
                         * Encodes the specified DeployParameters message. Does not implicitly {@link google.cloud.deploy.v1.DeployParameters.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.DeployParameters
                         * @static
                         * @param {google.cloud.deploy.v1.IDeployParameters} message DeployParameters message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployParameters.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.values != null && Object.hasOwnProperty.call(message, "values"))
                                for (var keys = Object.keys(message.values), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.values[keys[i]]).ldelim();
                            if (message.matchTargetLabels != null && Object.hasOwnProperty.call(message, "matchTargetLabels"))
                                for (var keys = Object.keys(message.matchTargetLabels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.matchTargetLabels[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeployParameters message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.DeployParameters.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.DeployParameters
                         * @static
                         * @param {google.cloud.deploy.v1.IDeployParameters} message DeployParameters message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployParameters.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeployParameters message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.DeployParameters
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.DeployParameters} DeployParameters
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployParameters.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.DeployParameters(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.values === $util.emptyObject)
                                            message.values = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.values[key] = value;
                                        break;
                                    }
                                case 2: {
                                        if (message.matchTargetLabels === $util.emptyObject)
                                            message.matchTargetLabels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.matchTargetLabels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeployParameters message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.DeployParameters
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.DeployParameters} DeployParameters
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployParameters.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeployParameters message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.DeployParameters
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeployParameters.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (!$util.isObject(message.values))
                                    return "values: object expected";
                                var key = Object.keys(message.values);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.values[key[i]]))
                                        return "values: string{k:string} expected";
                            }
                            if (message.matchTargetLabels != null && message.hasOwnProperty("matchTargetLabels")) {
                                if (!$util.isObject(message.matchTargetLabels))
                                    return "matchTargetLabels: object expected";
                                var key = Object.keys(message.matchTargetLabels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.matchTargetLabels[key[i]]))
                                        return "matchTargetLabels: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DeployParameters message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.DeployParameters
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.DeployParameters} DeployParameters
                         */
                        DeployParameters.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.DeployParameters)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.DeployParameters();
                            if (object.values) {
                                if (typeof object.values !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.DeployParameters.values: object expected");
                                message.values = {};
                                for (var keys = Object.keys(object.values), i = 0; i < keys.length; ++i)
                                    message.values[keys[i]] = String(object.values[keys[i]]);
                            }
                            if (object.matchTargetLabels) {
                                if (typeof object.matchTargetLabels !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.DeployParameters.matchTargetLabels: object expected");
                                message.matchTargetLabels = {};
                                for (var keys = Object.keys(object.matchTargetLabels), i = 0; i < keys.length; ++i)
                                    message.matchTargetLabels[keys[i]] = String(object.matchTargetLabels[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeployParameters message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.DeployParameters
                         * @static
                         * @param {google.cloud.deploy.v1.DeployParameters} message DeployParameters
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeployParameters.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.values = {};
                                object.matchTargetLabels = {};
                            }
                            var keys2;
                            if (message.values && (keys2 = Object.keys(message.values)).length) {
                                object.values = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.values[keys2[j]] = message.values[keys2[j]];
                            }
                            if (message.matchTargetLabels && (keys2 = Object.keys(message.matchTargetLabels)).length) {
                                object.matchTargetLabels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.matchTargetLabels[keys2[j]] = message.matchTargetLabels[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DeployParameters to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.DeployParameters
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeployParameters.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeployParameters
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.DeployParameters
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeployParameters.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.DeployParameters";
                        };
    
                        return DeployParameters;
                    })();
    
                    v1.Strategy = (function() {
    
                        /**
                         * Properties of a Strategy.
                         * @memberof google.cloud.deploy.v1
                         * @interface IStrategy
                         * @property {google.cloud.deploy.v1.IStandard|null} [standard] Strategy standard
                         * @property {google.cloud.deploy.v1.ICanary|null} [canary] Strategy canary
                         */
    
                        /**
                         * Constructs a new Strategy.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a Strategy.
                         * @implements IStrategy
                         * @constructor
                         * @param {google.cloud.deploy.v1.IStrategy=} [properties] Properties to set
                         */
                        function Strategy(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Strategy standard.
                         * @member {google.cloud.deploy.v1.IStandard|null|undefined} standard
                         * @memberof google.cloud.deploy.v1.Strategy
                         * @instance
                         */
                        Strategy.prototype.standard = null;
    
                        /**
                         * Strategy canary.
                         * @member {google.cloud.deploy.v1.ICanary|null|undefined} canary
                         * @memberof google.cloud.deploy.v1.Strategy
                         * @instance
                         */
                        Strategy.prototype.canary = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Strategy deploymentStrategy.
                         * @member {"standard"|"canary"|undefined} deploymentStrategy
                         * @memberof google.cloud.deploy.v1.Strategy
                         * @instance
                         */
                        Object.defineProperty(Strategy.prototype, "deploymentStrategy", {
                            get: $util.oneOfGetter($oneOfFields = ["standard", "canary"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Strategy instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.Strategy
                         * @static
                         * @param {google.cloud.deploy.v1.IStrategy=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.Strategy} Strategy instance
                         */
                        Strategy.create = function create(properties) {
                            return new Strategy(properties);
                        };
    
                        /**
                         * Encodes the specified Strategy message. Does not implicitly {@link google.cloud.deploy.v1.Strategy.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.Strategy
                         * @static
                         * @param {google.cloud.deploy.v1.IStrategy} message Strategy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Strategy.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.standard != null && Object.hasOwnProperty.call(message, "standard"))
                                $root.google.cloud.deploy.v1.Standard.encode(message.standard, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.canary != null && Object.hasOwnProperty.call(message, "canary"))
                                $root.google.cloud.deploy.v1.Canary.encode(message.canary, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Strategy message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Strategy.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.Strategy
                         * @static
                         * @param {google.cloud.deploy.v1.IStrategy} message Strategy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Strategy.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Strategy message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.Strategy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.Strategy} Strategy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Strategy.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Strategy();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.standard = $root.google.cloud.deploy.v1.Standard.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.canary = $root.google.cloud.deploy.v1.Canary.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Strategy message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.Strategy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.Strategy} Strategy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Strategy.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Strategy message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.Strategy
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Strategy.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.standard != null && message.hasOwnProperty("standard")) {
                                properties.deploymentStrategy = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.Standard.verify(message.standard);
                                    if (error)
                                        return "standard." + error;
                                }
                            }
                            if (message.canary != null && message.hasOwnProperty("canary")) {
                                if (properties.deploymentStrategy === 1)
                                    return "deploymentStrategy: multiple values";
                                properties.deploymentStrategy = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.Canary.verify(message.canary);
                                    if (error)
                                        return "canary." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Strategy message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.Strategy
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.Strategy} Strategy
                         */
                        Strategy.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.Strategy)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.Strategy();
                            if (object.standard != null) {
                                if (typeof object.standard !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Strategy.standard: object expected");
                                message.standard = $root.google.cloud.deploy.v1.Standard.fromObject(object.standard);
                            }
                            if (object.canary != null) {
                                if (typeof object.canary !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Strategy.canary: object expected");
                                message.canary = $root.google.cloud.deploy.v1.Canary.fromObject(object.canary);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Strategy message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.Strategy
                         * @static
                         * @param {google.cloud.deploy.v1.Strategy} message Strategy
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Strategy.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.standard != null && message.hasOwnProperty("standard")) {
                                object.standard = $root.google.cloud.deploy.v1.Standard.toObject(message.standard, options);
                                if (options.oneofs)
                                    object.deploymentStrategy = "standard";
                            }
                            if (message.canary != null && message.hasOwnProperty("canary")) {
                                object.canary = $root.google.cloud.deploy.v1.Canary.toObject(message.canary, options);
                                if (options.oneofs)
                                    object.deploymentStrategy = "canary";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Strategy to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.Strategy
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Strategy.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Strategy
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.Strategy
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Strategy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.Strategy";
                        };
    
                        return Strategy;
                    })();
    
                    v1.Predeploy = (function() {
    
                        /**
                         * Properties of a Predeploy.
                         * @memberof google.cloud.deploy.v1
                         * @interface IPredeploy
                         * @property {Array.<string>|null} [actions] Predeploy actions
                         */
    
                        /**
                         * Constructs a new Predeploy.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a Predeploy.
                         * @implements IPredeploy
                         * @constructor
                         * @param {google.cloud.deploy.v1.IPredeploy=} [properties] Properties to set
                         */
                        function Predeploy(properties) {
                            this.actions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Predeploy actions.
                         * @member {Array.<string>} actions
                         * @memberof google.cloud.deploy.v1.Predeploy
                         * @instance
                         */
                        Predeploy.prototype.actions = $util.emptyArray;
    
                        /**
                         * Creates a new Predeploy instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.Predeploy
                         * @static
                         * @param {google.cloud.deploy.v1.IPredeploy=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.Predeploy} Predeploy instance
                         */
                        Predeploy.create = function create(properties) {
                            return new Predeploy(properties);
                        };
    
                        /**
                         * Encodes the specified Predeploy message. Does not implicitly {@link google.cloud.deploy.v1.Predeploy.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.Predeploy
                         * @static
                         * @param {google.cloud.deploy.v1.IPredeploy} message Predeploy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Predeploy.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.actions != null && message.actions.length)
                                for (var i = 0; i < message.actions.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.actions[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Predeploy message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Predeploy.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.Predeploy
                         * @static
                         * @param {google.cloud.deploy.v1.IPredeploy} message Predeploy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Predeploy.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Predeploy message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.Predeploy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.Predeploy} Predeploy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Predeploy.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Predeploy();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.actions && message.actions.length))
                                            message.actions = [];
                                        message.actions.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Predeploy message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.Predeploy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.Predeploy} Predeploy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Predeploy.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Predeploy message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.Predeploy
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Predeploy.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.actions != null && message.hasOwnProperty("actions")) {
                                if (!Array.isArray(message.actions))
                                    return "actions: array expected";
                                for (var i = 0; i < message.actions.length; ++i)
                                    if (!$util.isString(message.actions[i]))
                                        return "actions: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Predeploy message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.Predeploy
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.Predeploy} Predeploy
                         */
                        Predeploy.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.Predeploy)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.Predeploy();
                            if (object.actions) {
                                if (!Array.isArray(object.actions))
                                    throw TypeError(".google.cloud.deploy.v1.Predeploy.actions: array expected");
                                message.actions = [];
                                for (var i = 0; i < object.actions.length; ++i)
                                    message.actions[i] = String(object.actions[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Predeploy message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.Predeploy
                         * @static
                         * @param {google.cloud.deploy.v1.Predeploy} message Predeploy
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Predeploy.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.actions = [];
                            if (message.actions && message.actions.length) {
                                object.actions = [];
                                for (var j = 0; j < message.actions.length; ++j)
                                    object.actions[j] = message.actions[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Predeploy to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.Predeploy
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Predeploy.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Predeploy
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.Predeploy
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Predeploy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.Predeploy";
                        };
    
                        return Predeploy;
                    })();
    
                    v1.Postdeploy = (function() {
    
                        /**
                         * Properties of a Postdeploy.
                         * @memberof google.cloud.deploy.v1
                         * @interface IPostdeploy
                         * @property {Array.<string>|null} [actions] Postdeploy actions
                         */
    
                        /**
                         * Constructs a new Postdeploy.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a Postdeploy.
                         * @implements IPostdeploy
                         * @constructor
                         * @param {google.cloud.deploy.v1.IPostdeploy=} [properties] Properties to set
                         */
                        function Postdeploy(properties) {
                            this.actions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Postdeploy actions.
                         * @member {Array.<string>} actions
                         * @memberof google.cloud.deploy.v1.Postdeploy
                         * @instance
                         */
                        Postdeploy.prototype.actions = $util.emptyArray;
    
                        /**
                         * Creates a new Postdeploy instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.Postdeploy
                         * @static
                         * @param {google.cloud.deploy.v1.IPostdeploy=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.Postdeploy} Postdeploy instance
                         */
                        Postdeploy.create = function create(properties) {
                            return new Postdeploy(properties);
                        };
    
                        /**
                         * Encodes the specified Postdeploy message. Does not implicitly {@link google.cloud.deploy.v1.Postdeploy.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.Postdeploy
                         * @static
                         * @param {google.cloud.deploy.v1.IPostdeploy} message Postdeploy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Postdeploy.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.actions != null && message.actions.length)
                                for (var i = 0; i < message.actions.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.actions[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Postdeploy message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Postdeploy.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.Postdeploy
                         * @static
                         * @param {google.cloud.deploy.v1.IPostdeploy} message Postdeploy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Postdeploy.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Postdeploy message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.Postdeploy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.Postdeploy} Postdeploy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Postdeploy.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Postdeploy();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.actions && message.actions.length))
                                            message.actions = [];
                                        message.actions.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Postdeploy message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.Postdeploy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.Postdeploy} Postdeploy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Postdeploy.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Postdeploy message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.Postdeploy
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Postdeploy.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.actions != null && message.hasOwnProperty("actions")) {
                                if (!Array.isArray(message.actions))
                                    return "actions: array expected";
                                for (var i = 0; i < message.actions.length; ++i)
                                    if (!$util.isString(message.actions[i]))
                                        return "actions: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Postdeploy message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.Postdeploy
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.Postdeploy} Postdeploy
                         */
                        Postdeploy.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.Postdeploy)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.Postdeploy();
                            if (object.actions) {
                                if (!Array.isArray(object.actions))
                                    throw TypeError(".google.cloud.deploy.v1.Postdeploy.actions: array expected");
                                message.actions = [];
                                for (var i = 0; i < object.actions.length; ++i)
                                    message.actions[i] = String(object.actions[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Postdeploy message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.Postdeploy
                         * @static
                         * @param {google.cloud.deploy.v1.Postdeploy} message Postdeploy
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Postdeploy.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.actions = [];
                            if (message.actions && message.actions.length) {
                                object.actions = [];
                                for (var j = 0; j < message.actions.length; ++j)
                                    object.actions[j] = message.actions[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Postdeploy to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.Postdeploy
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Postdeploy.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Postdeploy
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.Postdeploy
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Postdeploy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.Postdeploy";
                        };
    
                        return Postdeploy;
                    })();
    
                    v1.Standard = (function() {
    
                        /**
                         * Properties of a Standard.
                         * @memberof google.cloud.deploy.v1
                         * @interface IStandard
                         * @property {boolean|null} [verify] Standard verify
                         * @property {google.cloud.deploy.v1.IPredeploy|null} [predeploy] Standard predeploy
                         * @property {google.cloud.deploy.v1.IPostdeploy|null} [postdeploy] Standard postdeploy
                         */
    
                        /**
                         * Constructs a new Standard.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a Standard.
                         * @implements IStandard
                         * @constructor
                         * @param {google.cloud.deploy.v1.IStandard=} [properties] Properties to set
                         */
                        function Standard(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Standard verify.
                         * @member {boolean} verify
                         * @memberof google.cloud.deploy.v1.Standard
                         * @instance
                         */
                        Standard.prototype.verify = false;
    
                        /**
                         * Standard predeploy.
                         * @member {google.cloud.deploy.v1.IPredeploy|null|undefined} predeploy
                         * @memberof google.cloud.deploy.v1.Standard
                         * @instance
                         */
                        Standard.prototype.predeploy = null;
    
                        /**
                         * Standard postdeploy.
                         * @member {google.cloud.deploy.v1.IPostdeploy|null|undefined} postdeploy
                         * @memberof google.cloud.deploy.v1.Standard
                         * @instance
                         */
                        Standard.prototype.postdeploy = null;
    
                        /**
                         * Creates a new Standard instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.Standard
                         * @static
                         * @param {google.cloud.deploy.v1.IStandard=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.Standard} Standard instance
                         */
                        Standard.create = function create(properties) {
                            return new Standard(properties);
                        };
    
                        /**
                         * Encodes the specified Standard message. Does not implicitly {@link google.cloud.deploy.v1.Standard.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.Standard
                         * @static
                         * @param {google.cloud.deploy.v1.IStandard} message Standard message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Standard.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.verify != null && Object.hasOwnProperty.call(message, "verify"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.verify);
                            if (message.predeploy != null && Object.hasOwnProperty.call(message, "predeploy"))
                                $root.google.cloud.deploy.v1.Predeploy.encode(message.predeploy, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.postdeploy != null && Object.hasOwnProperty.call(message, "postdeploy"))
                                $root.google.cloud.deploy.v1.Postdeploy.encode(message.postdeploy, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Standard message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Standard.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.Standard
                         * @static
                         * @param {google.cloud.deploy.v1.IStandard} message Standard message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Standard.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Standard message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.Standard
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.Standard} Standard
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Standard.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Standard();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.verify = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.predeploy = $root.google.cloud.deploy.v1.Predeploy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.postdeploy = $root.google.cloud.deploy.v1.Postdeploy.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Standard message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.Standard
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.Standard} Standard
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Standard.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Standard message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.Standard
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Standard.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.verify != null && message.hasOwnProperty("verify"))
                                if (typeof message.verify !== "boolean")
                                    return "verify: boolean expected";
                            if (message.predeploy != null && message.hasOwnProperty("predeploy")) {
                                var error = $root.google.cloud.deploy.v1.Predeploy.verify(message.predeploy);
                                if (error)
                                    return "predeploy." + error;
                            }
                            if (message.postdeploy != null && message.hasOwnProperty("postdeploy")) {
                                var error = $root.google.cloud.deploy.v1.Postdeploy.verify(message.postdeploy);
                                if (error)
                                    return "postdeploy." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Standard message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.Standard
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.Standard} Standard
                         */
                        Standard.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.Standard)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.Standard();
                            if (object.verify != null)
                                message.verify = Boolean(object.verify);
                            if (object.predeploy != null) {
                                if (typeof object.predeploy !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Standard.predeploy: object expected");
                                message.predeploy = $root.google.cloud.deploy.v1.Predeploy.fromObject(object.predeploy);
                            }
                            if (object.postdeploy != null) {
                                if (typeof object.postdeploy !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Standard.postdeploy: object expected");
                                message.postdeploy = $root.google.cloud.deploy.v1.Postdeploy.fromObject(object.postdeploy);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Standard message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.Standard
                         * @static
                         * @param {google.cloud.deploy.v1.Standard} message Standard
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Standard.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.verify = false;
                                object.predeploy = null;
                                object.postdeploy = null;
                            }
                            if (message.verify != null && message.hasOwnProperty("verify"))
                                object.verify = message.verify;
                            if (message.predeploy != null && message.hasOwnProperty("predeploy"))
                                object.predeploy = $root.google.cloud.deploy.v1.Predeploy.toObject(message.predeploy, options);
                            if (message.postdeploy != null && message.hasOwnProperty("postdeploy"))
                                object.postdeploy = $root.google.cloud.deploy.v1.Postdeploy.toObject(message.postdeploy, options);
                            return object;
                        };
    
                        /**
                         * Converts this Standard to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.Standard
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Standard.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Standard
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.Standard
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Standard.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.Standard";
                        };
    
                        return Standard;
                    })();
    
                    v1.Canary = (function() {
    
                        /**
                         * Properties of a Canary.
                         * @memberof google.cloud.deploy.v1
                         * @interface ICanary
                         * @property {google.cloud.deploy.v1.IRuntimeConfig|null} [runtimeConfig] Canary runtimeConfig
                         * @property {google.cloud.deploy.v1.ICanaryDeployment|null} [canaryDeployment] Canary canaryDeployment
                         * @property {google.cloud.deploy.v1.ICustomCanaryDeployment|null} [customCanaryDeployment] Canary customCanaryDeployment
                         */
    
                        /**
                         * Constructs a new Canary.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a Canary.
                         * @implements ICanary
                         * @constructor
                         * @param {google.cloud.deploy.v1.ICanary=} [properties] Properties to set
                         */
                        function Canary(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Canary runtimeConfig.
                         * @member {google.cloud.deploy.v1.IRuntimeConfig|null|undefined} runtimeConfig
                         * @memberof google.cloud.deploy.v1.Canary
                         * @instance
                         */
                        Canary.prototype.runtimeConfig = null;
    
                        /**
                         * Canary canaryDeployment.
                         * @member {google.cloud.deploy.v1.ICanaryDeployment|null|undefined} canaryDeployment
                         * @memberof google.cloud.deploy.v1.Canary
                         * @instance
                         */
                        Canary.prototype.canaryDeployment = null;
    
                        /**
                         * Canary customCanaryDeployment.
                         * @member {google.cloud.deploy.v1.ICustomCanaryDeployment|null|undefined} customCanaryDeployment
                         * @memberof google.cloud.deploy.v1.Canary
                         * @instance
                         */
                        Canary.prototype.customCanaryDeployment = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Canary mode.
                         * @member {"canaryDeployment"|"customCanaryDeployment"|undefined} mode
                         * @memberof google.cloud.deploy.v1.Canary
                         * @instance
                         */
                        Object.defineProperty(Canary.prototype, "mode", {
                            get: $util.oneOfGetter($oneOfFields = ["canaryDeployment", "customCanaryDeployment"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Canary instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.Canary
                         * @static
                         * @param {google.cloud.deploy.v1.ICanary=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.Canary} Canary instance
                         */
                        Canary.create = function create(properties) {
                            return new Canary(properties);
                        };
    
                        /**
                         * Encodes the specified Canary message. Does not implicitly {@link google.cloud.deploy.v1.Canary.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.Canary
                         * @static
                         * @param {google.cloud.deploy.v1.ICanary} message Canary message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Canary.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.runtimeConfig != null && Object.hasOwnProperty.call(message, "runtimeConfig"))
                                $root.google.cloud.deploy.v1.RuntimeConfig.encode(message.runtimeConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.canaryDeployment != null && Object.hasOwnProperty.call(message, "canaryDeployment"))
                                $root.google.cloud.deploy.v1.CanaryDeployment.encode(message.canaryDeployment, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.customCanaryDeployment != null && Object.hasOwnProperty.call(message, "customCanaryDeployment"))
                                $root.google.cloud.deploy.v1.CustomCanaryDeployment.encode(message.customCanaryDeployment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Canary message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Canary.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.Canary
                         * @static
                         * @param {google.cloud.deploy.v1.ICanary} message Canary message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Canary.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Canary message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.Canary
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.Canary} Canary
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Canary.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Canary();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.runtimeConfig = $root.google.cloud.deploy.v1.RuntimeConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.canaryDeployment = $root.google.cloud.deploy.v1.CanaryDeployment.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.customCanaryDeployment = $root.google.cloud.deploy.v1.CustomCanaryDeployment.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Canary message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.Canary
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.Canary} Canary
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Canary.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Canary message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.Canary
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Canary.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.runtimeConfig != null && message.hasOwnProperty("runtimeConfig")) {
                                var error = $root.google.cloud.deploy.v1.RuntimeConfig.verify(message.runtimeConfig);
                                if (error)
                                    return "runtimeConfig." + error;
                            }
                            if (message.canaryDeployment != null && message.hasOwnProperty("canaryDeployment")) {
                                properties.mode = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.CanaryDeployment.verify(message.canaryDeployment);
                                    if (error)
                                        return "canaryDeployment." + error;
                                }
                            }
                            if (message.customCanaryDeployment != null && message.hasOwnProperty("customCanaryDeployment")) {
                                if (properties.mode === 1)
                                    return "mode: multiple values";
                                properties.mode = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.CustomCanaryDeployment.verify(message.customCanaryDeployment);
                                    if (error)
                                        return "customCanaryDeployment." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Canary message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.Canary
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.Canary} Canary
                         */
                        Canary.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.Canary)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.Canary();
                            if (object.runtimeConfig != null) {
                                if (typeof object.runtimeConfig !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Canary.runtimeConfig: object expected");
                                message.runtimeConfig = $root.google.cloud.deploy.v1.RuntimeConfig.fromObject(object.runtimeConfig);
                            }
                            if (object.canaryDeployment != null) {
                                if (typeof object.canaryDeployment !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Canary.canaryDeployment: object expected");
                                message.canaryDeployment = $root.google.cloud.deploy.v1.CanaryDeployment.fromObject(object.canaryDeployment);
                            }
                            if (object.customCanaryDeployment != null) {
                                if (typeof object.customCanaryDeployment !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Canary.customCanaryDeployment: object expected");
                                message.customCanaryDeployment = $root.google.cloud.deploy.v1.CustomCanaryDeployment.fromObject(object.customCanaryDeployment);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Canary message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.Canary
                         * @static
                         * @param {google.cloud.deploy.v1.Canary} message Canary
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Canary.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.runtimeConfig = null;
                            if (message.runtimeConfig != null && message.hasOwnProperty("runtimeConfig"))
                                object.runtimeConfig = $root.google.cloud.deploy.v1.RuntimeConfig.toObject(message.runtimeConfig, options);
                            if (message.canaryDeployment != null && message.hasOwnProperty("canaryDeployment")) {
                                object.canaryDeployment = $root.google.cloud.deploy.v1.CanaryDeployment.toObject(message.canaryDeployment, options);
                                if (options.oneofs)
                                    object.mode = "canaryDeployment";
                            }
                            if (message.customCanaryDeployment != null && message.hasOwnProperty("customCanaryDeployment")) {
                                object.customCanaryDeployment = $root.google.cloud.deploy.v1.CustomCanaryDeployment.toObject(message.customCanaryDeployment, options);
                                if (options.oneofs)
                                    object.mode = "customCanaryDeployment";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Canary to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.Canary
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Canary.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Canary
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.Canary
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Canary.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.Canary";
                        };
    
                        return Canary;
                    })();
    
                    v1.CanaryDeployment = (function() {
    
                        /**
                         * Properties of a CanaryDeployment.
                         * @memberof google.cloud.deploy.v1
                         * @interface ICanaryDeployment
                         * @property {Array.<number>|null} [percentages] CanaryDeployment percentages
                         * @property {boolean|null} [verify] CanaryDeployment verify
                         * @property {google.cloud.deploy.v1.IPredeploy|null} [predeploy] CanaryDeployment predeploy
                         * @property {google.cloud.deploy.v1.IPostdeploy|null} [postdeploy] CanaryDeployment postdeploy
                         */
    
                        /**
                         * Constructs a new CanaryDeployment.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a CanaryDeployment.
                         * @implements ICanaryDeployment
                         * @constructor
                         * @param {google.cloud.deploy.v1.ICanaryDeployment=} [properties] Properties to set
                         */
                        function CanaryDeployment(properties) {
                            this.percentages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CanaryDeployment percentages.
                         * @member {Array.<number>} percentages
                         * @memberof google.cloud.deploy.v1.CanaryDeployment
                         * @instance
                         */
                        CanaryDeployment.prototype.percentages = $util.emptyArray;
    
                        /**
                         * CanaryDeployment verify.
                         * @member {boolean} verify
                         * @memberof google.cloud.deploy.v1.CanaryDeployment
                         * @instance
                         */
                        CanaryDeployment.prototype.verify = false;
    
                        /**
                         * CanaryDeployment predeploy.
                         * @member {google.cloud.deploy.v1.IPredeploy|null|undefined} predeploy
                         * @memberof google.cloud.deploy.v1.CanaryDeployment
                         * @instance
                         */
                        CanaryDeployment.prototype.predeploy = null;
    
                        /**
                         * CanaryDeployment postdeploy.
                         * @member {google.cloud.deploy.v1.IPostdeploy|null|undefined} postdeploy
                         * @memberof google.cloud.deploy.v1.CanaryDeployment
                         * @instance
                         */
                        CanaryDeployment.prototype.postdeploy = null;
    
                        /**
                         * Creates a new CanaryDeployment instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.CanaryDeployment
                         * @static
                         * @param {google.cloud.deploy.v1.ICanaryDeployment=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.CanaryDeployment} CanaryDeployment instance
                         */
                        CanaryDeployment.create = function create(properties) {
                            return new CanaryDeployment(properties);
                        };
    
                        /**
                         * Encodes the specified CanaryDeployment message. Does not implicitly {@link google.cloud.deploy.v1.CanaryDeployment.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.CanaryDeployment
                         * @static
                         * @param {google.cloud.deploy.v1.ICanaryDeployment} message CanaryDeployment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CanaryDeployment.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.percentages != null && message.percentages.length) {
                                writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                for (var i = 0; i < message.percentages.length; ++i)
                                    writer.int32(message.percentages[i]);
                                writer.ldelim();
                            }
                            if (message.verify != null && Object.hasOwnProperty.call(message, "verify"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.verify);
                            if (message.predeploy != null && Object.hasOwnProperty.call(message, "predeploy"))
                                $root.google.cloud.deploy.v1.Predeploy.encode(message.predeploy, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.postdeploy != null && Object.hasOwnProperty.call(message, "postdeploy"))
                                $root.google.cloud.deploy.v1.Postdeploy.encode(message.postdeploy, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CanaryDeployment message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.CanaryDeployment.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.CanaryDeployment
                         * @static
                         * @param {google.cloud.deploy.v1.ICanaryDeployment} message CanaryDeployment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CanaryDeployment.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CanaryDeployment message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.CanaryDeployment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.CanaryDeployment} CanaryDeployment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CanaryDeployment.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.CanaryDeployment();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.percentages && message.percentages.length))
                                            message.percentages = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.percentages.push(reader.int32());
                                        } else
                                            message.percentages.push(reader.int32());
                                        break;
                                    }
                                case 2: {
                                        message.verify = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.predeploy = $root.google.cloud.deploy.v1.Predeploy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.postdeploy = $root.google.cloud.deploy.v1.Postdeploy.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CanaryDeployment message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.CanaryDeployment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.CanaryDeployment} CanaryDeployment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CanaryDeployment.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CanaryDeployment message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.CanaryDeployment
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CanaryDeployment.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.percentages != null && message.hasOwnProperty("percentages")) {
                                if (!Array.isArray(message.percentages))
                                    return "percentages: array expected";
                                for (var i = 0; i < message.percentages.length; ++i)
                                    if (!$util.isInteger(message.percentages[i]))
                                        return "percentages: integer[] expected";
                            }
                            if (message.verify != null && message.hasOwnProperty("verify"))
                                if (typeof message.verify !== "boolean")
                                    return "verify: boolean expected";
                            if (message.predeploy != null && message.hasOwnProperty("predeploy")) {
                                var error = $root.google.cloud.deploy.v1.Predeploy.verify(message.predeploy);
                                if (error)
                                    return "predeploy." + error;
                            }
                            if (message.postdeploy != null && message.hasOwnProperty("postdeploy")) {
                                var error = $root.google.cloud.deploy.v1.Postdeploy.verify(message.postdeploy);
                                if (error)
                                    return "postdeploy." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CanaryDeployment message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.CanaryDeployment
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.CanaryDeployment} CanaryDeployment
                         */
                        CanaryDeployment.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.CanaryDeployment)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.CanaryDeployment();
                            if (object.percentages) {
                                if (!Array.isArray(object.percentages))
                                    throw TypeError(".google.cloud.deploy.v1.CanaryDeployment.percentages: array expected");
                                message.percentages = [];
                                for (var i = 0; i < object.percentages.length; ++i)
                                    message.percentages[i] = object.percentages[i] | 0;
                            }
                            if (object.verify != null)
                                message.verify = Boolean(object.verify);
                            if (object.predeploy != null) {
                                if (typeof object.predeploy !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.CanaryDeployment.predeploy: object expected");
                                message.predeploy = $root.google.cloud.deploy.v1.Predeploy.fromObject(object.predeploy);
                            }
                            if (object.postdeploy != null) {
                                if (typeof object.postdeploy !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.CanaryDeployment.postdeploy: object expected");
                                message.postdeploy = $root.google.cloud.deploy.v1.Postdeploy.fromObject(object.postdeploy);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CanaryDeployment message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.CanaryDeployment
                         * @static
                         * @param {google.cloud.deploy.v1.CanaryDeployment} message CanaryDeployment
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CanaryDeployment.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.percentages = [];
                            if (options.defaults) {
                                object.verify = false;
                                object.predeploy = null;
                                object.postdeploy = null;
                            }
                            if (message.percentages && message.percentages.length) {
                                object.percentages = [];
                                for (var j = 0; j < message.percentages.length; ++j)
                                    object.percentages[j] = message.percentages[j];
                            }
                            if (message.verify != null && message.hasOwnProperty("verify"))
                                object.verify = message.verify;
                            if (message.predeploy != null && message.hasOwnProperty("predeploy"))
                                object.predeploy = $root.google.cloud.deploy.v1.Predeploy.toObject(message.predeploy, options);
                            if (message.postdeploy != null && message.hasOwnProperty("postdeploy"))
                                object.postdeploy = $root.google.cloud.deploy.v1.Postdeploy.toObject(message.postdeploy, options);
                            return object;
                        };
    
                        /**
                         * Converts this CanaryDeployment to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.CanaryDeployment
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CanaryDeployment.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CanaryDeployment
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.CanaryDeployment
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CanaryDeployment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.CanaryDeployment";
                        };
    
                        return CanaryDeployment;
                    })();
    
                    v1.CustomCanaryDeployment = (function() {
    
                        /**
                         * Properties of a CustomCanaryDeployment.
                         * @memberof google.cloud.deploy.v1
                         * @interface ICustomCanaryDeployment
                         * @property {Array.<google.cloud.deploy.v1.CustomCanaryDeployment.IPhaseConfig>|null} [phaseConfigs] CustomCanaryDeployment phaseConfigs
                         */
    
                        /**
                         * Constructs a new CustomCanaryDeployment.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a CustomCanaryDeployment.
                         * @implements ICustomCanaryDeployment
                         * @constructor
                         * @param {google.cloud.deploy.v1.ICustomCanaryDeployment=} [properties] Properties to set
                         */
                        function CustomCanaryDeployment(properties) {
                            this.phaseConfigs = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CustomCanaryDeployment phaseConfigs.
                         * @member {Array.<google.cloud.deploy.v1.CustomCanaryDeployment.IPhaseConfig>} phaseConfigs
                         * @memberof google.cloud.deploy.v1.CustomCanaryDeployment
                         * @instance
                         */
                        CustomCanaryDeployment.prototype.phaseConfigs = $util.emptyArray;
    
                        /**
                         * Creates a new CustomCanaryDeployment instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.CustomCanaryDeployment
                         * @static
                         * @param {google.cloud.deploy.v1.ICustomCanaryDeployment=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.CustomCanaryDeployment} CustomCanaryDeployment instance
                         */
                        CustomCanaryDeployment.create = function create(properties) {
                            return new CustomCanaryDeployment(properties);
                        };
    
                        /**
                         * Encodes the specified CustomCanaryDeployment message. Does not implicitly {@link google.cloud.deploy.v1.CustomCanaryDeployment.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.CustomCanaryDeployment
                         * @static
                         * @param {google.cloud.deploy.v1.ICustomCanaryDeployment} message CustomCanaryDeployment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomCanaryDeployment.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.phaseConfigs != null && message.phaseConfigs.length)
                                for (var i = 0; i < message.phaseConfigs.length; ++i)
                                    $root.google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig.encode(message.phaseConfigs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CustomCanaryDeployment message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.CustomCanaryDeployment.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.CustomCanaryDeployment
                         * @static
                         * @param {google.cloud.deploy.v1.ICustomCanaryDeployment} message CustomCanaryDeployment message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomCanaryDeployment.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CustomCanaryDeployment message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.CustomCanaryDeployment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.CustomCanaryDeployment} CustomCanaryDeployment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomCanaryDeployment.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.CustomCanaryDeployment();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.phaseConfigs && message.phaseConfigs.length))
                                            message.phaseConfigs = [];
                                        message.phaseConfigs.push($root.google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CustomCanaryDeployment message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.CustomCanaryDeployment
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.CustomCanaryDeployment} CustomCanaryDeployment
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomCanaryDeployment.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CustomCanaryDeployment message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.CustomCanaryDeployment
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CustomCanaryDeployment.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.phaseConfigs != null && message.hasOwnProperty("phaseConfigs")) {
                                if (!Array.isArray(message.phaseConfigs))
                                    return "phaseConfigs: array expected";
                                for (var i = 0; i < message.phaseConfigs.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig.verify(message.phaseConfigs[i]);
                                    if (error)
                                        return "phaseConfigs." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CustomCanaryDeployment message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.CustomCanaryDeployment
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.CustomCanaryDeployment} CustomCanaryDeployment
                         */
                        CustomCanaryDeployment.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.CustomCanaryDeployment)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.CustomCanaryDeployment();
                            if (object.phaseConfigs) {
                                if (!Array.isArray(object.phaseConfigs))
                                    throw TypeError(".google.cloud.deploy.v1.CustomCanaryDeployment.phaseConfigs: array expected");
                                message.phaseConfigs = [];
                                for (var i = 0; i < object.phaseConfigs.length; ++i) {
                                    if (typeof object.phaseConfigs[i] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.CustomCanaryDeployment.phaseConfigs: object expected");
                                    message.phaseConfigs[i] = $root.google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig.fromObject(object.phaseConfigs[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CustomCanaryDeployment message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.CustomCanaryDeployment
                         * @static
                         * @param {google.cloud.deploy.v1.CustomCanaryDeployment} message CustomCanaryDeployment
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CustomCanaryDeployment.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.phaseConfigs = [];
                            if (message.phaseConfigs && message.phaseConfigs.length) {
                                object.phaseConfigs = [];
                                for (var j = 0; j < message.phaseConfigs.length; ++j)
                                    object.phaseConfigs[j] = $root.google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig.toObject(message.phaseConfigs[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CustomCanaryDeployment to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.CustomCanaryDeployment
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CustomCanaryDeployment.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CustomCanaryDeployment
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.CustomCanaryDeployment
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CustomCanaryDeployment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.CustomCanaryDeployment";
                        };
    
                        CustomCanaryDeployment.PhaseConfig = (function() {
    
                            /**
                             * Properties of a PhaseConfig.
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment
                             * @interface IPhaseConfig
                             * @property {string|null} [phaseId] PhaseConfig phaseId
                             * @property {number|null} [percentage] PhaseConfig percentage
                             * @property {Array.<string>|null} [profiles] PhaseConfig profiles
                             * @property {boolean|null} [verify] PhaseConfig verify
                             * @property {google.cloud.deploy.v1.IPredeploy|null} [predeploy] PhaseConfig predeploy
                             * @property {google.cloud.deploy.v1.IPostdeploy|null} [postdeploy] PhaseConfig postdeploy
                             */
    
                            /**
                             * Constructs a new PhaseConfig.
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment
                             * @classdesc Represents a PhaseConfig.
                             * @implements IPhaseConfig
                             * @constructor
                             * @param {google.cloud.deploy.v1.CustomCanaryDeployment.IPhaseConfig=} [properties] Properties to set
                             */
                            function PhaseConfig(properties) {
                                this.profiles = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PhaseConfig phaseId.
                             * @member {string} phaseId
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @instance
                             */
                            PhaseConfig.prototype.phaseId = "";
    
                            /**
                             * PhaseConfig percentage.
                             * @member {number} percentage
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @instance
                             */
                            PhaseConfig.prototype.percentage = 0;
    
                            /**
                             * PhaseConfig profiles.
                             * @member {Array.<string>} profiles
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @instance
                             */
                            PhaseConfig.prototype.profiles = $util.emptyArray;
    
                            /**
                             * PhaseConfig verify.
                             * @member {boolean} verify
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @instance
                             */
                            PhaseConfig.prototype.verify = false;
    
                            /**
                             * PhaseConfig predeploy.
                             * @member {google.cloud.deploy.v1.IPredeploy|null|undefined} predeploy
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @instance
                             */
                            PhaseConfig.prototype.predeploy = null;
    
                            /**
                             * PhaseConfig postdeploy.
                             * @member {google.cloud.deploy.v1.IPostdeploy|null|undefined} postdeploy
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @instance
                             */
                            PhaseConfig.prototype.postdeploy = null;
    
                            /**
                             * Creates a new PhaseConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @static
                             * @param {google.cloud.deploy.v1.CustomCanaryDeployment.IPhaseConfig=} [properties] Properties to set
                             * @returns {google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig} PhaseConfig instance
                             */
                            PhaseConfig.create = function create(properties) {
                                return new PhaseConfig(properties);
                            };
    
                            /**
                             * Encodes the specified PhaseConfig message. Does not implicitly {@link google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @static
                             * @param {google.cloud.deploy.v1.CustomCanaryDeployment.IPhaseConfig} message PhaseConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PhaseConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.phaseId != null && Object.hasOwnProperty.call(message, "phaseId"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.phaseId);
                                if (message.percentage != null && Object.hasOwnProperty.call(message, "percentage"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.percentage);
                                if (message.profiles != null && message.profiles.length)
                                    for (var i = 0; i < message.profiles.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.profiles[i]);
                                if (message.verify != null && Object.hasOwnProperty.call(message, "verify"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.verify);
                                if (message.predeploy != null && Object.hasOwnProperty.call(message, "predeploy"))
                                    $root.google.cloud.deploy.v1.Predeploy.encode(message.predeploy, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.postdeploy != null && Object.hasOwnProperty.call(message, "postdeploy"))
                                    $root.google.cloud.deploy.v1.Postdeploy.encode(message.postdeploy, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PhaseConfig message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @static
                             * @param {google.cloud.deploy.v1.CustomCanaryDeployment.IPhaseConfig} message PhaseConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PhaseConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PhaseConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig} PhaseConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PhaseConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.phaseId = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.percentage = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.profiles && message.profiles.length))
                                                message.profiles = [];
                                            message.profiles.push(reader.string());
                                            break;
                                        }
                                    case 4: {
                                            message.verify = reader.bool();
                                            break;
                                        }
                                    case 5: {
                                            message.predeploy = $root.google.cloud.deploy.v1.Predeploy.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.postdeploy = $root.google.cloud.deploy.v1.Postdeploy.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PhaseConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig} PhaseConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PhaseConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PhaseConfig message.
                             * @function verify
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PhaseConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.phaseId != null && message.hasOwnProperty("phaseId"))
                                    if (!$util.isString(message.phaseId))
                                        return "phaseId: string expected";
                                if (message.percentage != null && message.hasOwnProperty("percentage"))
                                    if (!$util.isInteger(message.percentage))
                                        return "percentage: integer expected";
                                if (message.profiles != null && message.hasOwnProperty("profiles")) {
                                    if (!Array.isArray(message.profiles))
                                        return "profiles: array expected";
                                    for (var i = 0; i < message.profiles.length; ++i)
                                        if (!$util.isString(message.profiles[i]))
                                            return "profiles: string[] expected";
                                }
                                if (message.verify != null && message.hasOwnProperty("verify"))
                                    if (typeof message.verify !== "boolean")
                                        return "verify: boolean expected";
                                if (message.predeploy != null && message.hasOwnProperty("predeploy")) {
                                    var error = $root.google.cloud.deploy.v1.Predeploy.verify(message.predeploy);
                                    if (error)
                                        return "predeploy." + error;
                                }
                                if (message.postdeploy != null && message.hasOwnProperty("postdeploy")) {
                                    var error = $root.google.cloud.deploy.v1.Postdeploy.verify(message.postdeploy);
                                    if (error)
                                        return "postdeploy." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a PhaseConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig} PhaseConfig
                             */
                            PhaseConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig)
                                    return object;
                                var message = new $root.google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig();
                                if (object.phaseId != null)
                                    message.phaseId = String(object.phaseId);
                                if (object.percentage != null)
                                    message.percentage = object.percentage | 0;
                                if (object.profiles) {
                                    if (!Array.isArray(object.profiles))
                                        throw TypeError(".google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig.profiles: array expected");
                                    message.profiles = [];
                                    for (var i = 0; i < object.profiles.length; ++i)
                                        message.profiles[i] = String(object.profiles[i]);
                                }
                                if (object.verify != null)
                                    message.verify = Boolean(object.verify);
                                if (object.predeploy != null) {
                                    if (typeof object.predeploy !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig.predeploy: object expected");
                                    message.predeploy = $root.google.cloud.deploy.v1.Predeploy.fromObject(object.predeploy);
                                }
                                if (object.postdeploy != null) {
                                    if (typeof object.postdeploy !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig.postdeploy: object expected");
                                    message.postdeploy = $root.google.cloud.deploy.v1.Postdeploy.fromObject(object.postdeploy);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PhaseConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @static
                             * @param {google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig} message PhaseConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PhaseConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.profiles = [];
                                if (options.defaults) {
                                    object.phaseId = "";
                                    object.percentage = 0;
                                    object.verify = false;
                                    object.predeploy = null;
                                    object.postdeploy = null;
                                }
                                if (message.phaseId != null && message.hasOwnProperty("phaseId"))
                                    object.phaseId = message.phaseId;
                                if (message.percentage != null && message.hasOwnProperty("percentage"))
                                    object.percentage = message.percentage;
                                if (message.profiles && message.profiles.length) {
                                    object.profiles = [];
                                    for (var j = 0; j < message.profiles.length; ++j)
                                        object.profiles[j] = message.profiles[j];
                                }
                                if (message.verify != null && message.hasOwnProperty("verify"))
                                    object.verify = message.verify;
                                if (message.predeploy != null && message.hasOwnProperty("predeploy"))
                                    object.predeploy = $root.google.cloud.deploy.v1.Predeploy.toObject(message.predeploy, options);
                                if (message.postdeploy != null && message.hasOwnProperty("postdeploy"))
                                    object.postdeploy = $root.google.cloud.deploy.v1.Postdeploy.toObject(message.postdeploy, options);
                                return object;
                            };
    
                            /**
                             * Converts this PhaseConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PhaseConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for PhaseConfig
                             * @function getTypeUrl
                             * @memberof google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            PhaseConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.deploy.v1.CustomCanaryDeployment.PhaseConfig";
                            };
    
                            return PhaseConfig;
                        })();
    
                        return CustomCanaryDeployment;
                    })();
    
                    v1.KubernetesConfig = (function() {
    
                        /**
                         * Properties of a KubernetesConfig.
                         * @memberof google.cloud.deploy.v1
                         * @interface IKubernetesConfig
                         * @property {google.cloud.deploy.v1.KubernetesConfig.IGatewayServiceMesh|null} [gatewayServiceMesh] KubernetesConfig gatewayServiceMesh
                         * @property {google.cloud.deploy.v1.KubernetesConfig.IServiceNetworking|null} [serviceNetworking] KubernetesConfig serviceNetworking
                         */
    
                        /**
                         * Constructs a new KubernetesConfig.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a KubernetesConfig.
                         * @implements IKubernetesConfig
                         * @constructor
                         * @param {google.cloud.deploy.v1.IKubernetesConfig=} [properties] Properties to set
                         */
                        function KubernetesConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * KubernetesConfig gatewayServiceMesh.
                         * @member {google.cloud.deploy.v1.KubernetesConfig.IGatewayServiceMesh|null|undefined} gatewayServiceMesh
                         * @memberof google.cloud.deploy.v1.KubernetesConfig
                         * @instance
                         */
                        KubernetesConfig.prototype.gatewayServiceMesh = null;
    
                        /**
                         * KubernetesConfig serviceNetworking.
                         * @member {google.cloud.deploy.v1.KubernetesConfig.IServiceNetworking|null|undefined} serviceNetworking
                         * @memberof google.cloud.deploy.v1.KubernetesConfig
                         * @instance
                         */
                        KubernetesConfig.prototype.serviceNetworking = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * KubernetesConfig serviceDefinition.
                         * @member {"gatewayServiceMesh"|"serviceNetworking"|undefined} serviceDefinition
                         * @memberof google.cloud.deploy.v1.KubernetesConfig
                         * @instance
                         */
                        Object.defineProperty(KubernetesConfig.prototype, "serviceDefinition", {
                            get: $util.oneOfGetter($oneOfFields = ["gatewayServiceMesh", "serviceNetworking"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new KubernetesConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.KubernetesConfig
                         * @static
                         * @param {google.cloud.deploy.v1.IKubernetesConfig=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.KubernetesConfig} KubernetesConfig instance
                         */
                        KubernetesConfig.create = function create(properties) {
                            return new KubernetesConfig(properties);
                        };
    
                        /**
                         * Encodes the specified KubernetesConfig message. Does not implicitly {@link google.cloud.deploy.v1.KubernetesConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.KubernetesConfig
                         * @static
                         * @param {google.cloud.deploy.v1.IKubernetesConfig} message KubernetesConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gatewayServiceMesh != null && Object.hasOwnProperty.call(message, "gatewayServiceMesh"))
                                $root.google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh.encode(message.gatewayServiceMesh, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.serviceNetworking != null && Object.hasOwnProperty.call(message, "serviceNetworking"))
                                $root.google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking.encode(message.serviceNetworking, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified KubernetesConfig message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.KubernetesConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.KubernetesConfig
                         * @static
                         * @param {google.cloud.deploy.v1.IKubernetesConfig} message KubernetesConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a KubernetesConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.KubernetesConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.KubernetesConfig} KubernetesConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.KubernetesConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.gatewayServiceMesh = $root.google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.serviceNetworking = $root.google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a KubernetesConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.KubernetesConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.KubernetesConfig} KubernetesConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a KubernetesConfig message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.KubernetesConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        KubernetesConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.gatewayServiceMesh != null && message.hasOwnProperty("gatewayServiceMesh")) {
                                properties.serviceDefinition = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh.verify(message.gatewayServiceMesh);
                                    if (error)
                                        return "gatewayServiceMesh." + error;
                                }
                            }
                            if (message.serviceNetworking != null && message.hasOwnProperty("serviceNetworking")) {
                                if (properties.serviceDefinition === 1)
                                    return "serviceDefinition: multiple values";
                                properties.serviceDefinition = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking.verify(message.serviceNetworking);
                                    if (error)
                                        return "serviceNetworking." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a KubernetesConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.KubernetesConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.KubernetesConfig} KubernetesConfig
                         */
                        KubernetesConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.KubernetesConfig)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.KubernetesConfig();
                            if (object.gatewayServiceMesh != null) {
                                if (typeof object.gatewayServiceMesh !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.KubernetesConfig.gatewayServiceMesh: object expected");
                                message.gatewayServiceMesh = $root.google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh.fromObject(object.gatewayServiceMesh);
                            }
                            if (object.serviceNetworking != null) {
                                if (typeof object.serviceNetworking !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.KubernetesConfig.serviceNetworking: object expected");
                                message.serviceNetworking = $root.google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking.fromObject(object.serviceNetworking);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a KubernetesConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.KubernetesConfig
                         * @static
                         * @param {google.cloud.deploy.v1.KubernetesConfig} message KubernetesConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        KubernetesConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.gatewayServiceMesh != null && message.hasOwnProperty("gatewayServiceMesh")) {
                                object.gatewayServiceMesh = $root.google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh.toObject(message.gatewayServiceMesh, options);
                                if (options.oneofs)
                                    object.serviceDefinition = "gatewayServiceMesh";
                            }
                            if (message.serviceNetworking != null && message.hasOwnProperty("serviceNetworking")) {
                                object.serviceNetworking = $root.google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking.toObject(message.serviceNetworking, options);
                                if (options.oneofs)
                                    object.serviceDefinition = "serviceNetworking";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this KubernetesConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.KubernetesConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        KubernetesConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for KubernetesConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.KubernetesConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        KubernetesConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.KubernetesConfig";
                        };
    
                        KubernetesConfig.GatewayServiceMesh = (function() {
    
                            /**
                             * Properties of a GatewayServiceMesh.
                             * @memberof google.cloud.deploy.v1.KubernetesConfig
                             * @interface IGatewayServiceMesh
                             * @property {string|null} [httpRoute] GatewayServiceMesh httpRoute
                             * @property {string|null} [service] GatewayServiceMesh service
                             * @property {string|null} [deployment] GatewayServiceMesh deployment
                             * @property {google.protobuf.IDuration|null} [routeUpdateWaitTime] GatewayServiceMesh routeUpdateWaitTime
                             */
    
                            /**
                             * Constructs a new GatewayServiceMesh.
                             * @memberof google.cloud.deploy.v1.KubernetesConfig
                             * @classdesc Represents a GatewayServiceMesh.
                             * @implements IGatewayServiceMesh
                             * @constructor
                             * @param {google.cloud.deploy.v1.KubernetesConfig.IGatewayServiceMesh=} [properties] Properties to set
                             */
                            function GatewayServiceMesh(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GatewayServiceMesh httpRoute.
                             * @member {string} httpRoute
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh
                             * @instance
                             */
                            GatewayServiceMesh.prototype.httpRoute = "";
    
                            /**
                             * GatewayServiceMesh service.
                             * @member {string} service
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh
                             * @instance
                             */
                            GatewayServiceMesh.prototype.service = "";
    
                            /**
                             * GatewayServiceMesh deployment.
                             * @member {string} deployment
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh
                             * @instance
                             */
                            GatewayServiceMesh.prototype.deployment = "";
    
                            /**
                             * GatewayServiceMesh routeUpdateWaitTime.
                             * @member {google.protobuf.IDuration|null|undefined} routeUpdateWaitTime
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh
                             * @instance
                             */
                            GatewayServiceMesh.prototype.routeUpdateWaitTime = null;
    
                            /**
                             * Creates a new GatewayServiceMesh instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh
                             * @static
                             * @param {google.cloud.deploy.v1.KubernetesConfig.IGatewayServiceMesh=} [properties] Properties to set
                             * @returns {google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh} GatewayServiceMesh instance
                             */
                            GatewayServiceMesh.create = function create(properties) {
                                return new GatewayServiceMesh(properties);
                            };
    
                            /**
                             * Encodes the specified GatewayServiceMesh message. Does not implicitly {@link google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh
                             * @static
                             * @param {google.cloud.deploy.v1.KubernetesConfig.IGatewayServiceMesh} message GatewayServiceMesh message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GatewayServiceMesh.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.httpRoute != null && Object.hasOwnProperty.call(message, "httpRoute"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.httpRoute);
                                if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.service);
                                if (message.deployment != null && Object.hasOwnProperty.call(message, "deployment"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.deployment);
                                if (message.routeUpdateWaitTime != null && Object.hasOwnProperty.call(message, "routeUpdateWaitTime"))
                                    $root.google.protobuf.Duration.encode(message.routeUpdateWaitTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GatewayServiceMesh message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh
                             * @static
                             * @param {google.cloud.deploy.v1.KubernetesConfig.IGatewayServiceMesh} message GatewayServiceMesh message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GatewayServiceMesh.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GatewayServiceMesh message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh} GatewayServiceMesh
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GatewayServiceMesh.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.httpRoute = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.service = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.deployment = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.routeUpdateWaitTime = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GatewayServiceMesh message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh} GatewayServiceMesh
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GatewayServiceMesh.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GatewayServiceMesh message.
                             * @function verify
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GatewayServiceMesh.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.httpRoute != null && message.hasOwnProperty("httpRoute"))
                                    if (!$util.isString(message.httpRoute))
                                        return "httpRoute: string expected";
                                if (message.service != null && message.hasOwnProperty("service"))
                                    if (!$util.isString(message.service))
                                        return "service: string expected";
                                if (message.deployment != null && message.hasOwnProperty("deployment"))
                                    if (!$util.isString(message.deployment))
                                        return "deployment: string expected";
                                if (message.routeUpdateWaitTime != null && message.hasOwnProperty("routeUpdateWaitTime")) {
                                    var error = $root.google.protobuf.Duration.verify(message.routeUpdateWaitTime);
                                    if (error)
                                        return "routeUpdateWaitTime." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a GatewayServiceMesh message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh} GatewayServiceMesh
                             */
                            GatewayServiceMesh.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh)
                                    return object;
                                var message = new $root.google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh();
                                if (object.httpRoute != null)
                                    message.httpRoute = String(object.httpRoute);
                                if (object.service != null)
                                    message.service = String(object.service);
                                if (object.deployment != null)
                                    message.deployment = String(object.deployment);
                                if (object.routeUpdateWaitTime != null) {
                                    if (typeof object.routeUpdateWaitTime !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh.routeUpdateWaitTime: object expected");
                                    message.routeUpdateWaitTime = $root.google.protobuf.Duration.fromObject(object.routeUpdateWaitTime);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GatewayServiceMesh message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh
                             * @static
                             * @param {google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh} message GatewayServiceMesh
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GatewayServiceMesh.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.httpRoute = "";
                                    object.service = "";
                                    object.deployment = "";
                                    object.routeUpdateWaitTime = null;
                                }
                                if (message.httpRoute != null && message.hasOwnProperty("httpRoute"))
                                    object.httpRoute = message.httpRoute;
                                if (message.service != null && message.hasOwnProperty("service"))
                                    object.service = message.service;
                                if (message.deployment != null && message.hasOwnProperty("deployment"))
                                    object.deployment = message.deployment;
                                if (message.routeUpdateWaitTime != null && message.hasOwnProperty("routeUpdateWaitTime"))
                                    object.routeUpdateWaitTime = $root.google.protobuf.Duration.toObject(message.routeUpdateWaitTime, options);
                                return object;
                            };
    
                            /**
                             * Converts this GatewayServiceMesh to JSON.
                             * @function toJSON
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GatewayServiceMesh.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GatewayServiceMesh
                             * @function getTypeUrl
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GatewayServiceMesh.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.deploy.v1.KubernetesConfig.GatewayServiceMesh";
                            };
    
                            return GatewayServiceMesh;
                        })();
    
                        KubernetesConfig.ServiceNetworking = (function() {
    
                            /**
                             * Properties of a ServiceNetworking.
                             * @memberof google.cloud.deploy.v1.KubernetesConfig
                             * @interface IServiceNetworking
                             * @property {string|null} [service] ServiceNetworking service
                             * @property {string|null} [deployment] ServiceNetworking deployment
                             * @property {boolean|null} [disablePodOverprovisioning] ServiceNetworking disablePodOverprovisioning
                             */
    
                            /**
                             * Constructs a new ServiceNetworking.
                             * @memberof google.cloud.deploy.v1.KubernetesConfig
                             * @classdesc Represents a ServiceNetworking.
                             * @implements IServiceNetworking
                             * @constructor
                             * @param {google.cloud.deploy.v1.KubernetesConfig.IServiceNetworking=} [properties] Properties to set
                             */
                            function ServiceNetworking(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ServiceNetworking service.
                             * @member {string} service
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking
                             * @instance
                             */
                            ServiceNetworking.prototype.service = "";
    
                            /**
                             * ServiceNetworking deployment.
                             * @member {string} deployment
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking
                             * @instance
                             */
                            ServiceNetworking.prototype.deployment = "";
    
                            /**
                             * ServiceNetworking disablePodOverprovisioning.
                             * @member {boolean} disablePodOverprovisioning
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking
                             * @instance
                             */
                            ServiceNetworking.prototype.disablePodOverprovisioning = false;
    
                            /**
                             * Creates a new ServiceNetworking instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking
                             * @static
                             * @param {google.cloud.deploy.v1.KubernetesConfig.IServiceNetworking=} [properties] Properties to set
                             * @returns {google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking} ServiceNetworking instance
                             */
                            ServiceNetworking.create = function create(properties) {
                                return new ServiceNetworking(properties);
                            };
    
                            /**
                             * Encodes the specified ServiceNetworking message. Does not implicitly {@link google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking
                             * @static
                             * @param {google.cloud.deploy.v1.KubernetesConfig.IServiceNetworking} message ServiceNetworking message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ServiceNetworking.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                                if (message.deployment != null && Object.hasOwnProperty.call(message, "deployment"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.deployment);
                                if (message.disablePodOverprovisioning != null && Object.hasOwnProperty.call(message, "disablePodOverprovisioning"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.disablePodOverprovisioning);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ServiceNetworking message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking
                             * @static
                             * @param {google.cloud.deploy.v1.KubernetesConfig.IServiceNetworking} message ServiceNetworking message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ServiceNetworking.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ServiceNetworking message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking} ServiceNetworking
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ServiceNetworking.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.service = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.deployment = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.disablePodOverprovisioning = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ServiceNetworking message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking} ServiceNetworking
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ServiceNetworking.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ServiceNetworking message.
                             * @function verify
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ServiceNetworking.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.service != null && message.hasOwnProperty("service"))
                                    if (!$util.isString(message.service))
                                        return "service: string expected";
                                if (message.deployment != null && message.hasOwnProperty("deployment"))
                                    if (!$util.isString(message.deployment))
                                        return "deployment: string expected";
                                if (message.disablePodOverprovisioning != null && message.hasOwnProperty("disablePodOverprovisioning"))
                                    if (typeof message.disablePodOverprovisioning !== "boolean")
                                        return "disablePodOverprovisioning: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a ServiceNetworking message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking} ServiceNetworking
                             */
                            ServiceNetworking.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking)
                                    return object;
                                var message = new $root.google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking();
                                if (object.service != null)
                                    message.service = String(object.service);
                                if (object.deployment != null)
                                    message.deployment = String(object.deployment);
                                if (object.disablePodOverprovisioning != null)
                                    message.disablePodOverprovisioning = Boolean(object.disablePodOverprovisioning);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ServiceNetworking message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking
                             * @static
                             * @param {google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking} message ServiceNetworking
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ServiceNetworking.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.service = "";
                                    object.deployment = "";
                                    object.disablePodOverprovisioning = false;
                                }
                                if (message.service != null && message.hasOwnProperty("service"))
                                    object.service = message.service;
                                if (message.deployment != null && message.hasOwnProperty("deployment"))
                                    object.deployment = message.deployment;
                                if (message.disablePodOverprovisioning != null && message.hasOwnProperty("disablePodOverprovisioning"))
                                    object.disablePodOverprovisioning = message.disablePodOverprovisioning;
                                return object;
                            };
    
                            /**
                             * Converts this ServiceNetworking to JSON.
                             * @function toJSON
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ServiceNetworking.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ServiceNetworking
                             * @function getTypeUrl
                             * @memberof google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ServiceNetworking.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.deploy.v1.KubernetesConfig.ServiceNetworking";
                            };
    
                            return ServiceNetworking;
                        })();
    
                        return KubernetesConfig;
                    })();
    
                    v1.CloudRunConfig = (function() {
    
                        /**
                         * Properties of a CloudRunConfig.
                         * @memberof google.cloud.deploy.v1
                         * @interface ICloudRunConfig
                         * @property {boolean|null} [automaticTrafficControl] CloudRunConfig automaticTrafficControl
                         */
    
                        /**
                         * Constructs a new CloudRunConfig.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a CloudRunConfig.
                         * @implements ICloudRunConfig
                         * @constructor
                         * @param {google.cloud.deploy.v1.ICloudRunConfig=} [properties] Properties to set
                         */
                        function CloudRunConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CloudRunConfig automaticTrafficControl.
                         * @member {boolean} automaticTrafficControl
                         * @memberof google.cloud.deploy.v1.CloudRunConfig
                         * @instance
                         */
                        CloudRunConfig.prototype.automaticTrafficControl = false;
    
                        /**
                         * Creates a new CloudRunConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.CloudRunConfig
                         * @static
                         * @param {google.cloud.deploy.v1.ICloudRunConfig=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.CloudRunConfig} CloudRunConfig instance
                         */
                        CloudRunConfig.create = function create(properties) {
                            return new CloudRunConfig(properties);
                        };
    
                        /**
                         * Encodes the specified CloudRunConfig message. Does not implicitly {@link google.cloud.deploy.v1.CloudRunConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.CloudRunConfig
                         * @static
                         * @param {google.cloud.deploy.v1.ICloudRunConfig} message CloudRunConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudRunConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.automaticTrafficControl != null && Object.hasOwnProperty.call(message, "automaticTrafficControl"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.automaticTrafficControl);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CloudRunConfig message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.CloudRunConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.CloudRunConfig
                         * @static
                         * @param {google.cloud.deploy.v1.ICloudRunConfig} message CloudRunConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudRunConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CloudRunConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.CloudRunConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.CloudRunConfig} CloudRunConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudRunConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.CloudRunConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.automaticTrafficControl = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CloudRunConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.CloudRunConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.CloudRunConfig} CloudRunConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudRunConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CloudRunConfig message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.CloudRunConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CloudRunConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.automaticTrafficControl != null && message.hasOwnProperty("automaticTrafficControl"))
                                if (typeof message.automaticTrafficControl !== "boolean")
                                    return "automaticTrafficControl: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a CloudRunConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.CloudRunConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.CloudRunConfig} CloudRunConfig
                         */
                        CloudRunConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.CloudRunConfig)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.CloudRunConfig();
                            if (object.automaticTrafficControl != null)
                                message.automaticTrafficControl = Boolean(object.automaticTrafficControl);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CloudRunConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.CloudRunConfig
                         * @static
                         * @param {google.cloud.deploy.v1.CloudRunConfig} message CloudRunConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CloudRunConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.automaticTrafficControl = false;
                            if (message.automaticTrafficControl != null && message.hasOwnProperty("automaticTrafficControl"))
                                object.automaticTrafficControl = message.automaticTrafficControl;
                            return object;
                        };
    
                        /**
                         * Converts this CloudRunConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.CloudRunConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CloudRunConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CloudRunConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.CloudRunConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CloudRunConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.CloudRunConfig";
                        };
    
                        return CloudRunConfig;
                    })();
    
                    v1.RuntimeConfig = (function() {
    
                        /**
                         * Properties of a RuntimeConfig.
                         * @memberof google.cloud.deploy.v1
                         * @interface IRuntimeConfig
                         * @property {google.cloud.deploy.v1.IKubernetesConfig|null} [kubernetes] RuntimeConfig kubernetes
                         * @property {google.cloud.deploy.v1.ICloudRunConfig|null} [cloudRun] RuntimeConfig cloudRun
                         */
    
                        /**
                         * Constructs a new RuntimeConfig.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a RuntimeConfig.
                         * @implements IRuntimeConfig
                         * @constructor
                         * @param {google.cloud.deploy.v1.IRuntimeConfig=} [properties] Properties to set
                         */
                        function RuntimeConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RuntimeConfig kubernetes.
                         * @member {google.cloud.deploy.v1.IKubernetesConfig|null|undefined} kubernetes
                         * @memberof google.cloud.deploy.v1.RuntimeConfig
                         * @instance
                         */
                        RuntimeConfig.prototype.kubernetes = null;
    
                        /**
                         * RuntimeConfig cloudRun.
                         * @member {google.cloud.deploy.v1.ICloudRunConfig|null|undefined} cloudRun
                         * @memberof google.cloud.deploy.v1.RuntimeConfig
                         * @instance
                         */
                        RuntimeConfig.prototype.cloudRun = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RuntimeConfig runtimeConfig.
                         * @member {"kubernetes"|"cloudRun"|undefined} runtimeConfig
                         * @memberof google.cloud.deploy.v1.RuntimeConfig
                         * @instance
                         */
                        Object.defineProperty(RuntimeConfig.prototype, "runtimeConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["kubernetes", "cloudRun"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RuntimeConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.RuntimeConfig
                         * @static
                         * @param {google.cloud.deploy.v1.IRuntimeConfig=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.RuntimeConfig} RuntimeConfig instance
                         */
                        RuntimeConfig.create = function create(properties) {
                            return new RuntimeConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RuntimeConfig message. Does not implicitly {@link google.cloud.deploy.v1.RuntimeConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.RuntimeConfig
                         * @static
                         * @param {google.cloud.deploy.v1.IRuntimeConfig} message RuntimeConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kubernetes != null && Object.hasOwnProperty.call(message, "kubernetes"))
                                $root.google.cloud.deploy.v1.KubernetesConfig.encode(message.kubernetes, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.cloudRun != null && Object.hasOwnProperty.call(message, "cloudRun"))
                                $root.google.cloud.deploy.v1.CloudRunConfig.encode(message.cloudRun, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RuntimeConfig message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.RuntimeConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.RuntimeConfig
                         * @static
                         * @param {google.cloud.deploy.v1.IRuntimeConfig} message RuntimeConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RuntimeConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.RuntimeConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.RuntimeConfig} RuntimeConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.RuntimeConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.kubernetes = $root.google.cloud.deploy.v1.KubernetesConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.cloudRun = $root.google.cloud.deploy.v1.CloudRunConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RuntimeConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.RuntimeConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.RuntimeConfig} RuntimeConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RuntimeConfig message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.RuntimeConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RuntimeConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.kubernetes != null && message.hasOwnProperty("kubernetes")) {
                                properties.runtimeConfig = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.KubernetesConfig.verify(message.kubernetes);
                                    if (error)
                                        return "kubernetes." + error;
                                }
                            }
                            if (message.cloudRun != null && message.hasOwnProperty("cloudRun")) {
                                if (properties.runtimeConfig === 1)
                                    return "runtimeConfig: multiple values";
                                properties.runtimeConfig = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.CloudRunConfig.verify(message.cloudRun);
                                    if (error)
                                        return "cloudRun." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RuntimeConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.RuntimeConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.RuntimeConfig} RuntimeConfig
                         */
                        RuntimeConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.RuntimeConfig)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.RuntimeConfig();
                            if (object.kubernetes != null) {
                                if (typeof object.kubernetes !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.RuntimeConfig.kubernetes: object expected");
                                message.kubernetes = $root.google.cloud.deploy.v1.KubernetesConfig.fromObject(object.kubernetes);
                            }
                            if (object.cloudRun != null) {
                                if (typeof object.cloudRun !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.RuntimeConfig.cloudRun: object expected");
                                message.cloudRun = $root.google.cloud.deploy.v1.CloudRunConfig.fromObject(object.cloudRun);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RuntimeConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.RuntimeConfig
                         * @static
                         * @param {google.cloud.deploy.v1.RuntimeConfig} message RuntimeConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RuntimeConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.kubernetes != null && message.hasOwnProperty("kubernetes")) {
                                object.kubernetes = $root.google.cloud.deploy.v1.KubernetesConfig.toObject(message.kubernetes, options);
                                if (options.oneofs)
                                    object.runtimeConfig = "kubernetes";
                            }
                            if (message.cloudRun != null && message.hasOwnProperty("cloudRun")) {
                                object.cloudRun = $root.google.cloud.deploy.v1.CloudRunConfig.toObject(message.cloudRun, options);
                                if (options.oneofs)
                                    object.runtimeConfig = "cloudRun";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RuntimeConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.RuntimeConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RuntimeConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RuntimeConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.RuntimeConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RuntimeConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.RuntimeConfig";
                        };
    
                        return RuntimeConfig;
                    })();
    
                    v1.PipelineReadyCondition = (function() {
    
                        /**
                         * Properties of a PipelineReadyCondition.
                         * @memberof google.cloud.deploy.v1
                         * @interface IPipelineReadyCondition
                         * @property {boolean|null} [status] PipelineReadyCondition status
                         * @property {google.protobuf.ITimestamp|null} [updateTime] PipelineReadyCondition updateTime
                         */
    
                        /**
                         * Constructs a new PipelineReadyCondition.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a PipelineReadyCondition.
                         * @implements IPipelineReadyCondition
                         * @constructor
                         * @param {google.cloud.deploy.v1.IPipelineReadyCondition=} [properties] Properties to set
                         */
                        function PipelineReadyCondition(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PipelineReadyCondition status.
                         * @member {boolean} status
                         * @memberof google.cloud.deploy.v1.PipelineReadyCondition
                         * @instance
                         */
                        PipelineReadyCondition.prototype.status = false;
    
                        /**
                         * PipelineReadyCondition updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.deploy.v1.PipelineReadyCondition
                         * @instance
                         */
                        PipelineReadyCondition.prototype.updateTime = null;
    
                        /**
                         * Creates a new PipelineReadyCondition instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.PipelineReadyCondition
                         * @static
                         * @param {google.cloud.deploy.v1.IPipelineReadyCondition=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.PipelineReadyCondition} PipelineReadyCondition instance
                         */
                        PipelineReadyCondition.create = function create(properties) {
                            return new PipelineReadyCondition(properties);
                        };
    
                        /**
                         * Encodes the specified PipelineReadyCondition message. Does not implicitly {@link google.cloud.deploy.v1.PipelineReadyCondition.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.PipelineReadyCondition
                         * @static
                         * @param {google.cloud.deploy.v1.IPipelineReadyCondition} message PipelineReadyCondition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PipelineReadyCondition.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.status);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PipelineReadyCondition message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.PipelineReadyCondition.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.PipelineReadyCondition
                         * @static
                         * @param {google.cloud.deploy.v1.IPipelineReadyCondition} message PipelineReadyCondition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PipelineReadyCondition.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PipelineReadyCondition message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.PipelineReadyCondition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.PipelineReadyCondition} PipelineReadyCondition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PipelineReadyCondition.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.PipelineReadyCondition();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.status = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PipelineReadyCondition message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.PipelineReadyCondition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.PipelineReadyCondition} PipelineReadyCondition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PipelineReadyCondition.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PipelineReadyCondition message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.PipelineReadyCondition
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PipelineReadyCondition.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.status != null && message.hasOwnProperty("status"))
                                if (typeof message.status !== "boolean")
                                    return "status: boolean expected";
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PipelineReadyCondition message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.PipelineReadyCondition
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.PipelineReadyCondition} PipelineReadyCondition
                         */
                        PipelineReadyCondition.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.PipelineReadyCondition)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.PipelineReadyCondition();
                            if (object.status != null)
                                message.status = Boolean(object.status);
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.PipelineReadyCondition.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PipelineReadyCondition message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.PipelineReadyCondition
                         * @static
                         * @param {google.cloud.deploy.v1.PipelineReadyCondition} message PipelineReadyCondition
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PipelineReadyCondition.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.status = false;
                                object.updateTime = null;
                            }
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = message.status;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this PipelineReadyCondition to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.PipelineReadyCondition
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PipelineReadyCondition.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PipelineReadyCondition
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.PipelineReadyCondition
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PipelineReadyCondition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.PipelineReadyCondition";
                        };
    
                        return PipelineReadyCondition;
                    })();
    
                    v1.TargetsPresentCondition = (function() {
    
                        /**
                         * Properties of a TargetsPresentCondition.
                         * @memberof google.cloud.deploy.v1
                         * @interface ITargetsPresentCondition
                         * @property {boolean|null} [status] TargetsPresentCondition status
                         * @property {Array.<string>|null} [missingTargets] TargetsPresentCondition missingTargets
                         * @property {google.protobuf.ITimestamp|null} [updateTime] TargetsPresentCondition updateTime
                         */
    
                        /**
                         * Constructs a new TargetsPresentCondition.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a TargetsPresentCondition.
                         * @implements ITargetsPresentCondition
                         * @constructor
                         * @param {google.cloud.deploy.v1.ITargetsPresentCondition=} [properties] Properties to set
                         */
                        function TargetsPresentCondition(properties) {
                            this.missingTargets = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TargetsPresentCondition status.
                         * @member {boolean} status
                         * @memberof google.cloud.deploy.v1.TargetsPresentCondition
                         * @instance
                         */
                        TargetsPresentCondition.prototype.status = false;
    
                        /**
                         * TargetsPresentCondition missingTargets.
                         * @member {Array.<string>} missingTargets
                         * @memberof google.cloud.deploy.v1.TargetsPresentCondition
                         * @instance
                         */
                        TargetsPresentCondition.prototype.missingTargets = $util.emptyArray;
    
                        /**
                         * TargetsPresentCondition updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.deploy.v1.TargetsPresentCondition
                         * @instance
                         */
                        TargetsPresentCondition.prototype.updateTime = null;
    
                        /**
                         * Creates a new TargetsPresentCondition instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.TargetsPresentCondition
                         * @static
                         * @param {google.cloud.deploy.v1.ITargetsPresentCondition=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.TargetsPresentCondition} TargetsPresentCondition instance
                         */
                        TargetsPresentCondition.create = function create(properties) {
                            return new TargetsPresentCondition(properties);
                        };
    
                        /**
                         * Encodes the specified TargetsPresentCondition message. Does not implicitly {@link google.cloud.deploy.v1.TargetsPresentCondition.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.TargetsPresentCondition
                         * @static
                         * @param {google.cloud.deploy.v1.ITargetsPresentCondition} message TargetsPresentCondition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TargetsPresentCondition.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.status);
                            if (message.missingTargets != null && message.missingTargets.length)
                                for (var i = 0; i < message.missingTargets.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.missingTargets[i]);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TargetsPresentCondition message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.TargetsPresentCondition.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.TargetsPresentCondition
                         * @static
                         * @param {google.cloud.deploy.v1.ITargetsPresentCondition} message TargetsPresentCondition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TargetsPresentCondition.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TargetsPresentCondition message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.TargetsPresentCondition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.TargetsPresentCondition} TargetsPresentCondition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TargetsPresentCondition.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.TargetsPresentCondition();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.status = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.missingTargets && message.missingTargets.length))
                                            message.missingTargets = [];
                                        message.missingTargets.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TargetsPresentCondition message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.TargetsPresentCondition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.TargetsPresentCondition} TargetsPresentCondition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TargetsPresentCondition.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TargetsPresentCondition message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.TargetsPresentCondition
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TargetsPresentCondition.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.status != null && message.hasOwnProperty("status"))
                                if (typeof message.status !== "boolean")
                                    return "status: boolean expected";
                            if (message.missingTargets != null && message.hasOwnProperty("missingTargets")) {
                                if (!Array.isArray(message.missingTargets))
                                    return "missingTargets: array expected";
                                for (var i = 0; i < message.missingTargets.length; ++i)
                                    if (!$util.isString(message.missingTargets[i]))
                                        return "missingTargets: string[] expected";
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TargetsPresentCondition message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.TargetsPresentCondition
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.TargetsPresentCondition} TargetsPresentCondition
                         */
                        TargetsPresentCondition.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.TargetsPresentCondition)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.TargetsPresentCondition();
                            if (object.status != null)
                                message.status = Boolean(object.status);
                            if (object.missingTargets) {
                                if (!Array.isArray(object.missingTargets))
                                    throw TypeError(".google.cloud.deploy.v1.TargetsPresentCondition.missingTargets: array expected");
                                message.missingTargets = [];
                                for (var i = 0; i < object.missingTargets.length; ++i)
                                    message.missingTargets[i] = String(object.missingTargets[i]);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.TargetsPresentCondition.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TargetsPresentCondition message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.TargetsPresentCondition
                         * @static
                         * @param {google.cloud.deploy.v1.TargetsPresentCondition} message TargetsPresentCondition
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TargetsPresentCondition.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.missingTargets = [];
                            if (options.defaults) {
                                object.status = false;
                                object.updateTime = null;
                            }
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = message.status;
                            if (message.missingTargets && message.missingTargets.length) {
                                object.missingTargets = [];
                                for (var j = 0; j < message.missingTargets.length; ++j)
                                    object.missingTargets[j] = message.missingTargets[j];
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this TargetsPresentCondition to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.TargetsPresentCondition
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TargetsPresentCondition.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TargetsPresentCondition
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.TargetsPresentCondition
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TargetsPresentCondition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.TargetsPresentCondition";
                        };
    
                        return TargetsPresentCondition;
                    })();
    
                    v1.TargetsTypeCondition = (function() {
    
                        /**
                         * Properties of a TargetsTypeCondition.
                         * @memberof google.cloud.deploy.v1
                         * @interface ITargetsTypeCondition
                         * @property {boolean|null} [status] TargetsTypeCondition status
                         * @property {string|null} [errorDetails] TargetsTypeCondition errorDetails
                         */
    
                        /**
                         * Constructs a new TargetsTypeCondition.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a TargetsTypeCondition.
                         * @implements ITargetsTypeCondition
                         * @constructor
                         * @param {google.cloud.deploy.v1.ITargetsTypeCondition=} [properties] Properties to set
                         */
                        function TargetsTypeCondition(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TargetsTypeCondition status.
                         * @member {boolean} status
                         * @memberof google.cloud.deploy.v1.TargetsTypeCondition
                         * @instance
                         */
                        TargetsTypeCondition.prototype.status = false;
    
                        /**
                         * TargetsTypeCondition errorDetails.
                         * @member {string} errorDetails
                         * @memberof google.cloud.deploy.v1.TargetsTypeCondition
                         * @instance
                         */
                        TargetsTypeCondition.prototype.errorDetails = "";
    
                        /**
                         * Creates a new TargetsTypeCondition instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.TargetsTypeCondition
                         * @static
                         * @param {google.cloud.deploy.v1.ITargetsTypeCondition=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.TargetsTypeCondition} TargetsTypeCondition instance
                         */
                        TargetsTypeCondition.create = function create(properties) {
                            return new TargetsTypeCondition(properties);
                        };
    
                        /**
                         * Encodes the specified TargetsTypeCondition message. Does not implicitly {@link google.cloud.deploy.v1.TargetsTypeCondition.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.TargetsTypeCondition
                         * @static
                         * @param {google.cloud.deploy.v1.ITargetsTypeCondition} message TargetsTypeCondition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TargetsTypeCondition.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.status);
                            if (message.errorDetails != null && Object.hasOwnProperty.call(message, "errorDetails"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.errorDetails);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TargetsTypeCondition message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.TargetsTypeCondition.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.TargetsTypeCondition
                         * @static
                         * @param {google.cloud.deploy.v1.ITargetsTypeCondition} message TargetsTypeCondition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TargetsTypeCondition.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TargetsTypeCondition message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.TargetsTypeCondition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.TargetsTypeCondition} TargetsTypeCondition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TargetsTypeCondition.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.TargetsTypeCondition();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.status = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.errorDetails = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TargetsTypeCondition message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.TargetsTypeCondition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.TargetsTypeCondition} TargetsTypeCondition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TargetsTypeCondition.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TargetsTypeCondition message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.TargetsTypeCondition
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TargetsTypeCondition.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.status != null && message.hasOwnProperty("status"))
                                if (typeof message.status !== "boolean")
                                    return "status: boolean expected";
                            if (message.errorDetails != null && message.hasOwnProperty("errorDetails"))
                                if (!$util.isString(message.errorDetails))
                                    return "errorDetails: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TargetsTypeCondition message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.TargetsTypeCondition
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.TargetsTypeCondition} TargetsTypeCondition
                         */
                        TargetsTypeCondition.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.TargetsTypeCondition)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.TargetsTypeCondition();
                            if (object.status != null)
                                message.status = Boolean(object.status);
                            if (object.errorDetails != null)
                                message.errorDetails = String(object.errorDetails);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TargetsTypeCondition message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.TargetsTypeCondition
                         * @static
                         * @param {google.cloud.deploy.v1.TargetsTypeCondition} message TargetsTypeCondition
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TargetsTypeCondition.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.status = false;
                                object.errorDetails = "";
                            }
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = message.status;
                            if (message.errorDetails != null && message.hasOwnProperty("errorDetails"))
                                object.errorDetails = message.errorDetails;
                            return object;
                        };
    
                        /**
                         * Converts this TargetsTypeCondition to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.TargetsTypeCondition
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TargetsTypeCondition.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TargetsTypeCondition
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.TargetsTypeCondition
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TargetsTypeCondition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.TargetsTypeCondition";
                        };
    
                        return TargetsTypeCondition;
                    })();
    
                    v1.PipelineCondition = (function() {
    
                        /**
                         * Properties of a PipelineCondition.
                         * @memberof google.cloud.deploy.v1
                         * @interface IPipelineCondition
                         * @property {google.cloud.deploy.v1.IPipelineReadyCondition|null} [pipelineReadyCondition] PipelineCondition pipelineReadyCondition
                         * @property {google.cloud.deploy.v1.ITargetsPresentCondition|null} [targetsPresentCondition] PipelineCondition targetsPresentCondition
                         * @property {google.cloud.deploy.v1.ITargetsTypeCondition|null} [targetsTypeCondition] PipelineCondition targetsTypeCondition
                         */
    
                        /**
                         * Constructs a new PipelineCondition.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a PipelineCondition.
                         * @implements IPipelineCondition
                         * @constructor
                         * @param {google.cloud.deploy.v1.IPipelineCondition=} [properties] Properties to set
                         */
                        function PipelineCondition(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PipelineCondition pipelineReadyCondition.
                         * @member {google.cloud.deploy.v1.IPipelineReadyCondition|null|undefined} pipelineReadyCondition
                         * @memberof google.cloud.deploy.v1.PipelineCondition
                         * @instance
                         */
                        PipelineCondition.prototype.pipelineReadyCondition = null;
    
                        /**
                         * PipelineCondition targetsPresentCondition.
                         * @member {google.cloud.deploy.v1.ITargetsPresentCondition|null|undefined} targetsPresentCondition
                         * @memberof google.cloud.deploy.v1.PipelineCondition
                         * @instance
                         */
                        PipelineCondition.prototype.targetsPresentCondition = null;
    
                        /**
                         * PipelineCondition targetsTypeCondition.
                         * @member {google.cloud.deploy.v1.ITargetsTypeCondition|null|undefined} targetsTypeCondition
                         * @memberof google.cloud.deploy.v1.PipelineCondition
                         * @instance
                         */
                        PipelineCondition.prototype.targetsTypeCondition = null;
    
                        /**
                         * Creates a new PipelineCondition instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.PipelineCondition
                         * @static
                         * @param {google.cloud.deploy.v1.IPipelineCondition=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.PipelineCondition} PipelineCondition instance
                         */
                        PipelineCondition.create = function create(properties) {
                            return new PipelineCondition(properties);
                        };
    
                        /**
                         * Encodes the specified PipelineCondition message. Does not implicitly {@link google.cloud.deploy.v1.PipelineCondition.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.PipelineCondition
                         * @static
                         * @param {google.cloud.deploy.v1.IPipelineCondition} message PipelineCondition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PipelineCondition.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.pipelineReadyCondition != null && Object.hasOwnProperty.call(message, "pipelineReadyCondition"))
                                $root.google.cloud.deploy.v1.PipelineReadyCondition.encode(message.pipelineReadyCondition, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.targetsPresentCondition != null && Object.hasOwnProperty.call(message, "targetsPresentCondition"))
                                $root.google.cloud.deploy.v1.TargetsPresentCondition.encode(message.targetsPresentCondition, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.targetsTypeCondition != null && Object.hasOwnProperty.call(message, "targetsTypeCondition"))
                                $root.google.cloud.deploy.v1.TargetsTypeCondition.encode(message.targetsTypeCondition, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PipelineCondition message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.PipelineCondition.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.PipelineCondition
                         * @static
                         * @param {google.cloud.deploy.v1.IPipelineCondition} message PipelineCondition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PipelineCondition.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PipelineCondition message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.PipelineCondition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.PipelineCondition} PipelineCondition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PipelineCondition.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.PipelineCondition();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.pipelineReadyCondition = $root.google.cloud.deploy.v1.PipelineReadyCondition.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.targetsPresentCondition = $root.google.cloud.deploy.v1.TargetsPresentCondition.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.targetsTypeCondition = $root.google.cloud.deploy.v1.TargetsTypeCondition.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PipelineCondition message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.PipelineCondition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.PipelineCondition} PipelineCondition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PipelineCondition.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PipelineCondition message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.PipelineCondition
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PipelineCondition.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.pipelineReadyCondition != null && message.hasOwnProperty("pipelineReadyCondition")) {
                                var error = $root.google.cloud.deploy.v1.PipelineReadyCondition.verify(message.pipelineReadyCondition);
                                if (error)
                                    return "pipelineReadyCondition." + error;
                            }
                            if (message.targetsPresentCondition != null && message.hasOwnProperty("targetsPresentCondition")) {
                                var error = $root.google.cloud.deploy.v1.TargetsPresentCondition.verify(message.targetsPresentCondition);
                                if (error)
                                    return "targetsPresentCondition." + error;
                            }
                            if (message.targetsTypeCondition != null && message.hasOwnProperty("targetsTypeCondition")) {
                                var error = $root.google.cloud.deploy.v1.TargetsTypeCondition.verify(message.targetsTypeCondition);
                                if (error)
                                    return "targetsTypeCondition." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PipelineCondition message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.PipelineCondition
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.PipelineCondition} PipelineCondition
                         */
                        PipelineCondition.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.PipelineCondition)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.PipelineCondition();
                            if (object.pipelineReadyCondition != null) {
                                if (typeof object.pipelineReadyCondition !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.PipelineCondition.pipelineReadyCondition: object expected");
                                message.pipelineReadyCondition = $root.google.cloud.deploy.v1.PipelineReadyCondition.fromObject(object.pipelineReadyCondition);
                            }
                            if (object.targetsPresentCondition != null) {
                                if (typeof object.targetsPresentCondition !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.PipelineCondition.targetsPresentCondition: object expected");
                                message.targetsPresentCondition = $root.google.cloud.deploy.v1.TargetsPresentCondition.fromObject(object.targetsPresentCondition);
                            }
                            if (object.targetsTypeCondition != null) {
                                if (typeof object.targetsTypeCondition !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.PipelineCondition.targetsTypeCondition: object expected");
                                message.targetsTypeCondition = $root.google.cloud.deploy.v1.TargetsTypeCondition.fromObject(object.targetsTypeCondition);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PipelineCondition message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.PipelineCondition
                         * @static
                         * @param {google.cloud.deploy.v1.PipelineCondition} message PipelineCondition
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PipelineCondition.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.pipelineReadyCondition = null;
                                object.targetsPresentCondition = null;
                                object.targetsTypeCondition = null;
                            }
                            if (message.pipelineReadyCondition != null && message.hasOwnProperty("pipelineReadyCondition"))
                                object.pipelineReadyCondition = $root.google.cloud.deploy.v1.PipelineReadyCondition.toObject(message.pipelineReadyCondition, options);
                            if (message.targetsPresentCondition != null && message.hasOwnProperty("targetsPresentCondition"))
                                object.targetsPresentCondition = $root.google.cloud.deploy.v1.TargetsPresentCondition.toObject(message.targetsPresentCondition, options);
                            if (message.targetsTypeCondition != null && message.hasOwnProperty("targetsTypeCondition"))
                                object.targetsTypeCondition = $root.google.cloud.deploy.v1.TargetsTypeCondition.toObject(message.targetsTypeCondition, options);
                            return object;
                        };
    
                        /**
                         * Converts this PipelineCondition to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.PipelineCondition
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PipelineCondition.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PipelineCondition
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.PipelineCondition
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PipelineCondition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.PipelineCondition";
                        };
    
                        return PipelineCondition;
                    })();
    
                    v1.ListDeliveryPipelinesRequest = (function() {
    
                        /**
                         * Properties of a ListDeliveryPipelinesRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IListDeliveryPipelinesRequest
                         * @property {string|null} [parent] ListDeliveryPipelinesRequest parent
                         * @property {number|null} [pageSize] ListDeliveryPipelinesRequest pageSize
                         * @property {string|null} [pageToken] ListDeliveryPipelinesRequest pageToken
                         * @property {string|null} [filter] ListDeliveryPipelinesRequest filter
                         * @property {string|null} [orderBy] ListDeliveryPipelinesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListDeliveryPipelinesRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a ListDeliveryPipelinesRequest.
                         * @implements IListDeliveryPipelinesRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IListDeliveryPipelinesRequest=} [properties] Properties to set
                         */
                        function ListDeliveryPipelinesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListDeliveryPipelinesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesRequest
                         * @instance
                         */
                        ListDeliveryPipelinesRequest.prototype.parent = "";
    
                        /**
                         * ListDeliveryPipelinesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesRequest
                         * @instance
                         */
                        ListDeliveryPipelinesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListDeliveryPipelinesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesRequest
                         * @instance
                         */
                        ListDeliveryPipelinesRequest.prototype.pageToken = "";
    
                        /**
                         * ListDeliveryPipelinesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesRequest
                         * @instance
                         */
                        ListDeliveryPipelinesRequest.prototype.filter = "";
    
                        /**
                         * ListDeliveryPipelinesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesRequest
                         * @instance
                         */
                        ListDeliveryPipelinesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListDeliveryPipelinesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IListDeliveryPipelinesRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ListDeliveryPipelinesRequest} ListDeliveryPipelinesRequest instance
                         */
                        ListDeliveryPipelinesRequest.create = function create(properties) {
                            return new ListDeliveryPipelinesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListDeliveryPipelinesRequest message. Does not implicitly {@link google.cloud.deploy.v1.ListDeliveryPipelinesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IListDeliveryPipelinesRequest} message ListDeliveryPipelinesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDeliveryPipelinesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListDeliveryPipelinesRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ListDeliveryPipelinesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IListDeliveryPipelinesRequest} message ListDeliveryPipelinesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDeliveryPipelinesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListDeliveryPipelinesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ListDeliveryPipelinesRequest} ListDeliveryPipelinesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDeliveryPipelinesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ListDeliveryPipelinesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListDeliveryPipelinesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ListDeliveryPipelinesRequest} ListDeliveryPipelinesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDeliveryPipelinesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListDeliveryPipelinesRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListDeliveryPipelinesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListDeliveryPipelinesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ListDeliveryPipelinesRequest} ListDeliveryPipelinesRequest
                         */
                        ListDeliveryPipelinesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ListDeliveryPipelinesRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.ListDeliveryPipelinesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListDeliveryPipelinesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ListDeliveryPipelinesRequest} message ListDeliveryPipelinesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListDeliveryPipelinesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListDeliveryPipelinesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListDeliveryPipelinesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListDeliveryPipelinesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListDeliveryPipelinesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ListDeliveryPipelinesRequest";
                        };
    
                        return ListDeliveryPipelinesRequest;
                    })();
    
                    v1.ListDeliveryPipelinesResponse = (function() {
    
                        /**
                         * Properties of a ListDeliveryPipelinesResponse.
                         * @memberof google.cloud.deploy.v1
                         * @interface IListDeliveryPipelinesResponse
                         * @property {Array.<google.cloud.deploy.v1.IDeliveryPipeline>|null} [deliveryPipelines] ListDeliveryPipelinesResponse deliveryPipelines
                         * @property {string|null} [nextPageToken] ListDeliveryPipelinesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListDeliveryPipelinesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListDeliveryPipelinesResponse.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a ListDeliveryPipelinesResponse.
                         * @implements IListDeliveryPipelinesResponse
                         * @constructor
                         * @param {google.cloud.deploy.v1.IListDeliveryPipelinesResponse=} [properties] Properties to set
                         */
                        function ListDeliveryPipelinesResponse(properties) {
                            this.deliveryPipelines = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListDeliveryPipelinesResponse deliveryPipelines.
                         * @member {Array.<google.cloud.deploy.v1.IDeliveryPipeline>} deliveryPipelines
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesResponse
                         * @instance
                         */
                        ListDeliveryPipelinesResponse.prototype.deliveryPipelines = $util.emptyArray;
    
                        /**
                         * ListDeliveryPipelinesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesResponse
                         * @instance
                         */
                        ListDeliveryPipelinesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListDeliveryPipelinesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesResponse
                         * @instance
                         */
                        ListDeliveryPipelinesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListDeliveryPipelinesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IListDeliveryPipelinesResponse=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ListDeliveryPipelinesResponse} ListDeliveryPipelinesResponse instance
                         */
                        ListDeliveryPipelinesResponse.create = function create(properties) {
                            return new ListDeliveryPipelinesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListDeliveryPipelinesResponse message. Does not implicitly {@link google.cloud.deploy.v1.ListDeliveryPipelinesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IListDeliveryPipelinesResponse} message ListDeliveryPipelinesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDeliveryPipelinesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.deliveryPipelines != null && message.deliveryPipelines.length)
                                for (var i = 0; i < message.deliveryPipelines.length; ++i)
                                    $root.google.cloud.deploy.v1.DeliveryPipeline.encode(message.deliveryPipelines[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListDeliveryPipelinesResponse message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ListDeliveryPipelinesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IListDeliveryPipelinesResponse} message ListDeliveryPipelinesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDeliveryPipelinesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListDeliveryPipelinesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ListDeliveryPipelinesResponse} ListDeliveryPipelinesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDeliveryPipelinesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ListDeliveryPipelinesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.deliveryPipelines && message.deliveryPipelines.length))
                                            message.deliveryPipelines = [];
                                        message.deliveryPipelines.push($root.google.cloud.deploy.v1.DeliveryPipeline.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListDeliveryPipelinesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ListDeliveryPipelinesResponse} ListDeliveryPipelinesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDeliveryPipelinesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListDeliveryPipelinesResponse message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListDeliveryPipelinesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.deliveryPipelines != null && message.hasOwnProperty("deliveryPipelines")) {
                                if (!Array.isArray(message.deliveryPipelines))
                                    return "deliveryPipelines: array expected";
                                for (var i = 0; i < message.deliveryPipelines.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.DeliveryPipeline.verify(message.deliveryPipelines[i]);
                                    if (error)
                                        return "deliveryPipelines." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListDeliveryPipelinesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ListDeliveryPipelinesResponse} ListDeliveryPipelinesResponse
                         */
                        ListDeliveryPipelinesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ListDeliveryPipelinesResponse)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.ListDeliveryPipelinesResponse();
                            if (object.deliveryPipelines) {
                                if (!Array.isArray(object.deliveryPipelines))
                                    throw TypeError(".google.cloud.deploy.v1.ListDeliveryPipelinesResponse.deliveryPipelines: array expected");
                                message.deliveryPipelines = [];
                                for (var i = 0; i < object.deliveryPipelines.length; ++i) {
                                    if (typeof object.deliveryPipelines[i] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.ListDeliveryPipelinesResponse.deliveryPipelines: object expected");
                                    message.deliveryPipelines[i] = $root.google.cloud.deploy.v1.DeliveryPipeline.fromObject(object.deliveryPipelines[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.deploy.v1.ListDeliveryPipelinesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListDeliveryPipelinesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesResponse
                         * @static
                         * @param {google.cloud.deploy.v1.ListDeliveryPipelinesResponse} message ListDeliveryPipelinesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListDeliveryPipelinesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.deliveryPipelines = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.deliveryPipelines && message.deliveryPipelines.length) {
                                object.deliveryPipelines = [];
                                for (var j = 0; j < message.deliveryPipelines.length; ++j)
                                    object.deliveryPipelines[j] = $root.google.cloud.deploy.v1.DeliveryPipeline.toObject(message.deliveryPipelines[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListDeliveryPipelinesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListDeliveryPipelinesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListDeliveryPipelinesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ListDeliveryPipelinesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListDeliveryPipelinesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ListDeliveryPipelinesResponse";
                        };
    
                        return ListDeliveryPipelinesResponse;
                    })();
    
                    v1.GetDeliveryPipelineRequest = (function() {
    
                        /**
                         * Properties of a GetDeliveryPipelineRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IGetDeliveryPipelineRequest
                         * @property {string|null} [name] GetDeliveryPipelineRequest name
                         */
    
                        /**
                         * Constructs a new GetDeliveryPipelineRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a GetDeliveryPipelineRequest.
                         * @implements IGetDeliveryPipelineRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IGetDeliveryPipelineRequest=} [properties] Properties to set
                         */
                        function GetDeliveryPipelineRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetDeliveryPipelineRequest name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.GetDeliveryPipelineRequest
                         * @instance
                         */
                        GetDeliveryPipelineRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetDeliveryPipelineRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.GetDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetDeliveryPipelineRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.GetDeliveryPipelineRequest} GetDeliveryPipelineRequest instance
                         */
                        GetDeliveryPipelineRequest.create = function create(properties) {
                            return new GetDeliveryPipelineRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetDeliveryPipelineRequest message. Does not implicitly {@link google.cloud.deploy.v1.GetDeliveryPipelineRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.GetDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetDeliveryPipelineRequest} message GetDeliveryPipelineRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetDeliveryPipelineRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetDeliveryPipelineRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.GetDeliveryPipelineRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.GetDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetDeliveryPipelineRequest} message GetDeliveryPipelineRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetDeliveryPipelineRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetDeliveryPipelineRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.GetDeliveryPipelineRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.GetDeliveryPipelineRequest} GetDeliveryPipelineRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetDeliveryPipelineRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.GetDeliveryPipelineRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetDeliveryPipelineRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.GetDeliveryPipelineRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.GetDeliveryPipelineRequest} GetDeliveryPipelineRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetDeliveryPipelineRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetDeliveryPipelineRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.GetDeliveryPipelineRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetDeliveryPipelineRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetDeliveryPipelineRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.GetDeliveryPipelineRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.GetDeliveryPipelineRequest} GetDeliveryPipelineRequest
                         */
                        GetDeliveryPipelineRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.GetDeliveryPipelineRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.GetDeliveryPipelineRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetDeliveryPipelineRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.GetDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.GetDeliveryPipelineRequest} message GetDeliveryPipelineRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetDeliveryPipelineRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetDeliveryPipelineRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.GetDeliveryPipelineRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetDeliveryPipelineRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetDeliveryPipelineRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.GetDeliveryPipelineRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetDeliveryPipelineRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.GetDeliveryPipelineRequest";
                        };
    
                        return GetDeliveryPipelineRequest;
                    })();
    
                    v1.CreateDeliveryPipelineRequest = (function() {
    
                        /**
                         * Properties of a CreateDeliveryPipelineRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface ICreateDeliveryPipelineRequest
                         * @property {string|null} [parent] CreateDeliveryPipelineRequest parent
                         * @property {string|null} [deliveryPipelineId] CreateDeliveryPipelineRequest deliveryPipelineId
                         * @property {google.cloud.deploy.v1.IDeliveryPipeline|null} [deliveryPipeline] CreateDeliveryPipelineRequest deliveryPipeline
                         * @property {string|null} [requestId] CreateDeliveryPipelineRequest requestId
                         * @property {boolean|null} [validateOnly] CreateDeliveryPipelineRequest validateOnly
                         */
    
                        /**
                         * Constructs a new CreateDeliveryPipelineRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a CreateDeliveryPipelineRequest.
                         * @implements ICreateDeliveryPipelineRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.ICreateDeliveryPipelineRequest=} [properties] Properties to set
                         */
                        function CreateDeliveryPipelineRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateDeliveryPipelineRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.deploy.v1.CreateDeliveryPipelineRequest
                         * @instance
                         */
                        CreateDeliveryPipelineRequest.prototype.parent = "";
    
                        /**
                         * CreateDeliveryPipelineRequest deliveryPipelineId.
                         * @member {string} deliveryPipelineId
                         * @memberof google.cloud.deploy.v1.CreateDeliveryPipelineRequest
                         * @instance
                         */
                        CreateDeliveryPipelineRequest.prototype.deliveryPipelineId = "";
    
                        /**
                         * CreateDeliveryPipelineRequest deliveryPipeline.
                         * @member {google.cloud.deploy.v1.IDeliveryPipeline|null|undefined} deliveryPipeline
                         * @memberof google.cloud.deploy.v1.CreateDeliveryPipelineRequest
                         * @instance
                         */
                        CreateDeliveryPipelineRequest.prototype.deliveryPipeline = null;
    
                        /**
                         * CreateDeliveryPipelineRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.deploy.v1.CreateDeliveryPipelineRequest
                         * @instance
                         */
                        CreateDeliveryPipelineRequest.prototype.requestId = "";
    
                        /**
                         * CreateDeliveryPipelineRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.deploy.v1.CreateDeliveryPipelineRequest
                         * @instance
                         */
                        CreateDeliveryPipelineRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new CreateDeliveryPipelineRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.CreateDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateDeliveryPipelineRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.CreateDeliveryPipelineRequest} CreateDeliveryPipelineRequest instance
                         */
                        CreateDeliveryPipelineRequest.create = function create(properties) {
                            return new CreateDeliveryPipelineRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateDeliveryPipelineRequest message. Does not implicitly {@link google.cloud.deploy.v1.CreateDeliveryPipelineRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.CreateDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateDeliveryPipelineRequest} message CreateDeliveryPipelineRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDeliveryPipelineRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.deliveryPipelineId != null && Object.hasOwnProperty.call(message, "deliveryPipelineId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.deliveryPipelineId);
                            if (message.deliveryPipeline != null && Object.hasOwnProperty.call(message, "deliveryPipeline"))
                                $root.google.cloud.deploy.v1.DeliveryPipeline.encode(message.deliveryPipeline, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateDeliveryPipelineRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.CreateDeliveryPipelineRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.CreateDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateDeliveryPipelineRequest} message CreateDeliveryPipelineRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDeliveryPipelineRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateDeliveryPipelineRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.CreateDeliveryPipelineRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.CreateDeliveryPipelineRequest} CreateDeliveryPipelineRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDeliveryPipelineRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.CreateDeliveryPipelineRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.deliveryPipelineId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.deliveryPipeline = $root.google.cloud.deploy.v1.DeliveryPipeline.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateDeliveryPipelineRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.CreateDeliveryPipelineRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.CreateDeliveryPipelineRequest} CreateDeliveryPipelineRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDeliveryPipelineRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateDeliveryPipelineRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.CreateDeliveryPipelineRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateDeliveryPipelineRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.deliveryPipelineId != null && message.hasOwnProperty("deliveryPipelineId"))
                                if (!$util.isString(message.deliveryPipelineId))
                                    return "deliveryPipelineId: string expected";
                            if (message.deliveryPipeline != null && message.hasOwnProperty("deliveryPipeline")) {
                                var error = $root.google.cloud.deploy.v1.DeliveryPipeline.verify(message.deliveryPipeline);
                                if (error)
                                    return "deliveryPipeline." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateDeliveryPipelineRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.CreateDeliveryPipelineRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.CreateDeliveryPipelineRequest} CreateDeliveryPipelineRequest
                         */
                        CreateDeliveryPipelineRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.CreateDeliveryPipelineRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.CreateDeliveryPipelineRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.deliveryPipelineId != null)
                                message.deliveryPipelineId = String(object.deliveryPipelineId);
                            if (object.deliveryPipeline != null) {
                                if (typeof object.deliveryPipeline !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.CreateDeliveryPipelineRequest.deliveryPipeline: object expected");
                                message.deliveryPipeline = $root.google.cloud.deploy.v1.DeliveryPipeline.fromObject(object.deliveryPipeline);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateDeliveryPipelineRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.CreateDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.CreateDeliveryPipelineRequest} message CreateDeliveryPipelineRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateDeliveryPipelineRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.deliveryPipelineId = "";
                                object.deliveryPipeline = null;
                                object.requestId = "";
                                object.validateOnly = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.deliveryPipelineId != null && message.hasOwnProperty("deliveryPipelineId"))
                                object.deliveryPipelineId = message.deliveryPipelineId;
                            if (message.deliveryPipeline != null && message.hasOwnProperty("deliveryPipeline"))
                                object.deliveryPipeline = $root.google.cloud.deploy.v1.DeliveryPipeline.toObject(message.deliveryPipeline, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this CreateDeliveryPipelineRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.CreateDeliveryPipelineRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateDeliveryPipelineRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateDeliveryPipelineRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.CreateDeliveryPipelineRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateDeliveryPipelineRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.CreateDeliveryPipelineRequest";
                        };
    
                        return CreateDeliveryPipelineRequest;
                    })();
    
                    v1.UpdateDeliveryPipelineRequest = (function() {
    
                        /**
                         * Properties of an UpdateDeliveryPipelineRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IUpdateDeliveryPipelineRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateDeliveryPipelineRequest updateMask
                         * @property {google.cloud.deploy.v1.IDeliveryPipeline|null} [deliveryPipeline] UpdateDeliveryPipelineRequest deliveryPipeline
                         * @property {string|null} [requestId] UpdateDeliveryPipelineRequest requestId
                         * @property {boolean|null} [allowMissing] UpdateDeliveryPipelineRequest allowMissing
                         * @property {boolean|null} [validateOnly] UpdateDeliveryPipelineRequest validateOnly
                         */
    
                        /**
                         * Constructs a new UpdateDeliveryPipelineRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents an UpdateDeliveryPipelineRequest.
                         * @implements IUpdateDeliveryPipelineRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IUpdateDeliveryPipelineRequest=} [properties] Properties to set
                         */
                        function UpdateDeliveryPipelineRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateDeliveryPipelineRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
                         * @instance
                         */
                        UpdateDeliveryPipelineRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateDeliveryPipelineRequest deliveryPipeline.
                         * @member {google.cloud.deploy.v1.IDeliveryPipeline|null|undefined} deliveryPipeline
                         * @memberof google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
                         * @instance
                         */
                        UpdateDeliveryPipelineRequest.prototype.deliveryPipeline = null;
    
                        /**
                         * UpdateDeliveryPipelineRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
                         * @instance
                         */
                        UpdateDeliveryPipelineRequest.prototype.requestId = "";
    
                        /**
                         * UpdateDeliveryPipelineRequest allowMissing.
                         * @member {boolean} allowMissing
                         * @memberof google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
                         * @instance
                         */
                        UpdateDeliveryPipelineRequest.prototype.allowMissing = false;
    
                        /**
                         * UpdateDeliveryPipelineRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
                         * @instance
                         */
                        UpdateDeliveryPipelineRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new UpdateDeliveryPipelineRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IUpdateDeliveryPipelineRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.UpdateDeliveryPipelineRequest} UpdateDeliveryPipelineRequest instance
                         */
                        UpdateDeliveryPipelineRequest.create = function create(properties) {
                            return new UpdateDeliveryPipelineRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateDeliveryPipelineRequest message. Does not implicitly {@link google.cloud.deploy.v1.UpdateDeliveryPipelineRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IUpdateDeliveryPipelineRequest} message UpdateDeliveryPipelineRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateDeliveryPipelineRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.deliveryPipeline != null && Object.hasOwnProperty.call(message, "deliveryPipeline"))
                                $root.google.cloud.deploy.v1.DeliveryPipeline.encode(message.deliveryPipeline, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            if (message.allowMissing != null && Object.hasOwnProperty.call(message, "allowMissing"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.allowMissing);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateDeliveryPipelineRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.UpdateDeliveryPipelineRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IUpdateDeliveryPipelineRequest} message UpdateDeliveryPipelineRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateDeliveryPipelineRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateDeliveryPipelineRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.UpdateDeliveryPipelineRequest} UpdateDeliveryPipelineRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateDeliveryPipelineRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.UpdateDeliveryPipelineRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.deliveryPipeline = $root.google.cloud.deploy.v1.DeliveryPipeline.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.allowMissing = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateDeliveryPipelineRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.UpdateDeliveryPipelineRequest} UpdateDeliveryPipelineRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateDeliveryPipelineRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateDeliveryPipelineRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateDeliveryPipelineRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.deliveryPipeline != null && message.hasOwnProperty("deliveryPipeline")) {
                                var error = $root.google.cloud.deploy.v1.DeliveryPipeline.verify(message.deliveryPipeline);
                                if (error)
                                    return "deliveryPipeline." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                if (typeof message.allowMissing !== "boolean")
                                    return "allowMissing: boolean expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateDeliveryPipelineRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.UpdateDeliveryPipelineRequest} UpdateDeliveryPipelineRequest
                         */
                        UpdateDeliveryPipelineRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.UpdateDeliveryPipelineRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.UpdateDeliveryPipelineRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.UpdateDeliveryPipelineRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.deliveryPipeline != null) {
                                if (typeof object.deliveryPipeline !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.UpdateDeliveryPipelineRequest.deliveryPipeline: object expected");
                                message.deliveryPipeline = $root.google.cloud.deploy.v1.DeliveryPipeline.fromObject(object.deliveryPipeline);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.allowMissing != null)
                                message.allowMissing = Boolean(object.allowMissing);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateDeliveryPipelineRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.UpdateDeliveryPipelineRequest} message UpdateDeliveryPipelineRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateDeliveryPipelineRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.deliveryPipeline = null;
                                object.requestId = "";
                                object.allowMissing = false;
                                object.validateOnly = false;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.deliveryPipeline != null && message.hasOwnProperty("deliveryPipeline"))
                                object.deliveryPipeline = $root.google.cloud.deploy.v1.DeliveryPipeline.toObject(message.deliveryPipeline, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                object.allowMissing = message.allowMissing;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateDeliveryPipelineRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateDeliveryPipelineRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateDeliveryPipelineRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.UpdateDeliveryPipelineRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateDeliveryPipelineRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.UpdateDeliveryPipelineRequest";
                        };
    
                        return UpdateDeliveryPipelineRequest;
                    })();
    
                    v1.DeleteDeliveryPipelineRequest = (function() {
    
                        /**
                         * Properties of a DeleteDeliveryPipelineRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IDeleteDeliveryPipelineRequest
                         * @property {string|null} [name] DeleteDeliveryPipelineRequest name
                         * @property {string|null} [requestId] DeleteDeliveryPipelineRequest requestId
                         * @property {boolean|null} [allowMissing] DeleteDeliveryPipelineRequest allowMissing
                         * @property {boolean|null} [validateOnly] DeleteDeliveryPipelineRequest validateOnly
                         * @property {boolean|null} [force] DeleteDeliveryPipelineRequest force
                         * @property {string|null} [etag] DeleteDeliveryPipelineRequest etag
                         */
    
                        /**
                         * Constructs a new DeleteDeliveryPipelineRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a DeleteDeliveryPipelineRequest.
                         * @implements IDeleteDeliveryPipelineRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IDeleteDeliveryPipelineRequest=} [properties] Properties to set
                         */
                        function DeleteDeliveryPipelineRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteDeliveryPipelineRequest name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @instance
                         */
                        DeleteDeliveryPipelineRequest.prototype.name = "";
    
                        /**
                         * DeleteDeliveryPipelineRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @instance
                         */
                        DeleteDeliveryPipelineRequest.prototype.requestId = "";
    
                        /**
                         * DeleteDeliveryPipelineRequest allowMissing.
                         * @member {boolean} allowMissing
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @instance
                         */
                        DeleteDeliveryPipelineRequest.prototype.allowMissing = false;
    
                        /**
                         * DeleteDeliveryPipelineRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @instance
                         */
                        DeleteDeliveryPipelineRequest.prototype.validateOnly = false;
    
                        /**
                         * DeleteDeliveryPipelineRequest force.
                         * @member {boolean} force
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @instance
                         */
                        DeleteDeliveryPipelineRequest.prototype.force = false;
    
                        /**
                         * DeleteDeliveryPipelineRequest etag.
                         * @member {string} etag
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @instance
                         */
                        DeleteDeliveryPipelineRequest.prototype.etag = "";
    
                        /**
                         * Creates a new DeleteDeliveryPipelineRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IDeleteDeliveryPipelineRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.DeleteDeliveryPipelineRequest} DeleteDeliveryPipelineRequest instance
                         */
                        DeleteDeliveryPipelineRequest.create = function create(properties) {
                            return new DeleteDeliveryPipelineRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteDeliveryPipelineRequest message. Does not implicitly {@link google.cloud.deploy.v1.DeleteDeliveryPipelineRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IDeleteDeliveryPipelineRequest} message DeleteDeliveryPipelineRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteDeliveryPipelineRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            if (message.allowMissing != null && Object.hasOwnProperty.call(message, "allowMissing"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.allowMissing);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.etag);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.force);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteDeliveryPipelineRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.DeleteDeliveryPipelineRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IDeleteDeliveryPipelineRequest} message DeleteDeliveryPipelineRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteDeliveryPipelineRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteDeliveryPipelineRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.DeleteDeliveryPipelineRequest} DeleteDeliveryPipelineRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteDeliveryPipelineRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.DeleteDeliveryPipelineRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.allowMissing = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        message.force = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteDeliveryPipelineRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.DeleteDeliveryPipelineRequest} DeleteDeliveryPipelineRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteDeliveryPipelineRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteDeliveryPipelineRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteDeliveryPipelineRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                if (typeof message.allowMissing !== "boolean")
                                    return "allowMissing: boolean expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteDeliveryPipelineRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.DeleteDeliveryPipelineRequest} DeleteDeliveryPipelineRequest
                         */
                        DeleteDeliveryPipelineRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.DeleteDeliveryPipelineRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.DeleteDeliveryPipelineRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.allowMissing != null)
                                message.allowMissing = Boolean(object.allowMissing);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteDeliveryPipelineRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @static
                         * @param {google.cloud.deploy.v1.DeleteDeliveryPipelineRequest} message DeleteDeliveryPipelineRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteDeliveryPipelineRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                                object.allowMissing = false;
                                object.validateOnly = false;
                                object.etag = "";
                                object.force = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                object.allowMissing = message.allowMissing;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteDeliveryPipelineRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteDeliveryPipelineRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteDeliveryPipelineRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.DeleteDeliveryPipelineRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteDeliveryPipelineRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.DeleteDeliveryPipelineRequest";
                        };
    
                        return DeleteDeliveryPipelineRequest;
                    })();
    
                    v1.Target = (function() {
    
                        /**
                         * Properties of a Target.
                         * @memberof google.cloud.deploy.v1
                         * @interface ITarget
                         * @property {string|null} [name] Target name
                         * @property {string|null} [targetId] Target targetId
                         * @property {string|null} [uid] Target uid
                         * @property {string|null} [description] Target description
                         * @property {Object.<string,string>|null} [annotations] Target annotations
                         * @property {Object.<string,string>|null} [labels] Target labels
                         * @property {boolean|null} [requireApproval] Target requireApproval
                         * @property {google.protobuf.ITimestamp|null} [createTime] Target createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Target updateTime
                         * @property {google.cloud.deploy.v1.IGkeCluster|null} [gke] Target gke
                         * @property {google.cloud.deploy.v1.IAnthosCluster|null} [anthosCluster] Target anthosCluster
                         * @property {google.cloud.deploy.v1.ICloudRunLocation|null} [run] Target run
                         * @property {google.cloud.deploy.v1.IMultiTarget|null} [multiTarget] Target multiTarget
                         * @property {string|null} [etag] Target etag
                         * @property {Array.<google.cloud.deploy.v1.IExecutionConfig>|null} [executionConfigs] Target executionConfigs
                         * @property {Object.<string,string>|null} [deployParameters] Target deployParameters
                         */
    
                        /**
                         * Constructs a new Target.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a Target.
                         * @implements ITarget
                         * @constructor
                         * @param {google.cloud.deploy.v1.ITarget=} [properties] Properties to set
                         */
                        function Target(properties) {
                            this.annotations = {};
                            this.labels = {};
                            this.executionConfigs = [];
                            this.deployParameters = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Target name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.name = "";
    
                        /**
                         * Target targetId.
                         * @member {string} targetId
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.targetId = "";
    
                        /**
                         * Target uid.
                         * @member {string} uid
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.uid = "";
    
                        /**
                         * Target description.
                         * @member {string} description
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.description = "";
    
                        /**
                         * Target annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.annotations = $util.emptyObject;
    
                        /**
                         * Target labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.labels = $util.emptyObject;
    
                        /**
                         * Target requireApproval.
                         * @member {boolean} requireApproval
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.requireApproval = false;
    
                        /**
                         * Target createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.createTime = null;
    
                        /**
                         * Target updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.updateTime = null;
    
                        /**
                         * Target gke.
                         * @member {google.cloud.deploy.v1.IGkeCluster|null|undefined} gke
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.gke = null;
    
                        /**
                         * Target anthosCluster.
                         * @member {google.cloud.deploy.v1.IAnthosCluster|null|undefined} anthosCluster
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.anthosCluster = null;
    
                        /**
                         * Target run.
                         * @member {google.cloud.deploy.v1.ICloudRunLocation|null|undefined} run
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.run = null;
    
                        /**
                         * Target multiTarget.
                         * @member {google.cloud.deploy.v1.IMultiTarget|null|undefined} multiTarget
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.multiTarget = null;
    
                        /**
                         * Target etag.
                         * @member {string} etag
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.etag = "";
    
                        /**
                         * Target executionConfigs.
                         * @member {Array.<google.cloud.deploy.v1.IExecutionConfig>} executionConfigs
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.executionConfigs = $util.emptyArray;
    
                        /**
                         * Target deployParameters.
                         * @member {Object.<string,string>} deployParameters
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Target.prototype.deployParameters = $util.emptyObject;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Target deploymentTarget.
                         * @member {"gke"|"anthosCluster"|"run"|"multiTarget"|undefined} deploymentTarget
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         */
                        Object.defineProperty(Target.prototype, "deploymentTarget", {
                            get: $util.oneOfGetter($oneOfFields = ["gke", "anthosCluster", "run", "multiTarget"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Target instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.Target
                         * @static
                         * @param {google.cloud.deploy.v1.ITarget=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.Target} Target instance
                         */
                        Target.create = function create(properties) {
                            return new Target(properties);
                        };
    
                        /**
                         * Encodes the specified Target message. Does not implicitly {@link google.cloud.deploy.v1.Target.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.Target
                         * @static
                         * @param {google.cloud.deploy.v1.ITarget} message Target message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Target.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.targetId != null && Object.hasOwnProperty.call(message, "targetId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.targetId);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.uid);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.description);
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.etag);
                            if (message.requireApproval != null && Object.hasOwnProperty.call(message, "requireApproval"))
                                writer.uint32(/* id 13, wireType 0 =*/104).bool(message.requireApproval);
                            if (message.gke != null && Object.hasOwnProperty.call(message, "gke"))
                                $root.google.cloud.deploy.v1.GkeCluster.encode(message.gke, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.executionConfigs != null && message.executionConfigs.length)
                                for (var i = 0; i < message.executionConfigs.length; ++i)
                                    $root.google.cloud.deploy.v1.ExecutionConfig.encode(message.executionConfigs[i], writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                            if (message.anthosCluster != null && Object.hasOwnProperty.call(message, "anthosCluster"))
                                $root.google.cloud.deploy.v1.AnthosCluster.encode(message.anthosCluster, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.run != null && Object.hasOwnProperty.call(message, "run"))
                                $root.google.cloud.deploy.v1.CloudRunLocation.encode(message.run, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                            if (message.multiTarget != null && Object.hasOwnProperty.call(message, "multiTarget"))
                                $root.google.cloud.deploy.v1.MultiTarget.encode(message.multiTarget, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.deployParameters != null && Object.hasOwnProperty.call(message, "deployParameters"))
                                for (var keys = Object.keys(message.deployParameters), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 20, wireType 2 =*/162).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.deployParameters[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Target message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Target.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.Target
                         * @static
                         * @param {google.cloud.deploy.v1.ITarget} message Target message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Target.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Target message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.Target
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.Target} Target
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Target.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Target(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.targetId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 5: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 6: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 13: {
                                        message.requireApproval = reader.bool();
                                        break;
                                    }
                                case 8: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        message.gke = $root.google.cloud.deploy.v1.GkeCluster.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 17: {
                                        message.anthosCluster = $root.google.cloud.deploy.v1.AnthosCluster.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 18: {
                                        message.run = $root.google.cloud.deploy.v1.CloudRunLocation.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 19: {
                                        message.multiTarget = $root.google.cloud.deploy.v1.MultiTarget.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                case 16: {
                                        if (!(message.executionConfigs && message.executionConfigs.length))
                                            message.executionConfigs = [];
                                        message.executionConfigs.push($root.google.cloud.deploy.v1.ExecutionConfig.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 20: {
                                        if (message.deployParameters === $util.emptyObject)
                                            message.deployParameters = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.deployParameters[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Target message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.Target
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.Target} Target
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Target.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Target message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.Target
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Target.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.targetId != null && message.hasOwnProperty("targetId"))
                                if (!$util.isString(message.targetId))
                                    return "targetId: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.requireApproval != null && message.hasOwnProperty("requireApproval"))
                                if (typeof message.requireApproval !== "boolean")
                                    return "requireApproval: boolean expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.gke != null && message.hasOwnProperty("gke")) {
                                properties.deploymentTarget = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.GkeCluster.verify(message.gke);
                                    if (error)
                                        return "gke." + error;
                                }
                            }
                            if (message.anthosCluster != null && message.hasOwnProperty("anthosCluster")) {
                                if (properties.deploymentTarget === 1)
                                    return "deploymentTarget: multiple values";
                                properties.deploymentTarget = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.AnthosCluster.verify(message.anthosCluster);
                                    if (error)
                                        return "anthosCluster." + error;
                                }
                            }
                            if (message.run != null && message.hasOwnProperty("run")) {
                                if (properties.deploymentTarget === 1)
                                    return "deploymentTarget: multiple values";
                                properties.deploymentTarget = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.CloudRunLocation.verify(message.run);
                                    if (error)
                                        return "run." + error;
                                }
                            }
                            if (message.multiTarget != null && message.hasOwnProperty("multiTarget")) {
                                if (properties.deploymentTarget === 1)
                                    return "deploymentTarget: multiple values";
                                properties.deploymentTarget = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.MultiTarget.verify(message.multiTarget);
                                    if (error)
                                        return "multiTarget." + error;
                                }
                            }
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            if (message.executionConfigs != null && message.hasOwnProperty("executionConfigs")) {
                                if (!Array.isArray(message.executionConfigs))
                                    return "executionConfigs: array expected";
                                for (var i = 0; i < message.executionConfigs.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.ExecutionConfig.verify(message.executionConfigs[i]);
                                    if (error)
                                        return "executionConfigs." + error;
                                }
                            }
                            if (message.deployParameters != null && message.hasOwnProperty("deployParameters")) {
                                if (!$util.isObject(message.deployParameters))
                                    return "deployParameters: object expected";
                                var key = Object.keys(message.deployParameters);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.deployParameters[key[i]]))
                                        return "deployParameters: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Target message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.Target
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.Target} Target
                         */
                        Target.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.Target)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.Target();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.targetId != null)
                                message.targetId = String(object.targetId);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Target.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Target.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.requireApproval != null)
                                message.requireApproval = Boolean(object.requireApproval);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Target.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Target.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.gke != null) {
                                if (typeof object.gke !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Target.gke: object expected");
                                message.gke = $root.google.cloud.deploy.v1.GkeCluster.fromObject(object.gke);
                            }
                            if (object.anthosCluster != null) {
                                if (typeof object.anthosCluster !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Target.anthosCluster: object expected");
                                message.anthosCluster = $root.google.cloud.deploy.v1.AnthosCluster.fromObject(object.anthosCluster);
                            }
                            if (object.run != null) {
                                if (typeof object.run !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Target.run: object expected");
                                message.run = $root.google.cloud.deploy.v1.CloudRunLocation.fromObject(object.run);
                            }
                            if (object.multiTarget != null) {
                                if (typeof object.multiTarget !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Target.multiTarget: object expected");
                                message.multiTarget = $root.google.cloud.deploy.v1.MultiTarget.fromObject(object.multiTarget);
                            }
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            if (object.executionConfigs) {
                                if (!Array.isArray(object.executionConfigs))
                                    throw TypeError(".google.cloud.deploy.v1.Target.executionConfigs: array expected");
                                message.executionConfigs = [];
                                for (var i = 0; i < object.executionConfigs.length; ++i) {
                                    if (typeof object.executionConfigs[i] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.Target.executionConfigs: object expected");
                                    message.executionConfigs[i] = $root.google.cloud.deploy.v1.ExecutionConfig.fromObject(object.executionConfigs[i]);
                                }
                            }
                            if (object.deployParameters) {
                                if (typeof object.deployParameters !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Target.deployParameters: object expected");
                                message.deployParameters = {};
                                for (var keys = Object.keys(object.deployParameters), i = 0; i < keys.length; ++i)
                                    message.deployParameters[keys[i]] = String(object.deployParameters[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Target message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.Target
                         * @static
                         * @param {google.cloud.deploy.v1.Target} message Target
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Target.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.executionConfigs = [];
                            if (options.objects || options.defaults) {
                                object.annotations = {};
                                object.labels = {};
                                object.deployParameters = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.targetId = "";
                                object.uid = "";
                                object.description = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.etag = "";
                                object.requireApproval = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.targetId != null && message.hasOwnProperty("targetId"))
                                object.targetId = message.targetId;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            var keys2;
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.requireApproval != null && message.hasOwnProperty("requireApproval"))
                                object.requireApproval = message.requireApproval;
                            if (message.gke != null && message.hasOwnProperty("gke")) {
                                object.gke = $root.google.cloud.deploy.v1.GkeCluster.toObject(message.gke, options);
                                if (options.oneofs)
                                    object.deploymentTarget = "gke";
                            }
                            if (message.executionConfigs && message.executionConfigs.length) {
                                object.executionConfigs = [];
                                for (var j = 0; j < message.executionConfigs.length; ++j)
                                    object.executionConfigs[j] = $root.google.cloud.deploy.v1.ExecutionConfig.toObject(message.executionConfigs[j], options);
                            }
                            if (message.anthosCluster != null && message.hasOwnProperty("anthosCluster")) {
                                object.anthosCluster = $root.google.cloud.deploy.v1.AnthosCluster.toObject(message.anthosCluster, options);
                                if (options.oneofs)
                                    object.deploymentTarget = "anthosCluster";
                            }
                            if (message.run != null && message.hasOwnProperty("run")) {
                                object.run = $root.google.cloud.deploy.v1.CloudRunLocation.toObject(message.run, options);
                                if (options.oneofs)
                                    object.deploymentTarget = "run";
                            }
                            if (message.multiTarget != null && message.hasOwnProperty("multiTarget")) {
                                object.multiTarget = $root.google.cloud.deploy.v1.MultiTarget.toObject(message.multiTarget, options);
                                if (options.oneofs)
                                    object.deploymentTarget = "multiTarget";
                            }
                            if (message.deployParameters && (keys2 = Object.keys(message.deployParameters)).length) {
                                object.deployParameters = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.deployParameters[keys2[j]] = message.deployParameters[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Target to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.Target
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Target.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Target
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.Target
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Target.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.Target";
                        };
    
                        return Target;
                    })();
    
                    v1.ExecutionConfig = (function() {
    
                        /**
                         * Properties of an ExecutionConfig.
                         * @memberof google.cloud.deploy.v1
                         * @interface IExecutionConfig
                         * @property {Array.<google.cloud.deploy.v1.ExecutionConfig.ExecutionEnvironmentUsage>|null} [usages] ExecutionConfig usages
                         * @property {google.cloud.deploy.v1.IDefaultPool|null} [defaultPool] ExecutionConfig defaultPool
                         * @property {google.cloud.deploy.v1.IPrivatePool|null} [privatePool] ExecutionConfig privatePool
                         * @property {string|null} [workerPool] ExecutionConfig workerPool
                         * @property {string|null} [serviceAccount] ExecutionConfig serviceAccount
                         * @property {string|null} [artifactStorage] ExecutionConfig artifactStorage
                         * @property {google.protobuf.IDuration|null} [executionTimeout] ExecutionConfig executionTimeout
                         */
    
                        /**
                         * Constructs a new ExecutionConfig.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents an ExecutionConfig.
                         * @implements IExecutionConfig
                         * @constructor
                         * @param {google.cloud.deploy.v1.IExecutionConfig=} [properties] Properties to set
                         */
                        function ExecutionConfig(properties) {
                            this.usages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ExecutionConfig usages.
                         * @member {Array.<google.cloud.deploy.v1.ExecutionConfig.ExecutionEnvironmentUsage>} usages
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @instance
                         */
                        ExecutionConfig.prototype.usages = $util.emptyArray;
    
                        /**
                         * ExecutionConfig defaultPool.
                         * @member {google.cloud.deploy.v1.IDefaultPool|null|undefined} defaultPool
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @instance
                         */
                        ExecutionConfig.prototype.defaultPool = null;
    
                        /**
                         * ExecutionConfig privatePool.
                         * @member {google.cloud.deploy.v1.IPrivatePool|null|undefined} privatePool
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @instance
                         */
                        ExecutionConfig.prototype.privatePool = null;
    
                        /**
                         * ExecutionConfig workerPool.
                         * @member {string} workerPool
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @instance
                         */
                        ExecutionConfig.prototype.workerPool = "";
    
                        /**
                         * ExecutionConfig serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @instance
                         */
                        ExecutionConfig.prototype.serviceAccount = "";
    
                        /**
                         * ExecutionConfig artifactStorage.
                         * @member {string} artifactStorage
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @instance
                         */
                        ExecutionConfig.prototype.artifactStorage = "";
    
                        /**
                         * ExecutionConfig executionTimeout.
                         * @member {google.protobuf.IDuration|null|undefined} executionTimeout
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @instance
                         */
                        ExecutionConfig.prototype.executionTimeout = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ExecutionConfig executionEnvironment.
                         * @member {"defaultPool"|"privatePool"|undefined} executionEnvironment
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @instance
                         */
                        Object.defineProperty(ExecutionConfig.prototype, "executionEnvironment", {
                            get: $util.oneOfGetter($oneOfFields = ["defaultPool", "privatePool"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ExecutionConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @static
                         * @param {google.cloud.deploy.v1.IExecutionConfig=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ExecutionConfig} ExecutionConfig instance
                         */
                        ExecutionConfig.create = function create(properties) {
                            return new ExecutionConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ExecutionConfig message. Does not implicitly {@link google.cloud.deploy.v1.ExecutionConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @static
                         * @param {google.cloud.deploy.v1.IExecutionConfig} message ExecutionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExecutionConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.usages != null && message.usages.length) {
                                writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                for (var i = 0; i < message.usages.length; ++i)
                                    writer.int32(message.usages[i]);
                                writer.ldelim();
                            }
                            if (message.defaultPool != null && Object.hasOwnProperty.call(message, "defaultPool"))
                                $root.google.cloud.deploy.v1.DefaultPool.encode(message.defaultPool, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.privatePool != null && Object.hasOwnProperty.call(message, "privatePool"))
                                $root.google.cloud.deploy.v1.PrivatePool.encode(message.privatePool, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.workerPool != null && Object.hasOwnProperty.call(message, "workerPool"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.workerPool);
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.serviceAccount);
                            if (message.artifactStorage != null && Object.hasOwnProperty.call(message, "artifactStorage"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.artifactStorage);
                            if (message.executionTimeout != null && Object.hasOwnProperty.call(message, "executionTimeout"))
                                $root.google.protobuf.Duration.encode(message.executionTimeout, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ExecutionConfig message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ExecutionConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @static
                         * @param {google.cloud.deploy.v1.IExecutionConfig} message ExecutionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExecutionConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ExecutionConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ExecutionConfig} ExecutionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExecutionConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ExecutionConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.usages && message.usages.length))
                                            message.usages = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.usages.push(reader.int32());
                                        } else
                                            message.usages.push(reader.int32());
                                        break;
                                    }
                                case 2: {
                                        message.defaultPool = $root.google.cloud.deploy.v1.DefaultPool.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.privatePool = $root.google.cloud.deploy.v1.PrivatePool.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.workerPool = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.artifactStorage = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.executionTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ExecutionConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ExecutionConfig} ExecutionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExecutionConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ExecutionConfig message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ExecutionConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.usages != null && message.hasOwnProperty("usages")) {
                                if (!Array.isArray(message.usages))
                                    return "usages: array expected";
                                for (var i = 0; i < message.usages.length; ++i)
                                    switch (message.usages[i]) {
                                    default:
                                        return "usages: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                        break;
                                    }
                            }
                            if (message.defaultPool != null && message.hasOwnProperty("defaultPool")) {
                                properties.executionEnvironment = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.DefaultPool.verify(message.defaultPool);
                                    if (error)
                                        return "defaultPool." + error;
                                }
                            }
                            if (message.privatePool != null && message.hasOwnProperty("privatePool")) {
                                if (properties.executionEnvironment === 1)
                                    return "executionEnvironment: multiple values";
                                properties.executionEnvironment = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.PrivatePool.verify(message.privatePool);
                                    if (error)
                                        return "privatePool." + error;
                                }
                            }
                            if (message.workerPool != null && message.hasOwnProperty("workerPool"))
                                if (!$util.isString(message.workerPool))
                                    return "workerPool: string expected";
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            if (message.artifactStorage != null && message.hasOwnProperty("artifactStorage"))
                                if (!$util.isString(message.artifactStorage))
                                    return "artifactStorage: string expected";
                            if (message.executionTimeout != null && message.hasOwnProperty("executionTimeout")) {
                                var error = $root.google.protobuf.Duration.verify(message.executionTimeout);
                                if (error)
                                    return "executionTimeout." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ExecutionConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ExecutionConfig} ExecutionConfig
                         */
                        ExecutionConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ExecutionConfig)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.ExecutionConfig();
                            if (object.usages) {
                                if (!Array.isArray(object.usages))
                                    throw TypeError(".google.cloud.deploy.v1.ExecutionConfig.usages: array expected");
                                message.usages = [];
                                for (var i = 0; i < object.usages.length; ++i)
                                    switch (object.usages[i]) {
                                    default:
                                        if (typeof object.usages[i] === "number") {
                                            message.usages[i] = object.usages[i];
                                            break;
                                        }
                                    case "EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED":
                                    case 0:
                                        message.usages[i] = 0;
                                        break;
                                    case "RENDER":
                                    case 1:
                                        message.usages[i] = 1;
                                        break;
                                    case "DEPLOY":
                                    case 2:
                                        message.usages[i] = 2;
                                        break;
                                    case "VERIFY":
                                    case 3:
                                        message.usages[i] = 3;
                                        break;
                                    case "PREDEPLOY":
                                    case 4:
                                        message.usages[i] = 4;
                                        break;
                                    case "POSTDEPLOY":
                                    case 5:
                                        message.usages[i] = 5;
                                        break;
                                    }
                            }
                            if (object.defaultPool != null) {
                                if (typeof object.defaultPool !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.ExecutionConfig.defaultPool: object expected");
                                message.defaultPool = $root.google.cloud.deploy.v1.DefaultPool.fromObject(object.defaultPool);
                            }
                            if (object.privatePool != null) {
                                if (typeof object.privatePool !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.ExecutionConfig.privatePool: object expected");
                                message.privatePool = $root.google.cloud.deploy.v1.PrivatePool.fromObject(object.privatePool);
                            }
                            if (object.workerPool != null)
                                message.workerPool = String(object.workerPool);
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            if (object.artifactStorage != null)
                                message.artifactStorage = String(object.artifactStorage);
                            if (object.executionTimeout != null) {
                                if (typeof object.executionTimeout !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.ExecutionConfig.executionTimeout: object expected");
                                message.executionTimeout = $root.google.protobuf.Duration.fromObject(object.executionTimeout);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ExecutionConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @static
                         * @param {google.cloud.deploy.v1.ExecutionConfig} message ExecutionConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ExecutionConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.usages = [];
                            if (options.defaults) {
                                object.workerPool = "";
                                object.serviceAccount = "";
                                object.artifactStorage = "";
                                object.executionTimeout = null;
                            }
                            if (message.usages && message.usages.length) {
                                object.usages = [];
                                for (var j = 0; j < message.usages.length; ++j)
                                    object.usages[j] = options.enums === String ? $root.google.cloud.deploy.v1.ExecutionConfig.ExecutionEnvironmentUsage[message.usages[j]] === undefined ? message.usages[j] : $root.google.cloud.deploy.v1.ExecutionConfig.ExecutionEnvironmentUsage[message.usages[j]] : message.usages[j];
                            }
                            if (message.defaultPool != null && message.hasOwnProperty("defaultPool")) {
                                object.defaultPool = $root.google.cloud.deploy.v1.DefaultPool.toObject(message.defaultPool, options);
                                if (options.oneofs)
                                    object.executionEnvironment = "defaultPool";
                            }
                            if (message.privatePool != null && message.hasOwnProperty("privatePool")) {
                                object.privatePool = $root.google.cloud.deploy.v1.PrivatePool.toObject(message.privatePool, options);
                                if (options.oneofs)
                                    object.executionEnvironment = "privatePool";
                            }
                            if (message.workerPool != null && message.hasOwnProperty("workerPool"))
                                object.workerPool = message.workerPool;
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            if (message.artifactStorage != null && message.hasOwnProperty("artifactStorage"))
                                object.artifactStorage = message.artifactStorage;
                            if (message.executionTimeout != null && message.hasOwnProperty("executionTimeout"))
                                object.executionTimeout = $root.google.protobuf.Duration.toObject(message.executionTimeout, options);
                            return object;
                        };
    
                        /**
                         * Converts this ExecutionConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ExecutionConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ExecutionConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ExecutionConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ExecutionConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ExecutionConfig";
                        };
    
                        /**
                         * ExecutionEnvironmentUsage enum.
                         * @name google.cloud.deploy.v1.ExecutionConfig.ExecutionEnvironmentUsage
                         * @enum {number}
                         * @property {number} EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED=0 EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED value
                         * @property {number} RENDER=1 RENDER value
                         * @property {number} DEPLOY=2 DEPLOY value
                         * @property {number} VERIFY=3 VERIFY value
                         * @property {number} PREDEPLOY=4 PREDEPLOY value
                         * @property {number} POSTDEPLOY=5 POSTDEPLOY value
                         */
                        ExecutionConfig.ExecutionEnvironmentUsage = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RENDER"] = 1;
                            values[valuesById[2] = "DEPLOY"] = 2;
                            values[valuesById[3] = "VERIFY"] = 3;
                            values[valuesById[4] = "PREDEPLOY"] = 4;
                            values[valuesById[5] = "POSTDEPLOY"] = 5;
                            return values;
                        })();
    
                        return ExecutionConfig;
                    })();
    
                    v1.DefaultPool = (function() {
    
                        /**
                         * Properties of a DefaultPool.
                         * @memberof google.cloud.deploy.v1
                         * @interface IDefaultPool
                         * @property {string|null} [serviceAccount] DefaultPool serviceAccount
                         * @property {string|null} [artifactStorage] DefaultPool artifactStorage
                         */
    
                        /**
                         * Constructs a new DefaultPool.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a DefaultPool.
                         * @implements IDefaultPool
                         * @constructor
                         * @param {google.cloud.deploy.v1.IDefaultPool=} [properties] Properties to set
                         */
                        function DefaultPool(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DefaultPool serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.cloud.deploy.v1.DefaultPool
                         * @instance
                         */
                        DefaultPool.prototype.serviceAccount = "";
    
                        /**
                         * DefaultPool artifactStorage.
                         * @member {string} artifactStorage
                         * @memberof google.cloud.deploy.v1.DefaultPool
                         * @instance
                         */
                        DefaultPool.prototype.artifactStorage = "";
    
                        /**
                         * Creates a new DefaultPool instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.DefaultPool
                         * @static
                         * @param {google.cloud.deploy.v1.IDefaultPool=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.DefaultPool} DefaultPool instance
                         */
                        DefaultPool.create = function create(properties) {
                            return new DefaultPool(properties);
                        };
    
                        /**
                         * Encodes the specified DefaultPool message. Does not implicitly {@link google.cloud.deploy.v1.DefaultPool.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.DefaultPool
                         * @static
                         * @param {google.cloud.deploy.v1.IDefaultPool} message DefaultPool message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DefaultPool.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.serviceAccount);
                            if (message.artifactStorage != null && Object.hasOwnProperty.call(message, "artifactStorage"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.artifactStorage);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DefaultPool message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.DefaultPool.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.DefaultPool
                         * @static
                         * @param {google.cloud.deploy.v1.IDefaultPool} message DefaultPool message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DefaultPool.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DefaultPool message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.DefaultPool
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.DefaultPool} DefaultPool
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DefaultPool.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.DefaultPool();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.artifactStorage = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DefaultPool message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.DefaultPool
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.DefaultPool} DefaultPool
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DefaultPool.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DefaultPool message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.DefaultPool
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DefaultPool.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            if (message.artifactStorage != null && message.hasOwnProperty("artifactStorage"))
                                if (!$util.isString(message.artifactStorage))
                                    return "artifactStorage: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DefaultPool message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.DefaultPool
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.DefaultPool} DefaultPool
                         */
                        DefaultPool.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.DefaultPool)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.DefaultPool();
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            if (object.artifactStorage != null)
                                message.artifactStorage = String(object.artifactStorage);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DefaultPool message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.DefaultPool
                         * @static
                         * @param {google.cloud.deploy.v1.DefaultPool} message DefaultPool
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DefaultPool.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.serviceAccount = "";
                                object.artifactStorage = "";
                            }
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            if (message.artifactStorage != null && message.hasOwnProperty("artifactStorage"))
                                object.artifactStorage = message.artifactStorage;
                            return object;
                        };
    
                        /**
                         * Converts this DefaultPool to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.DefaultPool
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DefaultPool.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DefaultPool
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.DefaultPool
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DefaultPool.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.DefaultPool";
                        };
    
                        return DefaultPool;
                    })();
    
                    v1.PrivatePool = (function() {
    
                        /**
                         * Properties of a PrivatePool.
                         * @memberof google.cloud.deploy.v1
                         * @interface IPrivatePool
                         * @property {string|null} [workerPool] PrivatePool workerPool
                         * @property {string|null} [serviceAccount] PrivatePool serviceAccount
                         * @property {string|null} [artifactStorage] PrivatePool artifactStorage
                         */
    
                        /**
                         * Constructs a new PrivatePool.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a PrivatePool.
                         * @implements IPrivatePool
                         * @constructor
                         * @param {google.cloud.deploy.v1.IPrivatePool=} [properties] Properties to set
                         */
                        function PrivatePool(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PrivatePool workerPool.
                         * @member {string} workerPool
                         * @memberof google.cloud.deploy.v1.PrivatePool
                         * @instance
                         */
                        PrivatePool.prototype.workerPool = "";
    
                        /**
                         * PrivatePool serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.cloud.deploy.v1.PrivatePool
                         * @instance
                         */
                        PrivatePool.prototype.serviceAccount = "";
    
                        /**
                         * PrivatePool artifactStorage.
                         * @member {string} artifactStorage
                         * @memberof google.cloud.deploy.v1.PrivatePool
                         * @instance
                         */
                        PrivatePool.prototype.artifactStorage = "";
    
                        /**
                         * Creates a new PrivatePool instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.PrivatePool
                         * @static
                         * @param {google.cloud.deploy.v1.IPrivatePool=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.PrivatePool} PrivatePool instance
                         */
                        PrivatePool.create = function create(properties) {
                            return new PrivatePool(properties);
                        };
    
                        /**
                         * Encodes the specified PrivatePool message. Does not implicitly {@link google.cloud.deploy.v1.PrivatePool.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.PrivatePool
                         * @static
                         * @param {google.cloud.deploy.v1.IPrivatePool} message PrivatePool message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivatePool.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.workerPool != null && Object.hasOwnProperty.call(message, "workerPool"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.workerPool);
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.serviceAccount);
                            if (message.artifactStorage != null && Object.hasOwnProperty.call(message, "artifactStorage"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.artifactStorage);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PrivatePool message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.PrivatePool.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.PrivatePool
                         * @static
                         * @param {google.cloud.deploy.v1.IPrivatePool} message PrivatePool message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivatePool.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PrivatePool message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.PrivatePool
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.PrivatePool} PrivatePool
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivatePool.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.PrivatePool();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.workerPool = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.artifactStorage = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PrivatePool message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.PrivatePool
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.PrivatePool} PrivatePool
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivatePool.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PrivatePool message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.PrivatePool
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PrivatePool.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.workerPool != null && message.hasOwnProperty("workerPool"))
                                if (!$util.isString(message.workerPool))
                                    return "workerPool: string expected";
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            if (message.artifactStorage != null && message.hasOwnProperty("artifactStorage"))
                                if (!$util.isString(message.artifactStorage))
                                    return "artifactStorage: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PrivatePool message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.PrivatePool
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.PrivatePool} PrivatePool
                         */
                        PrivatePool.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.PrivatePool)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.PrivatePool();
                            if (object.workerPool != null)
                                message.workerPool = String(object.workerPool);
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            if (object.artifactStorage != null)
                                message.artifactStorage = String(object.artifactStorage);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PrivatePool message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.PrivatePool
                         * @static
                         * @param {google.cloud.deploy.v1.PrivatePool} message PrivatePool
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PrivatePool.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.workerPool = "";
                                object.serviceAccount = "";
                                object.artifactStorage = "";
                            }
                            if (message.workerPool != null && message.hasOwnProperty("workerPool"))
                                object.workerPool = message.workerPool;
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            if (message.artifactStorage != null && message.hasOwnProperty("artifactStorage"))
                                object.artifactStorage = message.artifactStorage;
                            return object;
                        };
    
                        /**
                         * Converts this PrivatePool to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.PrivatePool
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PrivatePool.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PrivatePool
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.PrivatePool
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PrivatePool.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.PrivatePool";
                        };
    
                        return PrivatePool;
                    })();
    
                    v1.GkeCluster = (function() {
    
                        /**
                         * Properties of a GkeCluster.
                         * @memberof google.cloud.deploy.v1
                         * @interface IGkeCluster
                         * @property {string|null} [cluster] GkeCluster cluster
                         * @property {boolean|null} [internalIp] GkeCluster internalIp
                         */
    
                        /**
                         * Constructs a new GkeCluster.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a GkeCluster.
                         * @implements IGkeCluster
                         * @constructor
                         * @param {google.cloud.deploy.v1.IGkeCluster=} [properties] Properties to set
                         */
                        function GkeCluster(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GkeCluster cluster.
                         * @member {string} cluster
                         * @memberof google.cloud.deploy.v1.GkeCluster
                         * @instance
                         */
                        GkeCluster.prototype.cluster = "";
    
                        /**
                         * GkeCluster internalIp.
                         * @member {boolean} internalIp
                         * @memberof google.cloud.deploy.v1.GkeCluster
                         * @instance
                         */
                        GkeCluster.prototype.internalIp = false;
    
                        /**
                         * Creates a new GkeCluster instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.GkeCluster
                         * @static
                         * @param {google.cloud.deploy.v1.IGkeCluster=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.GkeCluster} GkeCluster instance
                         */
                        GkeCluster.create = function create(properties) {
                            return new GkeCluster(properties);
                        };
    
                        /**
                         * Encodes the specified GkeCluster message. Does not implicitly {@link google.cloud.deploy.v1.GkeCluster.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.GkeCluster
                         * @static
                         * @param {google.cloud.deploy.v1.IGkeCluster} message GkeCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GkeCluster.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.cluster != null && Object.hasOwnProperty.call(message, "cluster"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.cluster);
                            if (message.internalIp != null && Object.hasOwnProperty.call(message, "internalIp"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.internalIp);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GkeCluster message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.GkeCluster.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.GkeCluster
                         * @static
                         * @param {google.cloud.deploy.v1.IGkeCluster} message GkeCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GkeCluster.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GkeCluster message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.GkeCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.GkeCluster} GkeCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GkeCluster.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.GkeCluster();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.cluster = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.internalIp = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GkeCluster message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.GkeCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.GkeCluster} GkeCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GkeCluster.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GkeCluster message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.GkeCluster
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GkeCluster.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.cluster != null && message.hasOwnProperty("cluster"))
                                if (!$util.isString(message.cluster))
                                    return "cluster: string expected";
                            if (message.internalIp != null && message.hasOwnProperty("internalIp"))
                                if (typeof message.internalIp !== "boolean")
                                    return "internalIp: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a GkeCluster message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.GkeCluster
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.GkeCluster} GkeCluster
                         */
                        GkeCluster.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.GkeCluster)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.GkeCluster();
                            if (object.cluster != null)
                                message.cluster = String(object.cluster);
                            if (object.internalIp != null)
                                message.internalIp = Boolean(object.internalIp);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GkeCluster message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.GkeCluster
                         * @static
                         * @param {google.cloud.deploy.v1.GkeCluster} message GkeCluster
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GkeCluster.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.cluster = "";
                                object.internalIp = false;
                            }
                            if (message.cluster != null && message.hasOwnProperty("cluster"))
                                object.cluster = message.cluster;
                            if (message.internalIp != null && message.hasOwnProperty("internalIp"))
                                object.internalIp = message.internalIp;
                            return object;
                        };
    
                        /**
                         * Converts this GkeCluster to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.GkeCluster
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GkeCluster.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GkeCluster
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.GkeCluster
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GkeCluster.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.GkeCluster";
                        };
    
                        return GkeCluster;
                    })();
    
                    v1.AnthosCluster = (function() {
    
                        /**
                         * Properties of an AnthosCluster.
                         * @memberof google.cloud.deploy.v1
                         * @interface IAnthosCluster
                         * @property {string|null} [membership] AnthosCluster membership
                         */
    
                        /**
                         * Constructs a new AnthosCluster.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents an AnthosCluster.
                         * @implements IAnthosCluster
                         * @constructor
                         * @param {google.cloud.deploy.v1.IAnthosCluster=} [properties] Properties to set
                         */
                        function AnthosCluster(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AnthosCluster membership.
                         * @member {string} membership
                         * @memberof google.cloud.deploy.v1.AnthosCluster
                         * @instance
                         */
                        AnthosCluster.prototype.membership = "";
    
                        /**
                         * Creates a new AnthosCluster instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.AnthosCluster
                         * @static
                         * @param {google.cloud.deploy.v1.IAnthosCluster=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.AnthosCluster} AnthosCluster instance
                         */
                        AnthosCluster.create = function create(properties) {
                            return new AnthosCluster(properties);
                        };
    
                        /**
                         * Encodes the specified AnthosCluster message. Does not implicitly {@link google.cloud.deploy.v1.AnthosCluster.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.AnthosCluster
                         * @static
                         * @param {google.cloud.deploy.v1.IAnthosCluster} message AnthosCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AnthosCluster.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.membership != null && Object.hasOwnProperty.call(message, "membership"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.membership);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AnthosCluster message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.AnthosCluster.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.AnthosCluster
                         * @static
                         * @param {google.cloud.deploy.v1.IAnthosCluster} message AnthosCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AnthosCluster.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AnthosCluster message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.AnthosCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.AnthosCluster} AnthosCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AnthosCluster.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.AnthosCluster();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.membership = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AnthosCluster message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.AnthosCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.AnthosCluster} AnthosCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AnthosCluster.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AnthosCluster message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.AnthosCluster
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AnthosCluster.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.membership != null && message.hasOwnProperty("membership"))
                                if (!$util.isString(message.membership))
                                    return "membership: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AnthosCluster message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.AnthosCluster
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.AnthosCluster} AnthosCluster
                         */
                        AnthosCluster.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.AnthosCluster)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.AnthosCluster();
                            if (object.membership != null)
                                message.membership = String(object.membership);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AnthosCluster message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.AnthosCluster
                         * @static
                         * @param {google.cloud.deploy.v1.AnthosCluster} message AnthosCluster
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AnthosCluster.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.membership = "";
                            if (message.membership != null && message.hasOwnProperty("membership"))
                                object.membership = message.membership;
                            return object;
                        };
    
                        /**
                         * Converts this AnthosCluster to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.AnthosCluster
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AnthosCluster.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AnthosCluster
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.AnthosCluster
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AnthosCluster.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.AnthosCluster";
                        };
    
                        return AnthosCluster;
                    })();
    
                    v1.CloudRunLocation = (function() {
    
                        /**
                         * Properties of a CloudRunLocation.
                         * @memberof google.cloud.deploy.v1
                         * @interface ICloudRunLocation
                         * @property {string|null} [location] CloudRunLocation location
                         */
    
                        /**
                         * Constructs a new CloudRunLocation.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a CloudRunLocation.
                         * @implements ICloudRunLocation
                         * @constructor
                         * @param {google.cloud.deploy.v1.ICloudRunLocation=} [properties] Properties to set
                         */
                        function CloudRunLocation(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CloudRunLocation location.
                         * @member {string} location
                         * @memberof google.cloud.deploy.v1.CloudRunLocation
                         * @instance
                         */
                        CloudRunLocation.prototype.location = "";
    
                        /**
                         * Creates a new CloudRunLocation instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.CloudRunLocation
                         * @static
                         * @param {google.cloud.deploy.v1.ICloudRunLocation=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.CloudRunLocation} CloudRunLocation instance
                         */
                        CloudRunLocation.create = function create(properties) {
                            return new CloudRunLocation(properties);
                        };
    
                        /**
                         * Encodes the specified CloudRunLocation message. Does not implicitly {@link google.cloud.deploy.v1.CloudRunLocation.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.CloudRunLocation
                         * @static
                         * @param {google.cloud.deploy.v1.ICloudRunLocation} message CloudRunLocation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudRunLocation.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.location);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CloudRunLocation message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.CloudRunLocation.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.CloudRunLocation
                         * @static
                         * @param {google.cloud.deploy.v1.ICloudRunLocation} message CloudRunLocation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudRunLocation.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CloudRunLocation message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.CloudRunLocation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.CloudRunLocation} CloudRunLocation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudRunLocation.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.CloudRunLocation();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.location = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CloudRunLocation message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.CloudRunLocation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.CloudRunLocation} CloudRunLocation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudRunLocation.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CloudRunLocation message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.CloudRunLocation
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CloudRunLocation.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.location != null && message.hasOwnProperty("location"))
                                if (!$util.isString(message.location))
                                    return "location: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CloudRunLocation message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.CloudRunLocation
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.CloudRunLocation} CloudRunLocation
                         */
                        CloudRunLocation.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.CloudRunLocation)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.CloudRunLocation();
                            if (object.location != null)
                                message.location = String(object.location);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CloudRunLocation message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.CloudRunLocation
                         * @static
                         * @param {google.cloud.deploy.v1.CloudRunLocation} message CloudRunLocation
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CloudRunLocation.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.location = "";
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = message.location;
                            return object;
                        };
    
                        /**
                         * Converts this CloudRunLocation to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.CloudRunLocation
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CloudRunLocation.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CloudRunLocation
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.CloudRunLocation
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CloudRunLocation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.CloudRunLocation";
                        };
    
                        return CloudRunLocation;
                    })();
    
                    v1.MultiTarget = (function() {
    
                        /**
                         * Properties of a MultiTarget.
                         * @memberof google.cloud.deploy.v1
                         * @interface IMultiTarget
                         * @property {Array.<string>|null} [targetIds] MultiTarget targetIds
                         */
    
                        /**
                         * Constructs a new MultiTarget.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a MultiTarget.
                         * @implements IMultiTarget
                         * @constructor
                         * @param {google.cloud.deploy.v1.IMultiTarget=} [properties] Properties to set
                         */
                        function MultiTarget(properties) {
                            this.targetIds = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MultiTarget targetIds.
                         * @member {Array.<string>} targetIds
                         * @memberof google.cloud.deploy.v1.MultiTarget
                         * @instance
                         */
                        MultiTarget.prototype.targetIds = $util.emptyArray;
    
                        /**
                         * Creates a new MultiTarget instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.MultiTarget
                         * @static
                         * @param {google.cloud.deploy.v1.IMultiTarget=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.MultiTarget} MultiTarget instance
                         */
                        MultiTarget.create = function create(properties) {
                            return new MultiTarget(properties);
                        };
    
                        /**
                         * Encodes the specified MultiTarget message. Does not implicitly {@link google.cloud.deploy.v1.MultiTarget.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.MultiTarget
                         * @static
                         * @param {google.cloud.deploy.v1.IMultiTarget} message MultiTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MultiTarget.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.targetIds != null && message.targetIds.length)
                                for (var i = 0; i < message.targetIds.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.targetIds[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MultiTarget message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.MultiTarget.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.MultiTarget
                         * @static
                         * @param {google.cloud.deploy.v1.IMultiTarget} message MultiTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MultiTarget.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MultiTarget message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.MultiTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.MultiTarget} MultiTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MultiTarget.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.MultiTarget();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.targetIds && message.targetIds.length))
                                            message.targetIds = [];
                                        message.targetIds.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MultiTarget message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.MultiTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.MultiTarget} MultiTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MultiTarget.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MultiTarget message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.MultiTarget
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MultiTarget.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.targetIds != null && message.hasOwnProperty("targetIds")) {
                                if (!Array.isArray(message.targetIds))
                                    return "targetIds: array expected";
                                for (var i = 0; i < message.targetIds.length; ++i)
                                    if (!$util.isString(message.targetIds[i]))
                                        return "targetIds: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MultiTarget message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.MultiTarget
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.MultiTarget} MultiTarget
                         */
                        MultiTarget.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.MultiTarget)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.MultiTarget();
                            if (object.targetIds) {
                                if (!Array.isArray(object.targetIds))
                                    throw TypeError(".google.cloud.deploy.v1.MultiTarget.targetIds: array expected");
                                message.targetIds = [];
                                for (var i = 0; i < object.targetIds.length; ++i)
                                    message.targetIds[i] = String(object.targetIds[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MultiTarget message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.MultiTarget
                         * @static
                         * @param {google.cloud.deploy.v1.MultiTarget} message MultiTarget
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MultiTarget.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.targetIds = [];
                            if (message.targetIds && message.targetIds.length) {
                                object.targetIds = [];
                                for (var j = 0; j < message.targetIds.length; ++j)
                                    object.targetIds[j] = message.targetIds[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MultiTarget to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.MultiTarget
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MultiTarget.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MultiTarget
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.MultiTarget
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MultiTarget.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.MultiTarget";
                        };
    
                        return MultiTarget;
                    })();
    
                    v1.ListTargetsRequest = (function() {
    
                        /**
                         * Properties of a ListTargetsRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IListTargetsRequest
                         * @property {string|null} [parent] ListTargetsRequest parent
                         * @property {number|null} [pageSize] ListTargetsRequest pageSize
                         * @property {string|null} [pageToken] ListTargetsRequest pageToken
                         * @property {string|null} [filter] ListTargetsRequest filter
                         * @property {string|null} [orderBy] ListTargetsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListTargetsRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a ListTargetsRequest.
                         * @implements IListTargetsRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IListTargetsRequest=} [properties] Properties to set
                         */
                        function ListTargetsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTargetsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.deploy.v1.ListTargetsRequest
                         * @instance
                         */
                        ListTargetsRequest.prototype.parent = "";
    
                        /**
                         * ListTargetsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.deploy.v1.ListTargetsRequest
                         * @instance
                         */
                        ListTargetsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListTargetsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.deploy.v1.ListTargetsRequest
                         * @instance
                         */
                        ListTargetsRequest.prototype.pageToken = "";
    
                        /**
                         * ListTargetsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.deploy.v1.ListTargetsRequest
                         * @instance
                         */
                        ListTargetsRequest.prototype.filter = "";
    
                        /**
                         * ListTargetsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.deploy.v1.ListTargetsRequest
                         * @instance
                         */
                        ListTargetsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListTargetsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ListTargetsRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IListTargetsRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ListTargetsRequest} ListTargetsRequest instance
                         */
                        ListTargetsRequest.create = function create(properties) {
                            return new ListTargetsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListTargetsRequest message. Does not implicitly {@link google.cloud.deploy.v1.ListTargetsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ListTargetsRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IListTargetsRequest} message ListTargetsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTargetsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTargetsRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ListTargetsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ListTargetsRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IListTargetsRequest} message ListTargetsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTargetsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTargetsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ListTargetsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ListTargetsRequest} ListTargetsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTargetsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ListTargetsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTargetsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ListTargetsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ListTargetsRequest} ListTargetsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTargetsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTargetsRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ListTargetsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTargetsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListTargetsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ListTargetsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ListTargetsRequest} ListTargetsRequest
                         */
                        ListTargetsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ListTargetsRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.ListTargetsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTargetsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ListTargetsRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ListTargetsRequest} message ListTargetsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTargetsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListTargetsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ListTargetsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTargetsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTargetsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ListTargetsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTargetsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ListTargetsRequest";
                        };
    
                        return ListTargetsRequest;
                    })();
    
                    v1.ListTargetsResponse = (function() {
    
                        /**
                         * Properties of a ListTargetsResponse.
                         * @memberof google.cloud.deploy.v1
                         * @interface IListTargetsResponse
                         * @property {Array.<google.cloud.deploy.v1.ITarget>|null} [targets] ListTargetsResponse targets
                         * @property {string|null} [nextPageToken] ListTargetsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListTargetsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListTargetsResponse.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a ListTargetsResponse.
                         * @implements IListTargetsResponse
                         * @constructor
                         * @param {google.cloud.deploy.v1.IListTargetsResponse=} [properties] Properties to set
                         */
                        function ListTargetsResponse(properties) {
                            this.targets = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListTargetsResponse targets.
                         * @member {Array.<google.cloud.deploy.v1.ITarget>} targets
                         * @memberof google.cloud.deploy.v1.ListTargetsResponse
                         * @instance
                         */
                        ListTargetsResponse.prototype.targets = $util.emptyArray;
    
                        /**
                         * ListTargetsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.deploy.v1.ListTargetsResponse
                         * @instance
                         */
                        ListTargetsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListTargetsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.deploy.v1.ListTargetsResponse
                         * @instance
                         */
                        ListTargetsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListTargetsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ListTargetsResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IListTargetsResponse=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ListTargetsResponse} ListTargetsResponse instance
                         */
                        ListTargetsResponse.create = function create(properties) {
                            return new ListTargetsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListTargetsResponse message. Does not implicitly {@link google.cloud.deploy.v1.ListTargetsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ListTargetsResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IListTargetsResponse} message ListTargetsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTargetsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.targets != null && message.targets.length)
                                for (var i = 0; i < message.targets.length; ++i)
                                    $root.google.cloud.deploy.v1.Target.encode(message.targets[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListTargetsResponse message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ListTargetsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ListTargetsResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IListTargetsResponse} message ListTargetsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListTargetsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListTargetsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ListTargetsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ListTargetsResponse} ListTargetsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTargetsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ListTargetsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.targets && message.targets.length))
                                            message.targets = [];
                                        message.targets.push($root.google.cloud.deploy.v1.Target.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListTargetsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ListTargetsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ListTargetsResponse} ListTargetsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListTargetsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListTargetsResponse message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ListTargetsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListTargetsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.targets != null && message.hasOwnProperty("targets")) {
                                if (!Array.isArray(message.targets))
                                    return "targets: array expected";
                                for (var i = 0; i < message.targets.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.Target.verify(message.targets[i]);
                                    if (error)
                                        return "targets." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListTargetsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ListTargetsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ListTargetsResponse} ListTargetsResponse
                         */
                        ListTargetsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ListTargetsResponse)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.ListTargetsResponse();
                            if (object.targets) {
                                if (!Array.isArray(object.targets))
                                    throw TypeError(".google.cloud.deploy.v1.ListTargetsResponse.targets: array expected");
                                message.targets = [];
                                for (var i = 0; i < object.targets.length; ++i) {
                                    if (typeof object.targets[i] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.ListTargetsResponse.targets: object expected");
                                    message.targets[i] = $root.google.cloud.deploy.v1.Target.fromObject(object.targets[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.deploy.v1.ListTargetsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListTargetsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ListTargetsResponse
                         * @static
                         * @param {google.cloud.deploy.v1.ListTargetsResponse} message ListTargetsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListTargetsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.targets = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.targets && message.targets.length) {
                                object.targets = [];
                                for (var j = 0; j < message.targets.length; ++j)
                                    object.targets[j] = $root.google.cloud.deploy.v1.Target.toObject(message.targets[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListTargetsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ListTargetsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListTargetsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListTargetsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ListTargetsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListTargetsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ListTargetsResponse";
                        };
    
                        return ListTargetsResponse;
                    })();
    
                    v1.GetTargetRequest = (function() {
    
                        /**
                         * Properties of a GetTargetRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IGetTargetRequest
                         * @property {string|null} [name] GetTargetRequest name
                         */
    
                        /**
                         * Constructs a new GetTargetRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a GetTargetRequest.
                         * @implements IGetTargetRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IGetTargetRequest=} [properties] Properties to set
                         */
                        function GetTargetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetTargetRequest name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.GetTargetRequest
                         * @instance
                         */
                        GetTargetRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetTargetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.GetTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetTargetRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.GetTargetRequest} GetTargetRequest instance
                         */
                        GetTargetRequest.create = function create(properties) {
                            return new GetTargetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetTargetRequest message. Does not implicitly {@link google.cloud.deploy.v1.GetTargetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.GetTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetTargetRequest} message GetTargetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTargetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetTargetRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.GetTargetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.GetTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetTargetRequest} message GetTargetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetTargetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetTargetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.GetTargetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.GetTargetRequest} GetTargetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTargetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.GetTargetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetTargetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.GetTargetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.GetTargetRequest} GetTargetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetTargetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetTargetRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.GetTargetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetTargetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetTargetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.GetTargetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.GetTargetRequest} GetTargetRequest
                         */
                        GetTargetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.GetTargetRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.GetTargetRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetTargetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.GetTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.GetTargetRequest} message GetTargetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetTargetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetTargetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.GetTargetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetTargetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetTargetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.GetTargetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetTargetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.GetTargetRequest";
                        };
    
                        return GetTargetRequest;
                    })();
    
                    v1.CreateTargetRequest = (function() {
    
                        /**
                         * Properties of a CreateTargetRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface ICreateTargetRequest
                         * @property {string|null} [parent] CreateTargetRequest parent
                         * @property {string|null} [targetId] CreateTargetRequest targetId
                         * @property {google.cloud.deploy.v1.ITarget|null} [target] CreateTargetRequest target
                         * @property {string|null} [requestId] CreateTargetRequest requestId
                         * @property {boolean|null} [validateOnly] CreateTargetRequest validateOnly
                         */
    
                        /**
                         * Constructs a new CreateTargetRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a CreateTargetRequest.
                         * @implements ICreateTargetRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.ICreateTargetRequest=} [properties] Properties to set
                         */
                        function CreateTargetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateTargetRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.deploy.v1.CreateTargetRequest
                         * @instance
                         */
                        CreateTargetRequest.prototype.parent = "";
    
                        /**
                         * CreateTargetRequest targetId.
                         * @member {string} targetId
                         * @memberof google.cloud.deploy.v1.CreateTargetRequest
                         * @instance
                         */
                        CreateTargetRequest.prototype.targetId = "";
    
                        /**
                         * CreateTargetRequest target.
                         * @member {google.cloud.deploy.v1.ITarget|null|undefined} target
                         * @memberof google.cloud.deploy.v1.CreateTargetRequest
                         * @instance
                         */
                        CreateTargetRequest.prototype.target = null;
    
                        /**
                         * CreateTargetRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.deploy.v1.CreateTargetRequest
                         * @instance
                         */
                        CreateTargetRequest.prototype.requestId = "";
    
                        /**
                         * CreateTargetRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.deploy.v1.CreateTargetRequest
                         * @instance
                         */
                        CreateTargetRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new CreateTargetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.CreateTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateTargetRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.CreateTargetRequest} CreateTargetRequest instance
                         */
                        CreateTargetRequest.create = function create(properties) {
                            return new CreateTargetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateTargetRequest message. Does not implicitly {@link google.cloud.deploy.v1.CreateTargetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.CreateTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateTargetRequest} message CreateTargetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTargetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.targetId != null && Object.hasOwnProperty.call(message, "targetId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.targetId);
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                $root.google.cloud.deploy.v1.Target.encode(message.target, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateTargetRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.CreateTargetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.CreateTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateTargetRequest} message CreateTargetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateTargetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateTargetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.CreateTargetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.CreateTargetRequest} CreateTargetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTargetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.CreateTargetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.targetId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.target = $root.google.cloud.deploy.v1.Target.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateTargetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.CreateTargetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.CreateTargetRequest} CreateTargetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateTargetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateTargetRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.CreateTargetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateTargetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.targetId != null && message.hasOwnProperty("targetId"))
                                if (!$util.isString(message.targetId))
                                    return "targetId: string expected";
                            if (message.target != null && message.hasOwnProperty("target")) {
                                var error = $root.google.cloud.deploy.v1.Target.verify(message.target);
                                if (error)
                                    return "target." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateTargetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.CreateTargetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.CreateTargetRequest} CreateTargetRequest
                         */
                        CreateTargetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.CreateTargetRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.CreateTargetRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.targetId != null)
                                message.targetId = String(object.targetId);
                            if (object.target != null) {
                                if (typeof object.target !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.CreateTargetRequest.target: object expected");
                                message.target = $root.google.cloud.deploy.v1.Target.fromObject(object.target);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateTargetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.CreateTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.CreateTargetRequest} message CreateTargetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateTargetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.targetId = "";
                                object.target = null;
                                object.requestId = "";
                                object.validateOnly = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.targetId != null && message.hasOwnProperty("targetId"))
                                object.targetId = message.targetId;
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = $root.google.cloud.deploy.v1.Target.toObject(message.target, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this CreateTargetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.CreateTargetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateTargetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateTargetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.CreateTargetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateTargetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.CreateTargetRequest";
                        };
    
                        return CreateTargetRequest;
                    })();
    
                    v1.UpdateTargetRequest = (function() {
    
                        /**
                         * Properties of an UpdateTargetRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IUpdateTargetRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateTargetRequest updateMask
                         * @property {google.cloud.deploy.v1.ITarget|null} [target] UpdateTargetRequest target
                         * @property {string|null} [requestId] UpdateTargetRequest requestId
                         * @property {boolean|null} [allowMissing] UpdateTargetRequest allowMissing
                         * @property {boolean|null} [validateOnly] UpdateTargetRequest validateOnly
                         */
    
                        /**
                         * Constructs a new UpdateTargetRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents an UpdateTargetRequest.
                         * @implements IUpdateTargetRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IUpdateTargetRequest=} [properties] Properties to set
                         */
                        function UpdateTargetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateTargetRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.deploy.v1.UpdateTargetRequest
                         * @instance
                         */
                        UpdateTargetRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateTargetRequest target.
                         * @member {google.cloud.deploy.v1.ITarget|null|undefined} target
                         * @memberof google.cloud.deploy.v1.UpdateTargetRequest
                         * @instance
                         */
                        UpdateTargetRequest.prototype.target = null;
    
                        /**
                         * UpdateTargetRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.deploy.v1.UpdateTargetRequest
                         * @instance
                         */
                        UpdateTargetRequest.prototype.requestId = "";
    
                        /**
                         * UpdateTargetRequest allowMissing.
                         * @member {boolean} allowMissing
                         * @memberof google.cloud.deploy.v1.UpdateTargetRequest
                         * @instance
                         */
                        UpdateTargetRequest.prototype.allowMissing = false;
    
                        /**
                         * UpdateTargetRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.deploy.v1.UpdateTargetRequest
                         * @instance
                         */
                        UpdateTargetRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new UpdateTargetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.UpdateTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IUpdateTargetRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.UpdateTargetRequest} UpdateTargetRequest instance
                         */
                        UpdateTargetRequest.create = function create(properties) {
                            return new UpdateTargetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateTargetRequest message. Does not implicitly {@link google.cloud.deploy.v1.UpdateTargetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.UpdateTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IUpdateTargetRequest} message UpdateTargetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateTargetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                $root.google.cloud.deploy.v1.Target.encode(message.target, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            if (message.allowMissing != null && Object.hasOwnProperty.call(message, "allowMissing"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.allowMissing);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateTargetRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.UpdateTargetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.UpdateTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IUpdateTargetRequest} message UpdateTargetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateTargetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateTargetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.UpdateTargetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.UpdateTargetRequest} UpdateTargetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateTargetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.UpdateTargetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.target = $root.google.cloud.deploy.v1.Target.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.allowMissing = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateTargetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.UpdateTargetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.UpdateTargetRequest} UpdateTargetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateTargetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateTargetRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.UpdateTargetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateTargetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target")) {
                                var error = $root.google.cloud.deploy.v1.Target.verify(message.target);
                                if (error)
                                    return "target." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                if (typeof message.allowMissing !== "boolean")
                                    return "allowMissing: boolean expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateTargetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.UpdateTargetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.UpdateTargetRequest} UpdateTargetRequest
                         */
                        UpdateTargetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.UpdateTargetRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.UpdateTargetRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.UpdateTargetRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.target != null) {
                                if (typeof object.target !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.UpdateTargetRequest.target: object expected");
                                message.target = $root.google.cloud.deploy.v1.Target.fromObject(object.target);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.allowMissing != null)
                                message.allowMissing = Boolean(object.allowMissing);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateTargetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.UpdateTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.UpdateTargetRequest} message UpdateTargetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateTargetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.target = null;
                                object.requestId = "";
                                object.allowMissing = false;
                                object.validateOnly = false;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = $root.google.cloud.deploy.v1.Target.toObject(message.target, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                object.allowMissing = message.allowMissing;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateTargetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.UpdateTargetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateTargetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateTargetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.UpdateTargetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateTargetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.UpdateTargetRequest";
                        };
    
                        return UpdateTargetRequest;
                    })();
    
                    v1.DeleteTargetRequest = (function() {
    
                        /**
                         * Properties of a DeleteTargetRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IDeleteTargetRequest
                         * @property {string|null} [name] DeleteTargetRequest name
                         * @property {string|null} [requestId] DeleteTargetRequest requestId
                         * @property {boolean|null} [allowMissing] DeleteTargetRequest allowMissing
                         * @property {boolean|null} [validateOnly] DeleteTargetRequest validateOnly
                         * @property {string|null} [etag] DeleteTargetRequest etag
                         */
    
                        /**
                         * Constructs a new DeleteTargetRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a DeleteTargetRequest.
                         * @implements IDeleteTargetRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IDeleteTargetRequest=} [properties] Properties to set
                         */
                        function DeleteTargetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteTargetRequest name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.DeleteTargetRequest
                         * @instance
                         */
                        DeleteTargetRequest.prototype.name = "";
    
                        /**
                         * DeleteTargetRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.deploy.v1.DeleteTargetRequest
                         * @instance
                         */
                        DeleteTargetRequest.prototype.requestId = "";
    
                        /**
                         * DeleteTargetRequest allowMissing.
                         * @member {boolean} allowMissing
                         * @memberof google.cloud.deploy.v1.DeleteTargetRequest
                         * @instance
                         */
                        DeleteTargetRequest.prototype.allowMissing = false;
    
                        /**
                         * DeleteTargetRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.deploy.v1.DeleteTargetRequest
                         * @instance
                         */
                        DeleteTargetRequest.prototype.validateOnly = false;
    
                        /**
                         * DeleteTargetRequest etag.
                         * @member {string} etag
                         * @memberof google.cloud.deploy.v1.DeleteTargetRequest
                         * @instance
                         */
                        DeleteTargetRequest.prototype.etag = "";
    
                        /**
                         * Creates a new DeleteTargetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.DeleteTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IDeleteTargetRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.DeleteTargetRequest} DeleteTargetRequest instance
                         */
                        DeleteTargetRequest.create = function create(properties) {
                            return new DeleteTargetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteTargetRequest message. Does not implicitly {@link google.cloud.deploy.v1.DeleteTargetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.DeleteTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IDeleteTargetRequest} message DeleteTargetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTargetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            if (message.allowMissing != null && Object.hasOwnProperty.call(message, "allowMissing"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.allowMissing);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteTargetRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.DeleteTargetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.DeleteTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IDeleteTargetRequest} message DeleteTargetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteTargetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteTargetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.DeleteTargetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.DeleteTargetRequest} DeleteTargetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTargetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.DeleteTargetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.allowMissing = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteTargetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.DeleteTargetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.DeleteTargetRequest} DeleteTargetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteTargetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteTargetRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.DeleteTargetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteTargetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                if (typeof message.allowMissing !== "boolean")
                                    return "allowMissing: boolean expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteTargetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.DeleteTargetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.DeleteTargetRequest} DeleteTargetRequest
                         */
                        DeleteTargetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.DeleteTargetRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.DeleteTargetRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.allowMissing != null)
                                message.allowMissing = Boolean(object.allowMissing);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteTargetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.DeleteTargetRequest
                         * @static
                         * @param {google.cloud.deploy.v1.DeleteTargetRequest} message DeleteTargetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteTargetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                                object.allowMissing = false;
                                object.validateOnly = false;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.allowMissing != null && message.hasOwnProperty("allowMissing"))
                                object.allowMissing = message.allowMissing;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteTargetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.DeleteTargetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteTargetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteTargetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.DeleteTargetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteTargetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.DeleteTargetRequest";
                        };
    
                        return DeleteTargetRequest;
                    })();
    
                    v1.Release = (function() {
    
                        /**
                         * Properties of a Release.
                         * @memberof google.cloud.deploy.v1
                         * @interface IRelease
                         * @property {string|null} [name] Release name
                         * @property {string|null} [uid] Release uid
                         * @property {string|null} [description] Release description
                         * @property {Object.<string,string>|null} [annotations] Release annotations
                         * @property {Object.<string,string>|null} [labels] Release labels
                         * @property {boolean|null} [abandoned] Release abandoned
                         * @property {google.protobuf.ITimestamp|null} [createTime] Release createTime
                         * @property {google.protobuf.ITimestamp|null} [renderStartTime] Release renderStartTime
                         * @property {google.protobuf.ITimestamp|null} [renderEndTime] Release renderEndTime
                         * @property {string|null} [skaffoldConfigUri] Release skaffoldConfigUri
                         * @property {string|null} [skaffoldConfigPath] Release skaffoldConfigPath
                         * @property {Array.<google.cloud.deploy.v1.IBuildArtifact>|null} [buildArtifacts] Release buildArtifacts
                         * @property {google.cloud.deploy.v1.IDeliveryPipeline|null} [deliveryPipelineSnapshot] Release deliveryPipelineSnapshot
                         * @property {Array.<google.cloud.deploy.v1.ITarget>|null} [targetSnapshots] Release targetSnapshots
                         * @property {google.cloud.deploy.v1.Release.RenderState|null} [renderState] Release renderState
                         * @property {string|null} [etag] Release etag
                         * @property {string|null} [skaffoldVersion] Release skaffoldVersion
                         * @property {Object.<string,google.cloud.deploy.v1.ITargetArtifact>|null} [targetArtifacts] Release targetArtifacts
                         * @property {Object.<string,google.cloud.deploy.v1.Release.ITargetRender>|null} [targetRenders] Release targetRenders
                         * @property {google.cloud.deploy.v1.Release.IReleaseCondition|null} [condition] Release condition
                         * @property {Object.<string,string>|null} [deployParameters] Release deployParameters
                         */
    
                        /**
                         * Constructs a new Release.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a Release.
                         * @implements IRelease
                         * @constructor
                         * @param {google.cloud.deploy.v1.IRelease=} [properties] Properties to set
                         */
                        function Release(properties) {
                            this.annotations = {};
                            this.labels = {};
                            this.buildArtifacts = [];
                            this.targetSnapshots = [];
                            this.targetArtifacts = {};
                            this.targetRenders = {};
                            this.deployParameters = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Release name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.name = "";
    
                        /**
                         * Release uid.
                         * @member {string} uid
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.uid = "";
    
                        /**
                         * Release description.
                         * @member {string} description
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.description = "";
    
                        /**
                         * Release annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.annotations = $util.emptyObject;
    
                        /**
                         * Release labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.labels = $util.emptyObject;
    
                        /**
                         * Release abandoned.
                         * @member {boolean} abandoned
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.abandoned = false;
    
                        /**
                         * Release createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.createTime = null;
    
                        /**
                         * Release renderStartTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} renderStartTime
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.renderStartTime = null;
    
                        /**
                         * Release renderEndTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} renderEndTime
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.renderEndTime = null;
    
                        /**
                         * Release skaffoldConfigUri.
                         * @member {string} skaffoldConfigUri
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.skaffoldConfigUri = "";
    
                        /**
                         * Release skaffoldConfigPath.
                         * @member {string} skaffoldConfigPath
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.skaffoldConfigPath = "";
    
                        /**
                         * Release buildArtifacts.
                         * @member {Array.<google.cloud.deploy.v1.IBuildArtifact>} buildArtifacts
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.buildArtifacts = $util.emptyArray;
    
                        /**
                         * Release deliveryPipelineSnapshot.
                         * @member {google.cloud.deploy.v1.IDeliveryPipeline|null|undefined} deliveryPipelineSnapshot
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.deliveryPipelineSnapshot = null;
    
                        /**
                         * Release targetSnapshots.
                         * @member {Array.<google.cloud.deploy.v1.ITarget>} targetSnapshots
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.targetSnapshots = $util.emptyArray;
    
                        /**
                         * Release renderState.
                         * @member {google.cloud.deploy.v1.Release.RenderState} renderState
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.renderState = 0;
    
                        /**
                         * Release etag.
                         * @member {string} etag
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.etag = "";
    
                        /**
                         * Release skaffoldVersion.
                         * @member {string} skaffoldVersion
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.skaffoldVersion = "";
    
                        /**
                         * Release targetArtifacts.
                         * @member {Object.<string,google.cloud.deploy.v1.ITargetArtifact>} targetArtifacts
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.targetArtifacts = $util.emptyObject;
    
                        /**
                         * Release targetRenders.
                         * @member {Object.<string,google.cloud.deploy.v1.Release.ITargetRender>} targetRenders
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.targetRenders = $util.emptyObject;
    
                        /**
                         * Release condition.
                         * @member {google.cloud.deploy.v1.Release.IReleaseCondition|null|undefined} condition
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.condition = null;
    
                        /**
                         * Release deployParameters.
                         * @member {Object.<string,string>} deployParameters
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         */
                        Release.prototype.deployParameters = $util.emptyObject;
    
                        /**
                         * Creates a new Release instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.Release
                         * @static
                         * @param {google.cloud.deploy.v1.IRelease=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.Release} Release instance
                         */
                        Release.create = function create(properties) {
                            return new Release(properties);
                        };
    
                        /**
                         * Encodes the specified Release message. Does not implicitly {@link google.cloud.deploy.v1.Release.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.Release
                         * @static
                         * @param {google.cloud.deploy.v1.IRelease} message Release message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Release.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uid);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.renderStartTime != null && Object.hasOwnProperty.call(message, "renderStartTime"))
                                $root.google.protobuf.Timestamp.encode(message.renderStartTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.renderEndTime != null && Object.hasOwnProperty.call(message, "renderEndTime"))
                                $root.google.protobuf.Timestamp.encode(message.renderEndTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.skaffoldConfigPath != null && Object.hasOwnProperty.call(message, "skaffoldConfigPath"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.skaffoldConfigPath);
                            if (message.buildArtifacts != null && message.buildArtifacts.length)
                                for (var i = 0; i < message.buildArtifacts.length; ++i)
                                    $root.google.cloud.deploy.v1.BuildArtifact.encode(message.buildArtifacts[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.deliveryPipelineSnapshot != null && Object.hasOwnProperty.call(message, "deliveryPipelineSnapshot"))
                                $root.google.cloud.deploy.v1.DeliveryPipeline.encode(message.deliveryPipelineSnapshot, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.targetSnapshots != null && message.targetSnapshots.length)
                                for (var i = 0; i < message.targetSnapshots.length; ++i)
                                    $root.google.cloud.deploy.v1.Target.encode(message.targetSnapshots[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.renderState != null && Object.hasOwnProperty.call(message, "renderState"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.renderState);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.etag);
                            if (message.skaffoldConfigUri != null && Object.hasOwnProperty.call(message, "skaffoldConfigUri"))
                                writer.uint32(/* id 17, wireType 2 =*/138).string(message.skaffoldConfigUri);
                            if (message.skaffoldVersion != null && Object.hasOwnProperty.call(message, "skaffoldVersion"))
                                writer.uint32(/* id 19, wireType 2 =*/154).string(message.skaffoldVersion);
                            if (message.targetArtifacts != null && Object.hasOwnProperty.call(message, "targetArtifacts"))
                                for (var keys = Object.keys(message.targetArtifacts), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 20, wireType 2 =*/162).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.deploy.v1.TargetArtifact.encode(message.targetArtifacts[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.targetRenders != null && Object.hasOwnProperty.call(message, "targetRenders"))
                                for (var keys = Object.keys(message.targetRenders), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 22, wireType 2 =*/178).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.deploy.v1.Release.TargetRender.encode(message.targetRenders[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.abandoned != null && Object.hasOwnProperty.call(message, "abandoned"))
                                writer.uint32(/* id 23, wireType 0 =*/184).bool(message.abandoned);
                            if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                                $root.google.cloud.deploy.v1.Release.ReleaseCondition.encode(message.condition, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                            if (message.deployParameters != null && Object.hasOwnProperty.call(message, "deployParameters"))
                                for (var keys = Object.keys(message.deployParameters), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 25, wireType 2 =*/202).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.deployParameters[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Release message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Release.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.Release
                         * @static
                         * @param {google.cloud.deploy.v1.IRelease} message Release message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Release.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Release message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.Release
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.Release} Release
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Release.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Release(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 5: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 23: {
                                        message.abandoned = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.renderStartTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.renderEndTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 17: {
                                        message.skaffoldConfigUri = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.skaffoldConfigPath = reader.string();
                                        break;
                                    }
                                case 10: {
                                        if (!(message.buildArtifacts && message.buildArtifacts.length))
                                            message.buildArtifacts = [];
                                        message.buildArtifacts.push($root.google.cloud.deploy.v1.BuildArtifact.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 11: {
                                        message.deliveryPipelineSnapshot = $root.google.cloud.deploy.v1.DeliveryPipeline.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        if (!(message.targetSnapshots && message.targetSnapshots.length))
                                            message.targetSnapshots = [];
                                        message.targetSnapshots.push($root.google.cloud.deploy.v1.Target.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 13: {
                                        message.renderState = reader.int32();
                                        break;
                                    }
                                case 16: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                case 19: {
                                        message.skaffoldVersion = reader.string();
                                        break;
                                    }
                                case 20: {
                                        if (message.targetArtifacts === $util.emptyObject)
                                            message.targetArtifacts = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.deploy.v1.TargetArtifact.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.targetArtifacts[key] = value;
                                        break;
                                    }
                                case 22: {
                                        if (message.targetRenders === $util.emptyObject)
                                            message.targetRenders = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.deploy.v1.Release.TargetRender.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.targetRenders[key] = value;
                                        break;
                                    }
                                case 24: {
                                        message.condition = $root.google.cloud.deploy.v1.Release.ReleaseCondition.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 25: {
                                        if (message.deployParameters === $util.emptyObject)
                                            message.deployParameters = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.deployParameters[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Release message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.Release
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.Release} Release
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Release.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Release message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.Release
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Release.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.abandoned != null && message.hasOwnProperty("abandoned"))
                                if (typeof message.abandoned !== "boolean")
                                    return "abandoned: boolean expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.renderStartTime != null && message.hasOwnProperty("renderStartTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.renderStartTime);
                                if (error)
                                    return "renderStartTime." + error;
                            }
                            if (message.renderEndTime != null && message.hasOwnProperty("renderEndTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.renderEndTime);
                                if (error)
                                    return "renderEndTime." + error;
                            }
                            if (message.skaffoldConfigUri != null && message.hasOwnProperty("skaffoldConfigUri"))
                                if (!$util.isString(message.skaffoldConfigUri))
                                    return "skaffoldConfigUri: string expected";
                            if (message.skaffoldConfigPath != null && message.hasOwnProperty("skaffoldConfigPath"))
                                if (!$util.isString(message.skaffoldConfigPath))
                                    return "skaffoldConfigPath: string expected";
                            if (message.buildArtifacts != null && message.hasOwnProperty("buildArtifacts")) {
                                if (!Array.isArray(message.buildArtifacts))
                                    return "buildArtifacts: array expected";
                                for (var i = 0; i < message.buildArtifacts.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.BuildArtifact.verify(message.buildArtifacts[i]);
                                    if (error)
                                        return "buildArtifacts." + error;
                                }
                            }
                            if (message.deliveryPipelineSnapshot != null && message.hasOwnProperty("deliveryPipelineSnapshot")) {
                                var error = $root.google.cloud.deploy.v1.DeliveryPipeline.verify(message.deliveryPipelineSnapshot);
                                if (error)
                                    return "deliveryPipelineSnapshot." + error;
                            }
                            if (message.targetSnapshots != null && message.hasOwnProperty("targetSnapshots")) {
                                if (!Array.isArray(message.targetSnapshots))
                                    return "targetSnapshots: array expected";
                                for (var i = 0; i < message.targetSnapshots.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.Target.verify(message.targetSnapshots[i]);
                                    if (error)
                                        return "targetSnapshots." + error;
                                }
                            }
                            if (message.renderState != null && message.hasOwnProperty("renderState"))
                                switch (message.renderState) {
                                default:
                                    return "renderState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            if (message.skaffoldVersion != null && message.hasOwnProperty("skaffoldVersion"))
                                if (!$util.isString(message.skaffoldVersion))
                                    return "skaffoldVersion: string expected";
                            if (message.targetArtifacts != null && message.hasOwnProperty("targetArtifacts")) {
                                if (!$util.isObject(message.targetArtifacts))
                                    return "targetArtifacts: object expected";
                                var key = Object.keys(message.targetArtifacts);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.TargetArtifact.verify(message.targetArtifacts[key[i]]);
                                    if (error)
                                        return "targetArtifacts." + error;
                                }
                            }
                            if (message.targetRenders != null && message.hasOwnProperty("targetRenders")) {
                                if (!$util.isObject(message.targetRenders))
                                    return "targetRenders: object expected";
                                var key = Object.keys(message.targetRenders);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.Release.TargetRender.verify(message.targetRenders[key[i]]);
                                    if (error)
                                        return "targetRenders." + error;
                                }
                            }
                            if (message.condition != null && message.hasOwnProperty("condition")) {
                                var error = $root.google.cloud.deploy.v1.Release.ReleaseCondition.verify(message.condition);
                                if (error)
                                    return "condition." + error;
                            }
                            if (message.deployParameters != null && message.hasOwnProperty("deployParameters")) {
                                if (!$util.isObject(message.deployParameters))
                                    return "deployParameters: object expected";
                                var key = Object.keys(message.deployParameters);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.deployParameters[key[i]]))
                                        return "deployParameters: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Release message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.Release
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.Release} Release
                         */
                        Release.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.Release)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.Release();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Release.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Release.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.abandoned != null)
                                message.abandoned = Boolean(object.abandoned);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Release.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.renderStartTime != null) {
                                if (typeof object.renderStartTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Release.renderStartTime: object expected");
                                message.renderStartTime = $root.google.protobuf.Timestamp.fromObject(object.renderStartTime);
                            }
                            if (object.renderEndTime != null) {
                                if (typeof object.renderEndTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Release.renderEndTime: object expected");
                                message.renderEndTime = $root.google.protobuf.Timestamp.fromObject(object.renderEndTime);
                            }
                            if (object.skaffoldConfigUri != null)
                                message.skaffoldConfigUri = String(object.skaffoldConfigUri);
                            if (object.skaffoldConfigPath != null)
                                message.skaffoldConfigPath = String(object.skaffoldConfigPath);
                            if (object.buildArtifacts) {
                                if (!Array.isArray(object.buildArtifacts))
                                    throw TypeError(".google.cloud.deploy.v1.Release.buildArtifacts: array expected");
                                message.buildArtifacts = [];
                                for (var i = 0; i < object.buildArtifacts.length; ++i) {
                                    if (typeof object.buildArtifacts[i] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.Release.buildArtifacts: object expected");
                                    message.buildArtifacts[i] = $root.google.cloud.deploy.v1.BuildArtifact.fromObject(object.buildArtifacts[i]);
                                }
                            }
                            if (object.deliveryPipelineSnapshot != null) {
                                if (typeof object.deliveryPipelineSnapshot !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Release.deliveryPipelineSnapshot: object expected");
                                message.deliveryPipelineSnapshot = $root.google.cloud.deploy.v1.DeliveryPipeline.fromObject(object.deliveryPipelineSnapshot);
                            }
                            if (object.targetSnapshots) {
                                if (!Array.isArray(object.targetSnapshots))
                                    throw TypeError(".google.cloud.deploy.v1.Release.targetSnapshots: array expected");
                                message.targetSnapshots = [];
                                for (var i = 0; i < object.targetSnapshots.length; ++i) {
                                    if (typeof object.targetSnapshots[i] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.Release.targetSnapshots: object expected");
                                    message.targetSnapshots[i] = $root.google.cloud.deploy.v1.Target.fromObject(object.targetSnapshots[i]);
                                }
                            }
                            switch (object.renderState) {
                            default:
                                if (typeof object.renderState === "number") {
                                    message.renderState = object.renderState;
                                    break;
                                }
                                break;
                            case "RENDER_STATE_UNSPECIFIED":
                            case 0:
                                message.renderState = 0;
                                break;
                            case "SUCCEEDED":
                            case 1:
                                message.renderState = 1;
                                break;
                            case "FAILED":
                            case 2:
                                message.renderState = 2;
                                break;
                            case "IN_PROGRESS":
                            case 3:
                                message.renderState = 3;
                                break;
                            }
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            if (object.skaffoldVersion != null)
                                message.skaffoldVersion = String(object.skaffoldVersion);
                            if (object.targetArtifacts) {
                                if (typeof object.targetArtifacts !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Release.targetArtifacts: object expected");
                                message.targetArtifacts = {};
                                for (var keys = Object.keys(object.targetArtifacts), i = 0; i < keys.length; ++i) {
                                    if (typeof object.targetArtifacts[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.Release.targetArtifacts: object expected");
                                    message.targetArtifacts[keys[i]] = $root.google.cloud.deploy.v1.TargetArtifact.fromObject(object.targetArtifacts[keys[i]]);
                                }
                            }
                            if (object.targetRenders) {
                                if (typeof object.targetRenders !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Release.targetRenders: object expected");
                                message.targetRenders = {};
                                for (var keys = Object.keys(object.targetRenders), i = 0; i < keys.length; ++i) {
                                    if (typeof object.targetRenders[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.Release.targetRenders: object expected");
                                    message.targetRenders[keys[i]] = $root.google.cloud.deploy.v1.Release.TargetRender.fromObject(object.targetRenders[keys[i]]);
                                }
                            }
                            if (object.condition != null) {
                                if (typeof object.condition !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Release.condition: object expected");
                                message.condition = $root.google.cloud.deploy.v1.Release.ReleaseCondition.fromObject(object.condition);
                            }
                            if (object.deployParameters) {
                                if (typeof object.deployParameters !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Release.deployParameters: object expected");
                                message.deployParameters = {};
                                for (var keys = Object.keys(object.deployParameters), i = 0; i < keys.length; ++i)
                                    message.deployParameters[keys[i]] = String(object.deployParameters[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Release message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.Release
                         * @static
                         * @param {google.cloud.deploy.v1.Release} message Release
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Release.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.buildArtifacts = [];
                                object.targetSnapshots = [];
                            }
                            if (options.objects || options.defaults) {
                                object.annotations = {};
                                object.labels = {};
                                object.targetArtifacts = {};
                                object.targetRenders = {};
                                object.deployParameters = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.uid = "";
                                object.description = "";
                                object.createTime = null;
                                object.renderStartTime = null;
                                object.renderEndTime = null;
                                object.skaffoldConfigPath = "";
                                object.deliveryPipelineSnapshot = null;
                                object.renderState = options.enums === String ? "RENDER_STATE_UNSPECIFIED" : 0;
                                object.etag = "";
                                object.skaffoldConfigUri = "";
                                object.skaffoldVersion = "";
                                object.abandoned = false;
                                object.condition = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            var keys2;
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.renderStartTime != null && message.hasOwnProperty("renderStartTime"))
                                object.renderStartTime = $root.google.protobuf.Timestamp.toObject(message.renderStartTime, options);
                            if (message.renderEndTime != null && message.hasOwnProperty("renderEndTime"))
                                object.renderEndTime = $root.google.protobuf.Timestamp.toObject(message.renderEndTime, options);
                            if (message.skaffoldConfigPath != null && message.hasOwnProperty("skaffoldConfigPath"))
                                object.skaffoldConfigPath = message.skaffoldConfigPath;
                            if (message.buildArtifacts && message.buildArtifacts.length) {
                                object.buildArtifacts = [];
                                for (var j = 0; j < message.buildArtifacts.length; ++j)
                                    object.buildArtifacts[j] = $root.google.cloud.deploy.v1.BuildArtifact.toObject(message.buildArtifacts[j], options);
                            }
                            if (message.deliveryPipelineSnapshot != null && message.hasOwnProperty("deliveryPipelineSnapshot"))
                                object.deliveryPipelineSnapshot = $root.google.cloud.deploy.v1.DeliveryPipeline.toObject(message.deliveryPipelineSnapshot, options);
                            if (message.targetSnapshots && message.targetSnapshots.length) {
                                object.targetSnapshots = [];
                                for (var j = 0; j < message.targetSnapshots.length; ++j)
                                    object.targetSnapshots[j] = $root.google.cloud.deploy.v1.Target.toObject(message.targetSnapshots[j], options);
                            }
                            if (message.renderState != null && message.hasOwnProperty("renderState"))
                                object.renderState = options.enums === String ? $root.google.cloud.deploy.v1.Release.RenderState[message.renderState] === undefined ? message.renderState : $root.google.cloud.deploy.v1.Release.RenderState[message.renderState] : message.renderState;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.skaffoldConfigUri != null && message.hasOwnProperty("skaffoldConfigUri"))
                                object.skaffoldConfigUri = message.skaffoldConfigUri;
                            if (message.skaffoldVersion != null && message.hasOwnProperty("skaffoldVersion"))
                                object.skaffoldVersion = message.skaffoldVersion;
                            if (message.targetArtifacts && (keys2 = Object.keys(message.targetArtifacts)).length) {
                                object.targetArtifacts = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.targetArtifacts[keys2[j]] = $root.google.cloud.deploy.v1.TargetArtifact.toObject(message.targetArtifacts[keys2[j]], options);
                            }
                            if (message.targetRenders && (keys2 = Object.keys(message.targetRenders)).length) {
                                object.targetRenders = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.targetRenders[keys2[j]] = $root.google.cloud.deploy.v1.Release.TargetRender.toObject(message.targetRenders[keys2[j]], options);
                            }
                            if (message.abandoned != null && message.hasOwnProperty("abandoned"))
                                object.abandoned = message.abandoned;
                            if (message.condition != null && message.hasOwnProperty("condition"))
                                object.condition = $root.google.cloud.deploy.v1.Release.ReleaseCondition.toObject(message.condition, options);
                            if (message.deployParameters && (keys2 = Object.keys(message.deployParameters)).length) {
                                object.deployParameters = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.deployParameters[keys2[j]] = message.deployParameters[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Release to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.Release
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Release.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Release
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.Release
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Release.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.Release";
                        };
    
                        /**
                         * RenderState enum.
                         * @name google.cloud.deploy.v1.Release.RenderState
                         * @enum {number}
                         * @property {number} RENDER_STATE_UNSPECIFIED=0 RENDER_STATE_UNSPECIFIED value
                         * @property {number} SUCCEEDED=1 SUCCEEDED value
                         * @property {number} FAILED=2 FAILED value
                         * @property {number} IN_PROGRESS=3 IN_PROGRESS value
                         */
                        Release.RenderState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RENDER_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SUCCEEDED"] = 1;
                            values[valuesById[2] = "FAILED"] = 2;
                            values[valuesById[3] = "IN_PROGRESS"] = 3;
                            return values;
                        })();
    
                        Release.TargetRender = (function() {
    
                            /**
                             * Properties of a TargetRender.
                             * @memberof google.cloud.deploy.v1.Release
                             * @interface ITargetRender
                             * @property {string|null} [renderingBuild] TargetRender renderingBuild
                             * @property {google.cloud.deploy.v1.Release.TargetRender.TargetRenderState|null} [renderingState] TargetRender renderingState
                             * @property {google.cloud.deploy.v1.IRenderMetadata|null} [metadata] TargetRender metadata
                             * @property {google.cloud.deploy.v1.Release.TargetRender.FailureCause|null} [failureCause] TargetRender failureCause
                             * @property {string|null} [failureMessage] TargetRender failureMessage
                             */
    
                            /**
                             * Constructs a new TargetRender.
                             * @memberof google.cloud.deploy.v1.Release
                             * @classdesc Represents a TargetRender.
                             * @implements ITargetRender
                             * @constructor
                             * @param {google.cloud.deploy.v1.Release.ITargetRender=} [properties] Properties to set
                             */
                            function TargetRender(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * TargetRender renderingBuild.
                             * @member {string} renderingBuild
                             * @memberof google.cloud.deploy.v1.Release.TargetRender
                             * @instance
                             */
                            TargetRender.prototype.renderingBuild = "";
    
                            /**
                             * TargetRender renderingState.
                             * @member {google.cloud.deploy.v1.Release.TargetRender.TargetRenderState} renderingState
                             * @memberof google.cloud.deploy.v1.Release.TargetRender
                             * @instance
                             */
                            TargetRender.prototype.renderingState = 0;
    
                            /**
                             * TargetRender metadata.
                             * @member {google.cloud.deploy.v1.IRenderMetadata|null|undefined} metadata
                             * @memberof google.cloud.deploy.v1.Release.TargetRender
                             * @instance
                             */
                            TargetRender.prototype.metadata = null;
    
                            /**
                             * TargetRender failureCause.
                             * @member {google.cloud.deploy.v1.Release.TargetRender.FailureCause} failureCause
                             * @memberof google.cloud.deploy.v1.Release.TargetRender
                             * @instance
                             */
                            TargetRender.prototype.failureCause = 0;
    
                            /**
                             * TargetRender failureMessage.
                             * @member {string} failureMessage
                             * @memberof google.cloud.deploy.v1.Release.TargetRender
                             * @instance
                             */
                            TargetRender.prototype.failureMessage = "";
    
                            /**
                             * Creates a new TargetRender instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.deploy.v1.Release.TargetRender
                             * @static
                             * @param {google.cloud.deploy.v1.Release.ITargetRender=} [properties] Properties to set
                             * @returns {google.cloud.deploy.v1.Release.TargetRender} TargetRender instance
                             */
                            TargetRender.create = function create(properties) {
                                return new TargetRender(properties);
                            };
    
                            /**
                             * Encodes the specified TargetRender message. Does not implicitly {@link google.cloud.deploy.v1.Release.TargetRender.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.deploy.v1.Release.TargetRender
                             * @static
                             * @param {google.cloud.deploy.v1.Release.ITargetRender} message TargetRender message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TargetRender.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.renderingBuild != null && Object.hasOwnProperty.call(message, "renderingBuild"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.renderingBuild);
                                if (message.renderingState != null && Object.hasOwnProperty.call(message, "renderingState"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.renderingState);
                                if (message.failureCause != null && Object.hasOwnProperty.call(message, "failureCause"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.failureCause);
                                if (message.failureMessage != null && Object.hasOwnProperty.call(message, "failureMessage"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.failureMessage);
                                if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                    $root.google.cloud.deploy.v1.RenderMetadata.encode(message.metadata, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified TargetRender message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Release.TargetRender.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.deploy.v1.Release.TargetRender
                             * @static
                             * @param {google.cloud.deploy.v1.Release.ITargetRender} message TargetRender message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TargetRender.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a TargetRender message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.deploy.v1.Release.TargetRender
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.deploy.v1.Release.TargetRender} TargetRender
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TargetRender.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Release.TargetRender();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.renderingBuild = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.renderingState = reader.int32();
                                            break;
                                        }
                                    case 6: {
                                            message.metadata = $root.google.cloud.deploy.v1.RenderMetadata.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.failureCause = reader.int32();
                                            break;
                                        }
                                    case 5: {
                                            message.failureMessage = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a TargetRender message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.deploy.v1.Release.TargetRender
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.deploy.v1.Release.TargetRender} TargetRender
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TargetRender.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a TargetRender message.
                             * @function verify
                             * @memberof google.cloud.deploy.v1.Release.TargetRender
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            TargetRender.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.renderingBuild != null && message.hasOwnProperty("renderingBuild"))
                                    if (!$util.isString(message.renderingBuild))
                                        return "renderingBuild: string expected";
                                if (message.renderingState != null && message.hasOwnProperty("renderingState"))
                                    switch (message.renderingState) {
                                    default:
                                        return "renderingState: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                    var error = $root.google.cloud.deploy.v1.RenderMetadata.verify(message.metadata);
                                    if (error)
                                        return "metadata." + error;
                                }
                                if (message.failureCause != null && message.hasOwnProperty("failureCause"))
                                    switch (message.failureCause) {
                                    default:
                                        return "failureCause: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 5:
                                        break;
                                    }
                                if (message.failureMessage != null && message.hasOwnProperty("failureMessage"))
                                    if (!$util.isString(message.failureMessage))
                                        return "failureMessage: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a TargetRender message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.deploy.v1.Release.TargetRender
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.deploy.v1.Release.TargetRender} TargetRender
                             */
                            TargetRender.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.deploy.v1.Release.TargetRender)
                                    return object;
                                var message = new $root.google.cloud.deploy.v1.Release.TargetRender();
                                if (object.renderingBuild != null)
                                    message.renderingBuild = String(object.renderingBuild);
                                switch (object.renderingState) {
                                default:
                                    if (typeof object.renderingState === "number") {
                                        message.renderingState = object.renderingState;
                                        break;
                                    }
                                    break;
                                case "TARGET_RENDER_STATE_UNSPECIFIED":
                                case 0:
                                    message.renderingState = 0;
                                    break;
                                case "SUCCEEDED":
                                case 1:
                                    message.renderingState = 1;
                                    break;
                                case "FAILED":
                                case 2:
                                    message.renderingState = 2;
                                    break;
                                case "IN_PROGRESS":
                                case 3:
                                    message.renderingState = 3;
                                    break;
                                }
                                if (object.metadata != null) {
                                    if (typeof object.metadata !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.Release.TargetRender.metadata: object expected");
                                    message.metadata = $root.google.cloud.deploy.v1.RenderMetadata.fromObject(object.metadata);
                                }
                                switch (object.failureCause) {
                                default:
                                    if (typeof object.failureCause === "number") {
                                        message.failureCause = object.failureCause;
                                        break;
                                    }
                                    break;
                                case "FAILURE_CAUSE_UNSPECIFIED":
                                case 0:
                                    message.failureCause = 0;
                                    break;
                                case "CLOUD_BUILD_UNAVAILABLE":
                                case 1:
                                    message.failureCause = 1;
                                    break;
                                case "EXECUTION_FAILED":
                                case 2:
                                    message.failureCause = 2;
                                    break;
                                case "CLOUD_BUILD_REQUEST_FAILED":
                                case 3:
                                    message.failureCause = 3;
                                    break;
                                case "CUSTOM_ACTION_NOT_FOUND":
                                case 5:
                                    message.failureCause = 5;
                                    break;
                                }
                                if (object.failureMessage != null)
                                    message.failureMessage = String(object.failureMessage);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a TargetRender message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.deploy.v1.Release.TargetRender
                             * @static
                             * @param {google.cloud.deploy.v1.Release.TargetRender} message TargetRender
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            TargetRender.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.renderingBuild = "";
                                    object.renderingState = options.enums === String ? "TARGET_RENDER_STATE_UNSPECIFIED" : 0;
                                    object.failureCause = options.enums === String ? "FAILURE_CAUSE_UNSPECIFIED" : 0;
                                    object.failureMessage = "";
                                    object.metadata = null;
                                }
                                if (message.renderingBuild != null && message.hasOwnProperty("renderingBuild"))
                                    object.renderingBuild = message.renderingBuild;
                                if (message.renderingState != null && message.hasOwnProperty("renderingState"))
                                    object.renderingState = options.enums === String ? $root.google.cloud.deploy.v1.Release.TargetRender.TargetRenderState[message.renderingState] === undefined ? message.renderingState : $root.google.cloud.deploy.v1.Release.TargetRender.TargetRenderState[message.renderingState] : message.renderingState;
                                if (message.failureCause != null && message.hasOwnProperty("failureCause"))
                                    object.failureCause = options.enums === String ? $root.google.cloud.deploy.v1.Release.TargetRender.FailureCause[message.failureCause] === undefined ? message.failureCause : $root.google.cloud.deploy.v1.Release.TargetRender.FailureCause[message.failureCause] : message.failureCause;
                                if (message.failureMessage != null && message.hasOwnProperty("failureMessage"))
                                    object.failureMessage = message.failureMessage;
                                if (message.metadata != null && message.hasOwnProperty("metadata"))
                                    object.metadata = $root.google.cloud.deploy.v1.RenderMetadata.toObject(message.metadata, options);
                                return object;
                            };
    
                            /**
                             * Converts this TargetRender to JSON.
                             * @function toJSON
                             * @memberof google.cloud.deploy.v1.Release.TargetRender
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            TargetRender.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for TargetRender
                             * @function getTypeUrl
                             * @memberof google.cloud.deploy.v1.Release.TargetRender
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            TargetRender.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.deploy.v1.Release.TargetRender";
                            };
    
                            /**
                             * TargetRenderState enum.
                             * @name google.cloud.deploy.v1.Release.TargetRender.TargetRenderState
                             * @enum {number}
                             * @property {number} TARGET_RENDER_STATE_UNSPECIFIED=0 TARGET_RENDER_STATE_UNSPECIFIED value
                             * @property {number} SUCCEEDED=1 SUCCEEDED value
                             * @property {number} FAILED=2 FAILED value
                             * @property {number} IN_PROGRESS=3 IN_PROGRESS value
                             */
                            TargetRender.TargetRenderState = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "TARGET_RENDER_STATE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "SUCCEEDED"] = 1;
                                values[valuesById[2] = "FAILED"] = 2;
                                values[valuesById[3] = "IN_PROGRESS"] = 3;
                                return values;
                            })();
    
                            /**
                             * FailureCause enum.
                             * @name google.cloud.deploy.v1.Release.TargetRender.FailureCause
                             * @enum {number}
                             * @property {number} FAILURE_CAUSE_UNSPECIFIED=0 FAILURE_CAUSE_UNSPECIFIED value
                             * @property {number} CLOUD_BUILD_UNAVAILABLE=1 CLOUD_BUILD_UNAVAILABLE value
                             * @property {number} EXECUTION_FAILED=2 EXECUTION_FAILED value
                             * @property {number} CLOUD_BUILD_REQUEST_FAILED=3 CLOUD_BUILD_REQUEST_FAILED value
                             * @property {number} CUSTOM_ACTION_NOT_FOUND=5 CUSTOM_ACTION_NOT_FOUND value
                             */
                            TargetRender.FailureCause = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "FAILURE_CAUSE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "CLOUD_BUILD_UNAVAILABLE"] = 1;
                                values[valuesById[2] = "EXECUTION_FAILED"] = 2;
                                values[valuesById[3] = "CLOUD_BUILD_REQUEST_FAILED"] = 3;
                                values[valuesById[5] = "CUSTOM_ACTION_NOT_FOUND"] = 5;
                                return values;
                            })();
    
                            return TargetRender;
                        })();
    
                        Release.ReleaseReadyCondition = (function() {
    
                            /**
                             * Properties of a ReleaseReadyCondition.
                             * @memberof google.cloud.deploy.v1.Release
                             * @interface IReleaseReadyCondition
                             * @property {boolean|null} [status] ReleaseReadyCondition status
                             */
    
                            /**
                             * Constructs a new ReleaseReadyCondition.
                             * @memberof google.cloud.deploy.v1.Release
                             * @classdesc Represents a ReleaseReadyCondition.
                             * @implements IReleaseReadyCondition
                             * @constructor
                             * @param {google.cloud.deploy.v1.Release.IReleaseReadyCondition=} [properties] Properties to set
                             */
                            function ReleaseReadyCondition(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReleaseReadyCondition status.
                             * @member {boolean} status
                             * @memberof google.cloud.deploy.v1.Release.ReleaseReadyCondition
                             * @instance
                             */
                            ReleaseReadyCondition.prototype.status = false;
    
                            /**
                             * Creates a new ReleaseReadyCondition instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.deploy.v1.Release.ReleaseReadyCondition
                             * @static
                             * @param {google.cloud.deploy.v1.Release.IReleaseReadyCondition=} [properties] Properties to set
                             * @returns {google.cloud.deploy.v1.Release.ReleaseReadyCondition} ReleaseReadyCondition instance
                             */
                            ReleaseReadyCondition.create = function create(properties) {
                                return new ReleaseReadyCondition(properties);
                            };
    
                            /**
                             * Encodes the specified ReleaseReadyCondition message. Does not implicitly {@link google.cloud.deploy.v1.Release.ReleaseReadyCondition.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.deploy.v1.Release.ReleaseReadyCondition
                             * @static
                             * @param {google.cloud.deploy.v1.Release.IReleaseReadyCondition} message ReleaseReadyCondition message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReleaseReadyCondition.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.status);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReleaseReadyCondition message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Release.ReleaseReadyCondition.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.deploy.v1.Release.ReleaseReadyCondition
                             * @static
                             * @param {google.cloud.deploy.v1.Release.IReleaseReadyCondition} message ReleaseReadyCondition message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReleaseReadyCondition.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReleaseReadyCondition message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.deploy.v1.Release.ReleaseReadyCondition
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.deploy.v1.Release.ReleaseReadyCondition} ReleaseReadyCondition
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReleaseReadyCondition.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Release.ReleaseReadyCondition();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.status = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReleaseReadyCondition message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.deploy.v1.Release.ReleaseReadyCondition
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.deploy.v1.Release.ReleaseReadyCondition} ReleaseReadyCondition
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReleaseReadyCondition.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReleaseReadyCondition message.
                             * @function verify
                             * @memberof google.cloud.deploy.v1.Release.ReleaseReadyCondition
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReleaseReadyCondition.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.status != null && message.hasOwnProperty("status"))
                                    if (typeof message.status !== "boolean")
                                        return "status: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a ReleaseReadyCondition message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.deploy.v1.Release.ReleaseReadyCondition
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.deploy.v1.Release.ReleaseReadyCondition} ReleaseReadyCondition
                             */
                            ReleaseReadyCondition.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.deploy.v1.Release.ReleaseReadyCondition)
                                    return object;
                                var message = new $root.google.cloud.deploy.v1.Release.ReleaseReadyCondition();
                                if (object.status != null)
                                    message.status = Boolean(object.status);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReleaseReadyCondition message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.deploy.v1.Release.ReleaseReadyCondition
                             * @static
                             * @param {google.cloud.deploy.v1.Release.ReleaseReadyCondition} message ReleaseReadyCondition
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReleaseReadyCondition.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.status = false;
                                if (message.status != null && message.hasOwnProperty("status"))
                                    object.status = message.status;
                                return object;
                            };
    
                            /**
                             * Converts this ReleaseReadyCondition to JSON.
                             * @function toJSON
                             * @memberof google.cloud.deploy.v1.Release.ReleaseReadyCondition
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReleaseReadyCondition.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReleaseReadyCondition
                             * @function getTypeUrl
                             * @memberof google.cloud.deploy.v1.Release.ReleaseReadyCondition
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReleaseReadyCondition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.deploy.v1.Release.ReleaseReadyCondition";
                            };
    
                            return ReleaseReadyCondition;
                        })();
    
                        Release.SkaffoldSupportedCondition = (function() {
    
                            /**
                             * Properties of a SkaffoldSupportedCondition.
                             * @memberof google.cloud.deploy.v1.Release
                             * @interface ISkaffoldSupportedCondition
                             * @property {boolean|null} [status] SkaffoldSupportedCondition status
                             * @property {google.cloud.deploy.v1.SkaffoldSupportState|null} [skaffoldSupportState] SkaffoldSupportedCondition skaffoldSupportState
                             * @property {google.protobuf.ITimestamp|null} [maintenanceModeTime] SkaffoldSupportedCondition maintenanceModeTime
                             * @property {google.protobuf.ITimestamp|null} [supportExpirationTime] SkaffoldSupportedCondition supportExpirationTime
                             */
    
                            /**
                             * Constructs a new SkaffoldSupportedCondition.
                             * @memberof google.cloud.deploy.v1.Release
                             * @classdesc Represents a SkaffoldSupportedCondition.
                             * @implements ISkaffoldSupportedCondition
                             * @constructor
                             * @param {google.cloud.deploy.v1.Release.ISkaffoldSupportedCondition=} [properties] Properties to set
                             */
                            function SkaffoldSupportedCondition(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SkaffoldSupportedCondition status.
                             * @member {boolean} status
                             * @memberof google.cloud.deploy.v1.Release.SkaffoldSupportedCondition
                             * @instance
                             */
                            SkaffoldSupportedCondition.prototype.status = false;
    
                            /**
                             * SkaffoldSupportedCondition skaffoldSupportState.
                             * @member {google.cloud.deploy.v1.SkaffoldSupportState} skaffoldSupportState
                             * @memberof google.cloud.deploy.v1.Release.SkaffoldSupportedCondition
                             * @instance
                             */
                            SkaffoldSupportedCondition.prototype.skaffoldSupportState = 0;
    
                            /**
                             * SkaffoldSupportedCondition maintenanceModeTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} maintenanceModeTime
                             * @memberof google.cloud.deploy.v1.Release.SkaffoldSupportedCondition
                             * @instance
                             */
                            SkaffoldSupportedCondition.prototype.maintenanceModeTime = null;
    
                            /**
                             * SkaffoldSupportedCondition supportExpirationTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} supportExpirationTime
                             * @memberof google.cloud.deploy.v1.Release.SkaffoldSupportedCondition
                             * @instance
                             */
                            SkaffoldSupportedCondition.prototype.supportExpirationTime = null;
    
                            /**
                             * Creates a new SkaffoldSupportedCondition instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.deploy.v1.Release.SkaffoldSupportedCondition
                             * @static
                             * @param {google.cloud.deploy.v1.Release.ISkaffoldSupportedCondition=} [properties] Properties to set
                             * @returns {google.cloud.deploy.v1.Release.SkaffoldSupportedCondition} SkaffoldSupportedCondition instance
                             */
                            SkaffoldSupportedCondition.create = function create(properties) {
                                return new SkaffoldSupportedCondition(properties);
                            };
    
                            /**
                             * Encodes the specified SkaffoldSupportedCondition message. Does not implicitly {@link google.cloud.deploy.v1.Release.SkaffoldSupportedCondition.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.deploy.v1.Release.SkaffoldSupportedCondition
                             * @static
                             * @param {google.cloud.deploy.v1.Release.ISkaffoldSupportedCondition} message SkaffoldSupportedCondition message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SkaffoldSupportedCondition.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.status);
                                if (message.skaffoldSupportState != null && Object.hasOwnProperty.call(message, "skaffoldSupportState"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.skaffoldSupportState);
                                if (message.maintenanceModeTime != null && Object.hasOwnProperty.call(message, "maintenanceModeTime"))
                                    $root.google.protobuf.Timestamp.encode(message.maintenanceModeTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.supportExpirationTime != null && Object.hasOwnProperty.call(message, "supportExpirationTime"))
                                    $root.google.protobuf.Timestamp.encode(message.supportExpirationTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SkaffoldSupportedCondition message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Release.SkaffoldSupportedCondition.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.deploy.v1.Release.SkaffoldSupportedCondition
                             * @static
                             * @param {google.cloud.deploy.v1.Release.ISkaffoldSupportedCondition} message SkaffoldSupportedCondition message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SkaffoldSupportedCondition.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SkaffoldSupportedCondition message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.deploy.v1.Release.SkaffoldSupportedCondition
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.deploy.v1.Release.SkaffoldSupportedCondition} SkaffoldSupportedCondition
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SkaffoldSupportedCondition.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Release.SkaffoldSupportedCondition();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.status = reader.bool();
                                            break;
                                        }
                                    case 2: {
                                            message.skaffoldSupportState = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.maintenanceModeTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.supportExpirationTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SkaffoldSupportedCondition message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.deploy.v1.Release.SkaffoldSupportedCondition
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.deploy.v1.Release.SkaffoldSupportedCondition} SkaffoldSupportedCondition
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SkaffoldSupportedCondition.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SkaffoldSupportedCondition message.
                             * @function verify
                             * @memberof google.cloud.deploy.v1.Release.SkaffoldSupportedCondition
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SkaffoldSupportedCondition.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.status != null && message.hasOwnProperty("status"))
                                    if (typeof message.status !== "boolean")
                                        return "status: boolean expected";
                                if (message.skaffoldSupportState != null && message.hasOwnProperty("skaffoldSupportState"))
                                    switch (message.skaffoldSupportState) {
                                    default:
                                        return "skaffoldSupportState: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.maintenanceModeTime != null && message.hasOwnProperty("maintenanceModeTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.maintenanceModeTime);
                                    if (error)
                                        return "maintenanceModeTime." + error;
                                }
                                if (message.supportExpirationTime != null && message.hasOwnProperty("supportExpirationTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.supportExpirationTime);
                                    if (error)
                                        return "supportExpirationTime." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SkaffoldSupportedCondition message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.deploy.v1.Release.SkaffoldSupportedCondition
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.deploy.v1.Release.SkaffoldSupportedCondition} SkaffoldSupportedCondition
                             */
                            SkaffoldSupportedCondition.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.deploy.v1.Release.SkaffoldSupportedCondition)
                                    return object;
                                var message = new $root.google.cloud.deploy.v1.Release.SkaffoldSupportedCondition();
                                if (object.status != null)
                                    message.status = Boolean(object.status);
                                switch (object.skaffoldSupportState) {
                                default:
                                    if (typeof object.skaffoldSupportState === "number") {
                                        message.skaffoldSupportState = object.skaffoldSupportState;
                                        break;
                                    }
                                    break;
                                case "SKAFFOLD_SUPPORT_STATE_UNSPECIFIED":
                                case 0:
                                    message.skaffoldSupportState = 0;
                                    break;
                                case "SKAFFOLD_SUPPORT_STATE_SUPPORTED":
                                case 1:
                                    message.skaffoldSupportState = 1;
                                    break;
                                case "SKAFFOLD_SUPPORT_STATE_MAINTENANCE_MODE":
                                case 2:
                                    message.skaffoldSupportState = 2;
                                    break;
                                case "SKAFFOLD_SUPPORT_STATE_UNSUPPORTED":
                                case 3:
                                    message.skaffoldSupportState = 3;
                                    break;
                                }
                                if (object.maintenanceModeTime != null) {
                                    if (typeof object.maintenanceModeTime !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.Release.SkaffoldSupportedCondition.maintenanceModeTime: object expected");
                                    message.maintenanceModeTime = $root.google.protobuf.Timestamp.fromObject(object.maintenanceModeTime);
                                }
                                if (object.supportExpirationTime != null) {
                                    if (typeof object.supportExpirationTime !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.Release.SkaffoldSupportedCondition.supportExpirationTime: object expected");
                                    message.supportExpirationTime = $root.google.protobuf.Timestamp.fromObject(object.supportExpirationTime);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SkaffoldSupportedCondition message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.deploy.v1.Release.SkaffoldSupportedCondition
                             * @static
                             * @param {google.cloud.deploy.v1.Release.SkaffoldSupportedCondition} message SkaffoldSupportedCondition
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SkaffoldSupportedCondition.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.status = false;
                                    object.skaffoldSupportState = options.enums === String ? "SKAFFOLD_SUPPORT_STATE_UNSPECIFIED" : 0;
                                    object.maintenanceModeTime = null;
                                    object.supportExpirationTime = null;
                                }
                                if (message.status != null && message.hasOwnProperty("status"))
                                    object.status = message.status;
                                if (message.skaffoldSupportState != null && message.hasOwnProperty("skaffoldSupportState"))
                                    object.skaffoldSupportState = options.enums === String ? $root.google.cloud.deploy.v1.SkaffoldSupportState[message.skaffoldSupportState] === undefined ? message.skaffoldSupportState : $root.google.cloud.deploy.v1.SkaffoldSupportState[message.skaffoldSupportState] : message.skaffoldSupportState;
                                if (message.maintenanceModeTime != null && message.hasOwnProperty("maintenanceModeTime"))
                                    object.maintenanceModeTime = $root.google.protobuf.Timestamp.toObject(message.maintenanceModeTime, options);
                                if (message.supportExpirationTime != null && message.hasOwnProperty("supportExpirationTime"))
                                    object.supportExpirationTime = $root.google.protobuf.Timestamp.toObject(message.supportExpirationTime, options);
                                return object;
                            };
    
                            /**
                             * Converts this SkaffoldSupportedCondition to JSON.
                             * @function toJSON
                             * @memberof google.cloud.deploy.v1.Release.SkaffoldSupportedCondition
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SkaffoldSupportedCondition.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SkaffoldSupportedCondition
                             * @function getTypeUrl
                             * @memberof google.cloud.deploy.v1.Release.SkaffoldSupportedCondition
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SkaffoldSupportedCondition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.deploy.v1.Release.SkaffoldSupportedCondition";
                            };
    
                            return SkaffoldSupportedCondition;
                        })();
    
                        Release.ReleaseCondition = (function() {
    
                            /**
                             * Properties of a ReleaseCondition.
                             * @memberof google.cloud.deploy.v1.Release
                             * @interface IReleaseCondition
                             * @property {google.cloud.deploy.v1.Release.IReleaseReadyCondition|null} [releaseReadyCondition] ReleaseCondition releaseReadyCondition
                             * @property {google.cloud.deploy.v1.Release.ISkaffoldSupportedCondition|null} [skaffoldSupportedCondition] ReleaseCondition skaffoldSupportedCondition
                             */
    
                            /**
                             * Constructs a new ReleaseCondition.
                             * @memberof google.cloud.deploy.v1.Release
                             * @classdesc Represents a ReleaseCondition.
                             * @implements IReleaseCondition
                             * @constructor
                             * @param {google.cloud.deploy.v1.Release.IReleaseCondition=} [properties] Properties to set
                             */
                            function ReleaseCondition(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReleaseCondition releaseReadyCondition.
                             * @member {google.cloud.deploy.v1.Release.IReleaseReadyCondition|null|undefined} releaseReadyCondition
                             * @memberof google.cloud.deploy.v1.Release.ReleaseCondition
                             * @instance
                             */
                            ReleaseCondition.prototype.releaseReadyCondition = null;
    
                            /**
                             * ReleaseCondition skaffoldSupportedCondition.
                             * @member {google.cloud.deploy.v1.Release.ISkaffoldSupportedCondition|null|undefined} skaffoldSupportedCondition
                             * @memberof google.cloud.deploy.v1.Release.ReleaseCondition
                             * @instance
                             */
                            ReleaseCondition.prototype.skaffoldSupportedCondition = null;
    
                            /**
                             * Creates a new ReleaseCondition instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.deploy.v1.Release.ReleaseCondition
                             * @static
                             * @param {google.cloud.deploy.v1.Release.IReleaseCondition=} [properties] Properties to set
                             * @returns {google.cloud.deploy.v1.Release.ReleaseCondition} ReleaseCondition instance
                             */
                            ReleaseCondition.create = function create(properties) {
                                return new ReleaseCondition(properties);
                            };
    
                            /**
                             * Encodes the specified ReleaseCondition message. Does not implicitly {@link google.cloud.deploy.v1.Release.ReleaseCondition.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.deploy.v1.Release.ReleaseCondition
                             * @static
                             * @param {google.cloud.deploy.v1.Release.IReleaseCondition} message ReleaseCondition message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReleaseCondition.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.releaseReadyCondition != null && Object.hasOwnProperty.call(message, "releaseReadyCondition"))
                                    $root.google.cloud.deploy.v1.Release.ReleaseReadyCondition.encode(message.releaseReadyCondition, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.skaffoldSupportedCondition != null && Object.hasOwnProperty.call(message, "skaffoldSupportedCondition"))
                                    $root.google.cloud.deploy.v1.Release.SkaffoldSupportedCondition.encode(message.skaffoldSupportedCondition, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReleaseCondition message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Release.ReleaseCondition.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.deploy.v1.Release.ReleaseCondition
                             * @static
                             * @param {google.cloud.deploy.v1.Release.IReleaseCondition} message ReleaseCondition message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReleaseCondition.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReleaseCondition message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.deploy.v1.Release.ReleaseCondition
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.deploy.v1.Release.ReleaseCondition} ReleaseCondition
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReleaseCondition.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Release.ReleaseCondition();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.releaseReadyCondition = $root.google.cloud.deploy.v1.Release.ReleaseReadyCondition.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.skaffoldSupportedCondition = $root.google.cloud.deploy.v1.Release.SkaffoldSupportedCondition.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReleaseCondition message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.deploy.v1.Release.ReleaseCondition
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.deploy.v1.Release.ReleaseCondition} ReleaseCondition
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReleaseCondition.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReleaseCondition message.
                             * @function verify
                             * @memberof google.cloud.deploy.v1.Release.ReleaseCondition
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReleaseCondition.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.releaseReadyCondition != null && message.hasOwnProperty("releaseReadyCondition")) {
                                    var error = $root.google.cloud.deploy.v1.Release.ReleaseReadyCondition.verify(message.releaseReadyCondition);
                                    if (error)
                                        return "releaseReadyCondition." + error;
                                }
                                if (message.skaffoldSupportedCondition != null && message.hasOwnProperty("skaffoldSupportedCondition")) {
                                    var error = $root.google.cloud.deploy.v1.Release.SkaffoldSupportedCondition.verify(message.skaffoldSupportedCondition);
                                    if (error)
                                        return "skaffoldSupportedCondition." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ReleaseCondition message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.deploy.v1.Release.ReleaseCondition
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.deploy.v1.Release.ReleaseCondition} ReleaseCondition
                             */
                            ReleaseCondition.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.deploy.v1.Release.ReleaseCondition)
                                    return object;
                                var message = new $root.google.cloud.deploy.v1.Release.ReleaseCondition();
                                if (object.releaseReadyCondition != null) {
                                    if (typeof object.releaseReadyCondition !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.Release.ReleaseCondition.releaseReadyCondition: object expected");
                                    message.releaseReadyCondition = $root.google.cloud.deploy.v1.Release.ReleaseReadyCondition.fromObject(object.releaseReadyCondition);
                                }
                                if (object.skaffoldSupportedCondition != null) {
                                    if (typeof object.skaffoldSupportedCondition !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.Release.ReleaseCondition.skaffoldSupportedCondition: object expected");
                                    message.skaffoldSupportedCondition = $root.google.cloud.deploy.v1.Release.SkaffoldSupportedCondition.fromObject(object.skaffoldSupportedCondition);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReleaseCondition message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.deploy.v1.Release.ReleaseCondition
                             * @static
                             * @param {google.cloud.deploy.v1.Release.ReleaseCondition} message ReleaseCondition
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReleaseCondition.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.releaseReadyCondition = null;
                                    object.skaffoldSupportedCondition = null;
                                }
                                if (message.releaseReadyCondition != null && message.hasOwnProperty("releaseReadyCondition"))
                                    object.releaseReadyCondition = $root.google.cloud.deploy.v1.Release.ReleaseReadyCondition.toObject(message.releaseReadyCondition, options);
                                if (message.skaffoldSupportedCondition != null && message.hasOwnProperty("skaffoldSupportedCondition"))
                                    object.skaffoldSupportedCondition = $root.google.cloud.deploy.v1.Release.SkaffoldSupportedCondition.toObject(message.skaffoldSupportedCondition, options);
                                return object;
                            };
    
                            /**
                             * Converts this ReleaseCondition to JSON.
                             * @function toJSON
                             * @memberof google.cloud.deploy.v1.Release.ReleaseCondition
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReleaseCondition.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReleaseCondition
                             * @function getTypeUrl
                             * @memberof google.cloud.deploy.v1.Release.ReleaseCondition
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReleaseCondition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.deploy.v1.Release.ReleaseCondition";
                            };
    
                            return ReleaseCondition;
                        })();
    
                        return Release;
                    })();
    
                    v1.BuildArtifact = (function() {
    
                        /**
                         * Properties of a BuildArtifact.
                         * @memberof google.cloud.deploy.v1
                         * @interface IBuildArtifact
                         * @property {string|null} [image] BuildArtifact image
                         * @property {string|null} [tag] BuildArtifact tag
                         */
    
                        /**
                         * Constructs a new BuildArtifact.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a BuildArtifact.
                         * @implements IBuildArtifact
                         * @constructor
                         * @param {google.cloud.deploy.v1.IBuildArtifact=} [properties] Properties to set
                         */
                        function BuildArtifact(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BuildArtifact image.
                         * @member {string} image
                         * @memberof google.cloud.deploy.v1.BuildArtifact
                         * @instance
                         */
                        BuildArtifact.prototype.image = "";
    
                        /**
                         * BuildArtifact tag.
                         * @member {string} tag
                         * @memberof google.cloud.deploy.v1.BuildArtifact
                         * @instance
                         */
                        BuildArtifact.prototype.tag = "";
    
                        /**
                         * Creates a new BuildArtifact instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.BuildArtifact
                         * @static
                         * @param {google.cloud.deploy.v1.IBuildArtifact=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.BuildArtifact} BuildArtifact instance
                         */
                        BuildArtifact.create = function create(properties) {
                            return new BuildArtifact(properties);
                        };
    
                        /**
                         * Encodes the specified BuildArtifact message. Does not implicitly {@link google.cloud.deploy.v1.BuildArtifact.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.BuildArtifact
                         * @static
                         * @param {google.cloud.deploy.v1.IBuildArtifact} message BuildArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildArtifact.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tag != null && Object.hasOwnProperty.call(message, "tag"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.tag);
                            if (message.image != null && Object.hasOwnProperty.call(message, "image"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.image);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BuildArtifact message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.BuildArtifact.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.BuildArtifact
                         * @static
                         * @param {google.cloud.deploy.v1.IBuildArtifact} message BuildArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildArtifact.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BuildArtifact message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.BuildArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.BuildArtifact} BuildArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildArtifact.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.BuildArtifact();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.image = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.tag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BuildArtifact message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.BuildArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.BuildArtifact} BuildArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildArtifact.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BuildArtifact message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.BuildArtifact
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BuildArtifact.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.image != null && message.hasOwnProperty("image"))
                                if (!$util.isString(message.image))
                                    return "image: string expected";
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                if (!$util.isString(message.tag))
                                    return "tag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BuildArtifact message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.BuildArtifact
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.BuildArtifact} BuildArtifact
                         */
                        BuildArtifact.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.BuildArtifact)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.BuildArtifact();
                            if (object.image != null)
                                message.image = String(object.image);
                            if (object.tag != null)
                                message.tag = String(object.tag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BuildArtifact message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.BuildArtifact
                         * @static
                         * @param {google.cloud.deploy.v1.BuildArtifact} message BuildArtifact
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BuildArtifact.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.tag = "";
                                object.image = "";
                            }
                            if (message.tag != null && message.hasOwnProperty("tag"))
                                object.tag = message.tag;
                            if (message.image != null && message.hasOwnProperty("image"))
                                object.image = message.image;
                            return object;
                        };
    
                        /**
                         * Converts this BuildArtifact to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.BuildArtifact
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BuildArtifact.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BuildArtifact
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.BuildArtifact
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BuildArtifact.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.BuildArtifact";
                        };
    
                        return BuildArtifact;
                    })();
    
                    v1.TargetArtifact = (function() {
    
                        /**
                         * Properties of a TargetArtifact.
                         * @memberof google.cloud.deploy.v1
                         * @interface ITargetArtifact
                         * @property {string|null} [artifactUri] TargetArtifact artifactUri
                         * @property {string|null} [skaffoldConfigPath] TargetArtifact skaffoldConfigPath
                         * @property {string|null} [manifestPath] TargetArtifact manifestPath
                         * @property {Object.<string,google.cloud.deploy.v1.TargetArtifact.IPhaseArtifact>|null} [phaseArtifacts] TargetArtifact phaseArtifacts
                         */
    
                        /**
                         * Constructs a new TargetArtifact.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a TargetArtifact.
                         * @implements ITargetArtifact
                         * @constructor
                         * @param {google.cloud.deploy.v1.ITargetArtifact=} [properties] Properties to set
                         */
                        function TargetArtifact(properties) {
                            this.phaseArtifacts = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TargetArtifact artifactUri.
                         * @member {string|null|undefined} artifactUri
                         * @memberof google.cloud.deploy.v1.TargetArtifact
                         * @instance
                         */
                        TargetArtifact.prototype.artifactUri = null;
    
                        /**
                         * TargetArtifact skaffoldConfigPath.
                         * @member {string} skaffoldConfigPath
                         * @memberof google.cloud.deploy.v1.TargetArtifact
                         * @instance
                         */
                        TargetArtifact.prototype.skaffoldConfigPath = "";
    
                        /**
                         * TargetArtifact manifestPath.
                         * @member {string} manifestPath
                         * @memberof google.cloud.deploy.v1.TargetArtifact
                         * @instance
                         */
                        TargetArtifact.prototype.manifestPath = "";
    
                        /**
                         * TargetArtifact phaseArtifacts.
                         * @member {Object.<string,google.cloud.deploy.v1.TargetArtifact.IPhaseArtifact>} phaseArtifacts
                         * @memberof google.cloud.deploy.v1.TargetArtifact
                         * @instance
                         */
                        TargetArtifact.prototype.phaseArtifacts = $util.emptyObject;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * TargetArtifact uri.
                         * @member {"artifactUri"|undefined} uri
                         * @memberof google.cloud.deploy.v1.TargetArtifact
                         * @instance
                         */
                        Object.defineProperty(TargetArtifact.prototype, "uri", {
                            get: $util.oneOfGetter($oneOfFields = ["artifactUri"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new TargetArtifact instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.TargetArtifact
                         * @static
                         * @param {google.cloud.deploy.v1.ITargetArtifact=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.TargetArtifact} TargetArtifact instance
                         */
                        TargetArtifact.create = function create(properties) {
                            return new TargetArtifact(properties);
                        };
    
                        /**
                         * Encodes the specified TargetArtifact message. Does not implicitly {@link google.cloud.deploy.v1.TargetArtifact.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.TargetArtifact
                         * @static
                         * @param {google.cloud.deploy.v1.ITargetArtifact} message TargetArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TargetArtifact.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.skaffoldConfigPath != null && Object.hasOwnProperty.call(message, "skaffoldConfigPath"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.skaffoldConfigPath);
                            if (message.manifestPath != null && Object.hasOwnProperty.call(message, "manifestPath"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.manifestPath);
                            if (message.artifactUri != null && Object.hasOwnProperty.call(message, "artifactUri"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.artifactUri);
                            if (message.phaseArtifacts != null && Object.hasOwnProperty.call(message, "phaseArtifacts"))
                                for (var keys = Object.keys(message.phaseArtifacts), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.deploy.v1.TargetArtifact.PhaseArtifact.encode(message.phaseArtifacts[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TargetArtifact message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.TargetArtifact.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.TargetArtifact
                         * @static
                         * @param {google.cloud.deploy.v1.ITargetArtifact} message TargetArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TargetArtifact.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TargetArtifact message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.TargetArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.TargetArtifact} TargetArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TargetArtifact.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.TargetArtifact(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.artifactUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.skaffoldConfigPath = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.manifestPath = reader.string();
                                        break;
                                    }
                                case 5: {
                                        if (message.phaseArtifacts === $util.emptyObject)
                                            message.phaseArtifacts = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.deploy.v1.TargetArtifact.PhaseArtifact.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.phaseArtifacts[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TargetArtifact message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.TargetArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.TargetArtifact} TargetArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TargetArtifact.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TargetArtifact message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.TargetArtifact
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TargetArtifact.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.artifactUri != null && message.hasOwnProperty("artifactUri")) {
                                properties.uri = 1;
                                if (!$util.isString(message.artifactUri))
                                    return "artifactUri: string expected";
                            }
                            if (message.skaffoldConfigPath != null && message.hasOwnProperty("skaffoldConfigPath"))
                                if (!$util.isString(message.skaffoldConfigPath))
                                    return "skaffoldConfigPath: string expected";
                            if (message.manifestPath != null && message.hasOwnProperty("manifestPath"))
                                if (!$util.isString(message.manifestPath))
                                    return "manifestPath: string expected";
                            if (message.phaseArtifacts != null && message.hasOwnProperty("phaseArtifacts")) {
                                if (!$util.isObject(message.phaseArtifacts))
                                    return "phaseArtifacts: object expected";
                                var key = Object.keys(message.phaseArtifacts);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.TargetArtifact.PhaseArtifact.verify(message.phaseArtifacts[key[i]]);
                                    if (error)
                                        return "phaseArtifacts." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TargetArtifact message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.TargetArtifact
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.TargetArtifact} TargetArtifact
                         */
                        TargetArtifact.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.TargetArtifact)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.TargetArtifact();
                            if (object.artifactUri != null)
                                message.artifactUri = String(object.artifactUri);
                            if (object.skaffoldConfigPath != null)
                                message.skaffoldConfigPath = String(object.skaffoldConfigPath);
                            if (object.manifestPath != null)
                                message.manifestPath = String(object.manifestPath);
                            if (object.phaseArtifacts) {
                                if (typeof object.phaseArtifacts !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.TargetArtifact.phaseArtifacts: object expected");
                                message.phaseArtifacts = {};
                                for (var keys = Object.keys(object.phaseArtifacts), i = 0; i < keys.length; ++i) {
                                    if (typeof object.phaseArtifacts[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.TargetArtifact.phaseArtifacts: object expected");
                                    message.phaseArtifacts[keys[i]] = $root.google.cloud.deploy.v1.TargetArtifact.PhaseArtifact.fromObject(object.phaseArtifacts[keys[i]]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TargetArtifact message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.TargetArtifact
                         * @static
                         * @param {google.cloud.deploy.v1.TargetArtifact} message TargetArtifact
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TargetArtifact.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.phaseArtifacts = {};
                            if (options.defaults) {
                                object.skaffoldConfigPath = "";
                                object.manifestPath = "";
                            }
                            if (message.skaffoldConfigPath != null && message.hasOwnProperty("skaffoldConfigPath"))
                                object.skaffoldConfigPath = message.skaffoldConfigPath;
                            if (message.manifestPath != null && message.hasOwnProperty("manifestPath"))
                                object.manifestPath = message.manifestPath;
                            if (message.artifactUri != null && message.hasOwnProperty("artifactUri")) {
                                object.artifactUri = message.artifactUri;
                                if (options.oneofs)
                                    object.uri = "artifactUri";
                            }
                            var keys2;
                            if (message.phaseArtifacts && (keys2 = Object.keys(message.phaseArtifacts)).length) {
                                object.phaseArtifacts = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.phaseArtifacts[keys2[j]] = $root.google.cloud.deploy.v1.TargetArtifact.PhaseArtifact.toObject(message.phaseArtifacts[keys2[j]], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this TargetArtifact to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.TargetArtifact
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TargetArtifact.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TargetArtifact
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.TargetArtifact
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TargetArtifact.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.TargetArtifact";
                        };
    
                        TargetArtifact.PhaseArtifact = (function() {
    
                            /**
                             * Properties of a PhaseArtifact.
                             * @memberof google.cloud.deploy.v1.TargetArtifact
                             * @interface IPhaseArtifact
                             * @property {string|null} [skaffoldConfigPath] PhaseArtifact skaffoldConfigPath
                             * @property {string|null} [manifestPath] PhaseArtifact manifestPath
                             * @property {string|null} [jobManifestsPath] PhaseArtifact jobManifestsPath
                             */
    
                            /**
                             * Constructs a new PhaseArtifact.
                             * @memberof google.cloud.deploy.v1.TargetArtifact
                             * @classdesc Represents a PhaseArtifact.
                             * @implements IPhaseArtifact
                             * @constructor
                             * @param {google.cloud.deploy.v1.TargetArtifact.IPhaseArtifact=} [properties] Properties to set
                             */
                            function PhaseArtifact(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PhaseArtifact skaffoldConfigPath.
                             * @member {string} skaffoldConfigPath
                             * @memberof google.cloud.deploy.v1.TargetArtifact.PhaseArtifact
                             * @instance
                             */
                            PhaseArtifact.prototype.skaffoldConfigPath = "";
    
                            /**
                             * PhaseArtifact manifestPath.
                             * @member {string} manifestPath
                             * @memberof google.cloud.deploy.v1.TargetArtifact.PhaseArtifact
                             * @instance
                             */
                            PhaseArtifact.prototype.manifestPath = "";
    
                            /**
                             * PhaseArtifact jobManifestsPath.
                             * @member {string} jobManifestsPath
                             * @memberof google.cloud.deploy.v1.TargetArtifact.PhaseArtifact
                             * @instance
                             */
                            PhaseArtifact.prototype.jobManifestsPath = "";
    
                            /**
                             * Creates a new PhaseArtifact instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.deploy.v1.TargetArtifact.PhaseArtifact
                             * @static
                             * @param {google.cloud.deploy.v1.TargetArtifact.IPhaseArtifact=} [properties] Properties to set
                             * @returns {google.cloud.deploy.v1.TargetArtifact.PhaseArtifact} PhaseArtifact instance
                             */
                            PhaseArtifact.create = function create(properties) {
                                return new PhaseArtifact(properties);
                            };
    
                            /**
                             * Encodes the specified PhaseArtifact message. Does not implicitly {@link google.cloud.deploy.v1.TargetArtifact.PhaseArtifact.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.deploy.v1.TargetArtifact.PhaseArtifact
                             * @static
                             * @param {google.cloud.deploy.v1.TargetArtifact.IPhaseArtifact} message PhaseArtifact message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PhaseArtifact.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.skaffoldConfigPath != null && Object.hasOwnProperty.call(message, "skaffoldConfigPath"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.skaffoldConfigPath);
                                if (message.manifestPath != null && Object.hasOwnProperty.call(message, "manifestPath"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.manifestPath);
                                if (message.jobManifestsPath != null && Object.hasOwnProperty.call(message, "jobManifestsPath"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.jobManifestsPath);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PhaseArtifact message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.TargetArtifact.PhaseArtifact.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.deploy.v1.TargetArtifact.PhaseArtifact
                             * @static
                             * @param {google.cloud.deploy.v1.TargetArtifact.IPhaseArtifact} message PhaseArtifact message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PhaseArtifact.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PhaseArtifact message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.deploy.v1.TargetArtifact.PhaseArtifact
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.deploy.v1.TargetArtifact.PhaseArtifact} PhaseArtifact
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PhaseArtifact.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.TargetArtifact.PhaseArtifact();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.skaffoldConfigPath = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.manifestPath = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.jobManifestsPath = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PhaseArtifact message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.deploy.v1.TargetArtifact.PhaseArtifact
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.deploy.v1.TargetArtifact.PhaseArtifact} PhaseArtifact
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PhaseArtifact.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PhaseArtifact message.
                             * @function verify
                             * @memberof google.cloud.deploy.v1.TargetArtifact.PhaseArtifact
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PhaseArtifact.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.skaffoldConfigPath != null && message.hasOwnProperty("skaffoldConfigPath"))
                                    if (!$util.isString(message.skaffoldConfigPath))
                                        return "skaffoldConfigPath: string expected";
                                if (message.manifestPath != null && message.hasOwnProperty("manifestPath"))
                                    if (!$util.isString(message.manifestPath))
                                        return "manifestPath: string expected";
                                if (message.jobManifestsPath != null && message.hasOwnProperty("jobManifestsPath"))
                                    if (!$util.isString(message.jobManifestsPath))
                                        return "jobManifestsPath: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a PhaseArtifact message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.deploy.v1.TargetArtifact.PhaseArtifact
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.deploy.v1.TargetArtifact.PhaseArtifact} PhaseArtifact
                             */
                            PhaseArtifact.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.deploy.v1.TargetArtifact.PhaseArtifact)
                                    return object;
                                var message = new $root.google.cloud.deploy.v1.TargetArtifact.PhaseArtifact();
                                if (object.skaffoldConfigPath != null)
                                    message.skaffoldConfigPath = String(object.skaffoldConfigPath);
                                if (object.manifestPath != null)
                                    message.manifestPath = String(object.manifestPath);
                                if (object.jobManifestsPath != null)
                                    message.jobManifestsPath = String(object.jobManifestsPath);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PhaseArtifact message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.deploy.v1.TargetArtifact.PhaseArtifact
                             * @static
                             * @param {google.cloud.deploy.v1.TargetArtifact.PhaseArtifact} message PhaseArtifact
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PhaseArtifact.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.skaffoldConfigPath = "";
                                    object.manifestPath = "";
                                    object.jobManifestsPath = "";
                                }
                                if (message.skaffoldConfigPath != null && message.hasOwnProperty("skaffoldConfigPath"))
                                    object.skaffoldConfigPath = message.skaffoldConfigPath;
                                if (message.manifestPath != null && message.hasOwnProperty("manifestPath"))
                                    object.manifestPath = message.manifestPath;
                                if (message.jobManifestsPath != null && message.hasOwnProperty("jobManifestsPath"))
                                    object.jobManifestsPath = message.jobManifestsPath;
                                return object;
                            };
    
                            /**
                             * Converts this PhaseArtifact to JSON.
                             * @function toJSON
                             * @memberof google.cloud.deploy.v1.TargetArtifact.PhaseArtifact
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PhaseArtifact.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for PhaseArtifact
                             * @function getTypeUrl
                             * @memberof google.cloud.deploy.v1.TargetArtifact.PhaseArtifact
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            PhaseArtifact.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.deploy.v1.TargetArtifact.PhaseArtifact";
                            };
    
                            return PhaseArtifact;
                        })();
    
                        return TargetArtifact;
                    })();
    
                    v1.DeployArtifact = (function() {
    
                        /**
                         * Properties of a DeployArtifact.
                         * @memberof google.cloud.deploy.v1
                         * @interface IDeployArtifact
                         * @property {string|null} [artifactUri] DeployArtifact artifactUri
                         * @property {Array.<string>|null} [manifestPaths] DeployArtifact manifestPaths
                         */
    
                        /**
                         * Constructs a new DeployArtifact.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a DeployArtifact.
                         * @implements IDeployArtifact
                         * @constructor
                         * @param {google.cloud.deploy.v1.IDeployArtifact=} [properties] Properties to set
                         */
                        function DeployArtifact(properties) {
                            this.manifestPaths = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeployArtifact artifactUri.
                         * @member {string} artifactUri
                         * @memberof google.cloud.deploy.v1.DeployArtifact
                         * @instance
                         */
                        DeployArtifact.prototype.artifactUri = "";
    
                        /**
                         * DeployArtifact manifestPaths.
                         * @member {Array.<string>} manifestPaths
                         * @memberof google.cloud.deploy.v1.DeployArtifact
                         * @instance
                         */
                        DeployArtifact.prototype.manifestPaths = $util.emptyArray;
    
                        /**
                         * Creates a new DeployArtifact instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.DeployArtifact
                         * @static
                         * @param {google.cloud.deploy.v1.IDeployArtifact=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.DeployArtifact} DeployArtifact instance
                         */
                        DeployArtifact.create = function create(properties) {
                            return new DeployArtifact(properties);
                        };
    
                        /**
                         * Encodes the specified DeployArtifact message. Does not implicitly {@link google.cloud.deploy.v1.DeployArtifact.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.DeployArtifact
                         * @static
                         * @param {google.cloud.deploy.v1.IDeployArtifact} message DeployArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployArtifact.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.artifactUri != null && Object.hasOwnProperty.call(message, "artifactUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.artifactUri);
                            if (message.manifestPaths != null && message.manifestPaths.length)
                                for (var i = 0; i < message.manifestPaths.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.manifestPaths[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeployArtifact message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.DeployArtifact.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.DeployArtifact
                         * @static
                         * @param {google.cloud.deploy.v1.IDeployArtifact} message DeployArtifact message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployArtifact.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeployArtifact message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.DeployArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.DeployArtifact} DeployArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployArtifact.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.DeployArtifact();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.artifactUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.manifestPaths && message.manifestPaths.length))
                                            message.manifestPaths = [];
                                        message.manifestPaths.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeployArtifact message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.DeployArtifact
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.DeployArtifact} DeployArtifact
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployArtifact.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeployArtifact message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.DeployArtifact
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeployArtifact.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.artifactUri != null && message.hasOwnProperty("artifactUri"))
                                if (!$util.isString(message.artifactUri))
                                    return "artifactUri: string expected";
                            if (message.manifestPaths != null && message.hasOwnProperty("manifestPaths")) {
                                if (!Array.isArray(message.manifestPaths))
                                    return "manifestPaths: array expected";
                                for (var i = 0; i < message.manifestPaths.length; ++i)
                                    if (!$util.isString(message.manifestPaths[i]))
                                        return "manifestPaths: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DeployArtifact message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.DeployArtifact
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.DeployArtifact} DeployArtifact
                         */
                        DeployArtifact.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.DeployArtifact)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.DeployArtifact();
                            if (object.artifactUri != null)
                                message.artifactUri = String(object.artifactUri);
                            if (object.manifestPaths) {
                                if (!Array.isArray(object.manifestPaths))
                                    throw TypeError(".google.cloud.deploy.v1.DeployArtifact.manifestPaths: array expected");
                                message.manifestPaths = [];
                                for (var i = 0; i < object.manifestPaths.length; ++i)
                                    message.manifestPaths[i] = String(object.manifestPaths[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeployArtifact message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.DeployArtifact
                         * @static
                         * @param {google.cloud.deploy.v1.DeployArtifact} message DeployArtifact
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeployArtifact.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.manifestPaths = [];
                            if (options.defaults)
                                object.artifactUri = "";
                            if (message.artifactUri != null && message.hasOwnProperty("artifactUri"))
                                object.artifactUri = message.artifactUri;
                            if (message.manifestPaths && message.manifestPaths.length) {
                                object.manifestPaths = [];
                                for (var j = 0; j < message.manifestPaths.length; ++j)
                                    object.manifestPaths[j] = message.manifestPaths[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DeployArtifact to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.DeployArtifact
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeployArtifact.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeployArtifact
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.DeployArtifact
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeployArtifact.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.DeployArtifact";
                        };
    
                        return DeployArtifact;
                    })();
    
                    v1.CloudRunRenderMetadata = (function() {
    
                        /**
                         * Properties of a CloudRunRenderMetadata.
                         * @memberof google.cloud.deploy.v1
                         * @interface ICloudRunRenderMetadata
                         * @property {string|null} [service] CloudRunRenderMetadata service
                         */
    
                        /**
                         * Constructs a new CloudRunRenderMetadata.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a CloudRunRenderMetadata.
                         * @implements ICloudRunRenderMetadata
                         * @constructor
                         * @param {google.cloud.deploy.v1.ICloudRunRenderMetadata=} [properties] Properties to set
                         */
                        function CloudRunRenderMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CloudRunRenderMetadata service.
                         * @member {string} service
                         * @memberof google.cloud.deploy.v1.CloudRunRenderMetadata
                         * @instance
                         */
                        CloudRunRenderMetadata.prototype.service = "";
    
                        /**
                         * Creates a new CloudRunRenderMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.CloudRunRenderMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.ICloudRunRenderMetadata=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.CloudRunRenderMetadata} CloudRunRenderMetadata instance
                         */
                        CloudRunRenderMetadata.create = function create(properties) {
                            return new CloudRunRenderMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified CloudRunRenderMetadata message. Does not implicitly {@link google.cloud.deploy.v1.CloudRunRenderMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.CloudRunRenderMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.ICloudRunRenderMetadata} message CloudRunRenderMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudRunRenderMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CloudRunRenderMetadata message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.CloudRunRenderMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.CloudRunRenderMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.ICloudRunRenderMetadata} message CloudRunRenderMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudRunRenderMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CloudRunRenderMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.CloudRunRenderMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.CloudRunRenderMetadata} CloudRunRenderMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudRunRenderMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.CloudRunRenderMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CloudRunRenderMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.CloudRunRenderMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.CloudRunRenderMetadata} CloudRunRenderMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudRunRenderMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CloudRunRenderMetadata message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.CloudRunRenderMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CloudRunRenderMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CloudRunRenderMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.CloudRunRenderMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.CloudRunRenderMetadata} CloudRunRenderMetadata
                         */
                        CloudRunRenderMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.CloudRunRenderMetadata)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.CloudRunRenderMetadata();
                            if (object.service != null)
                                message.service = String(object.service);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CloudRunRenderMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.CloudRunRenderMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.CloudRunRenderMetadata} message CloudRunRenderMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CloudRunRenderMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.service = "";
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            return object;
                        };
    
                        /**
                         * Converts this CloudRunRenderMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.CloudRunRenderMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CloudRunRenderMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CloudRunRenderMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.CloudRunRenderMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CloudRunRenderMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.CloudRunRenderMetadata";
                        };
    
                        return CloudRunRenderMetadata;
                    })();
    
                    v1.RenderMetadata = (function() {
    
                        /**
                         * Properties of a RenderMetadata.
                         * @memberof google.cloud.deploy.v1
                         * @interface IRenderMetadata
                         * @property {google.cloud.deploy.v1.ICloudRunRenderMetadata|null} [cloudRun] RenderMetadata cloudRun
                         */
    
                        /**
                         * Constructs a new RenderMetadata.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a RenderMetadata.
                         * @implements IRenderMetadata
                         * @constructor
                         * @param {google.cloud.deploy.v1.IRenderMetadata=} [properties] Properties to set
                         */
                        function RenderMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RenderMetadata cloudRun.
                         * @member {google.cloud.deploy.v1.ICloudRunRenderMetadata|null|undefined} cloudRun
                         * @memberof google.cloud.deploy.v1.RenderMetadata
                         * @instance
                         */
                        RenderMetadata.prototype.cloudRun = null;
    
                        /**
                         * Creates a new RenderMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.RenderMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.IRenderMetadata=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.RenderMetadata} RenderMetadata instance
                         */
                        RenderMetadata.create = function create(properties) {
                            return new RenderMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified RenderMetadata message. Does not implicitly {@link google.cloud.deploy.v1.RenderMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.RenderMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.IRenderMetadata} message RenderMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RenderMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.cloudRun != null && Object.hasOwnProperty.call(message, "cloudRun"))
                                $root.google.cloud.deploy.v1.CloudRunRenderMetadata.encode(message.cloudRun, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RenderMetadata message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.RenderMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.RenderMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.IRenderMetadata} message RenderMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RenderMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RenderMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.RenderMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.RenderMetadata} RenderMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RenderMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.RenderMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.cloudRun = $root.google.cloud.deploy.v1.CloudRunRenderMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RenderMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.RenderMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.RenderMetadata} RenderMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RenderMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RenderMetadata message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.RenderMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RenderMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.cloudRun != null && message.hasOwnProperty("cloudRun")) {
                                var error = $root.google.cloud.deploy.v1.CloudRunRenderMetadata.verify(message.cloudRun);
                                if (error)
                                    return "cloudRun." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RenderMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.RenderMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.RenderMetadata} RenderMetadata
                         */
                        RenderMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.RenderMetadata)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.RenderMetadata();
                            if (object.cloudRun != null) {
                                if (typeof object.cloudRun !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.RenderMetadata.cloudRun: object expected");
                                message.cloudRun = $root.google.cloud.deploy.v1.CloudRunRenderMetadata.fromObject(object.cloudRun);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RenderMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.RenderMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.RenderMetadata} message RenderMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RenderMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.cloudRun = null;
                            if (message.cloudRun != null && message.hasOwnProperty("cloudRun"))
                                object.cloudRun = $root.google.cloud.deploy.v1.CloudRunRenderMetadata.toObject(message.cloudRun, options);
                            return object;
                        };
    
                        /**
                         * Converts this RenderMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.RenderMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RenderMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RenderMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.RenderMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RenderMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.RenderMetadata";
                        };
    
                        return RenderMetadata;
                    })();
    
                    v1.ListReleasesRequest = (function() {
    
                        /**
                         * Properties of a ListReleasesRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IListReleasesRequest
                         * @property {string|null} [parent] ListReleasesRequest parent
                         * @property {number|null} [pageSize] ListReleasesRequest pageSize
                         * @property {string|null} [pageToken] ListReleasesRequest pageToken
                         * @property {string|null} [filter] ListReleasesRequest filter
                         * @property {string|null} [orderBy] ListReleasesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListReleasesRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a ListReleasesRequest.
                         * @implements IListReleasesRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IListReleasesRequest=} [properties] Properties to set
                         */
                        function ListReleasesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListReleasesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.deploy.v1.ListReleasesRequest
                         * @instance
                         */
                        ListReleasesRequest.prototype.parent = "";
    
                        /**
                         * ListReleasesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.deploy.v1.ListReleasesRequest
                         * @instance
                         */
                        ListReleasesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListReleasesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.deploy.v1.ListReleasesRequest
                         * @instance
                         */
                        ListReleasesRequest.prototype.pageToken = "";
    
                        /**
                         * ListReleasesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.deploy.v1.ListReleasesRequest
                         * @instance
                         */
                        ListReleasesRequest.prototype.filter = "";
    
                        /**
                         * ListReleasesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.deploy.v1.ListReleasesRequest
                         * @instance
                         */
                        ListReleasesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListReleasesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ListReleasesRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IListReleasesRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ListReleasesRequest} ListReleasesRequest instance
                         */
                        ListReleasesRequest.create = function create(properties) {
                            return new ListReleasesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListReleasesRequest message. Does not implicitly {@link google.cloud.deploy.v1.ListReleasesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ListReleasesRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IListReleasesRequest} message ListReleasesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListReleasesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListReleasesRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ListReleasesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ListReleasesRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IListReleasesRequest} message ListReleasesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListReleasesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListReleasesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ListReleasesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ListReleasesRequest} ListReleasesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListReleasesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ListReleasesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListReleasesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ListReleasesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ListReleasesRequest} ListReleasesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListReleasesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListReleasesRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ListReleasesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListReleasesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListReleasesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ListReleasesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ListReleasesRequest} ListReleasesRequest
                         */
                        ListReleasesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ListReleasesRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.ListReleasesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListReleasesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ListReleasesRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ListReleasesRequest} message ListReleasesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListReleasesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListReleasesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ListReleasesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListReleasesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListReleasesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ListReleasesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListReleasesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ListReleasesRequest";
                        };
    
                        return ListReleasesRequest;
                    })();
    
                    v1.ListReleasesResponse = (function() {
    
                        /**
                         * Properties of a ListReleasesResponse.
                         * @memberof google.cloud.deploy.v1
                         * @interface IListReleasesResponse
                         * @property {Array.<google.cloud.deploy.v1.IRelease>|null} [releases] ListReleasesResponse releases
                         * @property {string|null} [nextPageToken] ListReleasesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListReleasesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListReleasesResponse.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a ListReleasesResponse.
                         * @implements IListReleasesResponse
                         * @constructor
                         * @param {google.cloud.deploy.v1.IListReleasesResponse=} [properties] Properties to set
                         */
                        function ListReleasesResponse(properties) {
                            this.releases = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListReleasesResponse releases.
                         * @member {Array.<google.cloud.deploy.v1.IRelease>} releases
                         * @memberof google.cloud.deploy.v1.ListReleasesResponse
                         * @instance
                         */
                        ListReleasesResponse.prototype.releases = $util.emptyArray;
    
                        /**
                         * ListReleasesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.deploy.v1.ListReleasesResponse
                         * @instance
                         */
                        ListReleasesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListReleasesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.deploy.v1.ListReleasesResponse
                         * @instance
                         */
                        ListReleasesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListReleasesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ListReleasesResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IListReleasesResponse=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ListReleasesResponse} ListReleasesResponse instance
                         */
                        ListReleasesResponse.create = function create(properties) {
                            return new ListReleasesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListReleasesResponse message. Does not implicitly {@link google.cloud.deploy.v1.ListReleasesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ListReleasesResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IListReleasesResponse} message ListReleasesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListReleasesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.releases != null && message.releases.length)
                                for (var i = 0; i < message.releases.length; ++i)
                                    $root.google.cloud.deploy.v1.Release.encode(message.releases[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListReleasesResponse message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ListReleasesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ListReleasesResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IListReleasesResponse} message ListReleasesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListReleasesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListReleasesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ListReleasesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ListReleasesResponse} ListReleasesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListReleasesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ListReleasesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.releases && message.releases.length))
                                            message.releases = [];
                                        message.releases.push($root.google.cloud.deploy.v1.Release.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListReleasesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ListReleasesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ListReleasesResponse} ListReleasesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListReleasesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListReleasesResponse message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ListReleasesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListReleasesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.releases != null && message.hasOwnProperty("releases")) {
                                if (!Array.isArray(message.releases))
                                    return "releases: array expected";
                                for (var i = 0; i < message.releases.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.Release.verify(message.releases[i]);
                                    if (error)
                                        return "releases." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListReleasesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ListReleasesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ListReleasesResponse} ListReleasesResponse
                         */
                        ListReleasesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ListReleasesResponse)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.ListReleasesResponse();
                            if (object.releases) {
                                if (!Array.isArray(object.releases))
                                    throw TypeError(".google.cloud.deploy.v1.ListReleasesResponse.releases: array expected");
                                message.releases = [];
                                for (var i = 0; i < object.releases.length; ++i) {
                                    if (typeof object.releases[i] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.ListReleasesResponse.releases: object expected");
                                    message.releases[i] = $root.google.cloud.deploy.v1.Release.fromObject(object.releases[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.deploy.v1.ListReleasesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListReleasesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ListReleasesResponse
                         * @static
                         * @param {google.cloud.deploy.v1.ListReleasesResponse} message ListReleasesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListReleasesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.releases = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.releases && message.releases.length) {
                                object.releases = [];
                                for (var j = 0; j < message.releases.length; ++j)
                                    object.releases[j] = $root.google.cloud.deploy.v1.Release.toObject(message.releases[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListReleasesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ListReleasesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListReleasesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListReleasesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ListReleasesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListReleasesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ListReleasesResponse";
                        };
    
                        return ListReleasesResponse;
                    })();
    
                    v1.GetReleaseRequest = (function() {
    
                        /**
                         * Properties of a GetReleaseRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IGetReleaseRequest
                         * @property {string|null} [name] GetReleaseRequest name
                         */
    
                        /**
                         * Constructs a new GetReleaseRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a GetReleaseRequest.
                         * @implements IGetReleaseRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IGetReleaseRequest=} [properties] Properties to set
                         */
                        function GetReleaseRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetReleaseRequest name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.GetReleaseRequest
                         * @instance
                         */
                        GetReleaseRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetReleaseRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.GetReleaseRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetReleaseRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.GetReleaseRequest} GetReleaseRequest instance
                         */
                        GetReleaseRequest.create = function create(properties) {
                            return new GetReleaseRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetReleaseRequest message. Does not implicitly {@link google.cloud.deploy.v1.GetReleaseRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.GetReleaseRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetReleaseRequest} message GetReleaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetReleaseRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetReleaseRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.GetReleaseRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.GetReleaseRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetReleaseRequest} message GetReleaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetReleaseRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetReleaseRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.GetReleaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.GetReleaseRequest} GetReleaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetReleaseRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.GetReleaseRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetReleaseRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.GetReleaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.GetReleaseRequest} GetReleaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetReleaseRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetReleaseRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.GetReleaseRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetReleaseRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetReleaseRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.GetReleaseRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.GetReleaseRequest} GetReleaseRequest
                         */
                        GetReleaseRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.GetReleaseRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.GetReleaseRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetReleaseRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.GetReleaseRequest
                         * @static
                         * @param {google.cloud.deploy.v1.GetReleaseRequest} message GetReleaseRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetReleaseRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetReleaseRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.GetReleaseRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetReleaseRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetReleaseRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.GetReleaseRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetReleaseRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.GetReleaseRequest";
                        };
    
                        return GetReleaseRequest;
                    })();
    
                    v1.CreateReleaseRequest = (function() {
    
                        /**
                         * Properties of a CreateReleaseRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface ICreateReleaseRequest
                         * @property {string|null} [parent] CreateReleaseRequest parent
                         * @property {string|null} [releaseId] CreateReleaseRequest releaseId
                         * @property {google.cloud.deploy.v1.IRelease|null} [release] CreateReleaseRequest release
                         * @property {string|null} [requestId] CreateReleaseRequest requestId
                         * @property {boolean|null} [validateOnly] CreateReleaseRequest validateOnly
                         */
    
                        /**
                         * Constructs a new CreateReleaseRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a CreateReleaseRequest.
                         * @implements ICreateReleaseRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.ICreateReleaseRequest=} [properties] Properties to set
                         */
                        function CreateReleaseRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateReleaseRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.deploy.v1.CreateReleaseRequest
                         * @instance
                         */
                        CreateReleaseRequest.prototype.parent = "";
    
                        /**
                         * CreateReleaseRequest releaseId.
                         * @member {string} releaseId
                         * @memberof google.cloud.deploy.v1.CreateReleaseRequest
                         * @instance
                         */
                        CreateReleaseRequest.prototype.releaseId = "";
    
                        /**
                         * CreateReleaseRequest release.
                         * @member {google.cloud.deploy.v1.IRelease|null|undefined} release
                         * @memberof google.cloud.deploy.v1.CreateReleaseRequest
                         * @instance
                         */
                        CreateReleaseRequest.prototype.release = null;
    
                        /**
                         * CreateReleaseRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.deploy.v1.CreateReleaseRequest
                         * @instance
                         */
                        CreateReleaseRequest.prototype.requestId = "";
    
                        /**
                         * CreateReleaseRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.deploy.v1.CreateReleaseRequest
                         * @instance
                         */
                        CreateReleaseRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new CreateReleaseRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.CreateReleaseRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateReleaseRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.CreateReleaseRequest} CreateReleaseRequest instance
                         */
                        CreateReleaseRequest.create = function create(properties) {
                            return new CreateReleaseRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateReleaseRequest message. Does not implicitly {@link google.cloud.deploy.v1.CreateReleaseRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.CreateReleaseRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateReleaseRequest} message CreateReleaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateReleaseRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.releaseId != null && Object.hasOwnProperty.call(message, "releaseId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.releaseId);
                            if (message.release != null && Object.hasOwnProperty.call(message, "release"))
                                $root.google.cloud.deploy.v1.Release.encode(message.release, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateReleaseRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.CreateReleaseRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.CreateReleaseRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateReleaseRequest} message CreateReleaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateReleaseRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateReleaseRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.CreateReleaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.CreateReleaseRequest} CreateReleaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateReleaseRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.CreateReleaseRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.releaseId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.release = $root.google.cloud.deploy.v1.Release.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateReleaseRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.CreateReleaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.CreateReleaseRequest} CreateReleaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateReleaseRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateReleaseRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.CreateReleaseRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateReleaseRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.releaseId != null && message.hasOwnProperty("releaseId"))
                                if (!$util.isString(message.releaseId))
                                    return "releaseId: string expected";
                            if (message.release != null && message.hasOwnProperty("release")) {
                                var error = $root.google.cloud.deploy.v1.Release.verify(message.release);
                                if (error)
                                    return "release." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateReleaseRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.CreateReleaseRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.CreateReleaseRequest} CreateReleaseRequest
                         */
                        CreateReleaseRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.CreateReleaseRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.CreateReleaseRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.releaseId != null)
                                message.releaseId = String(object.releaseId);
                            if (object.release != null) {
                                if (typeof object.release !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.CreateReleaseRequest.release: object expected");
                                message.release = $root.google.cloud.deploy.v1.Release.fromObject(object.release);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateReleaseRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.CreateReleaseRequest
                         * @static
                         * @param {google.cloud.deploy.v1.CreateReleaseRequest} message CreateReleaseRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateReleaseRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.releaseId = "";
                                object.release = null;
                                object.requestId = "";
                                object.validateOnly = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.releaseId != null && message.hasOwnProperty("releaseId"))
                                object.releaseId = message.releaseId;
                            if (message.release != null && message.hasOwnProperty("release"))
                                object.release = $root.google.cloud.deploy.v1.Release.toObject(message.release, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this CreateReleaseRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.CreateReleaseRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateReleaseRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateReleaseRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.CreateReleaseRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateReleaseRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.CreateReleaseRequest";
                        };
    
                        return CreateReleaseRequest;
                    })();
    
                    v1.Rollout = (function() {
    
                        /**
                         * Properties of a Rollout.
                         * @memberof google.cloud.deploy.v1
                         * @interface IRollout
                         * @property {string|null} [name] Rollout name
                         * @property {string|null} [uid] Rollout uid
                         * @property {string|null} [description] Rollout description
                         * @property {Object.<string,string>|null} [annotations] Rollout annotations
                         * @property {Object.<string,string>|null} [labels] Rollout labels
                         * @property {google.protobuf.ITimestamp|null} [createTime] Rollout createTime
                         * @property {google.protobuf.ITimestamp|null} [approveTime] Rollout approveTime
                         * @property {google.protobuf.ITimestamp|null} [enqueueTime] Rollout enqueueTime
                         * @property {google.protobuf.ITimestamp|null} [deployStartTime] Rollout deployStartTime
                         * @property {google.protobuf.ITimestamp|null} [deployEndTime] Rollout deployEndTime
                         * @property {string|null} [targetId] Rollout targetId
                         * @property {google.cloud.deploy.v1.Rollout.ApprovalState|null} [approvalState] Rollout approvalState
                         * @property {google.cloud.deploy.v1.Rollout.State|null} [state] Rollout state
                         * @property {string|null} [failureReason] Rollout failureReason
                         * @property {string|null} [deployingBuild] Rollout deployingBuild
                         * @property {string|null} [etag] Rollout etag
                         * @property {google.cloud.deploy.v1.Rollout.FailureCause|null} [deployFailureCause] Rollout deployFailureCause
                         * @property {Array.<google.cloud.deploy.v1.IPhase>|null} [phases] Rollout phases
                         * @property {google.cloud.deploy.v1.IMetadata|null} [metadata] Rollout metadata
                         * @property {string|null} [controllerRollout] Rollout controllerRollout
                         */
    
                        /**
                         * Constructs a new Rollout.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a Rollout.
                         * @implements IRollout
                         * @constructor
                         * @param {google.cloud.deploy.v1.IRollout=} [properties] Properties to set
                         */
                        function Rollout(properties) {
                            this.annotations = {};
                            this.labels = {};
                            this.phases = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Rollout name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.name = "";
    
                        /**
                         * Rollout uid.
                         * @member {string} uid
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.uid = "";
    
                        /**
                         * Rollout description.
                         * @member {string} description
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.description = "";
    
                        /**
                         * Rollout annotations.
                         * @member {Object.<string,string>} annotations
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.annotations = $util.emptyObject;
    
                        /**
                         * Rollout labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.labels = $util.emptyObject;
    
                        /**
                         * Rollout createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.createTime = null;
    
                        /**
                         * Rollout approveTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} approveTime
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.approveTime = null;
    
                        /**
                         * Rollout enqueueTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} enqueueTime
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.enqueueTime = null;
    
                        /**
                         * Rollout deployStartTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deployStartTime
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.deployStartTime = null;
    
                        /**
                         * Rollout deployEndTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deployEndTime
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.deployEndTime = null;
    
                        /**
                         * Rollout targetId.
                         * @member {string} targetId
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.targetId = "";
    
                        /**
                         * Rollout approvalState.
                         * @member {google.cloud.deploy.v1.Rollout.ApprovalState} approvalState
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.approvalState = 0;
    
                        /**
                         * Rollout state.
                         * @member {google.cloud.deploy.v1.Rollout.State} state
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.state = 0;
    
                        /**
                         * Rollout failureReason.
                         * @member {string} failureReason
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.failureReason = "";
    
                        /**
                         * Rollout deployingBuild.
                         * @member {string} deployingBuild
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.deployingBuild = "";
    
                        /**
                         * Rollout etag.
                         * @member {string} etag
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.etag = "";
    
                        /**
                         * Rollout deployFailureCause.
                         * @member {google.cloud.deploy.v1.Rollout.FailureCause} deployFailureCause
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.deployFailureCause = 0;
    
                        /**
                         * Rollout phases.
                         * @member {Array.<google.cloud.deploy.v1.IPhase>} phases
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.phases = $util.emptyArray;
    
                        /**
                         * Rollout metadata.
                         * @member {google.cloud.deploy.v1.IMetadata|null|undefined} metadata
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.metadata = null;
    
                        /**
                         * Rollout controllerRollout.
                         * @member {string} controllerRollout
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         */
                        Rollout.prototype.controllerRollout = "";
    
                        /**
                         * Creates a new Rollout instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @static
                         * @param {google.cloud.deploy.v1.IRollout=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.Rollout} Rollout instance
                         */
                        Rollout.create = function create(properties) {
                            return new Rollout(properties);
                        };
    
                        /**
                         * Encodes the specified Rollout message. Does not implicitly {@link google.cloud.deploy.v1.Rollout.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @static
                         * @param {google.cloud.deploy.v1.IRollout} message Rollout message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Rollout.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uid);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.annotations != null && Object.hasOwnProperty.call(message, "annotations"))
                                for (var keys = Object.keys(message.annotations), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.annotations[keys[i]]).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.approveTime != null && Object.hasOwnProperty.call(message, "approveTime"))
                                $root.google.protobuf.Timestamp.encode(message.approveTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.enqueueTime != null && Object.hasOwnProperty.call(message, "enqueueTime"))
                                $root.google.protobuf.Timestamp.encode(message.enqueueTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.deployStartTime != null && Object.hasOwnProperty.call(message, "deployStartTime"))
                                $root.google.protobuf.Timestamp.encode(message.deployStartTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.deployEndTime != null && Object.hasOwnProperty.call(message, "deployEndTime"))
                                $root.google.protobuf.Timestamp.encode(message.deployEndTime, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.approvalState != null && Object.hasOwnProperty.call(message, "approvalState"))
                                writer.uint32(/* id 12, wireType 0 =*/96).int32(message.approvalState);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.state);
                            if (message.failureReason != null && Object.hasOwnProperty.call(message, "failureReason"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.failureReason);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.etag);
                            if (message.deployingBuild != null && Object.hasOwnProperty.call(message, "deployingBuild"))
                                writer.uint32(/* id 17, wireType 2 =*/138).string(message.deployingBuild);
                            if (message.targetId != null && Object.hasOwnProperty.call(message, "targetId"))
                                writer.uint32(/* id 18, wireType 2 =*/146).string(message.targetId);
                            if (message.deployFailureCause != null && Object.hasOwnProperty.call(message, "deployFailureCause"))
                                writer.uint32(/* id 19, wireType 0 =*/152).int32(message.deployFailureCause);
                            if (message.phases != null && message.phases.length)
                                for (var i = 0; i < message.phases.length; ++i)
                                    $root.google.cloud.deploy.v1.Phase.encode(message.phases[i], writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.cloud.deploy.v1.Metadata.encode(message.metadata, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                            if (message.controllerRollout != null && Object.hasOwnProperty.call(message, "controllerRollout"))
                                writer.uint32(/* id 25, wireType 2 =*/202).string(message.controllerRollout);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Rollout message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Rollout.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @static
                         * @param {google.cloud.deploy.v1.IRollout} message Rollout message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Rollout.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Rollout message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.Rollout} Rollout
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Rollout.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Rollout(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (message.annotations === $util.emptyObject)
                                            message.annotations = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.annotations[key] = value;
                                        break;
                                    }
                                case 5: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.approveTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.enqueueTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.deployStartTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.deployEndTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 18: {
                                        message.targetId = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.approvalState = reader.int32();
                                        break;
                                    }
                                case 13: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 14: {
                                        message.failureReason = reader.string();
                                        break;
                                    }
                                case 17: {
                                        message.deployingBuild = reader.string();
                                        break;
                                    }
                                case 16: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                case 19: {
                                        message.deployFailureCause = reader.int32();
                                        break;
                                    }
                                case 23: {
                                        if (!(message.phases && message.phases.length))
                                            message.phases = [];
                                        message.phases.push($root.google.cloud.deploy.v1.Phase.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 24: {
                                        message.metadata = $root.google.cloud.deploy.v1.Metadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 25: {
                                        message.controllerRollout = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Rollout message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.Rollout} Rollout
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Rollout.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Rollout message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Rollout.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.annotations != null && message.hasOwnProperty("annotations")) {
                                if (!$util.isObject(message.annotations))
                                    return "annotations: object expected";
                                var key = Object.keys(message.annotations);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.annotations[key[i]]))
                                        return "annotations: string{k:string} expected";
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.approveTime != null && message.hasOwnProperty("approveTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.approveTime);
                                if (error)
                                    return "approveTime." + error;
                            }
                            if (message.enqueueTime != null && message.hasOwnProperty("enqueueTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.enqueueTime);
                                if (error)
                                    return "enqueueTime." + error;
                            }
                            if (message.deployStartTime != null && message.hasOwnProperty("deployStartTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deployStartTime);
                                if (error)
                                    return "deployStartTime." + error;
                            }
                            if (message.deployEndTime != null && message.hasOwnProperty("deployEndTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deployEndTime);
                                if (error)
                                    return "deployEndTime." + error;
                            }
                            if (message.targetId != null && message.hasOwnProperty("targetId"))
                                if (!$util.isString(message.targetId))
                                    return "targetId: string expected";
                            if (message.approvalState != null && message.hasOwnProperty("approvalState"))
                                switch (message.approvalState) {
                                default:
                                    return "approvalState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                    break;
                                }
                            if (message.failureReason != null && message.hasOwnProperty("failureReason"))
                                if (!$util.isString(message.failureReason))
                                    return "failureReason: string expected";
                            if (message.deployingBuild != null && message.hasOwnProperty("deployingBuild"))
                                if (!$util.isString(message.deployingBuild))
                                    return "deployingBuild: string expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            if (message.deployFailureCause != null && message.hasOwnProperty("deployFailureCause"))
                                switch (message.deployFailureCause) {
                                default:
                                    return "deployFailureCause: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.phases != null && message.hasOwnProperty("phases")) {
                                if (!Array.isArray(message.phases))
                                    return "phases: array expected";
                                for (var i = 0; i < message.phases.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.Phase.verify(message.phases[i]);
                                    if (error)
                                        return "phases." + error;
                                }
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.deploy.v1.Metadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            if (message.controllerRollout != null && message.hasOwnProperty("controllerRollout"))
                                if (!$util.isString(message.controllerRollout))
                                    return "controllerRollout: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Rollout message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.Rollout} Rollout
                         */
                        Rollout.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.Rollout)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.Rollout();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.annotations) {
                                if (typeof object.annotations !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Rollout.annotations: object expected");
                                message.annotations = {};
                                for (var keys = Object.keys(object.annotations), i = 0; i < keys.length; ++i)
                                    message.annotations[keys[i]] = String(object.annotations[keys[i]]);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Rollout.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Rollout.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.approveTime != null) {
                                if (typeof object.approveTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Rollout.approveTime: object expected");
                                message.approveTime = $root.google.protobuf.Timestamp.fromObject(object.approveTime);
                            }
                            if (object.enqueueTime != null) {
                                if (typeof object.enqueueTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Rollout.enqueueTime: object expected");
                                message.enqueueTime = $root.google.protobuf.Timestamp.fromObject(object.enqueueTime);
                            }
                            if (object.deployStartTime != null) {
                                if (typeof object.deployStartTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Rollout.deployStartTime: object expected");
                                message.deployStartTime = $root.google.protobuf.Timestamp.fromObject(object.deployStartTime);
                            }
                            if (object.deployEndTime != null) {
                                if (typeof object.deployEndTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Rollout.deployEndTime: object expected");
                                message.deployEndTime = $root.google.protobuf.Timestamp.fromObject(object.deployEndTime);
                            }
                            if (object.targetId != null)
                                message.targetId = String(object.targetId);
                            switch (object.approvalState) {
                            default:
                                if (typeof object.approvalState === "number") {
                                    message.approvalState = object.approvalState;
                                    break;
                                }
                                break;
                            case "APPROVAL_STATE_UNSPECIFIED":
                            case 0:
                                message.approvalState = 0;
                                break;
                            case "NEEDS_APPROVAL":
                            case 1:
                                message.approvalState = 1;
                                break;
                            case "DOES_NOT_NEED_APPROVAL":
                            case 2:
                                message.approvalState = 2;
                                break;
                            case "APPROVED":
                            case 3:
                                message.approvalState = 3;
                                break;
                            case "REJECTED":
                            case 4:
                                message.approvalState = 4;
                                break;
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "SUCCEEDED":
                            case 1:
                                message.state = 1;
                                break;
                            case "FAILED":
                            case 2:
                                message.state = 2;
                                break;
                            case "IN_PROGRESS":
                            case 3:
                                message.state = 3;
                                break;
                            case "PENDING_APPROVAL":
                            case 4:
                                message.state = 4;
                                break;
                            case "APPROVAL_REJECTED":
                            case 5:
                                message.state = 5;
                                break;
                            case "PENDING":
                            case 6:
                                message.state = 6;
                                break;
                            case "PENDING_RELEASE":
                            case 7:
                                message.state = 7;
                                break;
                            case "CANCELLING":
                            case 8:
                                message.state = 8;
                                break;
                            case "CANCELLED":
                            case 9:
                                message.state = 9;
                                break;
                            case "HALTED":
                            case 10:
                                message.state = 10;
                                break;
                            }
                            if (object.failureReason != null)
                                message.failureReason = String(object.failureReason);
                            if (object.deployingBuild != null)
                                message.deployingBuild = String(object.deployingBuild);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            switch (object.deployFailureCause) {
                            default:
                                if (typeof object.deployFailureCause === "number") {
                                    message.deployFailureCause = object.deployFailureCause;
                                    break;
                                }
                                break;
                            case "FAILURE_CAUSE_UNSPECIFIED":
                            case 0:
                                message.deployFailureCause = 0;
                                break;
                            case "CLOUD_BUILD_UNAVAILABLE":
                            case 1:
                                message.deployFailureCause = 1;
                                break;
                            case "EXECUTION_FAILED":
                            case 2:
                                message.deployFailureCause = 2;
                                break;
                            case "DEADLINE_EXCEEDED":
                            case 3:
                                message.deployFailureCause = 3;
                                break;
                            case "RELEASE_FAILED":
                            case 4:
                                message.deployFailureCause = 4;
                                break;
                            case "RELEASE_ABANDONED":
                            case 5:
                                message.deployFailureCause = 5;
                                break;
                            case "VERIFICATION_CONFIG_NOT_FOUND":
                            case 6:
                                message.deployFailureCause = 6;
                                break;
                            case "CLOUD_BUILD_REQUEST_FAILED":
                            case 7:
                                message.deployFailureCause = 7;
                                break;
                            }
                            if (object.phases) {
                                if (!Array.isArray(object.phases))
                                    throw TypeError(".google.cloud.deploy.v1.Rollout.phases: array expected");
                                message.phases = [];
                                for (var i = 0; i < object.phases.length; ++i) {
                                    if (typeof object.phases[i] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.Rollout.phases: object expected");
                                    message.phases[i] = $root.google.cloud.deploy.v1.Phase.fromObject(object.phases[i]);
                                }
                            }
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Rollout.metadata: object expected");
                                message.metadata = $root.google.cloud.deploy.v1.Metadata.fromObject(object.metadata);
                            }
                            if (object.controllerRollout != null)
                                message.controllerRollout = String(object.controllerRollout);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Rollout message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @static
                         * @param {google.cloud.deploy.v1.Rollout} message Rollout
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Rollout.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.phases = [];
                            if (options.objects || options.defaults) {
                                object.annotations = {};
                                object.labels = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.uid = "";
                                object.description = "";
                                object.createTime = null;
                                object.approveTime = null;
                                object.enqueueTime = null;
                                object.deployStartTime = null;
                                object.deployEndTime = null;
                                object.approvalState = options.enums === String ? "APPROVAL_STATE_UNSPECIFIED" : 0;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.failureReason = "";
                                object.etag = "";
                                object.deployingBuild = "";
                                object.targetId = "";
                                object.deployFailureCause = options.enums === String ? "FAILURE_CAUSE_UNSPECIFIED" : 0;
                                object.metadata = null;
                                object.controllerRollout = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            var keys2;
                            if (message.annotations && (keys2 = Object.keys(message.annotations)).length) {
                                object.annotations = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.annotations[keys2[j]] = message.annotations[keys2[j]];
                            }
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.approveTime != null && message.hasOwnProperty("approveTime"))
                                object.approveTime = $root.google.protobuf.Timestamp.toObject(message.approveTime, options);
                            if (message.enqueueTime != null && message.hasOwnProperty("enqueueTime"))
                                object.enqueueTime = $root.google.protobuf.Timestamp.toObject(message.enqueueTime, options);
                            if (message.deployStartTime != null && message.hasOwnProperty("deployStartTime"))
                                object.deployStartTime = $root.google.protobuf.Timestamp.toObject(message.deployStartTime, options);
                            if (message.deployEndTime != null && message.hasOwnProperty("deployEndTime"))
                                object.deployEndTime = $root.google.protobuf.Timestamp.toObject(message.deployEndTime, options);
                            if (message.approvalState != null && message.hasOwnProperty("approvalState"))
                                object.approvalState = options.enums === String ? $root.google.cloud.deploy.v1.Rollout.ApprovalState[message.approvalState] === undefined ? message.approvalState : $root.google.cloud.deploy.v1.Rollout.ApprovalState[message.approvalState] : message.approvalState;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.deploy.v1.Rollout.State[message.state] === undefined ? message.state : $root.google.cloud.deploy.v1.Rollout.State[message.state] : message.state;
                            if (message.failureReason != null && message.hasOwnProperty("failureReason"))
                                object.failureReason = message.failureReason;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.deployingBuild != null && message.hasOwnProperty("deployingBuild"))
                                object.deployingBuild = message.deployingBuild;
                            if (message.targetId != null && message.hasOwnProperty("targetId"))
                                object.targetId = message.targetId;
                            if (message.deployFailureCause != null && message.hasOwnProperty("deployFailureCause"))
                                object.deployFailureCause = options.enums === String ? $root.google.cloud.deploy.v1.Rollout.FailureCause[message.deployFailureCause] === undefined ? message.deployFailureCause : $root.google.cloud.deploy.v1.Rollout.FailureCause[message.deployFailureCause] : message.deployFailureCause;
                            if (message.phases && message.phases.length) {
                                object.phases = [];
                                for (var j = 0; j < message.phases.length; ++j)
                                    object.phases[j] = $root.google.cloud.deploy.v1.Phase.toObject(message.phases[j], options);
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.deploy.v1.Metadata.toObject(message.metadata, options);
                            if (message.controllerRollout != null && message.hasOwnProperty("controllerRollout"))
                                object.controllerRollout = message.controllerRollout;
                            return object;
                        };
    
                        /**
                         * Converts this Rollout to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Rollout.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Rollout
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.Rollout
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Rollout.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.Rollout";
                        };
    
                        /**
                         * ApprovalState enum.
                         * @name google.cloud.deploy.v1.Rollout.ApprovalState
                         * @enum {number}
                         * @property {number} APPROVAL_STATE_UNSPECIFIED=0 APPROVAL_STATE_UNSPECIFIED value
                         * @property {number} NEEDS_APPROVAL=1 NEEDS_APPROVAL value
                         * @property {number} DOES_NOT_NEED_APPROVAL=2 DOES_NOT_NEED_APPROVAL value
                         * @property {number} APPROVED=3 APPROVED value
                         * @property {number} REJECTED=4 REJECTED value
                         */
                        Rollout.ApprovalState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "APPROVAL_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NEEDS_APPROVAL"] = 1;
                            values[valuesById[2] = "DOES_NOT_NEED_APPROVAL"] = 2;
                            values[valuesById[3] = "APPROVED"] = 3;
                            values[valuesById[4] = "REJECTED"] = 4;
                            return values;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.deploy.v1.Rollout.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} SUCCEEDED=1 SUCCEEDED value
                         * @property {number} FAILED=2 FAILED value
                         * @property {number} IN_PROGRESS=3 IN_PROGRESS value
                         * @property {number} PENDING_APPROVAL=4 PENDING_APPROVAL value
                         * @property {number} APPROVAL_REJECTED=5 APPROVAL_REJECTED value
                         * @property {number} PENDING=6 PENDING value
                         * @property {number} PENDING_RELEASE=7 PENDING_RELEASE value
                         * @property {number} CANCELLING=8 CANCELLING value
                         * @property {number} CANCELLED=9 CANCELLED value
                         * @property {number} HALTED=10 HALTED value
                         */
                        Rollout.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SUCCEEDED"] = 1;
                            values[valuesById[2] = "FAILED"] = 2;
                            values[valuesById[3] = "IN_PROGRESS"] = 3;
                            values[valuesById[4] = "PENDING_APPROVAL"] = 4;
                            values[valuesById[5] = "APPROVAL_REJECTED"] = 5;
                            values[valuesById[6] = "PENDING"] = 6;
                            values[valuesById[7] = "PENDING_RELEASE"] = 7;
                            values[valuesById[8] = "CANCELLING"] = 8;
                            values[valuesById[9] = "CANCELLED"] = 9;
                            values[valuesById[10] = "HALTED"] = 10;
                            return values;
                        })();
    
                        /**
                         * FailureCause enum.
                         * @name google.cloud.deploy.v1.Rollout.FailureCause
                         * @enum {number}
                         * @property {number} FAILURE_CAUSE_UNSPECIFIED=0 FAILURE_CAUSE_UNSPECIFIED value
                         * @property {number} CLOUD_BUILD_UNAVAILABLE=1 CLOUD_BUILD_UNAVAILABLE value
                         * @property {number} EXECUTION_FAILED=2 EXECUTION_FAILED value
                         * @property {number} DEADLINE_EXCEEDED=3 DEADLINE_EXCEEDED value
                         * @property {number} RELEASE_FAILED=4 RELEASE_FAILED value
                         * @property {number} RELEASE_ABANDONED=5 RELEASE_ABANDONED value
                         * @property {number} VERIFICATION_CONFIG_NOT_FOUND=6 VERIFICATION_CONFIG_NOT_FOUND value
                         * @property {number} CLOUD_BUILD_REQUEST_FAILED=7 CLOUD_BUILD_REQUEST_FAILED value
                         */
                        Rollout.FailureCause = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "FAILURE_CAUSE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CLOUD_BUILD_UNAVAILABLE"] = 1;
                            values[valuesById[2] = "EXECUTION_FAILED"] = 2;
                            values[valuesById[3] = "DEADLINE_EXCEEDED"] = 3;
                            values[valuesById[4] = "RELEASE_FAILED"] = 4;
                            values[valuesById[5] = "RELEASE_ABANDONED"] = 5;
                            values[valuesById[6] = "VERIFICATION_CONFIG_NOT_FOUND"] = 6;
                            values[valuesById[7] = "CLOUD_BUILD_REQUEST_FAILED"] = 7;
                            return values;
                        })();
    
                        return Rollout;
                    })();
    
                    v1.Metadata = (function() {
    
                        /**
                         * Properties of a Metadata.
                         * @memberof google.cloud.deploy.v1
                         * @interface IMetadata
                         * @property {google.cloud.deploy.v1.ICloudRunMetadata|null} [cloudRun] Metadata cloudRun
                         */
    
                        /**
                         * Constructs a new Metadata.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a Metadata.
                         * @implements IMetadata
                         * @constructor
                         * @param {google.cloud.deploy.v1.IMetadata=} [properties] Properties to set
                         */
                        function Metadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Metadata cloudRun.
                         * @member {google.cloud.deploy.v1.ICloudRunMetadata|null|undefined} cloudRun
                         * @memberof google.cloud.deploy.v1.Metadata
                         * @instance
                         */
                        Metadata.prototype.cloudRun = null;
    
                        /**
                         * Creates a new Metadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.Metadata
                         * @static
                         * @param {google.cloud.deploy.v1.IMetadata=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.Metadata} Metadata instance
                         */
                        Metadata.create = function create(properties) {
                            return new Metadata(properties);
                        };
    
                        /**
                         * Encodes the specified Metadata message. Does not implicitly {@link google.cloud.deploy.v1.Metadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.Metadata
                         * @static
                         * @param {google.cloud.deploy.v1.IMetadata} message Metadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Metadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.cloudRun != null && Object.hasOwnProperty.call(message, "cloudRun"))
                                $root.google.cloud.deploy.v1.CloudRunMetadata.encode(message.cloudRun, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Metadata message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Metadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.Metadata
                         * @static
                         * @param {google.cloud.deploy.v1.IMetadata} message Metadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Metadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Metadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.Metadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.Metadata} Metadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Metadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Metadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.cloudRun = $root.google.cloud.deploy.v1.CloudRunMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Metadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.Metadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.Metadata} Metadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Metadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Metadata message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.Metadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Metadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.cloudRun != null && message.hasOwnProperty("cloudRun")) {
                                var error = $root.google.cloud.deploy.v1.CloudRunMetadata.verify(message.cloudRun);
                                if (error)
                                    return "cloudRun." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Metadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.Metadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.Metadata} Metadata
                         */
                        Metadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.Metadata)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.Metadata();
                            if (object.cloudRun != null) {
                                if (typeof object.cloudRun !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Metadata.cloudRun: object expected");
                                message.cloudRun = $root.google.cloud.deploy.v1.CloudRunMetadata.fromObject(object.cloudRun);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Metadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.Metadata
                         * @static
                         * @param {google.cloud.deploy.v1.Metadata} message Metadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Metadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.cloudRun = null;
                            if (message.cloudRun != null && message.hasOwnProperty("cloudRun"))
                                object.cloudRun = $root.google.cloud.deploy.v1.CloudRunMetadata.toObject(message.cloudRun, options);
                            return object;
                        };
    
                        /**
                         * Converts this Metadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.Metadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Metadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Metadata
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.Metadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Metadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.Metadata";
                        };
    
                        return Metadata;
                    })();
    
                    v1.DeployJobRunMetadata = (function() {
    
                        /**
                         * Properties of a DeployJobRunMetadata.
                         * @memberof google.cloud.deploy.v1
                         * @interface IDeployJobRunMetadata
                         * @property {google.cloud.deploy.v1.ICloudRunMetadata|null} [cloudRun] DeployJobRunMetadata cloudRun
                         */
    
                        /**
                         * Constructs a new DeployJobRunMetadata.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a DeployJobRunMetadata.
                         * @implements IDeployJobRunMetadata
                         * @constructor
                         * @param {google.cloud.deploy.v1.IDeployJobRunMetadata=} [properties] Properties to set
                         */
                        function DeployJobRunMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeployJobRunMetadata cloudRun.
                         * @member {google.cloud.deploy.v1.ICloudRunMetadata|null|undefined} cloudRun
                         * @memberof google.cloud.deploy.v1.DeployJobRunMetadata
                         * @instance
                         */
                        DeployJobRunMetadata.prototype.cloudRun = null;
    
                        /**
                         * Creates a new DeployJobRunMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.DeployJobRunMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.IDeployJobRunMetadata=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.DeployJobRunMetadata} DeployJobRunMetadata instance
                         */
                        DeployJobRunMetadata.create = function create(properties) {
                            return new DeployJobRunMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified DeployJobRunMetadata message. Does not implicitly {@link google.cloud.deploy.v1.DeployJobRunMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.DeployJobRunMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.IDeployJobRunMetadata} message DeployJobRunMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployJobRunMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.cloudRun != null && Object.hasOwnProperty.call(message, "cloudRun"))
                                $root.google.cloud.deploy.v1.CloudRunMetadata.encode(message.cloudRun, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeployJobRunMetadata message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.DeployJobRunMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.DeployJobRunMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.IDeployJobRunMetadata} message DeployJobRunMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployJobRunMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeployJobRunMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.DeployJobRunMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.DeployJobRunMetadata} DeployJobRunMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployJobRunMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.DeployJobRunMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.cloudRun = $root.google.cloud.deploy.v1.CloudRunMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeployJobRunMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.DeployJobRunMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.DeployJobRunMetadata} DeployJobRunMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployJobRunMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeployJobRunMetadata message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.DeployJobRunMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeployJobRunMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.cloudRun != null && message.hasOwnProperty("cloudRun")) {
                                var error = $root.google.cloud.deploy.v1.CloudRunMetadata.verify(message.cloudRun);
                                if (error)
                                    return "cloudRun." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DeployJobRunMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.DeployJobRunMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.DeployJobRunMetadata} DeployJobRunMetadata
                         */
                        DeployJobRunMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.DeployJobRunMetadata)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.DeployJobRunMetadata();
                            if (object.cloudRun != null) {
                                if (typeof object.cloudRun !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.DeployJobRunMetadata.cloudRun: object expected");
                                message.cloudRun = $root.google.cloud.deploy.v1.CloudRunMetadata.fromObject(object.cloudRun);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeployJobRunMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.DeployJobRunMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.DeployJobRunMetadata} message DeployJobRunMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeployJobRunMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.cloudRun = null;
                            if (message.cloudRun != null && message.hasOwnProperty("cloudRun"))
                                object.cloudRun = $root.google.cloud.deploy.v1.CloudRunMetadata.toObject(message.cloudRun, options);
                            return object;
                        };
    
                        /**
                         * Converts this DeployJobRunMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.DeployJobRunMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeployJobRunMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeployJobRunMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.DeployJobRunMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeployJobRunMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.DeployJobRunMetadata";
                        };
    
                        return DeployJobRunMetadata;
                    })();
    
                    v1.CloudRunMetadata = (function() {
    
                        /**
                         * Properties of a CloudRunMetadata.
                         * @memberof google.cloud.deploy.v1
                         * @interface ICloudRunMetadata
                         * @property {string|null} [service] CloudRunMetadata service
                         * @property {Array.<string>|null} [serviceUrls] CloudRunMetadata serviceUrls
                         * @property {string|null} [revision] CloudRunMetadata revision
                         */
    
                        /**
                         * Constructs a new CloudRunMetadata.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a CloudRunMetadata.
                         * @implements ICloudRunMetadata
                         * @constructor
                         * @param {google.cloud.deploy.v1.ICloudRunMetadata=} [properties] Properties to set
                         */
                        function CloudRunMetadata(properties) {
                            this.serviceUrls = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CloudRunMetadata service.
                         * @member {string} service
                         * @memberof google.cloud.deploy.v1.CloudRunMetadata
                         * @instance
                         */
                        CloudRunMetadata.prototype.service = "";
    
                        /**
                         * CloudRunMetadata serviceUrls.
                         * @member {Array.<string>} serviceUrls
                         * @memberof google.cloud.deploy.v1.CloudRunMetadata
                         * @instance
                         */
                        CloudRunMetadata.prototype.serviceUrls = $util.emptyArray;
    
                        /**
                         * CloudRunMetadata revision.
                         * @member {string} revision
                         * @memberof google.cloud.deploy.v1.CloudRunMetadata
                         * @instance
                         */
                        CloudRunMetadata.prototype.revision = "";
    
                        /**
                         * Creates a new CloudRunMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.CloudRunMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.ICloudRunMetadata=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.CloudRunMetadata} CloudRunMetadata instance
                         */
                        CloudRunMetadata.create = function create(properties) {
                            return new CloudRunMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified CloudRunMetadata message. Does not implicitly {@link google.cloud.deploy.v1.CloudRunMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.CloudRunMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.ICloudRunMetadata} message CloudRunMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudRunMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.serviceUrls != null && message.serviceUrls.length)
                                for (var i = 0; i < message.serviceUrls.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.serviceUrls[i]);
                            if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.revision);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CloudRunMetadata message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.CloudRunMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.CloudRunMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.ICloudRunMetadata} message CloudRunMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudRunMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CloudRunMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.CloudRunMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.CloudRunMetadata} CloudRunMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudRunMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.CloudRunMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.serviceUrls && message.serviceUrls.length))
                                            message.serviceUrls = [];
                                        message.serviceUrls.push(reader.string());
                                        break;
                                    }
                                case 3: {
                                        message.revision = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CloudRunMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.CloudRunMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.CloudRunMetadata} CloudRunMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudRunMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CloudRunMetadata message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.CloudRunMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CloudRunMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.serviceUrls != null && message.hasOwnProperty("serviceUrls")) {
                                if (!Array.isArray(message.serviceUrls))
                                    return "serviceUrls: array expected";
                                for (var i = 0; i < message.serviceUrls.length; ++i)
                                    if (!$util.isString(message.serviceUrls[i]))
                                        return "serviceUrls: string[] expected";
                            }
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                if (!$util.isString(message.revision))
                                    return "revision: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CloudRunMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.CloudRunMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.CloudRunMetadata} CloudRunMetadata
                         */
                        CloudRunMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.CloudRunMetadata)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.CloudRunMetadata();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.serviceUrls) {
                                if (!Array.isArray(object.serviceUrls))
                                    throw TypeError(".google.cloud.deploy.v1.CloudRunMetadata.serviceUrls: array expected");
                                message.serviceUrls = [];
                                for (var i = 0; i < object.serviceUrls.length; ++i)
                                    message.serviceUrls[i] = String(object.serviceUrls[i]);
                            }
                            if (object.revision != null)
                                message.revision = String(object.revision);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CloudRunMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.CloudRunMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.CloudRunMetadata} message CloudRunMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CloudRunMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.serviceUrls = [];
                            if (options.defaults) {
                                object.service = "";
                                object.revision = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.serviceUrls && message.serviceUrls.length) {
                                object.serviceUrls = [];
                                for (var j = 0; j < message.serviceUrls.length; ++j)
                                    object.serviceUrls[j] = message.serviceUrls[j];
                            }
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                object.revision = message.revision;
                            return object;
                        };
    
                        /**
                         * Converts this CloudRunMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.CloudRunMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CloudRunMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CloudRunMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.CloudRunMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CloudRunMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.CloudRunMetadata";
                        };
    
                        return CloudRunMetadata;
                    })();
    
                    v1.Phase = (function() {
    
                        /**
                         * Properties of a Phase.
                         * @memberof google.cloud.deploy.v1
                         * @interface IPhase
                         * @property {string|null} [id] Phase id
                         * @property {google.cloud.deploy.v1.Phase.State|null} [state] Phase state
                         * @property {string|null} [skipMessage] Phase skipMessage
                         * @property {google.cloud.deploy.v1.IDeploymentJobs|null} [deploymentJobs] Phase deploymentJobs
                         * @property {google.cloud.deploy.v1.IChildRolloutJobs|null} [childRolloutJobs] Phase childRolloutJobs
                         */
    
                        /**
                         * Constructs a new Phase.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a Phase.
                         * @implements IPhase
                         * @constructor
                         * @param {google.cloud.deploy.v1.IPhase=} [properties] Properties to set
                         */
                        function Phase(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Phase id.
                         * @member {string} id
                         * @memberof google.cloud.deploy.v1.Phase
                         * @instance
                         */
                        Phase.prototype.id = "";
    
                        /**
                         * Phase state.
                         * @member {google.cloud.deploy.v1.Phase.State} state
                         * @memberof google.cloud.deploy.v1.Phase
                         * @instance
                         */
                        Phase.prototype.state = 0;
    
                        /**
                         * Phase skipMessage.
                         * @member {string} skipMessage
                         * @memberof google.cloud.deploy.v1.Phase
                         * @instance
                         */
                        Phase.prototype.skipMessage = "";
    
                        /**
                         * Phase deploymentJobs.
                         * @member {google.cloud.deploy.v1.IDeploymentJobs|null|undefined} deploymentJobs
                         * @memberof google.cloud.deploy.v1.Phase
                         * @instance
                         */
                        Phase.prototype.deploymentJobs = null;
    
                        /**
                         * Phase childRolloutJobs.
                         * @member {google.cloud.deploy.v1.IChildRolloutJobs|null|undefined} childRolloutJobs
                         * @memberof google.cloud.deploy.v1.Phase
                         * @instance
                         */
                        Phase.prototype.childRolloutJobs = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Phase jobs.
                         * @member {"deploymentJobs"|"childRolloutJobs"|undefined} jobs
                         * @memberof google.cloud.deploy.v1.Phase
                         * @instance
                         */
                        Object.defineProperty(Phase.prototype, "jobs", {
                            get: $util.oneOfGetter($oneOfFields = ["deploymentJobs", "childRolloutJobs"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Phase instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.Phase
                         * @static
                         * @param {google.cloud.deploy.v1.IPhase=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.Phase} Phase instance
                         */
                        Phase.create = function create(properties) {
                            return new Phase(properties);
                        };
    
                        /**
                         * Encodes the specified Phase message. Does not implicitly {@link google.cloud.deploy.v1.Phase.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.Phase
                         * @static
                         * @param {google.cloud.deploy.v1.IPhase} message Phase message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Phase.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.state);
                            if (message.deploymentJobs != null && Object.hasOwnProperty.call(message, "deploymentJobs"))
                                $root.google.cloud.deploy.v1.DeploymentJobs.encode(message.deploymentJobs, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.childRolloutJobs != null && Object.hasOwnProperty.call(message, "childRolloutJobs"))
                                $root.google.cloud.deploy.v1.ChildRolloutJobs.encode(message.childRolloutJobs, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.skipMessage != null && Object.hasOwnProperty.call(message, "skipMessage"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.skipMessage);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Phase message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Phase.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.Phase
                         * @static
                         * @param {google.cloud.deploy.v1.IPhase} message Phase message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Phase.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Phase message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.Phase
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.Phase} Phase
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Phase.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Phase();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.skipMessage = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.deploymentJobs = $root.google.cloud.deploy.v1.DeploymentJobs.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.childRolloutJobs = $root.google.cloud.deploy.v1.ChildRolloutJobs.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Phase message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.Phase
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.Phase} Phase
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Phase.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Phase message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.Phase
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Phase.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.skipMessage != null && message.hasOwnProperty("skipMessage"))
                                if (!$util.isString(message.skipMessage))
                                    return "skipMessage: string expected";
                            if (message.deploymentJobs != null && message.hasOwnProperty("deploymentJobs")) {
                                properties.jobs = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.DeploymentJobs.verify(message.deploymentJobs);
                                    if (error)
                                        return "deploymentJobs." + error;
                                }
                            }
                            if (message.childRolloutJobs != null && message.hasOwnProperty("childRolloutJobs")) {
                                if (properties.jobs === 1)
                                    return "jobs: multiple values";
                                properties.jobs = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.ChildRolloutJobs.verify(message.childRolloutJobs);
                                    if (error)
                                        return "childRolloutJobs." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Phase message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.Phase
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.Phase} Phase
                         */
                        Phase.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.Phase)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.Phase();
                            if (object.id != null)
                                message.id = String(object.id);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "PENDING":
                            case 1:
                                message.state = 1;
                                break;
                            case "IN_PROGRESS":
                            case 2:
                                message.state = 2;
                                break;
                            case "SUCCEEDED":
                            case 3:
                                message.state = 3;
                                break;
                            case "FAILED":
                            case 4:
                                message.state = 4;
                                break;
                            case "ABORTED":
                            case 5:
                                message.state = 5;
                                break;
                            case "SKIPPED":
                            case 6:
                                message.state = 6;
                                break;
                            }
                            if (object.skipMessage != null)
                                message.skipMessage = String(object.skipMessage);
                            if (object.deploymentJobs != null) {
                                if (typeof object.deploymentJobs !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Phase.deploymentJobs: object expected");
                                message.deploymentJobs = $root.google.cloud.deploy.v1.DeploymentJobs.fromObject(object.deploymentJobs);
                            }
                            if (object.childRolloutJobs != null) {
                                if (typeof object.childRolloutJobs !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Phase.childRolloutJobs: object expected");
                                message.childRolloutJobs = $root.google.cloud.deploy.v1.ChildRolloutJobs.fromObject(object.childRolloutJobs);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Phase message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.Phase
                         * @static
                         * @param {google.cloud.deploy.v1.Phase} message Phase
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Phase.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.id = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.skipMessage = "";
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.deploy.v1.Phase.State[message.state] === undefined ? message.state : $root.google.cloud.deploy.v1.Phase.State[message.state] : message.state;
                            if (message.deploymentJobs != null && message.hasOwnProperty("deploymentJobs")) {
                                object.deploymentJobs = $root.google.cloud.deploy.v1.DeploymentJobs.toObject(message.deploymentJobs, options);
                                if (options.oneofs)
                                    object.jobs = "deploymentJobs";
                            }
                            if (message.childRolloutJobs != null && message.hasOwnProperty("childRolloutJobs")) {
                                object.childRolloutJobs = $root.google.cloud.deploy.v1.ChildRolloutJobs.toObject(message.childRolloutJobs, options);
                                if (options.oneofs)
                                    object.jobs = "childRolloutJobs";
                            }
                            if (message.skipMessage != null && message.hasOwnProperty("skipMessage"))
                                object.skipMessage = message.skipMessage;
                            return object;
                        };
    
                        /**
                         * Converts this Phase to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.Phase
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Phase.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Phase
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.Phase
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Phase.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.Phase";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.deploy.v1.Phase.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} PENDING=1 PENDING value
                         * @property {number} IN_PROGRESS=2 IN_PROGRESS value
                         * @property {number} SUCCEEDED=3 SUCCEEDED value
                         * @property {number} FAILED=4 FAILED value
                         * @property {number} ABORTED=5 ABORTED value
                         * @property {number} SKIPPED=6 SKIPPED value
                         */
                        Phase.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PENDING"] = 1;
                            values[valuesById[2] = "IN_PROGRESS"] = 2;
                            values[valuesById[3] = "SUCCEEDED"] = 3;
                            values[valuesById[4] = "FAILED"] = 4;
                            values[valuesById[5] = "ABORTED"] = 5;
                            values[valuesById[6] = "SKIPPED"] = 6;
                            return values;
                        })();
    
                        return Phase;
                    })();
    
                    v1.DeploymentJobs = (function() {
    
                        /**
                         * Properties of a DeploymentJobs.
                         * @memberof google.cloud.deploy.v1
                         * @interface IDeploymentJobs
                         * @property {google.cloud.deploy.v1.IJob|null} [deployJob] DeploymentJobs deployJob
                         * @property {google.cloud.deploy.v1.IJob|null} [verifyJob] DeploymentJobs verifyJob
                         * @property {google.cloud.deploy.v1.IJob|null} [predeployJob] DeploymentJobs predeployJob
                         * @property {google.cloud.deploy.v1.IJob|null} [postdeployJob] DeploymentJobs postdeployJob
                         */
    
                        /**
                         * Constructs a new DeploymentJobs.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a DeploymentJobs.
                         * @implements IDeploymentJobs
                         * @constructor
                         * @param {google.cloud.deploy.v1.IDeploymentJobs=} [properties] Properties to set
                         */
                        function DeploymentJobs(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeploymentJobs deployJob.
                         * @member {google.cloud.deploy.v1.IJob|null|undefined} deployJob
                         * @memberof google.cloud.deploy.v1.DeploymentJobs
                         * @instance
                         */
                        DeploymentJobs.prototype.deployJob = null;
    
                        /**
                         * DeploymentJobs verifyJob.
                         * @member {google.cloud.deploy.v1.IJob|null|undefined} verifyJob
                         * @memberof google.cloud.deploy.v1.DeploymentJobs
                         * @instance
                         */
                        DeploymentJobs.prototype.verifyJob = null;
    
                        /**
                         * DeploymentJobs predeployJob.
                         * @member {google.cloud.deploy.v1.IJob|null|undefined} predeployJob
                         * @memberof google.cloud.deploy.v1.DeploymentJobs
                         * @instance
                         */
                        DeploymentJobs.prototype.predeployJob = null;
    
                        /**
                         * DeploymentJobs postdeployJob.
                         * @member {google.cloud.deploy.v1.IJob|null|undefined} postdeployJob
                         * @memberof google.cloud.deploy.v1.DeploymentJobs
                         * @instance
                         */
                        DeploymentJobs.prototype.postdeployJob = null;
    
                        /**
                         * Creates a new DeploymentJobs instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.DeploymentJobs
                         * @static
                         * @param {google.cloud.deploy.v1.IDeploymentJobs=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.DeploymentJobs} DeploymentJobs instance
                         */
                        DeploymentJobs.create = function create(properties) {
                            return new DeploymentJobs(properties);
                        };
    
                        /**
                         * Encodes the specified DeploymentJobs message. Does not implicitly {@link google.cloud.deploy.v1.DeploymentJobs.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.DeploymentJobs
                         * @static
                         * @param {google.cloud.deploy.v1.IDeploymentJobs} message DeploymentJobs message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeploymentJobs.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.deployJob != null && Object.hasOwnProperty.call(message, "deployJob"))
                                $root.google.cloud.deploy.v1.Job.encode(message.deployJob, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.verifyJob != null && Object.hasOwnProperty.call(message, "verifyJob"))
                                $root.google.cloud.deploy.v1.Job.encode(message.verifyJob, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.predeployJob != null && Object.hasOwnProperty.call(message, "predeployJob"))
                                $root.google.cloud.deploy.v1.Job.encode(message.predeployJob, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.postdeployJob != null && Object.hasOwnProperty.call(message, "postdeployJob"))
                                $root.google.cloud.deploy.v1.Job.encode(message.postdeployJob, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeploymentJobs message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.DeploymentJobs.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.DeploymentJobs
                         * @static
                         * @param {google.cloud.deploy.v1.IDeploymentJobs} message DeploymentJobs message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeploymentJobs.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeploymentJobs message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.DeploymentJobs
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.DeploymentJobs} DeploymentJobs
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeploymentJobs.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.DeploymentJobs();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.deployJob = $root.google.cloud.deploy.v1.Job.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.verifyJob = $root.google.cloud.deploy.v1.Job.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.predeployJob = $root.google.cloud.deploy.v1.Job.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.postdeployJob = $root.google.cloud.deploy.v1.Job.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeploymentJobs message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.DeploymentJobs
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.DeploymentJobs} DeploymentJobs
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeploymentJobs.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeploymentJobs message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.DeploymentJobs
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeploymentJobs.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.deployJob != null && message.hasOwnProperty("deployJob")) {
                                var error = $root.google.cloud.deploy.v1.Job.verify(message.deployJob);
                                if (error)
                                    return "deployJob." + error;
                            }
                            if (message.verifyJob != null && message.hasOwnProperty("verifyJob")) {
                                var error = $root.google.cloud.deploy.v1.Job.verify(message.verifyJob);
                                if (error)
                                    return "verifyJob." + error;
                            }
                            if (message.predeployJob != null && message.hasOwnProperty("predeployJob")) {
                                var error = $root.google.cloud.deploy.v1.Job.verify(message.predeployJob);
                                if (error)
                                    return "predeployJob." + error;
                            }
                            if (message.postdeployJob != null && message.hasOwnProperty("postdeployJob")) {
                                var error = $root.google.cloud.deploy.v1.Job.verify(message.postdeployJob);
                                if (error)
                                    return "postdeployJob." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DeploymentJobs message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.DeploymentJobs
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.DeploymentJobs} DeploymentJobs
                         */
                        DeploymentJobs.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.DeploymentJobs)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.DeploymentJobs();
                            if (object.deployJob != null) {
                                if (typeof object.deployJob !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.DeploymentJobs.deployJob: object expected");
                                message.deployJob = $root.google.cloud.deploy.v1.Job.fromObject(object.deployJob);
                            }
                            if (object.verifyJob != null) {
                                if (typeof object.verifyJob !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.DeploymentJobs.verifyJob: object expected");
                                message.verifyJob = $root.google.cloud.deploy.v1.Job.fromObject(object.verifyJob);
                            }
                            if (object.predeployJob != null) {
                                if (typeof object.predeployJob !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.DeploymentJobs.predeployJob: object expected");
                                message.predeployJob = $root.google.cloud.deploy.v1.Job.fromObject(object.predeployJob);
                            }
                            if (object.postdeployJob != null) {
                                if (typeof object.postdeployJob !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.DeploymentJobs.postdeployJob: object expected");
                                message.postdeployJob = $root.google.cloud.deploy.v1.Job.fromObject(object.postdeployJob);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeploymentJobs message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.DeploymentJobs
                         * @static
                         * @param {google.cloud.deploy.v1.DeploymentJobs} message DeploymentJobs
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeploymentJobs.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.deployJob = null;
                                object.verifyJob = null;
                                object.predeployJob = null;
                                object.postdeployJob = null;
                            }
                            if (message.deployJob != null && message.hasOwnProperty("deployJob"))
                                object.deployJob = $root.google.cloud.deploy.v1.Job.toObject(message.deployJob, options);
                            if (message.verifyJob != null && message.hasOwnProperty("verifyJob"))
                                object.verifyJob = $root.google.cloud.deploy.v1.Job.toObject(message.verifyJob, options);
                            if (message.predeployJob != null && message.hasOwnProperty("predeployJob"))
                                object.predeployJob = $root.google.cloud.deploy.v1.Job.toObject(message.predeployJob, options);
                            if (message.postdeployJob != null && message.hasOwnProperty("postdeployJob"))
                                object.postdeployJob = $root.google.cloud.deploy.v1.Job.toObject(message.postdeployJob, options);
                            return object;
                        };
    
                        /**
                         * Converts this DeploymentJobs to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.DeploymentJobs
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeploymentJobs.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeploymentJobs
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.DeploymentJobs
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeploymentJobs.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.DeploymentJobs";
                        };
    
                        return DeploymentJobs;
                    })();
    
                    v1.ChildRolloutJobs = (function() {
    
                        /**
                         * Properties of a ChildRolloutJobs.
                         * @memberof google.cloud.deploy.v1
                         * @interface IChildRolloutJobs
                         * @property {Array.<google.cloud.deploy.v1.IJob>|null} [createRolloutJobs] ChildRolloutJobs createRolloutJobs
                         * @property {Array.<google.cloud.deploy.v1.IJob>|null} [advanceRolloutJobs] ChildRolloutJobs advanceRolloutJobs
                         */
    
                        /**
                         * Constructs a new ChildRolloutJobs.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a ChildRolloutJobs.
                         * @implements IChildRolloutJobs
                         * @constructor
                         * @param {google.cloud.deploy.v1.IChildRolloutJobs=} [properties] Properties to set
                         */
                        function ChildRolloutJobs(properties) {
                            this.createRolloutJobs = [];
                            this.advanceRolloutJobs = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ChildRolloutJobs createRolloutJobs.
                         * @member {Array.<google.cloud.deploy.v1.IJob>} createRolloutJobs
                         * @memberof google.cloud.deploy.v1.ChildRolloutJobs
                         * @instance
                         */
                        ChildRolloutJobs.prototype.createRolloutJobs = $util.emptyArray;
    
                        /**
                         * ChildRolloutJobs advanceRolloutJobs.
                         * @member {Array.<google.cloud.deploy.v1.IJob>} advanceRolloutJobs
                         * @memberof google.cloud.deploy.v1.ChildRolloutJobs
                         * @instance
                         */
                        ChildRolloutJobs.prototype.advanceRolloutJobs = $util.emptyArray;
    
                        /**
                         * Creates a new ChildRolloutJobs instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ChildRolloutJobs
                         * @static
                         * @param {google.cloud.deploy.v1.IChildRolloutJobs=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ChildRolloutJobs} ChildRolloutJobs instance
                         */
                        ChildRolloutJobs.create = function create(properties) {
                            return new ChildRolloutJobs(properties);
                        };
    
                        /**
                         * Encodes the specified ChildRolloutJobs message. Does not implicitly {@link google.cloud.deploy.v1.ChildRolloutJobs.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ChildRolloutJobs
                         * @static
                         * @param {google.cloud.deploy.v1.IChildRolloutJobs} message ChildRolloutJobs message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ChildRolloutJobs.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createRolloutJobs != null && message.createRolloutJobs.length)
                                for (var i = 0; i < message.createRolloutJobs.length; ++i)
                                    $root.google.cloud.deploy.v1.Job.encode(message.createRolloutJobs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.advanceRolloutJobs != null && message.advanceRolloutJobs.length)
                                for (var i = 0; i < message.advanceRolloutJobs.length; ++i)
                                    $root.google.cloud.deploy.v1.Job.encode(message.advanceRolloutJobs[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ChildRolloutJobs message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ChildRolloutJobs.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ChildRolloutJobs
                         * @static
                         * @param {google.cloud.deploy.v1.IChildRolloutJobs} message ChildRolloutJobs message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ChildRolloutJobs.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ChildRolloutJobs message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ChildRolloutJobs
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ChildRolloutJobs} ChildRolloutJobs
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ChildRolloutJobs.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ChildRolloutJobs();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.createRolloutJobs && message.createRolloutJobs.length))
                                            message.createRolloutJobs = [];
                                        message.createRolloutJobs.push($root.google.cloud.deploy.v1.Job.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.advanceRolloutJobs && message.advanceRolloutJobs.length))
                                            message.advanceRolloutJobs = [];
                                        message.advanceRolloutJobs.push($root.google.cloud.deploy.v1.Job.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ChildRolloutJobs message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ChildRolloutJobs
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ChildRolloutJobs} ChildRolloutJobs
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ChildRolloutJobs.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ChildRolloutJobs message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ChildRolloutJobs
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ChildRolloutJobs.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createRolloutJobs != null && message.hasOwnProperty("createRolloutJobs")) {
                                if (!Array.isArray(message.createRolloutJobs))
                                    return "createRolloutJobs: array expected";
                                for (var i = 0; i < message.createRolloutJobs.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.Job.verify(message.createRolloutJobs[i]);
                                    if (error)
                                        return "createRolloutJobs." + error;
                                }
                            }
                            if (message.advanceRolloutJobs != null && message.hasOwnProperty("advanceRolloutJobs")) {
                                if (!Array.isArray(message.advanceRolloutJobs))
                                    return "advanceRolloutJobs: array expected";
                                for (var i = 0; i < message.advanceRolloutJobs.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.Job.verify(message.advanceRolloutJobs[i]);
                                    if (error)
                                        return "advanceRolloutJobs." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ChildRolloutJobs message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ChildRolloutJobs
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ChildRolloutJobs} ChildRolloutJobs
                         */
                        ChildRolloutJobs.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ChildRolloutJobs)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.ChildRolloutJobs();
                            if (object.createRolloutJobs) {
                                if (!Array.isArray(object.createRolloutJobs))
                                    throw TypeError(".google.cloud.deploy.v1.ChildRolloutJobs.createRolloutJobs: array expected");
                                message.createRolloutJobs = [];
                                for (var i = 0; i < object.createRolloutJobs.length; ++i) {
                                    if (typeof object.createRolloutJobs[i] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.ChildRolloutJobs.createRolloutJobs: object expected");
                                    message.createRolloutJobs[i] = $root.google.cloud.deploy.v1.Job.fromObject(object.createRolloutJobs[i]);
                                }
                            }
                            if (object.advanceRolloutJobs) {
                                if (!Array.isArray(object.advanceRolloutJobs))
                                    throw TypeError(".google.cloud.deploy.v1.ChildRolloutJobs.advanceRolloutJobs: array expected");
                                message.advanceRolloutJobs = [];
                                for (var i = 0; i < object.advanceRolloutJobs.length; ++i) {
                                    if (typeof object.advanceRolloutJobs[i] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.ChildRolloutJobs.advanceRolloutJobs: object expected");
                                    message.advanceRolloutJobs[i] = $root.google.cloud.deploy.v1.Job.fromObject(object.advanceRolloutJobs[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ChildRolloutJobs message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ChildRolloutJobs
                         * @static
                         * @param {google.cloud.deploy.v1.ChildRolloutJobs} message ChildRolloutJobs
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ChildRolloutJobs.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.createRolloutJobs = [];
                                object.advanceRolloutJobs = [];
                            }
                            if (message.createRolloutJobs && message.createRolloutJobs.length) {
                                object.createRolloutJobs = [];
                                for (var j = 0; j < message.createRolloutJobs.length; ++j)
                                    object.createRolloutJobs[j] = $root.google.cloud.deploy.v1.Job.toObject(message.createRolloutJobs[j], options);
                            }
                            if (message.advanceRolloutJobs && message.advanceRolloutJobs.length) {
                                object.advanceRolloutJobs = [];
                                for (var j = 0; j < message.advanceRolloutJobs.length; ++j)
                                    object.advanceRolloutJobs[j] = $root.google.cloud.deploy.v1.Job.toObject(message.advanceRolloutJobs[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ChildRolloutJobs to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ChildRolloutJobs
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ChildRolloutJobs.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ChildRolloutJobs
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ChildRolloutJobs
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ChildRolloutJobs.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ChildRolloutJobs";
                        };
    
                        return ChildRolloutJobs;
                    })();
    
                    v1.Job = (function() {
    
                        /**
                         * Properties of a Job.
                         * @memberof google.cloud.deploy.v1
                         * @interface IJob
                         * @property {string|null} [id] Job id
                         * @property {google.cloud.deploy.v1.Job.State|null} [state] Job state
                         * @property {string|null} [skipMessage] Job skipMessage
                         * @property {string|null} [jobRun] Job jobRun
                         * @property {google.cloud.deploy.v1.IDeployJob|null} [deployJob] Job deployJob
                         * @property {google.cloud.deploy.v1.IVerifyJob|null} [verifyJob] Job verifyJob
                         * @property {google.cloud.deploy.v1.IPredeployJob|null} [predeployJob] Job predeployJob
                         * @property {google.cloud.deploy.v1.IPostdeployJob|null} [postdeployJob] Job postdeployJob
                         * @property {google.cloud.deploy.v1.ICreateChildRolloutJob|null} [createChildRolloutJob] Job createChildRolloutJob
                         * @property {google.cloud.deploy.v1.IAdvanceChildRolloutJob|null} [advanceChildRolloutJob] Job advanceChildRolloutJob
                         */
    
                        /**
                         * Constructs a new Job.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a Job.
                         * @implements IJob
                         * @constructor
                         * @param {google.cloud.deploy.v1.IJob=} [properties] Properties to set
                         */
                        function Job(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Job id.
                         * @member {string} id
                         * @memberof google.cloud.deploy.v1.Job
                         * @instance
                         */
                        Job.prototype.id = "";
    
                        /**
                         * Job state.
                         * @member {google.cloud.deploy.v1.Job.State} state
                         * @memberof google.cloud.deploy.v1.Job
                         * @instance
                         */
                        Job.prototype.state = 0;
    
                        /**
                         * Job skipMessage.
                         * @member {string} skipMessage
                         * @memberof google.cloud.deploy.v1.Job
                         * @instance
                         */
                        Job.prototype.skipMessage = "";
    
                        /**
                         * Job jobRun.
                         * @member {string} jobRun
                         * @memberof google.cloud.deploy.v1.Job
                         * @instance
                         */
                        Job.prototype.jobRun = "";
    
                        /**
                         * Job deployJob.
                         * @member {google.cloud.deploy.v1.IDeployJob|null|undefined} deployJob
                         * @memberof google.cloud.deploy.v1.Job
                         * @instance
                         */
                        Job.prototype.deployJob = null;
    
                        /**
                         * Job verifyJob.
                         * @member {google.cloud.deploy.v1.IVerifyJob|null|undefined} verifyJob
                         * @memberof google.cloud.deploy.v1.Job
                         * @instance
                         */
                        Job.prototype.verifyJob = null;
    
                        /**
                         * Job predeployJob.
                         * @member {google.cloud.deploy.v1.IPredeployJob|null|undefined} predeployJob
                         * @memberof google.cloud.deploy.v1.Job
                         * @instance
                         */
                        Job.prototype.predeployJob = null;
    
                        /**
                         * Job postdeployJob.
                         * @member {google.cloud.deploy.v1.IPostdeployJob|null|undefined} postdeployJob
                         * @memberof google.cloud.deploy.v1.Job
                         * @instance
                         */
                        Job.prototype.postdeployJob = null;
    
                        /**
                         * Job createChildRolloutJob.
                         * @member {google.cloud.deploy.v1.ICreateChildRolloutJob|null|undefined} createChildRolloutJob
                         * @memberof google.cloud.deploy.v1.Job
                         * @instance
                         */
                        Job.prototype.createChildRolloutJob = null;
    
                        /**
                         * Job advanceChildRolloutJob.
                         * @member {google.cloud.deploy.v1.IAdvanceChildRolloutJob|null|undefined} advanceChildRolloutJob
                         * @memberof google.cloud.deploy.v1.Job
                         * @instance
                         */
                        Job.prototype.advanceChildRolloutJob = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Job jobType.
                         * @member {"deployJob"|"verifyJob"|"predeployJob"|"postdeployJob"|"createChildRolloutJob"|"advanceChildRolloutJob"|undefined} jobType
                         * @memberof google.cloud.deploy.v1.Job
                         * @instance
                         */
                        Object.defineProperty(Job.prototype, "jobType", {
                            get: $util.oneOfGetter($oneOfFields = ["deployJob", "verifyJob", "predeployJob", "postdeployJob", "createChildRolloutJob", "advanceChildRolloutJob"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Job instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.Job
                         * @static
                         * @param {google.cloud.deploy.v1.IJob=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.Job} Job instance
                         */
                        Job.create = function create(properties) {
                            return new Job(properties);
                        };
    
                        /**
                         * Encodes the specified Job message. Does not implicitly {@link google.cloud.deploy.v1.Job.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.Job
                         * @static
                         * @param {google.cloud.deploy.v1.IJob} message Job message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Job.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.state);
                            if (message.jobRun != null && Object.hasOwnProperty.call(message, "jobRun"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.jobRun);
                            if (message.deployJob != null && Object.hasOwnProperty.call(message, "deployJob"))
                                $root.google.cloud.deploy.v1.DeployJob.encode(message.deployJob, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.verifyJob != null && Object.hasOwnProperty.call(message, "verifyJob"))
                                $root.google.cloud.deploy.v1.VerifyJob.encode(message.verifyJob, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.createChildRolloutJob != null && Object.hasOwnProperty.call(message, "createChildRolloutJob"))
                                $root.google.cloud.deploy.v1.CreateChildRolloutJob.encode(message.createChildRolloutJob, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.advanceChildRolloutJob != null && Object.hasOwnProperty.call(message, "advanceChildRolloutJob"))
                                $root.google.cloud.deploy.v1.AdvanceChildRolloutJob.encode(message.advanceChildRolloutJob, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.skipMessage != null && Object.hasOwnProperty.call(message, "skipMessage"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.skipMessage);
                            if (message.predeployJob != null && Object.hasOwnProperty.call(message, "predeployJob"))
                                $root.google.cloud.deploy.v1.PredeployJob.encode(message.predeployJob, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.postdeployJob != null && Object.hasOwnProperty.call(message, "postdeployJob"))
                                $root.google.cloud.deploy.v1.PostdeployJob.encode(message.postdeployJob, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Job message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Job.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.Job
                         * @static
                         * @param {google.cloud.deploy.v1.IJob} message Job message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Job.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Job message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.Job
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.Job} Job
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Job.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Job();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.skipMessage = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.jobRun = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.deployJob = $root.google.cloud.deploy.v1.DeployJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.verifyJob = $root.google.cloud.deploy.v1.VerifyJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.predeployJob = $root.google.cloud.deploy.v1.PredeployJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.postdeployJob = $root.google.cloud.deploy.v1.PostdeployJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.createChildRolloutJob = $root.google.cloud.deploy.v1.CreateChildRolloutJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.advanceChildRolloutJob = $root.google.cloud.deploy.v1.AdvanceChildRolloutJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Job message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.Job
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.Job} Job
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Job.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Job message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.Job
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Job.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                    break;
                                }
                            if (message.skipMessage != null && message.hasOwnProperty("skipMessage"))
                                if (!$util.isString(message.skipMessage))
                                    return "skipMessage: string expected";
                            if (message.jobRun != null && message.hasOwnProperty("jobRun"))
                                if (!$util.isString(message.jobRun))
                                    return "jobRun: string expected";
                            if (message.deployJob != null && message.hasOwnProperty("deployJob")) {
                                properties.jobType = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.DeployJob.verify(message.deployJob);
                                    if (error)
                                        return "deployJob." + error;
                                }
                            }
                            if (message.verifyJob != null && message.hasOwnProperty("verifyJob")) {
                                if (properties.jobType === 1)
                                    return "jobType: multiple values";
                                properties.jobType = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.VerifyJob.verify(message.verifyJob);
                                    if (error)
                                        return "verifyJob." + error;
                                }
                            }
                            if (message.predeployJob != null && message.hasOwnProperty("predeployJob")) {
                                if (properties.jobType === 1)
                                    return "jobType: multiple values";
                                properties.jobType = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.PredeployJob.verify(message.predeployJob);
                                    if (error)
                                        return "predeployJob." + error;
                                }
                            }
                            if (message.postdeployJob != null && message.hasOwnProperty("postdeployJob")) {
                                if (properties.jobType === 1)
                                    return "jobType: multiple values";
                                properties.jobType = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.PostdeployJob.verify(message.postdeployJob);
                                    if (error)
                                        return "postdeployJob." + error;
                                }
                            }
                            if (message.createChildRolloutJob != null && message.hasOwnProperty("createChildRolloutJob")) {
                                if (properties.jobType === 1)
                                    return "jobType: multiple values";
                                properties.jobType = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.CreateChildRolloutJob.verify(message.createChildRolloutJob);
                                    if (error)
                                        return "createChildRolloutJob." + error;
                                }
                            }
                            if (message.advanceChildRolloutJob != null && message.hasOwnProperty("advanceChildRolloutJob")) {
                                if (properties.jobType === 1)
                                    return "jobType: multiple values";
                                properties.jobType = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.AdvanceChildRolloutJob.verify(message.advanceChildRolloutJob);
                                    if (error)
                                        return "advanceChildRolloutJob." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Job message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.Job
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.Job} Job
                         */
                        Job.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.Job)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.Job();
                            if (object.id != null)
                                message.id = String(object.id);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "PENDING":
                            case 1:
                                message.state = 1;
                                break;
                            case "DISABLED":
                            case 2:
                                message.state = 2;
                                break;
                            case "IN_PROGRESS":
                            case 3:
                                message.state = 3;
                                break;
                            case "SUCCEEDED":
                            case 4:
                                message.state = 4;
                                break;
                            case "FAILED":
                            case 5:
                                message.state = 5;
                                break;
                            case "ABORTED":
                            case 6:
                                message.state = 6;
                                break;
                            case "SKIPPED":
                            case 7:
                                message.state = 7;
                                break;
                            case "IGNORED":
                            case 8:
                                message.state = 8;
                                break;
                            }
                            if (object.skipMessage != null)
                                message.skipMessage = String(object.skipMessage);
                            if (object.jobRun != null)
                                message.jobRun = String(object.jobRun);
                            if (object.deployJob != null) {
                                if (typeof object.deployJob !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Job.deployJob: object expected");
                                message.deployJob = $root.google.cloud.deploy.v1.DeployJob.fromObject(object.deployJob);
                            }
                            if (object.verifyJob != null) {
                                if (typeof object.verifyJob !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Job.verifyJob: object expected");
                                message.verifyJob = $root.google.cloud.deploy.v1.VerifyJob.fromObject(object.verifyJob);
                            }
                            if (object.predeployJob != null) {
                                if (typeof object.predeployJob !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Job.predeployJob: object expected");
                                message.predeployJob = $root.google.cloud.deploy.v1.PredeployJob.fromObject(object.predeployJob);
                            }
                            if (object.postdeployJob != null) {
                                if (typeof object.postdeployJob !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Job.postdeployJob: object expected");
                                message.postdeployJob = $root.google.cloud.deploy.v1.PostdeployJob.fromObject(object.postdeployJob);
                            }
                            if (object.createChildRolloutJob != null) {
                                if (typeof object.createChildRolloutJob !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Job.createChildRolloutJob: object expected");
                                message.createChildRolloutJob = $root.google.cloud.deploy.v1.CreateChildRolloutJob.fromObject(object.createChildRolloutJob);
                            }
                            if (object.advanceChildRolloutJob != null) {
                                if (typeof object.advanceChildRolloutJob !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.Job.advanceChildRolloutJob: object expected");
                                message.advanceChildRolloutJob = $root.google.cloud.deploy.v1.AdvanceChildRolloutJob.fromObject(object.advanceChildRolloutJob);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Job message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.Job
                         * @static
                         * @param {google.cloud.deploy.v1.Job} message Job
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Job.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.id = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.jobRun = "";
                                object.skipMessage = "";
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.deploy.v1.Job.State[message.state] === undefined ? message.state : $root.google.cloud.deploy.v1.Job.State[message.state] : message.state;
                            if (message.jobRun != null && message.hasOwnProperty("jobRun"))
                                object.jobRun = message.jobRun;
                            if (message.deployJob != null && message.hasOwnProperty("deployJob")) {
                                object.deployJob = $root.google.cloud.deploy.v1.DeployJob.toObject(message.deployJob, options);
                                if (options.oneofs)
                                    object.jobType = "deployJob";
                            }
                            if (message.verifyJob != null && message.hasOwnProperty("verifyJob")) {
                                object.verifyJob = $root.google.cloud.deploy.v1.VerifyJob.toObject(message.verifyJob, options);
                                if (options.oneofs)
                                    object.jobType = "verifyJob";
                            }
                            if (message.createChildRolloutJob != null && message.hasOwnProperty("createChildRolloutJob")) {
                                object.createChildRolloutJob = $root.google.cloud.deploy.v1.CreateChildRolloutJob.toObject(message.createChildRolloutJob, options);
                                if (options.oneofs)
                                    object.jobType = "createChildRolloutJob";
                            }
                            if (message.advanceChildRolloutJob != null && message.hasOwnProperty("advanceChildRolloutJob")) {
                                object.advanceChildRolloutJob = $root.google.cloud.deploy.v1.AdvanceChildRolloutJob.toObject(message.advanceChildRolloutJob, options);
                                if (options.oneofs)
                                    object.jobType = "advanceChildRolloutJob";
                            }
                            if (message.skipMessage != null && message.hasOwnProperty("skipMessage"))
                                object.skipMessage = message.skipMessage;
                            if (message.predeployJob != null && message.hasOwnProperty("predeployJob")) {
                                object.predeployJob = $root.google.cloud.deploy.v1.PredeployJob.toObject(message.predeployJob, options);
                                if (options.oneofs)
                                    object.jobType = "predeployJob";
                            }
                            if (message.postdeployJob != null && message.hasOwnProperty("postdeployJob")) {
                                object.postdeployJob = $root.google.cloud.deploy.v1.PostdeployJob.toObject(message.postdeployJob, options);
                                if (options.oneofs)
                                    object.jobType = "postdeployJob";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Job to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.Job
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Job.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Job
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.Job
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Job.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.Job";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.deploy.v1.Job.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} PENDING=1 PENDING value
                         * @property {number} DISABLED=2 DISABLED value
                         * @property {number} IN_PROGRESS=3 IN_PROGRESS value
                         * @property {number} SUCCEEDED=4 SUCCEEDED value
                         * @property {number} FAILED=5 FAILED value
                         * @property {number} ABORTED=6 ABORTED value
                         * @property {number} SKIPPED=7 SKIPPED value
                         * @property {number} IGNORED=8 IGNORED value
                         */
                        Job.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PENDING"] = 1;
                            values[valuesById[2] = "DISABLED"] = 2;
                            values[valuesById[3] = "IN_PROGRESS"] = 3;
                            values[valuesById[4] = "SUCCEEDED"] = 4;
                            values[valuesById[5] = "FAILED"] = 5;
                            values[valuesById[6] = "ABORTED"] = 6;
                            values[valuesById[7] = "SKIPPED"] = 7;
                            values[valuesById[8] = "IGNORED"] = 8;
                            return values;
                        })();
    
                        return Job;
                    })();
    
                    v1.DeployJob = (function() {
    
                        /**
                         * Properties of a DeployJob.
                         * @memberof google.cloud.deploy.v1
                         * @interface IDeployJob
                         */
    
                        /**
                         * Constructs a new DeployJob.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a DeployJob.
                         * @implements IDeployJob
                         * @constructor
                         * @param {google.cloud.deploy.v1.IDeployJob=} [properties] Properties to set
                         */
                        function DeployJob(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new DeployJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.DeployJob
                         * @static
                         * @param {google.cloud.deploy.v1.IDeployJob=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.DeployJob} DeployJob instance
                         */
                        DeployJob.create = function create(properties) {
                            return new DeployJob(properties);
                        };
    
                        /**
                         * Encodes the specified DeployJob message. Does not implicitly {@link google.cloud.deploy.v1.DeployJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.DeployJob
                         * @static
                         * @param {google.cloud.deploy.v1.IDeployJob} message DeployJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeployJob message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.DeployJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.DeployJob
                         * @static
                         * @param {google.cloud.deploy.v1.IDeployJob} message DeployJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeployJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.DeployJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.DeployJob} DeployJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.DeployJob();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeployJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.DeployJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.DeployJob} DeployJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeployJob message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.DeployJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeployJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeployJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.DeployJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.DeployJob} DeployJob
                         */
                        DeployJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.DeployJob)
                                return object;
                            return new $root.google.cloud.deploy.v1.DeployJob();
                        };
    
                        /**
                         * Creates a plain object from a DeployJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.DeployJob
                         * @static
                         * @param {google.cloud.deploy.v1.DeployJob} message DeployJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeployJob.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this DeployJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.DeployJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeployJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeployJob
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.DeployJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeployJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.DeployJob";
                        };
    
                        return DeployJob;
                    })();
    
                    v1.VerifyJob = (function() {
    
                        /**
                         * Properties of a VerifyJob.
                         * @memberof google.cloud.deploy.v1
                         * @interface IVerifyJob
                         */
    
                        /**
                         * Constructs a new VerifyJob.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a VerifyJob.
                         * @implements IVerifyJob
                         * @constructor
                         * @param {google.cloud.deploy.v1.IVerifyJob=} [properties] Properties to set
                         */
                        function VerifyJob(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new VerifyJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.VerifyJob
                         * @static
                         * @param {google.cloud.deploy.v1.IVerifyJob=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.VerifyJob} VerifyJob instance
                         */
                        VerifyJob.create = function create(properties) {
                            return new VerifyJob(properties);
                        };
    
                        /**
                         * Encodes the specified VerifyJob message. Does not implicitly {@link google.cloud.deploy.v1.VerifyJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.VerifyJob
                         * @static
                         * @param {google.cloud.deploy.v1.IVerifyJob} message VerifyJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VerifyJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VerifyJob message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.VerifyJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.VerifyJob
                         * @static
                         * @param {google.cloud.deploy.v1.IVerifyJob} message VerifyJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VerifyJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VerifyJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.VerifyJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.VerifyJob} VerifyJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VerifyJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.VerifyJob();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VerifyJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.VerifyJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.VerifyJob} VerifyJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VerifyJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VerifyJob message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.VerifyJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VerifyJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a VerifyJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.VerifyJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.VerifyJob} VerifyJob
                         */
                        VerifyJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.VerifyJob)
                                return object;
                            return new $root.google.cloud.deploy.v1.VerifyJob();
                        };
    
                        /**
                         * Creates a plain object from a VerifyJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.VerifyJob
                         * @static
                         * @param {google.cloud.deploy.v1.VerifyJob} message VerifyJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VerifyJob.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this VerifyJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.VerifyJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VerifyJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VerifyJob
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.VerifyJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VerifyJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.VerifyJob";
                        };
    
                        return VerifyJob;
                    })();
    
                    v1.PredeployJob = (function() {
    
                        /**
                         * Properties of a PredeployJob.
                         * @memberof google.cloud.deploy.v1
                         * @interface IPredeployJob
                         * @property {Array.<string>|null} [actions] PredeployJob actions
                         */
    
                        /**
                         * Constructs a new PredeployJob.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a PredeployJob.
                         * @implements IPredeployJob
                         * @constructor
                         * @param {google.cloud.deploy.v1.IPredeployJob=} [properties] Properties to set
                         */
                        function PredeployJob(properties) {
                            this.actions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PredeployJob actions.
                         * @member {Array.<string>} actions
                         * @memberof google.cloud.deploy.v1.PredeployJob
                         * @instance
                         */
                        PredeployJob.prototype.actions = $util.emptyArray;
    
                        /**
                         * Creates a new PredeployJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.PredeployJob
                         * @static
                         * @param {google.cloud.deploy.v1.IPredeployJob=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.PredeployJob} PredeployJob instance
                         */
                        PredeployJob.create = function create(properties) {
                            return new PredeployJob(properties);
                        };
    
                        /**
                         * Encodes the specified PredeployJob message. Does not implicitly {@link google.cloud.deploy.v1.PredeployJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.PredeployJob
                         * @static
                         * @param {google.cloud.deploy.v1.IPredeployJob} message PredeployJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PredeployJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.actions != null && message.actions.length)
                                for (var i = 0; i < message.actions.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.actions[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PredeployJob message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.PredeployJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.PredeployJob
                         * @static
                         * @param {google.cloud.deploy.v1.IPredeployJob} message PredeployJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PredeployJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PredeployJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.PredeployJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.PredeployJob} PredeployJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PredeployJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.PredeployJob();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.actions && message.actions.length))
                                            message.actions = [];
                                        message.actions.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PredeployJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.PredeployJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.PredeployJob} PredeployJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PredeployJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PredeployJob message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.PredeployJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PredeployJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.actions != null && message.hasOwnProperty("actions")) {
                                if (!Array.isArray(message.actions))
                                    return "actions: array expected";
                                for (var i = 0; i < message.actions.length; ++i)
                                    if (!$util.isString(message.actions[i]))
                                        return "actions: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PredeployJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.PredeployJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.PredeployJob} PredeployJob
                         */
                        PredeployJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.PredeployJob)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.PredeployJob();
                            if (object.actions) {
                                if (!Array.isArray(object.actions))
                                    throw TypeError(".google.cloud.deploy.v1.PredeployJob.actions: array expected");
                                message.actions = [];
                                for (var i = 0; i < object.actions.length; ++i)
                                    message.actions[i] = String(object.actions[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PredeployJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.PredeployJob
                         * @static
                         * @param {google.cloud.deploy.v1.PredeployJob} message PredeployJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PredeployJob.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.actions = [];
                            if (message.actions && message.actions.length) {
                                object.actions = [];
                                for (var j = 0; j < message.actions.length; ++j)
                                    object.actions[j] = message.actions[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PredeployJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.PredeployJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PredeployJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PredeployJob
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.PredeployJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PredeployJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.PredeployJob";
                        };
    
                        return PredeployJob;
                    })();
    
                    v1.PostdeployJob = (function() {
    
                        /**
                         * Properties of a PostdeployJob.
                         * @memberof google.cloud.deploy.v1
                         * @interface IPostdeployJob
                         * @property {Array.<string>|null} [actions] PostdeployJob actions
                         */
    
                        /**
                         * Constructs a new PostdeployJob.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a PostdeployJob.
                         * @implements IPostdeployJob
                         * @constructor
                         * @param {google.cloud.deploy.v1.IPostdeployJob=} [properties] Properties to set
                         */
                        function PostdeployJob(properties) {
                            this.actions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PostdeployJob actions.
                         * @member {Array.<string>} actions
                         * @memberof google.cloud.deploy.v1.PostdeployJob
                         * @instance
                         */
                        PostdeployJob.prototype.actions = $util.emptyArray;
    
                        /**
                         * Creates a new PostdeployJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.PostdeployJob
                         * @static
                         * @param {google.cloud.deploy.v1.IPostdeployJob=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.PostdeployJob} PostdeployJob instance
                         */
                        PostdeployJob.create = function create(properties) {
                            return new PostdeployJob(properties);
                        };
    
                        /**
                         * Encodes the specified PostdeployJob message. Does not implicitly {@link google.cloud.deploy.v1.PostdeployJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.PostdeployJob
                         * @static
                         * @param {google.cloud.deploy.v1.IPostdeployJob} message PostdeployJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostdeployJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.actions != null && message.actions.length)
                                for (var i = 0; i < message.actions.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.actions[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PostdeployJob message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.PostdeployJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.PostdeployJob
                         * @static
                         * @param {google.cloud.deploy.v1.IPostdeployJob} message PostdeployJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostdeployJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PostdeployJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.PostdeployJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.PostdeployJob} PostdeployJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostdeployJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.PostdeployJob();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.actions && message.actions.length))
                                            message.actions = [];
                                        message.actions.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PostdeployJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.PostdeployJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.PostdeployJob} PostdeployJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostdeployJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PostdeployJob message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.PostdeployJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PostdeployJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.actions != null && message.hasOwnProperty("actions")) {
                                if (!Array.isArray(message.actions))
                                    return "actions: array expected";
                                for (var i = 0; i < message.actions.length; ++i)
                                    if (!$util.isString(message.actions[i]))
                                        return "actions: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PostdeployJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.PostdeployJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.PostdeployJob} PostdeployJob
                         */
                        PostdeployJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.PostdeployJob)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.PostdeployJob();
                            if (object.actions) {
                                if (!Array.isArray(object.actions))
                                    throw TypeError(".google.cloud.deploy.v1.PostdeployJob.actions: array expected");
                                message.actions = [];
                                for (var i = 0; i < object.actions.length; ++i)
                                    message.actions[i] = String(object.actions[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PostdeployJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.PostdeployJob
                         * @static
                         * @param {google.cloud.deploy.v1.PostdeployJob} message PostdeployJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PostdeployJob.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.actions = [];
                            if (message.actions && message.actions.length) {
                                object.actions = [];
                                for (var j = 0; j < message.actions.length; ++j)
                                    object.actions[j] = message.actions[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PostdeployJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.PostdeployJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PostdeployJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PostdeployJob
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.PostdeployJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PostdeployJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.PostdeployJob";
                        };
    
                        return PostdeployJob;
                    })();
    
                    v1.CreateChildRolloutJob = (function() {
    
                        /**
                         * Properties of a CreateChildRolloutJob.
                         * @memberof google.cloud.deploy.v1
                         * @interface ICreateChildRolloutJob
                         */
    
                        /**
                         * Constructs a new CreateChildRolloutJob.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a CreateChildRolloutJob.
                         * @implements ICreateChildRolloutJob
                         * @constructor
                         * @param {google.cloud.deploy.v1.ICreateChildRolloutJob=} [properties] Properties to set
                         */
                        function CreateChildRolloutJob(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new CreateChildRolloutJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJob
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateChildRolloutJob=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.CreateChildRolloutJob} CreateChildRolloutJob instance
                         */
                        CreateChildRolloutJob.create = function create(properties) {
                            return new CreateChildRolloutJob(properties);
                        };
    
                        /**
                         * Encodes the specified CreateChildRolloutJob message. Does not implicitly {@link google.cloud.deploy.v1.CreateChildRolloutJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJob
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateChildRolloutJob} message CreateChildRolloutJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateChildRolloutJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateChildRolloutJob message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.CreateChildRolloutJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJob
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateChildRolloutJob} message CreateChildRolloutJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateChildRolloutJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateChildRolloutJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.CreateChildRolloutJob} CreateChildRolloutJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateChildRolloutJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.CreateChildRolloutJob();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateChildRolloutJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.CreateChildRolloutJob} CreateChildRolloutJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateChildRolloutJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateChildRolloutJob message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateChildRolloutJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateChildRolloutJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.CreateChildRolloutJob} CreateChildRolloutJob
                         */
                        CreateChildRolloutJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.CreateChildRolloutJob)
                                return object;
                            return new $root.google.cloud.deploy.v1.CreateChildRolloutJob();
                        };
    
                        /**
                         * Creates a plain object from a CreateChildRolloutJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJob
                         * @static
                         * @param {google.cloud.deploy.v1.CreateChildRolloutJob} message CreateChildRolloutJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateChildRolloutJob.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this CreateChildRolloutJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateChildRolloutJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateChildRolloutJob
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateChildRolloutJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.CreateChildRolloutJob";
                        };
    
                        return CreateChildRolloutJob;
                    })();
    
                    v1.AdvanceChildRolloutJob = (function() {
    
                        /**
                         * Properties of an AdvanceChildRolloutJob.
                         * @memberof google.cloud.deploy.v1
                         * @interface IAdvanceChildRolloutJob
                         */
    
                        /**
                         * Constructs a new AdvanceChildRolloutJob.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents an AdvanceChildRolloutJob.
                         * @implements IAdvanceChildRolloutJob
                         * @constructor
                         * @param {google.cloud.deploy.v1.IAdvanceChildRolloutJob=} [properties] Properties to set
                         */
                        function AdvanceChildRolloutJob(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new AdvanceChildRolloutJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJob
                         * @static
                         * @param {google.cloud.deploy.v1.IAdvanceChildRolloutJob=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.AdvanceChildRolloutJob} AdvanceChildRolloutJob instance
                         */
                        AdvanceChildRolloutJob.create = function create(properties) {
                            return new AdvanceChildRolloutJob(properties);
                        };
    
                        /**
                         * Encodes the specified AdvanceChildRolloutJob message. Does not implicitly {@link google.cloud.deploy.v1.AdvanceChildRolloutJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJob
                         * @static
                         * @param {google.cloud.deploy.v1.IAdvanceChildRolloutJob} message AdvanceChildRolloutJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdvanceChildRolloutJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AdvanceChildRolloutJob message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.AdvanceChildRolloutJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJob
                         * @static
                         * @param {google.cloud.deploy.v1.IAdvanceChildRolloutJob} message AdvanceChildRolloutJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdvanceChildRolloutJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AdvanceChildRolloutJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.AdvanceChildRolloutJob} AdvanceChildRolloutJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdvanceChildRolloutJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.AdvanceChildRolloutJob();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AdvanceChildRolloutJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.AdvanceChildRolloutJob} AdvanceChildRolloutJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdvanceChildRolloutJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AdvanceChildRolloutJob message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AdvanceChildRolloutJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an AdvanceChildRolloutJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.AdvanceChildRolloutJob} AdvanceChildRolloutJob
                         */
                        AdvanceChildRolloutJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.AdvanceChildRolloutJob)
                                return object;
                            return new $root.google.cloud.deploy.v1.AdvanceChildRolloutJob();
                        };
    
                        /**
                         * Creates a plain object from an AdvanceChildRolloutJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJob
                         * @static
                         * @param {google.cloud.deploy.v1.AdvanceChildRolloutJob} message AdvanceChildRolloutJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AdvanceChildRolloutJob.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this AdvanceChildRolloutJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AdvanceChildRolloutJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AdvanceChildRolloutJob
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AdvanceChildRolloutJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.AdvanceChildRolloutJob";
                        };
    
                        return AdvanceChildRolloutJob;
                    })();
    
                    v1.ListRolloutsRequest = (function() {
    
                        /**
                         * Properties of a ListRolloutsRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IListRolloutsRequest
                         * @property {string|null} [parent] ListRolloutsRequest parent
                         * @property {number|null} [pageSize] ListRolloutsRequest pageSize
                         * @property {string|null} [pageToken] ListRolloutsRequest pageToken
                         * @property {string|null} [filter] ListRolloutsRequest filter
                         * @property {string|null} [orderBy] ListRolloutsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListRolloutsRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a ListRolloutsRequest.
                         * @implements IListRolloutsRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IListRolloutsRequest=} [properties] Properties to set
                         */
                        function ListRolloutsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRolloutsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.deploy.v1.ListRolloutsRequest
                         * @instance
                         */
                        ListRolloutsRequest.prototype.parent = "";
    
                        /**
                         * ListRolloutsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.deploy.v1.ListRolloutsRequest
                         * @instance
                         */
                        ListRolloutsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListRolloutsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.deploy.v1.ListRolloutsRequest
                         * @instance
                         */
                        ListRolloutsRequest.prototype.pageToken = "";
    
                        /**
                         * ListRolloutsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.deploy.v1.ListRolloutsRequest
                         * @instance
                         */
                        ListRolloutsRequest.prototype.filter = "";
    
                        /**
                         * ListRolloutsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.deploy.v1.ListRolloutsRequest
                         * @instance
                         */
                        ListRolloutsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListRolloutsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ListRolloutsRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IListRolloutsRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ListRolloutsRequest} ListRolloutsRequest instance
                         */
                        ListRolloutsRequest.create = function create(properties) {
                            return new ListRolloutsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListRolloutsRequest message. Does not implicitly {@link google.cloud.deploy.v1.ListRolloutsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ListRolloutsRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IListRolloutsRequest} message ListRolloutsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRolloutsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRolloutsRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ListRolloutsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ListRolloutsRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IListRolloutsRequest} message ListRolloutsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRolloutsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRolloutsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ListRolloutsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ListRolloutsRequest} ListRolloutsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRolloutsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ListRolloutsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRolloutsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ListRolloutsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ListRolloutsRequest} ListRolloutsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRolloutsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRolloutsRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ListRolloutsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRolloutsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRolloutsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ListRolloutsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ListRolloutsRequest} ListRolloutsRequest
                         */
                        ListRolloutsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ListRolloutsRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.ListRolloutsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRolloutsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ListRolloutsRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ListRolloutsRequest} message ListRolloutsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRolloutsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListRolloutsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ListRolloutsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRolloutsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRolloutsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ListRolloutsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRolloutsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ListRolloutsRequest";
                        };
    
                        return ListRolloutsRequest;
                    })();
    
                    v1.ListRolloutsResponse = (function() {
    
                        /**
                         * Properties of a ListRolloutsResponse.
                         * @memberof google.cloud.deploy.v1
                         * @interface IListRolloutsResponse
                         * @property {Array.<google.cloud.deploy.v1.IRollout>|null} [rollouts] ListRolloutsResponse rollouts
                         * @property {string|null} [nextPageToken] ListRolloutsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListRolloutsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListRolloutsResponse.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a ListRolloutsResponse.
                         * @implements IListRolloutsResponse
                         * @constructor
                         * @param {google.cloud.deploy.v1.IListRolloutsResponse=} [properties] Properties to set
                         */
                        function ListRolloutsResponse(properties) {
                            this.rollouts = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRolloutsResponse rollouts.
                         * @member {Array.<google.cloud.deploy.v1.IRollout>} rollouts
                         * @memberof google.cloud.deploy.v1.ListRolloutsResponse
                         * @instance
                         */
                        ListRolloutsResponse.prototype.rollouts = $util.emptyArray;
    
                        /**
                         * ListRolloutsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.deploy.v1.ListRolloutsResponse
                         * @instance
                         */
                        ListRolloutsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListRolloutsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.deploy.v1.ListRolloutsResponse
                         * @instance
                         */
                        ListRolloutsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListRolloutsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ListRolloutsResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IListRolloutsResponse=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ListRolloutsResponse} ListRolloutsResponse instance
                         */
                        ListRolloutsResponse.create = function create(properties) {
                            return new ListRolloutsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListRolloutsResponse message. Does not implicitly {@link google.cloud.deploy.v1.ListRolloutsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ListRolloutsResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IListRolloutsResponse} message ListRolloutsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRolloutsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.rollouts != null && message.rollouts.length)
                                for (var i = 0; i < message.rollouts.length; ++i)
                                    $root.google.cloud.deploy.v1.Rollout.encode(message.rollouts[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRolloutsResponse message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ListRolloutsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ListRolloutsResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IListRolloutsResponse} message ListRolloutsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRolloutsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRolloutsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ListRolloutsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ListRolloutsResponse} ListRolloutsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRolloutsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ListRolloutsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.rollouts && message.rollouts.length))
                                            message.rollouts = [];
                                        message.rollouts.push($root.google.cloud.deploy.v1.Rollout.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRolloutsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ListRolloutsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ListRolloutsResponse} ListRolloutsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRolloutsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRolloutsResponse message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ListRolloutsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRolloutsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.rollouts != null && message.hasOwnProperty("rollouts")) {
                                if (!Array.isArray(message.rollouts))
                                    return "rollouts: array expected";
                                for (var i = 0; i < message.rollouts.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.Rollout.verify(message.rollouts[i]);
                                    if (error)
                                        return "rollouts." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListRolloutsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ListRolloutsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ListRolloutsResponse} ListRolloutsResponse
                         */
                        ListRolloutsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ListRolloutsResponse)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.ListRolloutsResponse();
                            if (object.rollouts) {
                                if (!Array.isArray(object.rollouts))
                                    throw TypeError(".google.cloud.deploy.v1.ListRolloutsResponse.rollouts: array expected");
                                message.rollouts = [];
                                for (var i = 0; i < object.rollouts.length; ++i) {
                                    if (typeof object.rollouts[i] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.ListRolloutsResponse.rollouts: object expected");
                                    message.rollouts[i] = $root.google.cloud.deploy.v1.Rollout.fromObject(object.rollouts[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.deploy.v1.ListRolloutsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRolloutsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ListRolloutsResponse
                         * @static
                         * @param {google.cloud.deploy.v1.ListRolloutsResponse} message ListRolloutsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRolloutsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.rollouts = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.rollouts && message.rollouts.length) {
                                object.rollouts = [];
                                for (var j = 0; j < message.rollouts.length; ++j)
                                    object.rollouts[j] = $root.google.cloud.deploy.v1.Rollout.toObject(message.rollouts[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListRolloutsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ListRolloutsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRolloutsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRolloutsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ListRolloutsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRolloutsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ListRolloutsResponse";
                        };
    
                        return ListRolloutsResponse;
                    })();
    
                    v1.GetRolloutRequest = (function() {
    
                        /**
                         * Properties of a GetRolloutRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IGetRolloutRequest
                         * @property {string|null} [name] GetRolloutRequest name
                         */
    
                        /**
                         * Constructs a new GetRolloutRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a GetRolloutRequest.
                         * @implements IGetRolloutRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IGetRolloutRequest=} [properties] Properties to set
                         */
                        function GetRolloutRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetRolloutRequest name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.GetRolloutRequest
                         * @instance
                         */
                        GetRolloutRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetRolloutRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.GetRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetRolloutRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.GetRolloutRequest} GetRolloutRequest instance
                         */
                        GetRolloutRequest.create = function create(properties) {
                            return new GetRolloutRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetRolloutRequest message. Does not implicitly {@link google.cloud.deploy.v1.GetRolloutRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.GetRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetRolloutRequest} message GetRolloutRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRolloutRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetRolloutRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.GetRolloutRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.GetRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetRolloutRequest} message GetRolloutRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRolloutRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetRolloutRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.GetRolloutRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.GetRolloutRequest} GetRolloutRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRolloutRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.GetRolloutRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetRolloutRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.GetRolloutRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.GetRolloutRequest} GetRolloutRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRolloutRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetRolloutRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.GetRolloutRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetRolloutRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetRolloutRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.GetRolloutRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.GetRolloutRequest} GetRolloutRequest
                         */
                        GetRolloutRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.GetRolloutRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.GetRolloutRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetRolloutRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.GetRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.GetRolloutRequest} message GetRolloutRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetRolloutRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetRolloutRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.GetRolloutRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetRolloutRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetRolloutRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.GetRolloutRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetRolloutRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.GetRolloutRequest";
                        };
    
                        return GetRolloutRequest;
                    })();
    
                    v1.CreateRolloutRequest = (function() {
    
                        /**
                         * Properties of a CreateRolloutRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface ICreateRolloutRequest
                         * @property {string|null} [parent] CreateRolloutRequest parent
                         * @property {string|null} [rolloutId] CreateRolloutRequest rolloutId
                         * @property {google.cloud.deploy.v1.IRollout|null} [rollout] CreateRolloutRequest rollout
                         * @property {string|null} [requestId] CreateRolloutRequest requestId
                         * @property {boolean|null} [validateOnly] CreateRolloutRequest validateOnly
                         * @property {string|null} [startingPhaseId] CreateRolloutRequest startingPhaseId
                         */
    
                        /**
                         * Constructs a new CreateRolloutRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a CreateRolloutRequest.
                         * @implements ICreateRolloutRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.ICreateRolloutRequest=} [properties] Properties to set
                         */
                        function CreateRolloutRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateRolloutRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @instance
                         */
                        CreateRolloutRequest.prototype.parent = "";
    
                        /**
                         * CreateRolloutRequest rolloutId.
                         * @member {string} rolloutId
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @instance
                         */
                        CreateRolloutRequest.prototype.rolloutId = "";
    
                        /**
                         * CreateRolloutRequest rollout.
                         * @member {google.cloud.deploy.v1.IRollout|null|undefined} rollout
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @instance
                         */
                        CreateRolloutRequest.prototype.rollout = null;
    
                        /**
                         * CreateRolloutRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @instance
                         */
                        CreateRolloutRequest.prototype.requestId = "";
    
                        /**
                         * CreateRolloutRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @instance
                         */
                        CreateRolloutRequest.prototype.validateOnly = false;
    
                        /**
                         * CreateRolloutRequest startingPhaseId.
                         * @member {string} startingPhaseId
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @instance
                         */
                        CreateRolloutRequest.prototype.startingPhaseId = "";
    
                        /**
                         * Creates a new CreateRolloutRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateRolloutRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.CreateRolloutRequest} CreateRolloutRequest instance
                         */
                        CreateRolloutRequest.create = function create(properties) {
                            return new CreateRolloutRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateRolloutRequest message. Does not implicitly {@link google.cloud.deploy.v1.CreateRolloutRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateRolloutRequest} message CreateRolloutRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRolloutRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.rolloutId != null && Object.hasOwnProperty.call(message, "rolloutId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.rolloutId);
                            if (message.rollout != null && Object.hasOwnProperty.call(message, "rollout"))
                                $root.google.cloud.deploy.v1.Rollout.encode(message.rollout, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                            if (message.startingPhaseId != null && Object.hasOwnProperty.call(message, "startingPhaseId"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.startingPhaseId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateRolloutRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.CreateRolloutRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateRolloutRequest} message CreateRolloutRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRolloutRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateRolloutRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.CreateRolloutRequest} CreateRolloutRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRolloutRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.CreateRolloutRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.rolloutId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.rollout = $root.google.cloud.deploy.v1.Rollout.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.startingPhaseId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateRolloutRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.CreateRolloutRequest} CreateRolloutRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRolloutRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateRolloutRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateRolloutRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.rolloutId != null && message.hasOwnProperty("rolloutId"))
                                if (!$util.isString(message.rolloutId))
                                    return "rolloutId: string expected";
                            if (message.rollout != null && message.hasOwnProperty("rollout")) {
                                var error = $root.google.cloud.deploy.v1.Rollout.verify(message.rollout);
                                if (error)
                                    return "rollout." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            if (message.startingPhaseId != null && message.hasOwnProperty("startingPhaseId"))
                                if (!$util.isString(message.startingPhaseId))
                                    return "startingPhaseId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateRolloutRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.CreateRolloutRequest} CreateRolloutRequest
                         */
                        CreateRolloutRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.CreateRolloutRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.CreateRolloutRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.rolloutId != null)
                                message.rolloutId = String(object.rolloutId);
                            if (object.rollout != null) {
                                if (typeof object.rollout !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.CreateRolloutRequest.rollout: object expected");
                                message.rollout = $root.google.cloud.deploy.v1.Rollout.fromObject(object.rollout);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            if (object.startingPhaseId != null)
                                message.startingPhaseId = String(object.startingPhaseId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateRolloutRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.CreateRolloutRequest} message CreateRolloutRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateRolloutRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.rolloutId = "";
                                object.rollout = null;
                                object.requestId = "";
                                object.validateOnly = false;
                                object.startingPhaseId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.rolloutId != null && message.hasOwnProperty("rolloutId"))
                                object.rolloutId = message.rolloutId;
                            if (message.rollout != null && message.hasOwnProperty("rollout"))
                                object.rollout = $root.google.cloud.deploy.v1.Rollout.toObject(message.rollout, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            if (message.startingPhaseId != null && message.hasOwnProperty("startingPhaseId"))
                                object.startingPhaseId = message.startingPhaseId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateRolloutRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateRolloutRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateRolloutRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.CreateRolloutRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateRolloutRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.CreateRolloutRequest";
                        };
    
                        return CreateRolloutRequest;
                    })();
    
                    v1.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.deploy.v1
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusMessage] OperationMetadata statusMessage
                         * @property {boolean|null} [requestedCancellation] OperationMetadata requestedCancellation
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.deploy.v1.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusMessage.
                         * @member {string} statusMessage
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusMessage = "";
    
                        /**
                         * OperationMetadata requestedCancellation.
                         * @member {boolean} requestedCancellation
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.requestedCancellation = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.deploy.v1.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusMessage);
                            if (message.requestedCancellation != null && Object.hasOwnProperty.call(message, "requestedCancellation"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.requestedCancellation);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusMessage = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.requestedCancellation = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                if (!$util.isString(message.statusMessage))
                                    return "statusMessage: string expected";
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                if (typeof message.requestedCancellation !== "boolean")
                                    return "requestedCancellation: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusMessage != null)
                                message.statusMessage = String(object.statusMessage);
                            if (object.requestedCancellation != null)
                                message.requestedCancellation = Boolean(object.requestedCancellation);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.deploy.v1.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusMessage = "";
                                object.requestedCancellation = false;
                                object.apiVersion = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                object.statusMessage = message.statusMessage;
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                object.requestedCancellation = message.requestedCancellation;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    v1.ApproveRolloutRequest = (function() {
    
                        /**
                         * Properties of an ApproveRolloutRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IApproveRolloutRequest
                         * @property {string|null} [name] ApproveRolloutRequest name
                         * @property {boolean|null} [approved] ApproveRolloutRequest approved
                         */
    
                        /**
                         * Constructs a new ApproveRolloutRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents an ApproveRolloutRequest.
                         * @implements IApproveRolloutRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IApproveRolloutRequest=} [properties] Properties to set
                         */
                        function ApproveRolloutRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ApproveRolloutRequest name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.ApproveRolloutRequest
                         * @instance
                         */
                        ApproveRolloutRequest.prototype.name = "";
    
                        /**
                         * ApproveRolloutRequest approved.
                         * @member {boolean} approved
                         * @memberof google.cloud.deploy.v1.ApproveRolloutRequest
                         * @instance
                         */
                        ApproveRolloutRequest.prototype.approved = false;
    
                        /**
                         * Creates a new ApproveRolloutRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ApproveRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IApproveRolloutRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ApproveRolloutRequest} ApproveRolloutRequest instance
                         */
                        ApproveRolloutRequest.create = function create(properties) {
                            return new ApproveRolloutRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ApproveRolloutRequest message. Does not implicitly {@link google.cloud.deploy.v1.ApproveRolloutRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ApproveRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IApproveRolloutRequest} message ApproveRolloutRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApproveRolloutRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.approved != null && Object.hasOwnProperty.call(message, "approved"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.approved);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ApproveRolloutRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ApproveRolloutRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ApproveRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IApproveRolloutRequest} message ApproveRolloutRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApproveRolloutRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ApproveRolloutRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ApproveRolloutRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ApproveRolloutRequest} ApproveRolloutRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApproveRolloutRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ApproveRolloutRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.approved = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ApproveRolloutRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ApproveRolloutRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ApproveRolloutRequest} ApproveRolloutRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApproveRolloutRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ApproveRolloutRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ApproveRolloutRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ApproveRolloutRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.approved != null && message.hasOwnProperty("approved"))
                                if (typeof message.approved !== "boolean")
                                    return "approved: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an ApproveRolloutRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ApproveRolloutRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ApproveRolloutRequest} ApproveRolloutRequest
                         */
                        ApproveRolloutRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ApproveRolloutRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.ApproveRolloutRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.approved != null)
                                message.approved = Boolean(object.approved);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ApproveRolloutRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ApproveRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ApproveRolloutRequest} message ApproveRolloutRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ApproveRolloutRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.approved = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.approved != null && message.hasOwnProperty("approved"))
                                object.approved = message.approved;
                            return object;
                        };
    
                        /**
                         * Converts this ApproveRolloutRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ApproveRolloutRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ApproveRolloutRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ApproveRolloutRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ApproveRolloutRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ApproveRolloutRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ApproveRolloutRequest";
                        };
    
                        return ApproveRolloutRequest;
                    })();
    
                    v1.ApproveRolloutResponse = (function() {
    
                        /**
                         * Properties of an ApproveRolloutResponse.
                         * @memberof google.cloud.deploy.v1
                         * @interface IApproveRolloutResponse
                         */
    
                        /**
                         * Constructs a new ApproveRolloutResponse.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents an ApproveRolloutResponse.
                         * @implements IApproveRolloutResponse
                         * @constructor
                         * @param {google.cloud.deploy.v1.IApproveRolloutResponse=} [properties] Properties to set
                         */
                        function ApproveRolloutResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new ApproveRolloutResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ApproveRolloutResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IApproveRolloutResponse=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ApproveRolloutResponse} ApproveRolloutResponse instance
                         */
                        ApproveRolloutResponse.create = function create(properties) {
                            return new ApproveRolloutResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ApproveRolloutResponse message. Does not implicitly {@link google.cloud.deploy.v1.ApproveRolloutResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ApproveRolloutResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IApproveRolloutResponse} message ApproveRolloutResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApproveRolloutResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ApproveRolloutResponse message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ApproveRolloutResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ApproveRolloutResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IApproveRolloutResponse} message ApproveRolloutResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApproveRolloutResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ApproveRolloutResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ApproveRolloutResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ApproveRolloutResponse} ApproveRolloutResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApproveRolloutResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ApproveRolloutResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ApproveRolloutResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ApproveRolloutResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ApproveRolloutResponse} ApproveRolloutResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApproveRolloutResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ApproveRolloutResponse message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ApproveRolloutResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ApproveRolloutResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an ApproveRolloutResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ApproveRolloutResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ApproveRolloutResponse} ApproveRolloutResponse
                         */
                        ApproveRolloutResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ApproveRolloutResponse)
                                return object;
                            return new $root.google.cloud.deploy.v1.ApproveRolloutResponse();
                        };
    
                        /**
                         * Creates a plain object from an ApproveRolloutResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ApproveRolloutResponse
                         * @static
                         * @param {google.cloud.deploy.v1.ApproveRolloutResponse} message ApproveRolloutResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ApproveRolloutResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this ApproveRolloutResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ApproveRolloutResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ApproveRolloutResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ApproveRolloutResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ApproveRolloutResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ApproveRolloutResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ApproveRolloutResponse";
                        };
    
                        return ApproveRolloutResponse;
                    })();
    
                    v1.AdvanceRolloutRequest = (function() {
    
                        /**
                         * Properties of an AdvanceRolloutRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IAdvanceRolloutRequest
                         * @property {string|null} [name] AdvanceRolloutRequest name
                         * @property {string|null} [phaseId] AdvanceRolloutRequest phaseId
                         */
    
                        /**
                         * Constructs a new AdvanceRolloutRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents an AdvanceRolloutRequest.
                         * @implements IAdvanceRolloutRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IAdvanceRolloutRequest=} [properties] Properties to set
                         */
                        function AdvanceRolloutRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AdvanceRolloutRequest name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutRequest
                         * @instance
                         */
                        AdvanceRolloutRequest.prototype.name = "";
    
                        /**
                         * AdvanceRolloutRequest phaseId.
                         * @member {string} phaseId
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutRequest
                         * @instance
                         */
                        AdvanceRolloutRequest.prototype.phaseId = "";
    
                        /**
                         * Creates a new AdvanceRolloutRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IAdvanceRolloutRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.AdvanceRolloutRequest} AdvanceRolloutRequest instance
                         */
                        AdvanceRolloutRequest.create = function create(properties) {
                            return new AdvanceRolloutRequest(properties);
                        };
    
                        /**
                         * Encodes the specified AdvanceRolloutRequest message. Does not implicitly {@link google.cloud.deploy.v1.AdvanceRolloutRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IAdvanceRolloutRequest} message AdvanceRolloutRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdvanceRolloutRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.phaseId != null && Object.hasOwnProperty.call(message, "phaseId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.phaseId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AdvanceRolloutRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.AdvanceRolloutRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IAdvanceRolloutRequest} message AdvanceRolloutRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdvanceRolloutRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AdvanceRolloutRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.AdvanceRolloutRequest} AdvanceRolloutRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdvanceRolloutRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.AdvanceRolloutRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.phaseId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AdvanceRolloutRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.AdvanceRolloutRequest} AdvanceRolloutRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdvanceRolloutRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AdvanceRolloutRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AdvanceRolloutRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.phaseId != null && message.hasOwnProperty("phaseId"))
                                if (!$util.isString(message.phaseId))
                                    return "phaseId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AdvanceRolloutRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.AdvanceRolloutRequest} AdvanceRolloutRequest
                         */
                        AdvanceRolloutRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.AdvanceRolloutRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.AdvanceRolloutRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.phaseId != null)
                                message.phaseId = String(object.phaseId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AdvanceRolloutRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.AdvanceRolloutRequest} message AdvanceRolloutRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AdvanceRolloutRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.phaseId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.phaseId != null && message.hasOwnProperty("phaseId"))
                                object.phaseId = message.phaseId;
                            return object;
                        };
    
                        /**
                         * Converts this AdvanceRolloutRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AdvanceRolloutRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AdvanceRolloutRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AdvanceRolloutRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.AdvanceRolloutRequest";
                        };
    
                        return AdvanceRolloutRequest;
                    })();
    
                    v1.AdvanceRolloutResponse = (function() {
    
                        /**
                         * Properties of an AdvanceRolloutResponse.
                         * @memberof google.cloud.deploy.v1
                         * @interface IAdvanceRolloutResponse
                         */
    
                        /**
                         * Constructs a new AdvanceRolloutResponse.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents an AdvanceRolloutResponse.
                         * @implements IAdvanceRolloutResponse
                         * @constructor
                         * @param {google.cloud.deploy.v1.IAdvanceRolloutResponse=} [properties] Properties to set
                         */
                        function AdvanceRolloutResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new AdvanceRolloutResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IAdvanceRolloutResponse=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.AdvanceRolloutResponse} AdvanceRolloutResponse instance
                         */
                        AdvanceRolloutResponse.create = function create(properties) {
                            return new AdvanceRolloutResponse(properties);
                        };
    
                        /**
                         * Encodes the specified AdvanceRolloutResponse message. Does not implicitly {@link google.cloud.deploy.v1.AdvanceRolloutResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IAdvanceRolloutResponse} message AdvanceRolloutResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdvanceRolloutResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AdvanceRolloutResponse message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.AdvanceRolloutResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IAdvanceRolloutResponse} message AdvanceRolloutResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdvanceRolloutResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AdvanceRolloutResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.AdvanceRolloutResponse} AdvanceRolloutResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdvanceRolloutResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.AdvanceRolloutResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AdvanceRolloutResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.AdvanceRolloutResponse} AdvanceRolloutResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdvanceRolloutResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AdvanceRolloutResponse message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AdvanceRolloutResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an AdvanceRolloutResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.AdvanceRolloutResponse} AdvanceRolloutResponse
                         */
                        AdvanceRolloutResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.AdvanceRolloutResponse)
                                return object;
                            return new $root.google.cloud.deploy.v1.AdvanceRolloutResponse();
                        };
    
                        /**
                         * Creates a plain object from an AdvanceRolloutResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutResponse
                         * @static
                         * @param {google.cloud.deploy.v1.AdvanceRolloutResponse} message AdvanceRolloutResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AdvanceRolloutResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this AdvanceRolloutResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AdvanceRolloutResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AdvanceRolloutResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.AdvanceRolloutResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AdvanceRolloutResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.AdvanceRolloutResponse";
                        };
    
                        return AdvanceRolloutResponse;
                    })();
    
                    v1.CancelRolloutRequest = (function() {
    
                        /**
                         * Properties of a CancelRolloutRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface ICancelRolloutRequest
                         * @property {string|null} [name] CancelRolloutRequest name
                         */
    
                        /**
                         * Constructs a new CancelRolloutRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a CancelRolloutRequest.
                         * @implements ICancelRolloutRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.ICancelRolloutRequest=} [properties] Properties to set
                         */
                        function CancelRolloutRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CancelRolloutRequest name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.CancelRolloutRequest
                         * @instance
                         */
                        CancelRolloutRequest.prototype.name = "";
    
                        /**
                         * Creates a new CancelRolloutRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.CancelRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ICancelRolloutRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.CancelRolloutRequest} CancelRolloutRequest instance
                         */
                        CancelRolloutRequest.create = function create(properties) {
                            return new CancelRolloutRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CancelRolloutRequest message. Does not implicitly {@link google.cloud.deploy.v1.CancelRolloutRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.CancelRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ICancelRolloutRequest} message CancelRolloutRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelRolloutRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CancelRolloutRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.CancelRolloutRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.CancelRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ICancelRolloutRequest} message CancelRolloutRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelRolloutRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CancelRolloutRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.CancelRolloutRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.CancelRolloutRequest} CancelRolloutRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelRolloutRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.CancelRolloutRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CancelRolloutRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.CancelRolloutRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.CancelRolloutRequest} CancelRolloutRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelRolloutRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CancelRolloutRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.CancelRolloutRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CancelRolloutRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CancelRolloutRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.CancelRolloutRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.CancelRolloutRequest} CancelRolloutRequest
                         */
                        CancelRolloutRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.CancelRolloutRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.CancelRolloutRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CancelRolloutRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.CancelRolloutRequest
                         * @static
                         * @param {google.cloud.deploy.v1.CancelRolloutRequest} message CancelRolloutRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CancelRolloutRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this CancelRolloutRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.CancelRolloutRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CancelRolloutRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CancelRolloutRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.CancelRolloutRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CancelRolloutRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.CancelRolloutRequest";
                        };
    
                        return CancelRolloutRequest;
                    })();
    
                    v1.CancelRolloutResponse = (function() {
    
                        /**
                         * Properties of a CancelRolloutResponse.
                         * @memberof google.cloud.deploy.v1
                         * @interface ICancelRolloutResponse
                         */
    
                        /**
                         * Constructs a new CancelRolloutResponse.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a CancelRolloutResponse.
                         * @implements ICancelRolloutResponse
                         * @constructor
                         * @param {google.cloud.deploy.v1.ICancelRolloutResponse=} [properties] Properties to set
                         */
                        function CancelRolloutResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new CancelRolloutResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.CancelRolloutResponse
                         * @static
                         * @param {google.cloud.deploy.v1.ICancelRolloutResponse=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.CancelRolloutResponse} CancelRolloutResponse instance
                         */
                        CancelRolloutResponse.create = function create(properties) {
                            return new CancelRolloutResponse(properties);
                        };
    
                        /**
                         * Encodes the specified CancelRolloutResponse message. Does not implicitly {@link google.cloud.deploy.v1.CancelRolloutResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.CancelRolloutResponse
                         * @static
                         * @param {google.cloud.deploy.v1.ICancelRolloutResponse} message CancelRolloutResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelRolloutResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CancelRolloutResponse message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.CancelRolloutResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.CancelRolloutResponse
                         * @static
                         * @param {google.cloud.deploy.v1.ICancelRolloutResponse} message CancelRolloutResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelRolloutResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CancelRolloutResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.CancelRolloutResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.CancelRolloutResponse} CancelRolloutResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelRolloutResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.CancelRolloutResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CancelRolloutResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.CancelRolloutResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.CancelRolloutResponse} CancelRolloutResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelRolloutResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CancelRolloutResponse message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.CancelRolloutResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CancelRolloutResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a CancelRolloutResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.CancelRolloutResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.CancelRolloutResponse} CancelRolloutResponse
                         */
                        CancelRolloutResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.CancelRolloutResponse)
                                return object;
                            return new $root.google.cloud.deploy.v1.CancelRolloutResponse();
                        };
    
                        /**
                         * Creates a plain object from a CancelRolloutResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.CancelRolloutResponse
                         * @static
                         * @param {google.cloud.deploy.v1.CancelRolloutResponse} message CancelRolloutResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CancelRolloutResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this CancelRolloutResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.CancelRolloutResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CancelRolloutResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CancelRolloutResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.CancelRolloutResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CancelRolloutResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.CancelRolloutResponse";
                        };
    
                        return CancelRolloutResponse;
                    })();
    
                    v1.IgnoreJobRequest = (function() {
    
                        /**
                         * Properties of an IgnoreJobRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IIgnoreJobRequest
                         * @property {string|null} [rollout] IgnoreJobRequest rollout
                         * @property {string|null} [phaseId] IgnoreJobRequest phaseId
                         * @property {string|null} [jobId] IgnoreJobRequest jobId
                         */
    
                        /**
                         * Constructs a new IgnoreJobRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents an IgnoreJobRequest.
                         * @implements IIgnoreJobRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IIgnoreJobRequest=} [properties] Properties to set
                         */
                        function IgnoreJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * IgnoreJobRequest rollout.
                         * @member {string} rollout
                         * @memberof google.cloud.deploy.v1.IgnoreJobRequest
                         * @instance
                         */
                        IgnoreJobRequest.prototype.rollout = "";
    
                        /**
                         * IgnoreJobRequest phaseId.
                         * @member {string} phaseId
                         * @memberof google.cloud.deploy.v1.IgnoreJobRequest
                         * @instance
                         */
                        IgnoreJobRequest.prototype.phaseId = "";
    
                        /**
                         * IgnoreJobRequest jobId.
                         * @member {string} jobId
                         * @memberof google.cloud.deploy.v1.IgnoreJobRequest
                         * @instance
                         */
                        IgnoreJobRequest.prototype.jobId = "";
    
                        /**
                         * Creates a new IgnoreJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.IgnoreJobRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IIgnoreJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.IgnoreJobRequest} IgnoreJobRequest instance
                         */
                        IgnoreJobRequest.create = function create(properties) {
                            return new IgnoreJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified IgnoreJobRequest message. Does not implicitly {@link google.cloud.deploy.v1.IgnoreJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.IgnoreJobRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IIgnoreJobRequest} message IgnoreJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IgnoreJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.rollout != null && Object.hasOwnProperty.call(message, "rollout"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.rollout);
                            if (message.phaseId != null && Object.hasOwnProperty.call(message, "phaseId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.phaseId);
                            if (message.jobId != null && Object.hasOwnProperty.call(message, "jobId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.jobId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified IgnoreJobRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.IgnoreJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.IgnoreJobRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IIgnoreJobRequest} message IgnoreJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IgnoreJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an IgnoreJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.IgnoreJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.IgnoreJobRequest} IgnoreJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IgnoreJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.IgnoreJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.rollout = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.phaseId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.jobId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an IgnoreJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.IgnoreJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.IgnoreJobRequest} IgnoreJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IgnoreJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an IgnoreJobRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.IgnoreJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        IgnoreJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.rollout != null && message.hasOwnProperty("rollout"))
                                if (!$util.isString(message.rollout))
                                    return "rollout: string expected";
                            if (message.phaseId != null && message.hasOwnProperty("phaseId"))
                                if (!$util.isString(message.phaseId))
                                    return "phaseId: string expected";
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                if (!$util.isString(message.jobId))
                                    return "jobId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an IgnoreJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.IgnoreJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.IgnoreJobRequest} IgnoreJobRequest
                         */
                        IgnoreJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.IgnoreJobRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.IgnoreJobRequest();
                            if (object.rollout != null)
                                message.rollout = String(object.rollout);
                            if (object.phaseId != null)
                                message.phaseId = String(object.phaseId);
                            if (object.jobId != null)
                                message.jobId = String(object.jobId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an IgnoreJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.IgnoreJobRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IgnoreJobRequest} message IgnoreJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        IgnoreJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.rollout = "";
                                object.phaseId = "";
                                object.jobId = "";
                            }
                            if (message.rollout != null && message.hasOwnProperty("rollout"))
                                object.rollout = message.rollout;
                            if (message.phaseId != null && message.hasOwnProperty("phaseId"))
                                object.phaseId = message.phaseId;
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                object.jobId = message.jobId;
                            return object;
                        };
    
                        /**
                         * Converts this IgnoreJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.IgnoreJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        IgnoreJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for IgnoreJobRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.IgnoreJobRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        IgnoreJobRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.IgnoreJobRequest";
                        };
    
                        return IgnoreJobRequest;
                    })();
    
                    v1.IgnoreJobResponse = (function() {
    
                        /**
                         * Properties of an IgnoreJobResponse.
                         * @memberof google.cloud.deploy.v1
                         * @interface IIgnoreJobResponse
                         */
    
                        /**
                         * Constructs a new IgnoreJobResponse.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents an IgnoreJobResponse.
                         * @implements IIgnoreJobResponse
                         * @constructor
                         * @param {google.cloud.deploy.v1.IIgnoreJobResponse=} [properties] Properties to set
                         */
                        function IgnoreJobResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new IgnoreJobResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.IgnoreJobResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IIgnoreJobResponse=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.IgnoreJobResponse} IgnoreJobResponse instance
                         */
                        IgnoreJobResponse.create = function create(properties) {
                            return new IgnoreJobResponse(properties);
                        };
    
                        /**
                         * Encodes the specified IgnoreJobResponse message. Does not implicitly {@link google.cloud.deploy.v1.IgnoreJobResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.IgnoreJobResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IIgnoreJobResponse} message IgnoreJobResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IgnoreJobResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified IgnoreJobResponse message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.IgnoreJobResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.IgnoreJobResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IIgnoreJobResponse} message IgnoreJobResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IgnoreJobResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an IgnoreJobResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.IgnoreJobResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.IgnoreJobResponse} IgnoreJobResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IgnoreJobResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.IgnoreJobResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an IgnoreJobResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.IgnoreJobResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.IgnoreJobResponse} IgnoreJobResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IgnoreJobResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an IgnoreJobResponse message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.IgnoreJobResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        IgnoreJobResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an IgnoreJobResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.IgnoreJobResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.IgnoreJobResponse} IgnoreJobResponse
                         */
                        IgnoreJobResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.IgnoreJobResponse)
                                return object;
                            return new $root.google.cloud.deploy.v1.IgnoreJobResponse();
                        };
    
                        /**
                         * Creates a plain object from an IgnoreJobResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.IgnoreJobResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IgnoreJobResponse} message IgnoreJobResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        IgnoreJobResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this IgnoreJobResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.IgnoreJobResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        IgnoreJobResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for IgnoreJobResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.IgnoreJobResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        IgnoreJobResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.IgnoreJobResponse";
                        };
    
                        return IgnoreJobResponse;
                    })();
    
                    v1.RetryJobRequest = (function() {
    
                        /**
                         * Properties of a RetryJobRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IRetryJobRequest
                         * @property {string|null} [rollout] RetryJobRequest rollout
                         * @property {string|null} [phaseId] RetryJobRequest phaseId
                         * @property {string|null} [jobId] RetryJobRequest jobId
                         */
    
                        /**
                         * Constructs a new RetryJobRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a RetryJobRequest.
                         * @implements IRetryJobRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IRetryJobRequest=} [properties] Properties to set
                         */
                        function RetryJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RetryJobRequest rollout.
                         * @member {string} rollout
                         * @memberof google.cloud.deploy.v1.RetryJobRequest
                         * @instance
                         */
                        RetryJobRequest.prototype.rollout = "";
    
                        /**
                         * RetryJobRequest phaseId.
                         * @member {string} phaseId
                         * @memberof google.cloud.deploy.v1.RetryJobRequest
                         * @instance
                         */
                        RetryJobRequest.prototype.phaseId = "";
    
                        /**
                         * RetryJobRequest jobId.
                         * @member {string} jobId
                         * @memberof google.cloud.deploy.v1.RetryJobRequest
                         * @instance
                         */
                        RetryJobRequest.prototype.jobId = "";
    
                        /**
                         * Creates a new RetryJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.RetryJobRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IRetryJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.RetryJobRequest} RetryJobRequest instance
                         */
                        RetryJobRequest.create = function create(properties) {
                            return new RetryJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified RetryJobRequest message. Does not implicitly {@link google.cloud.deploy.v1.RetryJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.RetryJobRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IRetryJobRequest} message RetryJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.rollout != null && Object.hasOwnProperty.call(message, "rollout"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.rollout);
                            if (message.phaseId != null && Object.hasOwnProperty.call(message, "phaseId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.phaseId);
                            if (message.jobId != null && Object.hasOwnProperty.call(message, "jobId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.jobId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetryJobRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.RetryJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.RetryJobRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IRetryJobRequest} message RetryJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetryJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.RetryJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.RetryJobRequest} RetryJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.RetryJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.rollout = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.phaseId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.jobId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetryJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.RetryJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.RetryJobRequest} RetryJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetryJobRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.RetryJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetryJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.rollout != null && message.hasOwnProperty("rollout"))
                                if (!$util.isString(message.rollout))
                                    return "rollout: string expected";
                            if (message.phaseId != null && message.hasOwnProperty("phaseId"))
                                if (!$util.isString(message.phaseId))
                                    return "phaseId: string expected";
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                if (!$util.isString(message.jobId))
                                    return "jobId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetryJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.RetryJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.RetryJobRequest} RetryJobRequest
                         */
                        RetryJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.RetryJobRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.RetryJobRequest();
                            if (object.rollout != null)
                                message.rollout = String(object.rollout);
                            if (object.phaseId != null)
                                message.phaseId = String(object.phaseId);
                            if (object.jobId != null)
                                message.jobId = String(object.jobId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RetryJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.RetryJobRequest
                         * @static
                         * @param {google.cloud.deploy.v1.RetryJobRequest} message RetryJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetryJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.rollout = "";
                                object.phaseId = "";
                                object.jobId = "";
                            }
                            if (message.rollout != null && message.hasOwnProperty("rollout"))
                                object.rollout = message.rollout;
                            if (message.phaseId != null && message.hasOwnProperty("phaseId"))
                                object.phaseId = message.phaseId;
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                object.jobId = message.jobId;
                            return object;
                        };
    
                        /**
                         * Converts this RetryJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.RetryJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetryJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetryJobRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.RetryJobRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetryJobRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.RetryJobRequest";
                        };
    
                        return RetryJobRequest;
                    })();
    
                    v1.RetryJobResponse = (function() {
    
                        /**
                         * Properties of a RetryJobResponse.
                         * @memberof google.cloud.deploy.v1
                         * @interface IRetryJobResponse
                         */
    
                        /**
                         * Constructs a new RetryJobResponse.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a RetryJobResponse.
                         * @implements IRetryJobResponse
                         * @constructor
                         * @param {google.cloud.deploy.v1.IRetryJobResponse=} [properties] Properties to set
                         */
                        function RetryJobResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new RetryJobResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.RetryJobResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IRetryJobResponse=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.RetryJobResponse} RetryJobResponse instance
                         */
                        RetryJobResponse.create = function create(properties) {
                            return new RetryJobResponse(properties);
                        };
    
                        /**
                         * Encodes the specified RetryJobResponse message. Does not implicitly {@link google.cloud.deploy.v1.RetryJobResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.RetryJobResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IRetryJobResponse} message RetryJobResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryJobResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RetryJobResponse message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.RetryJobResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.RetryJobResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IRetryJobResponse} message RetryJobResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RetryJobResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RetryJobResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.RetryJobResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.RetryJobResponse} RetryJobResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryJobResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.RetryJobResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RetryJobResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.RetryJobResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.RetryJobResponse} RetryJobResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RetryJobResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RetryJobResponse message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.RetryJobResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RetryJobResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a RetryJobResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.RetryJobResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.RetryJobResponse} RetryJobResponse
                         */
                        RetryJobResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.RetryJobResponse)
                                return object;
                            return new $root.google.cloud.deploy.v1.RetryJobResponse();
                        };
    
                        /**
                         * Creates a plain object from a RetryJobResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.RetryJobResponse
                         * @static
                         * @param {google.cloud.deploy.v1.RetryJobResponse} message RetryJobResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RetryJobResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this RetryJobResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.RetryJobResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RetryJobResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RetryJobResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.RetryJobResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RetryJobResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.RetryJobResponse";
                        };
    
                        return RetryJobResponse;
                    })();
    
                    v1.AbandonReleaseRequest = (function() {
    
                        /**
                         * Properties of an AbandonReleaseRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IAbandonReleaseRequest
                         * @property {string|null} [name] AbandonReleaseRequest name
                         */
    
                        /**
                         * Constructs a new AbandonReleaseRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents an AbandonReleaseRequest.
                         * @implements IAbandonReleaseRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IAbandonReleaseRequest=} [properties] Properties to set
                         */
                        function AbandonReleaseRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AbandonReleaseRequest name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.AbandonReleaseRequest
                         * @instance
                         */
                        AbandonReleaseRequest.prototype.name = "";
    
                        /**
                         * Creates a new AbandonReleaseRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.AbandonReleaseRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IAbandonReleaseRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.AbandonReleaseRequest} AbandonReleaseRequest instance
                         */
                        AbandonReleaseRequest.create = function create(properties) {
                            return new AbandonReleaseRequest(properties);
                        };
    
                        /**
                         * Encodes the specified AbandonReleaseRequest message. Does not implicitly {@link google.cloud.deploy.v1.AbandonReleaseRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.AbandonReleaseRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IAbandonReleaseRequest} message AbandonReleaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AbandonReleaseRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AbandonReleaseRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.AbandonReleaseRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.AbandonReleaseRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IAbandonReleaseRequest} message AbandonReleaseRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AbandonReleaseRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AbandonReleaseRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.AbandonReleaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.AbandonReleaseRequest} AbandonReleaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AbandonReleaseRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.AbandonReleaseRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AbandonReleaseRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.AbandonReleaseRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.AbandonReleaseRequest} AbandonReleaseRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AbandonReleaseRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AbandonReleaseRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.AbandonReleaseRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AbandonReleaseRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AbandonReleaseRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.AbandonReleaseRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.AbandonReleaseRequest} AbandonReleaseRequest
                         */
                        AbandonReleaseRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.AbandonReleaseRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.AbandonReleaseRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AbandonReleaseRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.AbandonReleaseRequest
                         * @static
                         * @param {google.cloud.deploy.v1.AbandonReleaseRequest} message AbandonReleaseRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AbandonReleaseRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this AbandonReleaseRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.AbandonReleaseRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AbandonReleaseRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AbandonReleaseRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.AbandonReleaseRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AbandonReleaseRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.AbandonReleaseRequest";
                        };
    
                        return AbandonReleaseRequest;
                    })();
    
                    v1.AbandonReleaseResponse = (function() {
    
                        /**
                         * Properties of an AbandonReleaseResponse.
                         * @memberof google.cloud.deploy.v1
                         * @interface IAbandonReleaseResponse
                         */
    
                        /**
                         * Constructs a new AbandonReleaseResponse.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents an AbandonReleaseResponse.
                         * @implements IAbandonReleaseResponse
                         * @constructor
                         * @param {google.cloud.deploy.v1.IAbandonReleaseResponse=} [properties] Properties to set
                         */
                        function AbandonReleaseResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new AbandonReleaseResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.AbandonReleaseResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IAbandonReleaseResponse=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.AbandonReleaseResponse} AbandonReleaseResponse instance
                         */
                        AbandonReleaseResponse.create = function create(properties) {
                            return new AbandonReleaseResponse(properties);
                        };
    
                        /**
                         * Encodes the specified AbandonReleaseResponse message. Does not implicitly {@link google.cloud.deploy.v1.AbandonReleaseResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.AbandonReleaseResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IAbandonReleaseResponse} message AbandonReleaseResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AbandonReleaseResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AbandonReleaseResponse message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.AbandonReleaseResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.AbandonReleaseResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IAbandonReleaseResponse} message AbandonReleaseResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AbandonReleaseResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AbandonReleaseResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.AbandonReleaseResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.AbandonReleaseResponse} AbandonReleaseResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AbandonReleaseResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.AbandonReleaseResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AbandonReleaseResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.AbandonReleaseResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.AbandonReleaseResponse} AbandonReleaseResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AbandonReleaseResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AbandonReleaseResponse message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.AbandonReleaseResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AbandonReleaseResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an AbandonReleaseResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.AbandonReleaseResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.AbandonReleaseResponse} AbandonReleaseResponse
                         */
                        AbandonReleaseResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.AbandonReleaseResponse)
                                return object;
                            return new $root.google.cloud.deploy.v1.AbandonReleaseResponse();
                        };
    
                        /**
                         * Creates a plain object from an AbandonReleaseResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.AbandonReleaseResponse
                         * @static
                         * @param {google.cloud.deploy.v1.AbandonReleaseResponse} message AbandonReleaseResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AbandonReleaseResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this AbandonReleaseResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.AbandonReleaseResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AbandonReleaseResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AbandonReleaseResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.AbandonReleaseResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AbandonReleaseResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.AbandonReleaseResponse";
                        };
    
                        return AbandonReleaseResponse;
                    })();
    
                    v1.JobRun = (function() {
    
                        /**
                         * Properties of a JobRun.
                         * @memberof google.cloud.deploy.v1
                         * @interface IJobRun
                         * @property {string|null} [name] JobRun name
                         * @property {string|null} [uid] JobRun uid
                         * @property {string|null} [phaseId] JobRun phaseId
                         * @property {string|null} [jobId] JobRun jobId
                         * @property {google.protobuf.ITimestamp|null} [createTime] JobRun createTime
                         * @property {google.protobuf.ITimestamp|null} [startTime] JobRun startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] JobRun endTime
                         * @property {google.cloud.deploy.v1.JobRun.State|null} [state] JobRun state
                         * @property {google.cloud.deploy.v1.IDeployJobRun|null} [deployJobRun] JobRun deployJobRun
                         * @property {google.cloud.deploy.v1.IVerifyJobRun|null} [verifyJobRun] JobRun verifyJobRun
                         * @property {google.cloud.deploy.v1.IPredeployJobRun|null} [predeployJobRun] JobRun predeployJobRun
                         * @property {google.cloud.deploy.v1.IPostdeployJobRun|null} [postdeployJobRun] JobRun postdeployJobRun
                         * @property {google.cloud.deploy.v1.ICreateChildRolloutJobRun|null} [createChildRolloutJobRun] JobRun createChildRolloutJobRun
                         * @property {google.cloud.deploy.v1.IAdvanceChildRolloutJobRun|null} [advanceChildRolloutJobRun] JobRun advanceChildRolloutJobRun
                         * @property {string|null} [etag] JobRun etag
                         */
    
                        /**
                         * Constructs a new JobRun.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a JobRun.
                         * @implements IJobRun
                         * @constructor
                         * @param {google.cloud.deploy.v1.IJobRun=} [properties] Properties to set
                         */
                        function JobRun(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * JobRun name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        JobRun.prototype.name = "";
    
                        /**
                         * JobRun uid.
                         * @member {string} uid
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        JobRun.prototype.uid = "";
    
                        /**
                         * JobRun phaseId.
                         * @member {string} phaseId
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        JobRun.prototype.phaseId = "";
    
                        /**
                         * JobRun jobId.
                         * @member {string} jobId
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        JobRun.prototype.jobId = "";
    
                        /**
                         * JobRun createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        JobRun.prototype.createTime = null;
    
                        /**
                         * JobRun startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        JobRun.prototype.startTime = null;
    
                        /**
                         * JobRun endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        JobRun.prototype.endTime = null;
    
                        /**
                         * JobRun state.
                         * @member {google.cloud.deploy.v1.JobRun.State} state
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        JobRun.prototype.state = 0;
    
                        /**
                         * JobRun deployJobRun.
                         * @member {google.cloud.deploy.v1.IDeployJobRun|null|undefined} deployJobRun
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        JobRun.prototype.deployJobRun = null;
    
                        /**
                         * JobRun verifyJobRun.
                         * @member {google.cloud.deploy.v1.IVerifyJobRun|null|undefined} verifyJobRun
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        JobRun.prototype.verifyJobRun = null;
    
                        /**
                         * JobRun predeployJobRun.
                         * @member {google.cloud.deploy.v1.IPredeployJobRun|null|undefined} predeployJobRun
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        JobRun.prototype.predeployJobRun = null;
    
                        /**
                         * JobRun postdeployJobRun.
                         * @member {google.cloud.deploy.v1.IPostdeployJobRun|null|undefined} postdeployJobRun
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        JobRun.prototype.postdeployJobRun = null;
    
                        /**
                         * JobRun createChildRolloutJobRun.
                         * @member {google.cloud.deploy.v1.ICreateChildRolloutJobRun|null|undefined} createChildRolloutJobRun
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        JobRun.prototype.createChildRolloutJobRun = null;
    
                        /**
                         * JobRun advanceChildRolloutJobRun.
                         * @member {google.cloud.deploy.v1.IAdvanceChildRolloutJobRun|null|undefined} advanceChildRolloutJobRun
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        JobRun.prototype.advanceChildRolloutJobRun = null;
    
                        /**
                         * JobRun etag.
                         * @member {string} etag
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        JobRun.prototype.etag = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * JobRun jobRun.
                         * @member {"deployJobRun"|"verifyJobRun"|"predeployJobRun"|"postdeployJobRun"|"createChildRolloutJobRun"|"advanceChildRolloutJobRun"|undefined} jobRun
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         */
                        Object.defineProperty(JobRun.prototype, "jobRun", {
                            get: $util.oneOfGetter($oneOfFields = ["deployJobRun", "verifyJobRun", "predeployJobRun", "postdeployJobRun", "createChildRolloutJobRun", "advanceChildRolloutJobRun"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new JobRun instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IJobRun=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.JobRun} JobRun instance
                         */
                        JobRun.create = function create(properties) {
                            return new JobRun(properties);
                        };
    
                        /**
                         * Encodes the specified JobRun message. Does not implicitly {@link google.cloud.deploy.v1.JobRun.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IJobRun} message JobRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobRun.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uid);
                            if (message.phaseId != null && Object.hasOwnProperty.call(message, "phaseId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.phaseId);
                            if (message.jobId != null && Object.hasOwnProperty.call(message, "jobId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.jobId);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.state);
                            if (message.deployJobRun != null && Object.hasOwnProperty.call(message, "deployJobRun"))
                                $root.google.cloud.deploy.v1.DeployJobRun.encode(message.deployJobRun, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.verifyJobRun != null && Object.hasOwnProperty.call(message, "verifyJobRun"))
                                $root.google.cloud.deploy.v1.VerifyJobRun.encode(message.verifyJobRun, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.etag);
                            if (message.createChildRolloutJobRun != null && Object.hasOwnProperty.call(message, "createChildRolloutJobRun"))
                                $root.google.cloud.deploy.v1.CreateChildRolloutJobRun.encode(message.createChildRolloutJobRun, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.advanceChildRolloutJobRun != null && Object.hasOwnProperty.call(message, "advanceChildRolloutJobRun"))
                                $root.google.cloud.deploy.v1.AdvanceChildRolloutJobRun.encode(message.advanceChildRolloutJobRun, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.predeployJobRun != null && Object.hasOwnProperty.call(message, "predeployJobRun"))
                                $root.google.cloud.deploy.v1.PredeployJobRun.encode(message.predeployJobRun, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.postdeployJobRun != null && Object.hasOwnProperty.call(message, "postdeployJobRun"))
                                $root.google.cloud.deploy.v1.PostdeployJobRun.encode(message.postdeployJobRun, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified JobRun message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.JobRun.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IJobRun} message JobRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobRun.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a JobRun message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.JobRun} JobRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobRun.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.JobRun();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.phaseId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.jobId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.deployJobRun = $root.google.cloud.deploy.v1.DeployJobRun.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.verifyJobRun = $root.google.cloud.deploy.v1.VerifyJobRun.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        message.predeployJobRun = $root.google.cloud.deploy.v1.PredeployJobRun.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        message.postdeployJobRun = $root.google.cloud.deploy.v1.PostdeployJobRun.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.createChildRolloutJobRun = $root.google.cloud.deploy.v1.CreateChildRolloutJobRun.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.advanceChildRolloutJobRun = $root.google.cloud.deploy.v1.AdvanceChildRolloutJobRun.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a JobRun message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.JobRun} JobRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobRun.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a JobRun message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        JobRun.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.phaseId != null && message.hasOwnProperty("phaseId"))
                                if (!$util.isString(message.phaseId))
                                    return "phaseId: string expected";
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                if (!$util.isString(message.jobId))
                                    return "jobId: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.deployJobRun != null && message.hasOwnProperty("deployJobRun")) {
                                properties.jobRun = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.DeployJobRun.verify(message.deployJobRun);
                                    if (error)
                                        return "deployJobRun." + error;
                                }
                            }
                            if (message.verifyJobRun != null && message.hasOwnProperty("verifyJobRun")) {
                                if (properties.jobRun === 1)
                                    return "jobRun: multiple values";
                                properties.jobRun = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.VerifyJobRun.verify(message.verifyJobRun);
                                    if (error)
                                        return "verifyJobRun." + error;
                                }
                            }
                            if (message.predeployJobRun != null && message.hasOwnProperty("predeployJobRun")) {
                                if (properties.jobRun === 1)
                                    return "jobRun: multiple values";
                                properties.jobRun = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.PredeployJobRun.verify(message.predeployJobRun);
                                    if (error)
                                        return "predeployJobRun." + error;
                                }
                            }
                            if (message.postdeployJobRun != null && message.hasOwnProperty("postdeployJobRun")) {
                                if (properties.jobRun === 1)
                                    return "jobRun: multiple values";
                                properties.jobRun = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.PostdeployJobRun.verify(message.postdeployJobRun);
                                    if (error)
                                        return "postdeployJobRun." + error;
                                }
                            }
                            if (message.createChildRolloutJobRun != null && message.hasOwnProperty("createChildRolloutJobRun")) {
                                if (properties.jobRun === 1)
                                    return "jobRun: multiple values";
                                properties.jobRun = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.CreateChildRolloutJobRun.verify(message.createChildRolloutJobRun);
                                    if (error)
                                        return "createChildRolloutJobRun." + error;
                                }
                            }
                            if (message.advanceChildRolloutJobRun != null && message.hasOwnProperty("advanceChildRolloutJobRun")) {
                                if (properties.jobRun === 1)
                                    return "jobRun: multiple values";
                                properties.jobRun = 1;
                                {
                                    var error = $root.google.cloud.deploy.v1.AdvanceChildRolloutJobRun.verify(message.advanceChildRolloutJobRun);
                                    if (error)
                                        return "advanceChildRolloutJobRun." + error;
                                }
                            }
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a JobRun message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.JobRun} JobRun
                         */
                        JobRun.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.JobRun)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.JobRun();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.phaseId != null)
                                message.phaseId = String(object.phaseId);
                            if (object.jobId != null)
                                message.jobId = String(object.jobId);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.JobRun.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.JobRun.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.JobRun.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "IN_PROGRESS":
                            case 1:
                                message.state = 1;
                                break;
                            case "SUCCEEDED":
                            case 2:
                                message.state = 2;
                                break;
                            case "FAILED":
                            case 3:
                                message.state = 3;
                                break;
                            case "TERMINATING":
                            case 4:
                                message.state = 4;
                                break;
                            case "TERMINATED":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.deployJobRun != null) {
                                if (typeof object.deployJobRun !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.JobRun.deployJobRun: object expected");
                                message.deployJobRun = $root.google.cloud.deploy.v1.DeployJobRun.fromObject(object.deployJobRun);
                            }
                            if (object.verifyJobRun != null) {
                                if (typeof object.verifyJobRun !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.JobRun.verifyJobRun: object expected");
                                message.verifyJobRun = $root.google.cloud.deploy.v1.VerifyJobRun.fromObject(object.verifyJobRun);
                            }
                            if (object.predeployJobRun != null) {
                                if (typeof object.predeployJobRun !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.JobRun.predeployJobRun: object expected");
                                message.predeployJobRun = $root.google.cloud.deploy.v1.PredeployJobRun.fromObject(object.predeployJobRun);
                            }
                            if (object.postdeployJobRun != null) {
                                if (typeof object.postdeployJobRun !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.JobRun.postdeployJobRun: object expected");
                                message.postdeployJobRun = $root.google.cloud.deploy.v1.PostdeployJobRun.fromObject(object.postdeployJobRun);
                            }
                            if (object.createChildRolloutJobRun != null) {
                                if (typeof object.createChildRolloutJobRun !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.JobRun.createChildRolloutJobRun: object expected");
                                message.createChildRolloutJobRun = $root.google.cloud.deploy.v1.CreateChildRolloutJobRun.fromObject(object.createChildRolloutJobRun);
                            }
                            if (object.advanceChildRolloutJobRun != null) {
                                if (typeof object.advanceChildRolloutJobRun !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.JobRun.advanceChildRolloutJobRun: object expected");
                                message.advanceChildRolloutJobRun = $root.google.cloud.deploy.v1.AdvanceChildRolloutJobRun.fromObject(object.advanceChildRolloutJobRun);
                            }
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a JobRun message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @static
                         * @param {google.cloud.deploy.v1.JobRun} message JobRun
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        JobRun.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.uid = "";
                                object.phaseId = "";
                                object.jobId = "";
                                object.createTime = null;
                                object.startTime = null;
                                object.endTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.phaseId != null && message.hasOwnProperty("phaseId"))
                                object.phaseId = message.phaseId;
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                object.jobId = message.jobId;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.deploy.v1.JobRun.State[message.state] === undefined ? message.state : $root.google.cloud.deploy.v1.JobRun.State[message.state] : message.state;
                            if (message.deployJobRun != null && message.hasOwnProperty("deployJobRun")) {
                                object.deployJobRun = $root.google.cloud.deploy.v1.DeployJobRun.toObject(message.deployJobRun, options);
                                if (options.oneofs)
                                    object.jobRun = "deployJobRun";
                            }
                            if (message.verifyJobRun != null && message.hasOwnProperty("verifyJobRun")) {
                                object.verifyJobRun = $root.google.cloud.deploy.v1.VerifyJobRun.toObject(message.verifyJobRun, options);
                                if (options.oneofs)
                                    object.jobRun = "verifyJobRun";
                            }
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.createChildRolloutJobRun != null && message.hasOwnProperty("createChildRolloutJobRun")) {
                                object.createChildRolloutJobRun = $root.google.cloud.deploy.v1.CreateChildRolloutJobRun.toObject(message.createChildRolloutJobRun, options);
                                if (options.oneofs)
                                    object.jobRun = "createChildRolloutJobRun";
                            }
                            if (message.advanceChildRolloutJobRun != null && message.hasOwnProperty("advanceChildRolloutJobRun")) {
                                object.advanceChildRolloutJobRun = $root.google.cloud.deploy.v1.AdvanceChildRolloutJobRun.toObject(message.advanceChildRolloutJobRun, options);
                                if (options.oneofs)
                                    object.jobRun = "advanceChildRolloutJobRun";
                            }
                            if (message.predeployJobRun != null && message.hasOwnProperty("predeployJobRun")) {
                                object.predeployJobRun = $root.google.cloud.deploy.v1.PredeployJobRun.toObject(message.predeployJobRun, options);
                                if (options.oneofs)
                                    object.jobRun = "predeployJobRun";
                            }
                            if (message.postdeployJobRun != null && message.hasOwnProperty("postdeployJobRun")) {
                                object.postdeployJobRun = $root.google.cloud.deploy.v1.PostdeployJobRun.toObject(message.postdeployJobRun, options);
                                if (options.oneofs)
                                    object.jobRun = "postdeployJobRun";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this JobRun to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        JobRun.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for JobRun
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.JobRun
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        JobRun.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.JobRun";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.deploy.v1.JobRun.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} IN_PROGRESS=1 IN_PROGRESS value
                         * @property {number} SUCCEEDED=2 SUCCEEDED value
                         * @property {number} FAILED=3 FAILED value
                         * @property {number} TERMINATING=4 TERMINATING value
                         * @property {number} TERMINATED=5 TERMINATED value
                         */
                        JobRun.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "IN_PROGRESS"] = 1;
                            values[valuesById[2] = "SUCCEEDED"] = 2;
                            values[valuesById[3] = "FAILED"] = 3;
                            values[valuesById[4] = "TERMINATING"] = 4;
                            values[valuesById[5] = "TERMINATED"] = 5;
                            return values;
                        })();
    
                        return JobRun;
                    })();
    
                    v1.DeployJobRun = (function() {
    
                        /**
                         * Properties of a DeployJobRun.
                         * @memberof google.cloud.deploy.v1
                         * @interface IDeployJobRun
                         * @property {string|null} [build] DeployJobRun build
                         * @property {google.cloud.deploy.v1.DeployJobRun.FailureCause|null} [failureCause] DeployJobRun failureCause
                         * @property {string|null} [failureMessage] DeployJobRun failureMessage
                         * @property {google.cloud.deploy.v1.IDeployJobRunMetadata|null} [metadata] DeployJobRun metadata
                         * @property {google.cloud.deploy.v1.IDeployArtifact|null} [artifact] DeployJobRun artifact
                         */
    
                        /**
                         * Constructs a new DeployJobRun.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a DeployJobRun.
                         * @implements IDeployJobRun
                         * @constructor
                         * @param {google.cloud.deploy.v1.IDeployJobRun=} [properties] Properties to set
                         */
                        function DeployJobRun(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeployJobRun build.
                         * @member {string} build
                         * @memberof google.cloud.deploy.v1.DeployJobRun
                         * @instance
                         */
                        DeployJobRun.prototype.build = "";
    
                        /**
                         * DeployJobRun failureCause.
                         * @member {google.cloud.deploy.v1.DeployJobRun.FailureCause} failureCause
                         * @memberof google.cloud.deploy.v1.DeployJobRun
                         * @instance
                         */
                        DeployJobRun.prototype.failureCause = 0;
    
                        /**
                         * DeployJobRun failureMessage.
                         * @member {string} failureMessage
                         * @memberof google.cloud.deploy.v1.DeployJobRun
                         * @instance
                         */
                        DeployJobRun.prototype.failureMessage = "";
    
                        /**
                         * DeployJobRun metadata.
                         * @member {google.cloud.deploy.v1.IDeployJobRunMetadata|null|undefined} metadata
                         * @memberof google.cloud.deploy.v1.DeployJobRun
                         * @instance
                         */
                        DeployJobRun.prototype.metadata = null;
    
                        /**
                         * DeployJobRun artifact.
                         * @member {google.cloud.deploy.v1.IDeployArtifact|null|undefined} artifact
                         * @memberof google.cloud.deploy.v1.DeployJobRun
                         * @instance
                         */
                        DeployJobRun.prototype.artifact = null;
    
                        /**
                         * Creates a new DeployJobRun instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.DeployJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IDeployJobRun=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.DeployJobRun} DeployJobRun instance
                         */
                        DeployJobRun.create = function create(properties) {
                            return new DeployJobRun(properties);
                        };
    
                        /**
                         * Encodes the specified DeployJobRun message. Does not implicitly {@link google.cloud.deploy.v1.DeployJobRun.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.DeployJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IDeployJobRun} message DeployJobRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployJobRun.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.build != null && Object.hasOwnProperty.call(message, "build"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.build);
                            if (message.failureCause != null && Object.hasOwnProperty.call(message, "failureCause"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.failureCause);
                            if (message.failureMessage != null && Object.hasOwnProperty.call(message, "failureMessage"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.failureMessage);
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.cloud.deploy.v1.DeployJobRunMetadata.encode(message.metadata, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.artifact != null && Object.hasOwnProperty.call(message, "artifact"))
                                $root.google.cloud.deploy.v1.DeployArtifact.encode(message.artifact, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeployJobRun message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.DeployJobRun.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.DeployJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IDeployJobRun} message DeployJobRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeployJobRun.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeployJobRun message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.DeployJobRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.DeployJobRun} DeployJobRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployJobRun.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.DeployJobRun();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.build = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.failureCause = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.failureMessage = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.metadata = $root.google.cloud.deploy.v1.DeployJobRunMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.artifact = $root.google.cloud.deploy.v1.DeployArtifact.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeployJobRun message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.DeployJobRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.DeployJobRun} DeployJobRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeployJobRun.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeployJobRun message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.DeployJobRun
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeployJobRun.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.build != null && message.hasOwnProperty("build"))
                                if (!$util.isString(message.build))
                                    return "build: string expected";
                            if (message.failureCause != null && message.hasOwnProperty("failureCause"))
                                switch (message.failureCause) {
                                default:
                                    return "failureCause: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.failureMessage != null && message.hasOwnProperty("failureMessage"))
                                if (!$util.isString(message.failureMessage))
                                    return "failureMessage: string expected";
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.deploy.v1.DeployJobRunMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            if (message.artifact != null && message.hasOwnProperty("artifact")) {
                                var error = $root.google.cloud.deploy.v1.DeployArtifact.verify(message.artifact);
                                if (error)
                                    return "artifact." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DeployJobRun message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.DeployJobRun
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.DeployJobRun} DeployJobRun
                         */
                        DeployJobRun.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.DeployJobRun)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.DeployJobRun();
                            if (object.build != null)
                                message.build = String(object.build);
                            switch (object.failureCause) {
                            default:
                                if (typeof object.failureCause === "number") {
                                    message.failureCause = object.failureCause;
                                    break;
                                }
                                break;
                            case "FAILURE_CAUSE_UNSPECIFIED":
                            case 0:
                                message.failureCause = 0;
                                break;
                            case "CLOUD_BUILD_UNAVAILABLE":
                            case 1:
                                message.failureCause = 1;
                                break;
                            case "EXECUTION_FAILED":
                            case 2:
                                message.failureCause = 2;
                                break;
                            case "DEADLINE_EXCEEDED":
                            case 3:
                                message.failureCause = 3;
                                break;
                            case "MISSING_RESOURCES_FOR_CANARY":
                            case 4:
                                message.failureCause = 4;
                                break;
                            case "CLOUD_BUILD_REQUEST_FAILED":
                            case 5:
                                message.failureCause = 5;
                                break;
                            }
                            if (object.failureMessage != null)
                                message.failureMessage = String(object.failureMessage);
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.DeployJobRun.metadata: object expected");
                                message.metadata = $root.google.cloud.deploy.v1.DeployJobRunMetadata.fromObject(object.metadata);
                            }
                            if (object.artifact != null) {
                                if (typeof object.artifact !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.DeployJobRun.artifact: object expected");
                                message.artifact = $root.google.cloud.deploy.v1.DeployArtifact.fromObject(object.artifact);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeployJobRun message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.DeployJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.DeployJobRun} message DeployJobRun
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeployJobRun.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.build = "";
                                object.failureCause = options.enums === String ? "FAILURE_CAUSE_UNSPECIFIED" : 0;
                                object.failureMessage = "";
                                object.metadata = null;
                                object.artifact = null;
                            }
                            if (message.build != null && message.hasOwnProperty("build"))
                                object.build = message.build;
                            if (message.failureCause != null && message.hasOwnProperty("failureCause"))
                                object.failureCause = options.enums === String ? $root.google.cloud.deploy.v1.DeployJobRun.FailureCause[message.failureCause] === undefined ? message.failureCause : $root.google.cloud.deploy.v1.DeployJobRun.FailureCause[message.failureCause] : message.failureCause;
                            if (message.failureMessage != null && message.hasOwnProperty("failureMessage"))
                                object.failureMessage = message.failureMessage;
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.deploy.v1.DeployJobRunMetadata.toObject(message.metadata, options);
                            if (message.artifact != null && message.hasOwnProperty("artifact"))
                                object.artifact = $root.google.cloud.deploy.v1.DeployArtifact.toObject(message.artifact, options);
                            return object;
                        };
    
                        /**
                         * Converts this DeployJobRun to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.DeployJobRun
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeployJobRun.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeployJobRun
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.DeployJobRun
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeployJobRun.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.DeployJobRun";
                        };
    
                        /**
                         * FailureCause enum.
                         * @name google.cloud.deploy.v1.DeployJobRun.FailureCause
                         * @enum {number}
                         * @property {number} FAILURE_CAUSE_UNSPECIFIED=0 FAILURE_CAUSE_UNSPECIFIED value
                         * @property {number} CLOUD_BUILD_UNAVAILABLE=1 CLOUD_BUILD_UNAVAILABLE value
                         * @property {number} EXECUTION_FAILED=2 EXECUTION_FAILED value
                         * @property {number} DEADLINE_EXCEEDED=3 DEADLINE_EXCEEDED value
                         * @property {number} MISSING_RESOURCES_FOR_CANARY=4 MISSING_RESOURCES_FOR_CANARY value
                         * @property {number} CLOUD_BUILD_REQUEST_FAILED=5 CLOUD_BUILD_REQUEST_FAILED value
                         */
                        DeployJobRun.FailureCause = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "FAILURE_CAUSE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CLOUD_BUILD_UNAVAILABLE"] = 1;
                            values[valuesById[2] = "EXECUTION_FAILED"] = 2;
                            values[valuesById[3] = "DEADLINE_EXCEEDED"] = 3;
                            values[valuesById[4] = "MISSING_RESOURCES_FOR_CANARY"] = 4;
                            values[valuesById[5] = "CLOUD_BUILD_REQUEST_FAILED"] = 5;
                            return values;
                        })();
    
                        return DeployJobRun;
                    })();
    
                    v1.VerifyJobRun = (function() {
    
                        /**
                         * Properties of a VerifyJobRun.
                         * @memberof google.cloud.deploy.v1
                         * @interface IVerifyJobRun
                         * @property {string|null} [build] VerifyJobRun build
                         * @property {string|null} [artifactUri] VerifyJobRun artifactUri
                         * @property {string|null} [eventLogPath] VerifyJobRun eventLogPath
                         * @property {google.cloud.deploy.v1.VerifyJobRun.FailureCause|null} [failureCause] VerifyJobRun failureCause
                         * @property {string|null} [failureMessage] VerifyJobRun failureMessage
                         */
    
                        /**
                         * Constructs a new VerifyJobRun.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a VerifyJobRun.
                         * @implements IVerifyJobRun
                         * @constructor
                         * @param {google.cloud.deploy.v1.IVerifyJobRun=} [properties] Properties to set
                         */
                        function VerifyJobRun(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VerifyJobRun build.
                         * @member {string} build
                         * @memberof google.cloud.deploy.v1.VerifyJobRun
                         * @instance
                         */
                        VerifyJobRun.prototype.build = "";
    
                        /**
                         * VerifyJobRun artifactUri.
                         * @member {string} artifactUri
                         * @memberof google.cloud.deploy.v1.VerifyJobRun
                         * @instance
                         */
                        VerifyJobRun.prototype.artifactUri = "";
    
                        /**
                         * VerifyJobRun eventLogPath.
                         * @member {string} eventLogPath
                         * @memberof google.cloud.deploy.v1.VerifyJobRun
                         * @instance
                         */
                        VerifyJobRun.prototype.eventLogPath = "";
    
                        /**
                         * VerifyJobRun failureCause.
                         * @member {google.cloud.deploy.v1.VerifyJobRun.FailureCause} failureCause
                         * @memberof google.cloud.deploy.v1.VerifyJobRun
                         * @instance
                         */
                        VerifyJobRun.prototype.failureCause = 0;
    
                        /**
                         * VerifyJobRun failureMessage.
                         * @member {string} failureMessage
                         * @memberof google.cloud.deploy.v1.VerifyJobRun
                         * @instance
                         */
                        VerifyJobRun.prototype.failureMessage = "";
    
                        /**
                         * Creates a new VerifyJobRun instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.VerifyJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IVerifyJobRun=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.VerifyJobRun} VerifyJobRun instance
                         */
                        VerifyJobRun.create = function create(properties) {
                            return new VerifyJobRun(properties);
                        };
    
                        /**
                         * Encodes the specified VerifyJobRun message. Does not implicitly {@link google.cloud.deploy.v1.VerifyJobRun.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.VerifyJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IVerifyJobRun} message VerifyJobRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VerifyJobRun.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.build != null && Object.hasOwnProperty.call(message, "build"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.build);
                            if (message.artifactUri != null && Object.hasOwnProperty.call(message, "artifactUri"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.artifactUri);
                            if (message.eventLogPath != null && Object.hasOwnProperty.call(message, "eventLogPath"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.eventLogPath);
                            if (message.failureCause != null && Object.hasOwnProperty.call(message, "failureCause"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.failureCause);
                            if (message.failureMessage != null && Object.hasOwnProperty.call(message, "failureMessage"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.failureMessage);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VerifyJobRun message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.VerifyJobRun.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.VerifyJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IVerifyJobRun} message VerifyJobRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VerifyJobRun.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VerifyJobRun message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.VerifyJobRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.VerifyJobRun} VerifyJobRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VerifyJobRun.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.VerifyJobRun();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.build = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.artifactUri = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.eventLogPath = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.failureCause = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.failureMessage = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VerifyJobRun message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.VerifyJobRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.VerifyJobRun} VerifyJobRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VerifyJobRun.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VerifyJobRun message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.VerifyJobRun
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VerifyJobRun.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.build != null && message.hasOwnProperty("build"))
                                if (!$util.isString(message.build))
                                    return "build: string expected";
                            if (message.artifactUri != null && message.hasOwnProperty("artifactUri"))
                                if (!$util.isString(message.artifactUri))
                                    return "artifactUri: string expected";
                            if (message.eventLogPath != null && message.hasOwnProperty("eventLogPath"))
                                if (!$util.isString(message.eventLogPath))
                                    return "eventLogPath: string expected";
                            if (message.failureCause != null && message.hasOwnProperty("failureCause"))
                                switch (message.failureCause) {
                                default:
                                    return "failureCause: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.failureMessage != null && message.hasOwnProperty("failureMessage"))
                                if (!$util.isString(message.failureMessage))
                                    return "failureMessage: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a VerifyJobRun message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.VerifyJobRun
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.VerifyJobRun} VerifyJobRun
                         */
                        VerifyJobRun.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.VerifyJobRun)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.VerifyJobRun();
                            if (object.build != null)
                                message.build = String(object.build);
                            if (object.artifactUri != null)
                                message.artifactUri = String(object.artifactUri);
                            if (object.eventLogPath != null)
                                message.eventLogPath = String(object.eventLogPath);
                            switch (object.failureCause) {
                            default:
                                if (typeof object.failureCause === "number") {
                                    message.failureCause = object.failureCause;
                                    break;
                                }
                                break;
                            case "FAILURE_CAUSE_UNSPECIFIED":
                            case 0:
                                message.failureCause = 0;
                                break;
                            case "CLOUD_BUILD_UNAVAILABLE":
                            case 1:
                                message.failureCause = 1;
                                break;
                            case "EXECUTION_FAILED":
                            case 2:
                                message.failureCause = 2;
                                break;
                            case "DEADLINE_EXCEEDED":
                            case 3:
                                message.failureCause = 3;
                                break;
                            case "VERIFICATION_CONFIG_NOT_FOUND":
                            case 4:
                                message.failureCause = 4;
                                break;
                            case "CLOUD_BUILD_REQUEST_FAILED":
                            case 5:
                                message.failureCause = 5;
                                break;
                            }
                            if (object.failureMessage != null)
                                message.failureMessage = String(object.failureMessage);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VerifyJobRun message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.VerifyJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.VerifyJobRun} message VerifyJobRun
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VerifyJobRun.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.build = "";
                                object.artifactUri = "";
                                object.eventLogPath = "";
                                object.failureCause = options.enums === String ? "FAILURE_CAUSE_UNSPECIFIED" : 0;
                                object.failureMessage = "";
                            }
                            if (message.build != null && message.hasOwnProperty("build"))
                                object.build = message.build;
                            if (message.artifactUri != null && message.hasOwnProperty("artifactUri"))
                                object.artifactUri = message.artifactUri;
                            if (message.eventLogPath != null && message.hasOwnProperty("eventLogPath"))
                                object.eventLogPath = message.eventLogPath;
                            if (message.failureCause != null && message.hasOwnProperty("failureCause"))
                                object.failureCause = options.enums === String ? $root.google.cloud.deploy.v1.VerifyJobRun.FailureCause[message.failureCause] === undefined ? message.failureCause : $root.google.cloud.deploy.v1.VerifyJobRun.FailureCause[message.failureCause] : message.failureCause;
                            if (message.failureMessage != null && message.hasOwnProperty("failureMessage"))
                                object.failureMessage = message.failureMessage;
                            return object;
                        };
    
                        /**
                         * Converts this VerifyJobRun to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.VerifyJobRun
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VerifyJobRun.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VerifyJobRun
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.VerifyJobRun
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VerifyJobRun.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.VerifyJobRun";
                        };
    
                        /**
                         * FailureCause enum.
                         * @name google.cloud.deploy.v1.VerifyJobRun.FailureCause
                         * @enum {number}
                         * @property {number} FAILURE_CAUSE_UNSPECIFIED=0 FAILURE_CAUSE_UNSPECIFIED value
                         * @property {number} CLOUD_BUILD_UNAVAILABLE=1 CLOUD_BUILD_UNAVAILABLE value
                         * @property {number} EXECUTION_FAILED=2 EXECUTION_FAILED value
                         * @property {number} DEADLINE_EXCEEDED=3 DEADLINE_EXCEEDED value
                         * @property {number} VERIFICATION_CONFIG_NOT_FOUND=4 VERIFICATION_CONFIG_NOT_FOUND value
                         * @property {number} CLOUD_BUILD_REQUEST_FAILED=5 CLOUD_BUILD_REQUEST_FAILED value
                         */
                        VerifyJobRun.FailureCause = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "FAILURE_CAUSE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CLOUD_BUILD_UNAVAILABLE"] = 1;
                            values[valuesById[2] = "EXECUTION_FAILED"] = 2;
                            values[valuesById[3] = "DEADLINE_EXCEEDED"] = 3;
                            values[valuesById[4] = "VERIFICATION_CONFIG_NOT_FOUND"] = 4;
                            values[valuesById[5] = "CLOUD_BUILD_REQUEST_FAILED"] = 5;
                            return values;
                        })();
    
                        return VerifyJobRun;
                    })();
    
                    v1.PredeployJobRun = (function() {
    
                        /**
                         * Properties of a PredeployJobRun.
                         * @memberof google.cloud.deploy.v1
                         * @interface IPredeployJobRun
                         * @property {string|null} [build] PredeployJobRun build
                         * @property {google.cloud.deploy.v1.PredeployJobRun.FailureCause|null} [failureCause] PredeployJobRun failureCause
                         * @property {string|null} [failureMessage] PredeployJobRun failureMessage
                         */
    
                        /**
                         * Constructs a new PredeployJobRun.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a PredeployJobRun.
                         * @implements IPredeployJobRun
                         * @constructor
                         * @param {google.cloud.deploy.v1.IPredeployJobRun=} [properties] Properties to set
                         */
                        function PredeployJobRun(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PredeployJobRun build.
                         * @member {string} build
                         * @memberof google.cloud.deploy.v1.PredeployJobRun
                         * @instance
                         */
                        PredeployJobRun.prototype.build = "";
    
                        /**
                         * PredeployJobRun failureCause.
                         * @member {google.cloud.deploy.v1.PredeployJobRun.FailureCause} failureCause
                         * @memberof google.cloud.deploy.v1.PredeployJobRun
                         * @instance
                         */
                        PredeployJobRun.prototype.failureCause = 0;
    
                        /**
                         * PredeployJobRun failureMessage.
                         * @member {string} failureMessage
                         * @memberof google.cloud.deploy.v1.PredeployJobRun
                         * @instance
                         */
                        PredeployJobRun.prototype.failureMessage = "";
    
                        /**
                         * Creates a new PredeployJobRun instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.PredeployJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IPredeployJobRun=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.PredeployJobRun} PredeployJobRun instance
                         */
                        PredeployJobRun.create = function create(properties) {
                            return new PredeployJobRun(properties);
                        };
    
                        /**
                         * Encodes the specified PredeployJobRun message. Does not implicitly {@link google.cloud.deploy.v1.PredeployJobRun.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.PredeployJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IPredeployJobRun} message PredeployJobRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PredeployJobRun.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.build != null && Object.hasOwnProperty.call(message, "build"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.build);
                            if (message.failureCause != null && Object.hasOwnProperty.call(message, "failureCause"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.failureCause);
                            if (message.failureMessage != null && Object.hasOwnProperty.call(message, "failureMessage"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.failureMessage);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PredeployJobRun message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.PredeployJobRun.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.PredeployJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IPredeployJobRun} message PredeployJobRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PredeployJobRun.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PredeployJobRun message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.PredeployJobRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.PredeployJobRun} PredeployJobRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PredeployJobRun.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.PredeployJobRun();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.build = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.failureCause = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.failureMessage = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PredeployJobRun message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.PredeployJobRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.PredeployJobRun} PredeployJobRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PredeployJobRun.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PredeployJobRun message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.PredeployJobRun
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PredeployJobRun.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.build != null && message.hasOwnProperty("build"))
                                if (!$util.isString(message.build))
                                    return "build: string expected";
                            if (message.failureCause != null && message.hasOwnProperty("failureCause"))
                                switch (message.failureCause) {
                                default:
                                    return "failureCause: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.failureMessage != null && message.hasOwnProperty("failureMessage"))
                                if (!$util.isString(message.failureMessage))
                                    return "failureMessage: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PredeployJobRun message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.PredeployJobRun
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.PredeployJobRun} PredeployJobRun
                         */
                        PredeployJobRun.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.PredeployJobRun)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.PredeployJobRun();
                            if (object.build != null)
                                message.build = String(object.build);
                            switch (object.failureCause) {
                            default:
                                if (typeof object.failureCause === "number") {
                                    message.failureCause = object.failureCause;
                                    break;
                                }
                                break;
                            case "FAILURE_CAUSE_UNSPECIFIED":
                            case 0:
                                message.failureCause = 0;
                                break;
                            case "CLOUD_BUILD_UNAVAILABLE":
                            case 1:
                                message.failureCause = 1;
                                break;
                            case "EXECUTION_FAILED":
                            case 2:
                                message.failureCause = 2;
                                break;
                            case "DEADLINE_EXCEEDED":
                            case 3:
                                message.failureCause = 3;
                                break;
                            case "CLOUD_BUILD_REQUEST_FAILED":
                            case 4:
                                message.failureCause = 4;
                                break;
                            }
                            if (object.failureMessage != null)
                                message.failureMessage = String(object.failureMessage);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PredeployJobRun message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.PredeployJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.PredeployJobRun} message PredeployJobRun
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PredeployJobRun.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.build = "";
                                object.failureCause = options.enums === String ? "FAILURE_CAUSE_UNSPECIFIED" : 0;
                                object.failureMessage = "";
                            }
                            if (message.build != null && message.hasOwnProperty("build"))
                                object.build = message.build;
                            if (message.failureCause != null && message.hasOwnProperty("failureCause"))
                                object.failureCause = options.enums === String ? $root.google.cloud.deploy.v1.PredeployJobRun.FailureCause[message.failureCause] === undefined ? message.failureCause : $root.google.cloud.deploy.v1.PredeployJobRun.FailureCause[message.failureCause] : message.failureCause;
                            if (message.failureMessage != null && message.hasOwnProperty("failureMessage"))
                                object.failureMessage = message.failureMessage;
                            return object;
                        };
    
                        /**
                         * Converts this PredeployJobRun to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.PredeployJobRun
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PredeployJobRun.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PredeployJobRun
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.PredeployJobRun
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PredeployJobRun.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.PredeployJobRun";
                        };
    
                        /**
                         * FailureCause enum.
                         * @name google.cloud.deploy.v1.PredeployJobRun.FailureCause
                         * @enum {number}
                         * @property {number} FAILURE_CAUSE_UNSPECIFIED=0 FAILURE_CAUSE_UNSPECIFIED value
                         * @property {number} CLOUD_BUILD_UNAVAILABLE=1 CLOUD_BUILD_UNAVAILABLE value
                         * @property {number} EXECUTION_FAILED=2 EXECUTION_FAILED value
                         * @property {number} DEADLINE_EXCEEDED=3 DEADLINE_EXCEEDED value
                         * @property {number} CLOUD_BUILD_REQUEST_FAILED=4 CLOUD_BUILD_REQUEST_FAILED value
                         */
                        PredeployJobRun.FailureCause = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "FAILURE_CAUSE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CLOUD_BUILD_UNAVAILABLE"] = 1;
                            values[valuesById[2] = "EXECUTION_FAILED"] = 2;
                            values[valuesById[3] = "DEADLINE_EXCEEDED"] = 3;
                            values[valuesById[4] = "CLOUD_BUILD_REQUEST_FAILED"] = 4;
                            return values;
                        })();
    
                        return PredeployJobRun;
                    })();
    
                    v1.PostdeployJobRun = (function() {
    
                        /**
                         * Properties of a PostdeployJobRun.
                         * @memberof google.cloud.deploy.v1
                         * @interface IPostdeployJobRun
                         * @property {string|null} [build] PostdeployJobRun build
                         * @property {google.cloud.deploy.v1.PostdeployJobRun.FailureCause|null} [failureCause] PostdeployJobRun failureCause
                         * @property {string|null} [failureMessage] PostdeployJobRun failureMessage
                         */
    
                        /**
                         * Constructs a new PostdeployJobRun.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a PostdeployJobRun.
                         * @implements IPostdeployJobRun
                         * @constructor
                         * @param {google.cloud.deploy.v1.IPostdeployJobRun=} [properties] Properties to set
                         */
                        function PostdeployJobRun(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PostdeployJobRun build.
                         * @member {string} build
                         * @memberof google.cloud.deploy.v1.PostdeployJobRun
                         * @instance
                         */
                        PostdeployJobRun.prototype.build = "";
    
                        /**
                         * PostdeployJobRun failureCause.
                         * @member {google.cloud.deploy.v1.PostdeployJobRun.FailureCause} failureCause
                         * @memberof google.cloud.deploy.v1.PostdeployJobRun
                         * @instance
                         */
                        PostdeployJobRun.prototype.failureCause = 0;
    
                        /**
                         * PostdeployJobRun failureMessage.
                         * @member {string} failureMessage
                         * @memberof google.cloud.deploy.v1.PostdeployJobRun
                         * @instance
                         */
                        PostdeployJobRun.prototype.failureMessage = "";
    
                        /**
                         * Creates a new PostdeployJobRun instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.PostdeployJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IPostdeployJobRun=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.PostdeployJobRun} PostdeployJobRun instance
                         */
                        PostdeployJobRun.create = function create(properties) {
                            return new PostdeployJobRun(properties);
                        };
    
                        /**
                         * Encodes the specified PostdeployJobRun message. Does not implicitly {@link google.cloud.deploy.v1.PostdeployJobRun.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.PostdeployJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IPostdeployJobRun} message PostdeployJobRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostdeployJobRun.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.build != null && Object.hasOwnProperty.call(message, "build"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.build);
                            if (message.failureCause != null && Object.hasOwnProperty.call(message, "failureCause"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.failureCause);
                            if (message.failureMessage != null && Object.hasOwnProperty.call(message, "failureMessage"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.failureMessage);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PostdeployJobRun message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.PostdeployJobRun.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.PostdeployJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IPostdeployJobRun} message PostdeployJobRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PostdeployJobRun.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PostdeployJobRun message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.PostdeployJobRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.PostdeployJobRun} PostdeployJobRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostdeployJobRun.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.PostdeployJobRun();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.build = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.failureCause = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.failureMessage = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PostdeployJobRun message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.PostdeployJobRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.PostdeployJobRun} PostdeployJobRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PostdeployJobRun.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PostdeployJobRun message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.PostdeployJobRun
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PostdeployJobRun.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.build != null && message.hasOwnProperty("build"))
                                if (!$util.isString(message.build))
                                    return "build: string expected";
                            if (message.failureCause != null && message.hasOwnProperty("failureCause"))
                                switch (message.failureCause) {
                                default:
                                    return "failureCause: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.failureMessage != null && message.hasOwnProperty("failureMessage"))
                                if (!$util.isString(message.failureMessage))
                                    return "failureMessage: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PostdeployJobRun message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.PostdeployJobRun
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.PostdeployJobRun} PostdeployJobRun
                         */
                        PostdeployJobRun.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.PostdeployJobRun)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.PostdeployJobRun();
                            if (object.build != null)
                                message.build = String(object.build);
                            switch (object.failureCause) {
                            default:
                                if (typeof object.failureCause === "number") {
                                    message.failureCause = object.failureCause;
                                    break;
                                }
                                break;
                            case "FAILURE_CAUSE_UNSPECIFIED":
                            case 0:
                                message.failureCause = 0;
                                break;
                            case "CLOUD_BUILD_UNAVAILABLE":
                            case 1:
                                message.failureCause = 1;
                                break;
                            case "EXECUTION_FAILED":
                            case 2:
                                message.failureCause = 2;
                                break;
                            case "DEADLINE_EXCEEDED":
                            case 3:
                                message.failureCause = 3;
                                break;
                            case "CLOUD_BUILD_REQUEST_FAILED":
                            case 4:
                                message.failureCause = 4;
                                break;
                            }
                            if (object.failureMessage != null)
                                message.failureMessage = String(object.failureMessage);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PostdeployJobRun message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.PostdeployJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.PostdeployJobRun} message PostdeployJobRun
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PostdeployJobRun.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.build = "";
                                object.failureCause = options.enums === String ? "FAILURE_CAUSE_UNSPECIFIED" : 0;
                                object.failureMessage = "";
                            }
                            if (message.build != null && message.hasOwnProperty("build"))
                                object.build = message.build;
                            if (message.failureCause != null && message.hasOwnProperty("failureCause"))
                                object.failureCause = options.enums === String ? $root.google.cloud.deploy.v1.PostdeployJobRun.FailureCause[message.failureCause] === undefined ? message.failureCause : $root.google.cloud.deploy.v1.PostdeployJobRun.FailureCause[message.failureCause] : message.failureCause;
                            if (message.failureMessage != null && message.hasOwnProperty("failureMessage"))
                                object.failureMessage = message.failureMessage;
                            return object;
                        };
    
                        /**
                         * Converts this PostdeployJobRun to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.PostdeployJobRun
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PostdeployJobRun.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PostdeployJobRun
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.PostdeployJobRun
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PostdeployJobRun.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.PostdeployJobRun";
                        };
    
                        /**
                         * FailureCause enum.
                         * @name google.cloud.deploy.v1.PostdeployJobRun.FailureCause
                         * @enum {number}
                         * @property {number} FAILURE_CAUSE_UNSPECIFIED=0 FAILURE_CAUSE_UNSPECIFIED value
                         * @property {number} CLOUD_BUILD_UNAVAILABLE=1 CLOUD_BUILD_UNAVAILABLE value
                         * @property {number} EXECUTION_FAILED=2 EXECUTION_FAILED value
                         * @property {number} DEADLINE_EXCEEDED=3 DEADLINE_EXCEEDED value
                         * @property {number} CLOUD_BUILD_REQUEST_FAILED=4 CLOUD_BUILD_REQUEST_FAILED value
                         */
                        PostdeployJobRun.FailureCause = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "FAILURE_CAUSE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CLOUD_BUILD_UNAVAILABLE"] = 1;
                            values[valuesById[2] = "EXECUTION_FAILED"] = 2;
                            values[valuesById[3] = "DEADLINE_EXCEEDED"] = 3;
                            values[valuesById[4] = "CLOUD_BUILD_REQUEST_FAILED"] = 4;
                            return values;
                        })();
    
                        return PostdeployJobRun;
                    })();
    
                    v1.CreateChildRolloutJobRun = (function() {
    
                        /**
                         * Properties of a CreateChildRolloutJobRun.
                         * @memberof google.cloud.deploy.v1
                         * @interface ICreateChildRolloutJobRun
                         * @property {string|null} [rollout] CreateChildRolloutJobRun rollout
                         * @property {string|null} [rolloutPhaseId] CreateChildRolloutJobRun rolloutPhaseId
                         */
    
                        /**
                         * Constructs a new CreateChildRolloutJobRun.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a CreateChildRolloutJobRun.
                         * @implements ICreateChildRolloutJobRun
                         * @constructor
                         * @param {google.cloud.deploy.v1.ICreateChildRolloutJobRun=} [properties] Properties to set
                         */
                        function CreateChildRolloutJobRun(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateChildRolloutJobRun rollout.
                         * @member {string} rollout
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJobRun
                         * @instance
                         */
                        CreateChildRolloutJobRun.prototype.rollout = "";
    
                        /**
                         * CreateChildRolloutJobRun rolloutPhaseId.
                         * @member {string} rolloutPhaseId
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJobRun
                         * @instance
                         */
                        CreateChildRolloutJobRun.prototype.rolloutPhaseId = "";
    
                        /**
                         * Creates a new CreateChildRolloutJobRun instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateChildRolloutJobRun=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.CreateChildRolloutJobRun} CreateChildRolloutJobRun instance
                         */
                        CreateChildRolloutJobRun.create = function create(properties) {
                            return new CreateChildRolloutJobRun(properties);
                        };
    
                        /**
                         * Encodes the specified CreateChildRolloutJobRun message. Does not implicitly {@link google.cloud.deploy.v1.CreateChildRolloutJobRun.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateChildRolloutJobRun} message CreateChildRolloutJobRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateChildRolloutJobRun.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.rollout != null && Object.hasOwnProperty.call(message, "rollout"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.rollout);
                            if (message.rolloutPhaseId != null && Object.hasOwnProperty.call(message, "rolloutPhaseId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.rolloutPhaseId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateChildRolloutJobRun message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.CreateChildRolloutJobRun.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.ICreateChildRolloutJobRun} message CreateChildRolloutJobRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateChildRolloutJobRun.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateChildRolloutJobRun message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJobRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.CreateChildRolloutJobRun} CreateChildRolloutJobRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateChildRolloutJobRun.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.CreateChildRolloutJobRun();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.rollout = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.rolloutPhaseId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateChildRolloutJobRun message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJobRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.CreateChildRolloutJobRun} CreateChildRolloutJobRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateChildRolloutJobRun.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateChildRolloutJobRun message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJobRun
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateChildRolloutJobRun.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.rollout != null && message.hasOwnProperty("rollout"))
                                if (!$util.isString(message.rollout))
                                    return "rollout: string expected";
                            if (message.rolloutPhaseId != null && message.hasOwnProperty("rolloutPhaseId"))
                                if (!$util.isString(message.rolloutPhaseId))
                                    return "rolloutPhaseId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateChildRolloutJobRun message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJobRun
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.CreateChildRolloutJobRun} CreateChildRolloutJobRun
                         */
                        CreateChildRolloutJobRun.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.CreateChildRolloutJobRun)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.CreateChildRolloutJobRun();
                            if (object.rollout != null)
                                message.rollout = String(object.rollout);
                            if (object.rolloutPhaseId != null)
                                message.rolloutPhaseId = String(object.rolloutPhaseId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateChildRolloutJobRun message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.CreateChildRolloutJobRun} message CreateChildRolloutJobRun
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateChildRolloutJobRun.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.rollout = "";
                                object.rolloutPhaseId = "";
                            }
                            if (message.rollout != null && message.hasOwnProperty("rollout"))
                                object.rollout = message.rollout;
                            if (message.rolloutPhaseId != null && message.hasOwnProperty("rolloutPhaseId"))
                                object.rolloutPhaseId = message.rolloutPhaseId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateChildRolloutJobRun to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJobRun
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateChildRolloutJobRun.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateChildRolloutJobRun
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.CreateChildRolloutJobRun
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateChildRolloutJobRun.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.CreateChildRolloutJobRun";
                        };
    
                        return CreateChildRolloutJobRun;
                    })();
    
                    v1.AdvanceChildRolloutJobRun = (function() {
    
                        /**
                         * Properties of an AdvanceChildRolloutJobRun.
                         * @memberof google.cloud.deploy.v1
                         * @interface IAdvanceChildRolloutJobRun
                         * @property {string|null} [rollout] AdvanceChildRolloutJobRun rollout
                         * @property {string|null} [rolloutPhaseId] AdvanceChildRolloutJobRun rolloutPhaseId
                         */
    
                        /**
                         * Constructs a new AdvanceChildRolloutJobRun.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents an AdvanceChildRolloutJobRun.
                         * @implements IAdvanceChildRolloutJobRun
                         * @constructor
                         * @param {google.cloud.deploy.v1.IAdvanceChildRolloutJobRun=} [properties] Properties to set
                         */
                        function AdvanceChildRolloutJobRun(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AdvanceChildRolloutJobRun rollout.
                         * @member {string} rollout
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJobRun
                         * @instance
                         */
                        AdvanceChildRolloutJobRun.prototype.rollout = "";
    
                        /**
                         * AdvanceChildRolloutJobRun rolloutPhaseId.
                         * @member {string} rolloutPhaseId
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJobRun
                         * @instance
                         */
                        AdvanceChildRolloutJobRun.prototype.rolloutPhaseId = "";
    
                        /**
                         * Creates a new AdvanceChildRolloutJobRun instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IAdvanceChildRolloutJobRun=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.AdvanceChildRolloutJobRun} AdvanceChildRolloutJobRun instance
                         */
                        AdvanceChildRolloutJobRun.create = function create(properties) {
                            return new AdvanceChildRolloutJobRun(properties);
                        };
    
                        /**
                         * Encodes the specified AdvanceChildRolloutJobRun message. Does not implicitly {@link google.cloud.deploy.v1.AdvanceChildRolloutJobRun.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IAdvanceChildRolloutJobRun} message AdvanceChildRolloutJobRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdvanceChildRolloutJobRun.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.rollout != null && Object.hasOwnProperty.call(message, "rollout"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.rollout);
                            if (message.rolloutPhaseId != null && Object.hasOwnProperty.call(message, "rolloutPhaseId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.rolloutPhaseId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AdvanceChildRolloutJobRun message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.AdvanceChildRolloutJobRun.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.IAdvanceChildRolloutJobRun} message AdvanceChildRolloutJobRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AdvanceChildRolloutJobRun.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AdvanceChildRolloutJobRun message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJobRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.AdvanceChildRolloutJobRun} AdvanceChildRolloutJobRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdvanceChildRolloutJobRun.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.AdvanceChildRolloutJobRun();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.rollout = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.rolloutPhaseId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AdvanceChildRolloutJobRun message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJobRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.AdvanceChildRolloutJobRun} AdvanceChildRolloutJobRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AdvanceChildRolloutJobRun.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AdvanceChildRolloutJobRun message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJobRun
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AdvanceChildRolloutJobRun.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.rollout != null && message.hasOwnProperty("rollout"))
                                if (!$util.isString(message.rollout))
                                    return "rollout: string expected";
                            if (message.rolloutPhaseId != null && message.hasOwnProperty("rolloutPhaseId"))
                                if (!$util.isString(message.rolloutPhaseId))
                                    return "rolloutPhaseId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AdvanceChildRolloutJobRun message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJobRun
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.AdvanceChildRolloutJobRun} AdvanceChildRolloutJobRun
                         */
                        AdvanceChildRolloutJobRun.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.AdvanceChildRolloutJobRun)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.AdvanceChildRolloutJobRun();
                            if (object.rollout != null)
                                message.rollout = String(object.rollout);
                            if (object.rolloutPhaseId != null)
                                message.rolloutPhaseId = String(object.rolloutPhaseId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AdvanceChildRolloutJobRun message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJobRun
                         * @static
                         * @param {google.cloud.deploy.v1.AdvanceChildRolloutJobRun} message AdvanceChildRolloutJobRun
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AdvanceChildRolloutJobRun.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.rollout = "";
                                object.rolloutPhaseId = "";
                            }
                            if (message.rollout != null && message.hasOwnProperty("rollout"))
                                object.rollout = message.rollout;
                            if (message.rolloutPhaseId != null && message.hasOwnProperty("rolloutPhaseId"))
                                object.rolloutPhaseId = message.rolloutPhaseId;
                            return object;
                        };
    
                        /**
                         * Converts this AdvanceChildRolloutJobRun to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJobRun
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AdvanceChildRolloutJobRun.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AdvanceChildRolloutJobRun
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.AdvanceChildRolloutJobRun
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AdvanceChildRolloutJobRun.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.AdvanceChildRolloutJobRun";
                        };
    
                        return AdvanceChildRolloutJobRun;
                    })();
    
                    v1.ListJobRunsRequest = (function() {
    
                        /**
                         * Properties of a ListJobRunsRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IListJobRunsRequest
                         * @property {string|null} [parent] ListJobRunsRequest parent
                         * @property {number|null} [pageSize] ListJobRunsRequest pageSize
                         * @property {string|null} [pageToken] ListJobRunsRequest pageToken
                         * @property {string|null} [filter] ListJobRunsRequest filter
                         * @property {string|null} [orderBy] ListJobRunsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListJobRunsRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a ListJobRunsRequest.
                         * @implements IListJobRunsRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IListJobRunsRequest=} [properties] Properties to set
                         */
                        function ListJobRunsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListJobRunsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.deploy.v1.ListJobRunsRequest
                         * @instance
                         */
                        ListJobRunsRequest.prototype.parent = "";
    
                        /**
                         * ListJobRunsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.deploy.v1.ListJobRunsRequest
                         * @instance
                         */
                        ListJobRunsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListJobRunsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.deploy.v1.ListJobRunsRequest
                         * @instance
                         */
                        ListJobRunsRequest.prototype.pageToken = "";
    
                        /**
                         * ListJobRunsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.deploy.v1.ListJobRunsRequest
                         * @instance
                         */
                        ListJobRunsRequest.prototype.filter = "";
    
                        /**
                         * ListJobRunsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.deploy.v1.ListJobRunsRequest
                         * @instance
                         */
                        ListJobRunsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListJobRunsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ListJobRunsRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IListJobRunsRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ListJobRunsRequest} ListJobRunsRequest instance
                         */
                        ListJobRunsRequest.create = function create(properties) {
                            return new ListJobRunsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListJobRunsRequest message. Does not implicitly {@link google.cloud.deploy.v1.ListJobRunsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ListJobRunsRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IListJobRunsRequest} message ListJobRunsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobRunsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListJobRunsRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ListJobRunsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ListJobRunsRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IListJobRunsRequest} message ListJobRunsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobRunsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListJobRunsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ListJobRunsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ListJobRunsRequest} ListJobRunsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobRunsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ListJobRunsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListJobRunsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ListJobRunsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ListJobRunsRequest} ListJobRunsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobRunsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListJobRunsRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ListJobRunsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListJobRunsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListJobRunsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ListJobRunsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ListJobRunsRequest} ListJobRunsRequest
                         */
                        ListJobRunsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ListJobRunsRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.ListJobRunsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListJobRunsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ListJobRunsRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ListJobRunsRequest} message ListJobRunsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListJobRunsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListJobRunsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ListJobRunsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListJobRunsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListJobRunsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ListJobRunsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListJobRunsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ListJobRunsRequest";
                        };
    
                        return ListJobRunsRequest;
                    })();
    
                    v1.ListJobRunsResponse = (function() {
    
                        /**
                         * Properties of a ListJobRunsResponse.
                         * @memberof google.cloud.deploy.v1
                         * @interface IListJobRunsResponse
                         * @property {Array.<google.cloud.deploy.v1.IJobRun>|null} [jobRuns] ListJobRunsResponse jobRuns
                         * @property {string|null} [nextPageToken] ListJobRunsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListJobRunsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListJobRunsResponse.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a ListJobRunsResponse.
                         * @implements IListJobRunsResponse
                         * @constructor
                         * @param {google.cloud.deploy.v1.IListJobRunsResponse=} [properties] Properties to set
                         */
                        function ListJobRunsResponse(properties) {
                            this.jobRuns = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListJobRunsResponse jobRuns.
                         * @member {Array.<google.cloud.deploy.v1.IJobRun>} jobRuns
                         * @memberof google.cloud.deploy.v1.ListJobRunsResponse
                         * @instance
                         */
                        ListJobRunsResponse.prototype.jobRuns = $util.emptyArray;
    
                        /**
                         * ListJobRunsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.deploy.v1.ListJobRunsResponse
                         * @instance
                         */
                        ListJobRunsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListJobRunsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.deploy.v1.ListJobRunsResponse
                         * @instance
                         */
                        ListJobRunsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListJobRunsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ListJobRunsResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IListJobRunsResponse=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ListJobRunsResponse} ListJobRunsResponse instance
                         */
                        ListJobRunsResponse.create = function create(properties) {
                            return new ListJobRunsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListJobRunsResponse message. Does not implicitly {@link google.cloud.deploy.v1.ListJobRunsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ListJobRunsResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IListJobRunsResponse} message ListJobRunsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobRunsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.jobRuns != null && message.jobRuns.length)
                                for (var i = 0; i < message.jobRuns.length; ++i)
                                    $root.google.cloud.deploy.v1.JobRun.encode(message.jobRuns[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListJobRunsResponse message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ListJobRunsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ListJobRunsResponse
                         * @static
                         * @param {google.cloud.deploy.v1.IListJobRunsResponse} message ListJobRunsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobRunsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListJobRunsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ListJobRunsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ListJobRunsResponse} ListJobRunsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobRunsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ListJobRunsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.jobRuns && message.jobRuns.length))
                                            message.jobRuns = [];
                                        message.jobRuns.push($root.google.cloud.deploy.v1.JobRun.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListJobRunsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ListJobRunsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ListJobRunsResponse} ListJobRunsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobRunsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListJobRunsResponse message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ListJobRunsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListJobRunsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.jobRuns != null && message.hasOwnProperty("jobRuns")) {
                                if (!Array.isArray(message.jobRuns))
                                    return "jobRuns: array expected";
                                for (var i = 0; i < message.jobRuns.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.JobRun.verify(message.jobRuns[i]);
                                    if (error)
                                        return "jobRuns." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListJobRunsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ListJobRunsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ListJobRunsResponse} ListJobRunsResponse
                         */
                        ListJobRunsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ListJobRunsResponse)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.ListJobRunsResponse();
                            if (object.jobRuns) {
                                if (!Array.isArray(object.jobRuns))
                                    throw TypeError(".google.cloud.deploy.v1.ListJobRunsResponse.jobRuns: array expected");
                                message.jobRuns = [];
                                for (var i = 0; i < object.jobRuns.length; ++i) {
                                    if (typeof object.jobRuns[i] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.ListJobRunsResponse.jobRuns: object expected");
                                    message.jobRuns[i] = $root.google.cloud.deploy.v1.JobRun.fromObject(object.jobRuns[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.deploy.v1.ListJobRunsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListJobRunsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ListJobRunsResponse
                         * @static
                         * @param {google.cloud.deploy.v1.ListJobRunsResponse} message ListJobRunsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListJobRunsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.jobRuns = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.jobRuns && message.jobRuns.length) {
                                object.jobRuns = [];
                                for (var j = 0; j < message.jobRuns.length; ++j)
                                    object.jobRuns[j] = $root.google.cloud.deploy.v1.JobRun.toObject(message.jobRuns[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListJobRunsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ListJobRunsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListJobRunsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListJobRunsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ListJobRunsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListJobRunsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ListJobRunsResponse";
                        };
    
                        return ListJobRunsResponse;
                    })();
    
                    v1.GetJobRunRequest = (function() {
    
                        /**
                         * Properties of a GetJobRunRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IGetJobRunRequest
                         * @property {string|null} [name] GetJobRunRequest name
                         */
    
                        /**
                         * Constructs a new GetJobRunRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a GetJobRunRequest.
                         * @implements IGetJobRunRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IGetJobRunRequest=} [properties] Properties to set
                         */
                        function GetJobRunRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetJobRunRequest name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.GetJobRunRequest
                         * @instance
                         */
                        GetJobRunRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetJobRunRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.GetJobRunRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetJobRunRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.GetJobRunRequest} GetJobRunRequest instance
                         */
                        GetJobRunRequest.create = function create(properties) {
                            return new GetJobRunRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetJobRunRequest message. Does not implicitly {@link google.cloud.deploy.v1.GetJobRunRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.GetJobRunRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetJobRunRequest} message GetJobRunRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetJobRunRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetJobRunRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.GetJobRunRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.GetJobRunRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetJobRunRequest} message GetJobRunRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetJobRunRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetJobRunRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.GetJobRunRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.GetJobRunRequest} GetJobRunRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetJobRunRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.GetJobRunRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetJobRunRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.GetJobRunRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.GetJobRunRequest} GetJobRunRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetJobRunRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetJobRunRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.GetJobRunRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetJobRunRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetJobRunRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.GetJobRunRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.GetJobRunRequest} GetJobRunRequest
                         */
                        GetJobRunRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.GetJobRunRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.GetJobRunRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetJobRunRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.GetJobRunRequest
                         * @static
                         * @param {google.cloud.deploy.v1.GetJobRunRequest} message GetJobRunRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetJobRunRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetJobRunRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.GetJobRunRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetJobRunRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetJobRunRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.GetJobRunRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetJobRunRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.GetJobRunRequest";
                        };
    
                        return GetJobRunRequest;
                    })();
    
                    v1.TerminateJobRunRequest = (function() {
    
                        /**
                         * Properties of a TerminateJobRunRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface ITerminateJobRunRequest
                         * @property {string|null} [name] TerminateJobRunRequest name
                         */
    
                        /**
                         * Constructs a new TerminateJobRunRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a TerminateJobRunRequest.
                         * @implements ITerminateJobRunRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.ITerminateJobRunRequest=} [properties] Properties to set
                         */
                        function TerminateJobRunRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TerminateJobRunRequest name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.TerminateJobRunRequest
                         * @instance
                         */
                        TerminateJobRunRequest.prototype.name = "";
    
                        /**
                         * Creates a new TerminateJobRunRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.TerminateJobRunRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ITerminateJobRunRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.TerminateJobRunRequest} TerminateJobRunRequest instance
                         */
                        TerminateJobRunRequest.create = function create(properties) {
                            return new TerminateJobRunRequest(properties);
                        };
    
                        /**
                         * Encodes the specified TerminateJobRunRequest message. Does not implicitly {@link google.cloud.deploy.v1.TerminateJobRunRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.TerminateJobRunRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ITerminateJobRunRequest} message TerminateJobRunRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TerminateJobRunRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TerminateJobRunRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.TerminateJobRunRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.TerminateJobRunRequest
                         * @static
                         * @param {google.cloud.deploy.v1.ITerminateJobRunRequest} message TerminateJobRunRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TerminateJobRunRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TerminateJobRunRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.TerminateJobRunRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.TerminateJobRunRequest} TerminateJobRunRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TerminateJobRunRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.TerminateJobRunRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TerminateJobRunRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.TerminateJobRunRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.TerminateJobRunRequest} TerminateJobRunRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TerminateJobRunRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TerminateJobRunRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.TerminateJobRunRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TerminateJobRunRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TerminateJobRunRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.TerminateJobRunRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.TerminateJobRunRequest} TerminateJobRunRequest
                         */
                        TerminateJobRunRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.TerminateJobRunRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.TerminateJobRunRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TerminateJobRunRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.TerminateJobRunRequest
                         * @static
                         * @param {google.cloud.deploy.v1.TerminateJobRunRequest} message TerminateJobRunRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TerminateJobRunRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this TerminateJobRunRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.TerminateJobRunRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TerminateJobRunRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TerminateJobRunRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.TerminateJobRunRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TerminateJobRunRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.TerminateJobRunRequest";
                        };
    
                        return TerminateJobRunRequest;
                    })();
    
                    v1.TerminateJobRunResponse = (function() {
    
                        /**
                         * Properties of a TerminateJobRunResponse.
                         * @memberof google.cloud.deploy.v1
                         * @interface ITerminateJobRunResponse
                         */
    
                        /**
                         * Constructs a new TerminateJobRunResponse.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a TerminateJobRunResponse.
                         * @implements ITerminateJobRunResponse
                         * @constructor
                         * @param {google.cloud.deploy.v1.ITerminateJobRunResponse=} [properties] Properties to set
                         */
                        function TerminateJobRunResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new TerminateJobRunResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.TerminateJobRunResponse
                         * @static
                         * @param {google.cloud.deploy.v1.ITerminateJobRunResponse=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.TerminateJobRunResponse} TerminateJobRunResponse instance
                         */
                        TerminateJobRunResponse.create = function create(properties) {
                            return new TerminateJobRunResponse(properties);
                        };
    
                        /**
                         * Encodes the specified TerminateJobRunResponse message. Does not implicitly {@link google.cloud.deploy.v1.TerminateJobRunResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.TerminateJobRunResponse
                         * @static
                         * @param {google.cloud.deploy.v1.ITerminateJobRunResponse} message TerminateJobRunResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TerminateJobRunResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TerminateJobRunResponse message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.TerminateJobRunResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.TerminateJobRunResponse
                         * @static
                         * @param {google.cloud.deploy.v1.ITerminateJobRunResponse} message TerminateJobRunResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TerminateJobRunResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TerminateJobRunResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.TerminateJobRunResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.TerminateJobRunResponse} TerminateJobRunResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TerminateJobRunResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.TerminateJobRunResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TerminateJobRunResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.TerminateJobRunResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.TerminateJobRunResponse} TerminateJobRunResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TerminateJobRunResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TerminateJobRunResponse message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.TerminateJobRunResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TerminateJobRunResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a TerminateJobRunResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.TerminateJobRunResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.TerminateJobRunResponse} TerminateJobRunResponse
                         */
                        TerminateJobRunResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.TerminateJobRunResponse)
                                return object;
                            return new $root.google.cloud.deploy.v1.TerminateJobRunResponse();
                        };
    
                        /**
                         * Creates a plain object from a TerminateJobRunResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.TerminateJobRunResponse
                         * @static
                         * @param {google.cloud.deploy.v1.TerminateJobRunResponse} message TerminateJobRunResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TerminateJobRunResponse.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this TerminateJobRunResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.TerminateJobRunResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TerminateJobRunResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TerminateJobRunResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.TerminateJobRunResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TerminateJobRunResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.TerminateJobRunResponse";
                        };
    
                        return TerminateJobRunResponse;
                    })();
    
                    v1.Config = (function() {
    
                        /**
                         * Properties of a Config.
                         * @memberof google.cloud.deploy.v1
                         * @interface IConfig
                         * @property {string|null} [name] Config name
                         * @property {Array.<google.cloud.deploy.v1.ISkaffoldVersion>|null} [supportedVersions] Config supportedVersions
                         * @property {string|null} [defaultSkaffoldVersion] Config defaultSkaffoldVersion
                         */
    
                        /**
                         * Constructs a new Config.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a Config.
                         * @implements IConfig
                         * @constructor
                         * @param {google.cloud.deploy.v1.IConfig=} [properties] Properties to set
                         */
                        function Config(properties) {
                            this.supportedVersions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Config name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.Config
                         * @instance
                         */
                        Config.prototype.name = "";
    
                        /**
                         * Config supportedVersions.
                         * @member {Array.<google.cloud.deploy.v1.ISkaffoldVersion>} supportedVersions
                         * @memberof google.cloud.deploy.v1.Config
                         * @instance
                         */
                        Config.prototype.supportedVersions = $util.emptyArray;
    
                        /**
                         * Config defaultSkaffoldVersion.
                         * @member {string} defaultSkaffoldVersion
                         * @memberof google.cloud.deploy.v1.Config
                         * @instance
                         */
                        Config.prototype.defaultSkaffoldVersion = "";
    
                        /**
                         * Creates a new Config instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.Config
                         * @static
                         * @param {google.cloud.deploy.v1.IConfig=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.Config} Config instance
                         */
                        Config.create = function create(properties) {
                            return new Config(properties);
                        };
    
                        /**
                         * Encodes the specified Config message. Does not implicitly {@link google.cloud.deploy.v1.Config.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.Config
                         * @static
                         * @param {google.cloud.deploy.v1.IConfig} message Config message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Config.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.supportedVersions != null && message.supportedVersions.length)
                                for (var i = 0; i < message.supportedVersions.length; ++i)
                                    $root.google.cloud.deploy.v1.SkaffoldVersion.encode(message.supportedVersions[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.defaultSkaffoldVersion != null && Object.hasOwnProperty.call(message, "defaultSkaffoldVersion"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.defaultSkaffoldVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Config message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.Config.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.Config
                         * @static
                         * @param {google.cloud.deploy.v1.IConfig} message Config message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Config.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Config message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.Config
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.Config} Config
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Config.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.Config();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.supportedVersions && message.supportedVersions.length))
                                            message.supportedVersions = [];
                                        message.supportedVersions.push($root.google.cloud.deploy.v1.SkaffoldVersion.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        message.defaultSkaffoldVersion = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Config message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.Config
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.Config} Config
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Config.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Config message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.Config
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Config.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.supportedVersions != null && message.hasOwnProperty("supportedVersions")) {
                                if (!Array.isArray(message.supportedVersions))
                                    return "supportedVersions: array expected";
                                for (var i = 0; i < message.supportedVersions.length; ++i) {
                                    var error = $root.google.cloud.deploy.v1.SkaffoldVersion.verify(message.supportedVersions[i]);
                                    if (error)
                                        return "supportedVersions." + error;
                                }
                            }
                            if (message.defaultSkaffoldVersion != null && message.hasOwnProperty("defaultSkaffoldVersion"))
                                if (!$util.isString(message.defaultSkaffoldVersion))
                                    return "defaultSkaffoldVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Config message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.Config
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.Config} Config
                         */
                        Config.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.Config)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.Config();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.supportedVersions) {
                                if (!Array.isArray(object.supportedVersions))
                                    throw TypeError(".google.cloud.deploy.v1.Config.supportedVersions: array expected");
                                message.supportedVersions = [];
                                for (var i = 0; i < object.supportedVersions.length; ++i) {
                                    if (typeof object.supportedVersions[i] !== "object")
                                        throw TypeError(".google.cloud.deploy.v1.Config.supportedVersions: object expected");
                                    message.supportedVersions[i] = $root.google.cloud.deploy.v1.SkaffoldVersion.fromObject(object.supportedVersions[i]);
                                }
                            }
                            if (object.defaultSkaffoldVersion != null)
                                message.defaultSkaffoldVersion = String(object.defaultSkaffoldVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Config message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.Config
                         * @static
                         * @param {google.cloud.deploy.v1.Config} message Config
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Config.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.supportedVersions = [];
                            if (options.defaults) {
                                object.name = "";
                                object.defaultSkaffoldVersion = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.supportedVersions && message.supportedVersions.length) {
                                object.supportedVersions = [];
                                for (var j = 0; j < message.supportedVersions.length; ++j)
                                    object.supportedVersions[j] = $root.google.cloud.deploy.v1.SkaffoldVersion.toObject(message.supportedVersions[j], options);
                            }
                            if (message.defaultSkaffoldVersion != null && message.hasOwnProperty("defaultSkaffoldVersion"))
                                object.defaultSkaffoldVersion = message.defaultSkaffoldVersion;
                            return object;
                        };
    
                        /**
                         * Converts this Config to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.Config
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Config.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Config
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.Config
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Config.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.Config";
                        };
    
                        return Config;
                    })();
    
                    v1.SkaffoldVersion = (function() {
    
                        /**
                         * Properties of a SkaffoldVersion.
                         * @memberof google.cloud.deploy.v1
                         * @interface ISkaffoldVersion
                         * @property {string|null} [version] SkaffoldVersion version
                         * @property {google.protobuf.ITimestamp|null} [maintenanceModeTime] SkaffoldVersion maintenanceModeTime
                         * @property {google.protobuf.ITimestamp|null} [supportExpirationTime] SkaffoldVersion supportExpirationTime
                         * @property {google.type.IDate|null} [supportEndDate] SkaffoldVersion supportEndDate
                         */
    
                        /**
                         * Constructs a new SkaffoldVersion.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a SkaffoldVersion.
                         * @implements ISkaffoldVersion
                         * @constructor
                         * @param {google.cloud.deploy.v1.ISkaffoldVersion=} [properties] Properties to set
                         */
                        function SkaffoldVersion(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SkaffoldVersion version.
                         * @member {string} version
                         * @memberof google.cloud.deploy.v1.SkaffoldVersion
                         * @instance
                         */
                        SkaffoldVersion.prototype.version = "";
    
                        /**
                         * SkaffoldVersion maintenanceModeTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} maintenanceModeTime
                         * @memberof google.cloud.deploy.v1.SkaffoldVersion
                         * @instance
                         */
                        SkaffoldVersion.prototype.maintenanceModeTime = null;
    
                        /**
                         * SkaffoldVersion supportExpirationTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} supportExpirationTime
                         * @memberof google.cloud.deploy.v1.SkaffoldVersion
                         * @instance
                         */
                        SkaffoldVersion.prototype.supportExpirationTime = null;
    
                        /**
                         * SkaffoldVersion supportEndDate.
                         * @member {google.type.IDate|null|undefined} supportEndDate
                         * @memberof google.cloud.deploy.v1.SkaffoldVersion
                         * @instance
                         */
                        SkaffoldVersion.prototype.supportEndDate = null;
    
                        /**
                         * Creates a new SkaffoldVersion instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.SkaffoldVersion
                         * @static
                         * @param {google.cloud.deploy.v1.ISkaffoldVersion=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.SkaffoldVersion} SkaffoldVersion instance
                         */
                        SkaffoldVersion.create = function create(properties) {
                            return new SkaffoldVersion(properties);
                        };
    
                        /**
                         * Encodes the specified SkaffoldVersion message. Does not implicitly {@link google.cloud.deploy.v1.SkaffoldVersion.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.SkaffoldVersion
                         * @static
                         * @param {google.cloud.deploy.v1.ISkaffoldVersion} message SkaffoldVersion message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SkaffoldVersion.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                            if (message.supportEndDate != null && Object.hasOwnProperty.call(message, "supportEndDate"))
                                $root.google.type.Date.encode(message.supportEndDate, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.maintenanceModeTime != null && Object.hasOwnProperty.call(message, "maintenanceModeTime"))
                                $root.google.protobuf.Timestamp.encode(message.maintenanceModeTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.supportExpirationTime != null && Object.hasOwnProperty.call(message, "supportExpirationTime"))
                                $root.google.protobuf.Timestamp.encode(message.supportExpirationTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SkaffoldVersion message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.SkaffoldVersion.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.SkaffoldVersion
                         * @static
                         * @param {google.cloud.deploy.v1.ISkaffoldVersion} message SkaffoldVersion message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SkaffoldVersion.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SkaffoldVersion message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.SkaffoldVersion
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.SkaffoldVersion} SkaffoldVersion
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SkaffoldVersion.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.SkaffoldVersion();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.maintenanceModeTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.supportExpirationTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.supportEndDate = $root.google.type.Date.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SkaffoldVersion message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.SkaffoldVersion
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.SkaffoldVersion} SkaffoldVersion
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SkaffoldVersion.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SkaffoldVersion message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.SkaffoldVersion
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SkaffoldVersion.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.maintenanceModeTime != null && message.hasOwnProperty("maintenanceModeTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.maintenanceModeTime);
                                if (error)
                                    return "maintenanceModeTime." + error;
                            }
                            if (message.supportExpirationTime != null && message.hasOwnProperty("supportExpirationTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.supportExpirationTime);
                                if (error)
                                    return "supportExpirationTime." + error;
                            }
                            if (message.supportEndDate != null && message.hasOwnProperty("supportEndDate")) {
                                var error = $root.google.type.Date.verify(message.supportEndDate);
                                if (error)
                                    return "supportEndDate." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SkaffoldVersion message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.SkaffoldVersion
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.SkaffoldVersion} SkaffoldVersion
                         */
                        SkaffoldVersion.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.SkaffoldVersion)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.SkaffoldVersion();
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.maintenanceModeTime != null) {
                                if (typeof object.maintenanceModeTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.SkaffoldVersion.maintenanceModeTime: object expected");
                                message.maintenanceModeTime = $root.google.protobuf.Timestamp.fromObject(object.maintenanceModeTime);
                            }
                            if (object.supportExpirationTime != null) {
                                if (typeof object.supportExpirationTime !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.SkaffoldVersion.supportExpirationTime: object expected");
                                message.supportExpirationTime = $root.google.protobuf.Timestamp.fromObject(object.supportExpirationTime);
                            }
                            if (object.supportEndDate != null) {
                                if (typeof object.supportEndDate !== "object")
                                    throw TypeError(".google.cloud.deploy.v1.SkaffoldVersion.supportEndDate: object expected");
                                message.supportEndDate = $root.google.type.Date.fromObject(object.supportEndDate);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SkaffoldVersion message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.SkaffoldVersion
                         * @static
                         * @param {google.cloud.deploy.v1.SkaffoldVersion} message SkaffoldVersion
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SkaffoldVersion.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.version = "";
                                object.supportEndDate = null;
                                object.maintenanceModeTime = null;
                                object.supportExpirationTime = null;
                            }
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.supportEndDate != null && message.hasOwnProperty("supportEndDate"))
                                object.supportEndDate = $root.google.type.Date.toObject(message.supportEndDate, options);
                            if (message.maintenanceModeTime != null && message.hasOwnProperty("maintenanceModeTime"))
                                object.maintenanceModeTime = $root.google.protobuf.Timestamp.toObject(message.maintenanceModeTime, options);
                            if (message.supportExpirationTime != null && message.hasOwnProperty("supportExpirationTime"))
                                object.supportExpirationTime = $root.google.protobuf.Timestamp.toObject(message.supportExpirationTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this SkaffoldVersion to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.SkaffoldVersion
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SkaffoldVersion.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SkaffoldVersion
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.SkaffoldVersion
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SkaffoldVersion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.SkaffoldVersion";
                        };
    
                        return SkaffoldVersion;
                    })();
    
                    v1.GetConfigRequest = (function() {
    
                        /**
                         * Properties of a GetConfigRequest.
                         * @memberof google.cloud.deploy.v1
                         * @interface IGetConfigRequest
                         * @property {string|null} [name] GetConfigRequest name
                         */
    
                        /**
                         * Constructs a new GetConfigRequest.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a GetConfigRequest.
                         * @implements IGetConfigRequest
                         * @constructor
                         * @param {google.cloud.deploy.v1.IGetConfigRequest=} [properties] Properties to set
                         */
                        function GetConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetConfigRequest name.
                         * @member {string} name
                         * @memberof google.cloud.deploy.v1.GetConfigRequest
                         * @instance
                         */
                        GetConfigRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.GetConfigRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetConfigRequest=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.GetConfigRequest} GetConfigRequest instance
                         */
                        GetConfigRequest.create = function create(properties) {
                            return new GetConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetConfigRequest message. Does not implicitly {@link google.cloud.deploy.v1.GetConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.GetConfigRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetConfigRequest} message GetConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetConfigRequest message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.GetConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.GetConfigRequest
                         * @static
                         * @param {google.cloud.deploy.v1.IGetConfigRequest} message GetConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.GetConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.GetConfigRequest} GetConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetConfigRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.GetConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.GetConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.GetConfigRequest} GetConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetConfigRequest message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.GetConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.GetConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.GetConfigRequest} GetConfigRequest
                         */
                        GetConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.GetConfigRequest)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.GetConfigRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.GetConfigRequest
                         * @static
                         * @param {google.cloud.deploy.v1.GetConfigRequest} message GetConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.GetConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetConfigRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.GetConfigRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.GetConfigRequest";
                        };
    
                        return GetConfigRequest;
                    })();
    
                    /**
                     * SkaffoldSupportState enum.
                     * @name google.cloud.deploy.v1.SkaffoldSupportState
                     * @enum {number}
                     * @property {number} SKAFFOLD_SUPPORT_STATE_UNSPECIFIED=0 SKAFFOLD_SUPPORT_STATE_UNSPECIFIED value
                     * @property {number} SKAFFOLD_SUPPORT_STATE_SUPPORTED=1 SKAFFOLD_SUPPORT_STATE_SUPPORTED value
                     * @property {number} SKAFFOLD_SUPPORT_STATE_MAINTENANCE_MODE=2 SKAFFOLD_SUPPORT_STATE_MAINTENANCE_MODE value
                     * @property {number} SKAFFOLD_SUPPORT_STATE_UNSUPPORTED=3 SKAFFOLD_SUPPORT_STATE_UNSUPPORTED value
                     */
                    v1.SkaffoldSupportState = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SKAFFOLD_SUPPORT_STATE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "SKAFFOLD_SUPPORT_STATE_SUPPORTED"] = 1;
                        values[valuesById[2] = "SKAFFOLD_SUPPORT_STATE_MAINTENANCE_MODE"] = 2;
                        values[valuesById[3] = "SKAFFOLD_SUPPORT_STATE_UNSUPPORTED"] = 3;
                        return values;
                    })();
    
                    v1.DeliveryPipelineNotificationEvent = (function() {
    
                        /**
                         * Properties of a DeliveryPipelineNotificationEvent.
                         * @memberof google.cloud.deploy.v1
                         * @interface IDeliveryPipelineNotificationEvent
                         * @property {string|null} [message] DeliveryPipelineNotificationEvent message
                         * @property {string|null} [deliveryPipeline] DeliveryPipelineNotificationEvent deliveryPipeline
                         * @property {google.cloud.deploy.v1.Type|null} [type] DeliveryPipelineNotificationEvent type
                         */
    
                        /**
                         * Constructs a new DeliveryPipelineNotificationEvent.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a DeliveryPipelineNotificationEvent.
                         * @implements IDeliveryPipelineNotificationEvent
                         * @constructor
                         * @param {google.cloud.deploy.v1.IDeliveryPipelineNotificationEvent=} [properties] Properties to set
                         */
                        function DeliveryPipelineNotificationEvent(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeliveryPipelineNotificationEvent message.
                         * @member {string} message
                         * @memberof google.cloud.deploy.v1.DeliveryPipelineNotificationEvent
                         * @instance
                         */
                        DeliveryPipelineNotificationEvent.prototype.message = "";
    
                        /**
                         * DeliveryPipelineNotificationEvent deliveryPipeline.
                         * @member {string} deliveryPipeline
                         * @memberof google.cloud.deploy.v1.DeliveryPipelineNotificationEvent
                         * @instance
                         */
                        DeliveryPipelineNotificationEvent.prototype.deliveryPipeline = "";
    
                        /**
                         * DeliveryPipelineNotificationEvent type.
                         * @member {google.cloud.deploy.v1.Type} type
                         * @memberof google.cloud.deploy.v1.DeliveryPipelineNotificationEvent
                         * @instance
                         */
                        DeliveryPipelineNotificationEvent.prototype.type = 0;
    
                        /**
                         * Creates a new DeliveryPipelineNotificationEvent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.DeliveryPipelineNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.IDeliveryPipelineNotificationEvent=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.DeliveryPipelineNotificationEvent} DeliveryPipelineNotificationEvent instance
                         */
                        DeliveryPipelineNotificationEvent.create = function create(properties) {
                            return new DeliveryPipelineNotificationEvent(properties);
                        };
    
                        /**
                         * Encodes the specified DeliveryPipelineNotificationEvent message. Does not implicitly {@link google.cloud.deploy.v1.DeliveryPipelineNotificationEvent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.DeliveryPipelineNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.IDeliveryPipelineNotificationEvent} message DeliveryPipelineNotificationEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeliveryPipelineNotificationEvent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.message);
                            if (message.deliveryPipeline != null && Object.hasOwnProperty.call(message, "deliveryPipeline"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.deliveryPipeline);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.type);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeliveryPipelineNotificationEvent message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.DeliveryPipelineNotificationEvent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.DeliveryPipelineNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.IDeliveryPipelineNotificationEvent} message DeliveryPipelineNotificationEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeliveryPipelineNotificationEvent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeliveryPipelineNotificationEvent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.DeliveryPipelineNotificationEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.DeliveryPipelineNotificationEvent} DeliveryPipelineNotificationEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeliveryPipelineNotificationEvent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.DeliveryPipelineNotificationEvent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.message = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.deliveryPipeline = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeliveryPipelineNotificationEvent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.DeliveryPipelineNotificationEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.DeliveryPipelineNotificationEvent} DeliveryPipelineNotificationEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeliveryPipelineNotificationEvent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeliveryPipelineNotificationEvent message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.DeliveryPipelineNotificationEvent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeliveryPipelineNotificationEvent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            if (message.deliveryPipeline != null && message.hasOwnProperty("deliveryPipeline"))
                                if (!$util.isString(message.deliveryPipeline))
                                    return "deliveryPipeline: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a DeliveryPipelineNotificationEvent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.DeliveryPipelineNotificationEvent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.DeliveryPipelineNotificationEvent} DeliveryPipelineNotificationEvent
                         */
                        DeliveryPipelineNotificationEvent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.DeliveryPipelineNotificationEvent)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.DeliveryPipelineNotificationEvent();
                            if (object.message != null)
                                message.message = String(object.message);
                            if (object.deliveryPipeline != null)
                                message.deliveryPipeline = String(object.deliveryPipeline);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "TYPE_PUBSUB_NOTIFICATION_FAILURE":
                            case 1:
                                message.type = 1;
                                break;
                            case "TYPE_RESOURCE_STATE_CHANGE":
                            case 3:
                                message.type = 3;
                                break;
                            case "TYPE_PROCESS_ABORTED":
                            case 4:
                                message.type = 4;
                                break;
                            case "TYPE_RESTRICTION_VIOLATED":
                            case 5:
                                message.type = 5;
                                break;
                            case "TYPE_RESOURCE_DELETED":
                            case 6:
                                message.type = 6;
                                break;
                            case "TYPE_RENDER_STATUES_CHANGE":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeliveryPipelineNotificationEvent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.DeliveryPipelineNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.DeliveryPipelineNotificationEvent} message DeliveryPipelineNotificationEvent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeliveryPipelineNotificationEvent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.message = "";
                                object.deliveryPipeline = "";
                                object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            if (message.deliveryPipeline != null && message.hasOwnProperty("deliveryPipeline"))
                                object.deliveryPipeline = message.deliveryPipeline;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.deploy.v1.Type[message.type] === undefined ? message.type : $root.google.cloud.deploy.v1.Type[message.type] : message.type;
                            return object;
                        };
    
                        /**
                         * Converts this DeliveryPipelineNotificationEvent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.DeliveryPipelineNotificationEvent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeliveryPipelineNotificationEvent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeliveryPipelineNotificationEvent
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.DeliveryPipelineNotificationEvent
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeliveryPipelineNotificationEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.DeliveryPipelineNotificationEvent";
                        };
    
                        return DeliveryPipelineNotificationEvent;
                    })();
    
                    /**
                     * Type enum.
                     * @name google.cloud.deploy.v1.Type
                     * @enum {number}
                     * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                     * @property {number} TYPE_PUBSUB_NOTIFICATION_FAILURE=1 TYPE_PUBSUB_NOTIFICATION_FAILURE value
                     * @property {number} TYPE_RESOURCE_STATE_CHANGE=3 TYPE_RESOURCE_STATE_CHANGE value
                     * @property {number} TYPE_PROCESS_ABORTED=4 TYPE_PROCESS_ABORTED value
                     * @property {number} TYPE_RESTRICTION_VIOLATED=5 TYPE_RESTRICTION_VIOLATED value
                     * @property {number} TYPE_RESOURCE_DELETED=6 TYPE_RESOURCE_DELETED value
                     * @property {number} TYPE_RENDER_STATUES_CHANGE=2 TYPE_RENDER_STATUES_CHANGE value
                     */
                    v1.Type = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "TYPE_PUBSUB_NOTIFICATION_FAILURE"] = 1;
                        values[valuesById[3] = "TYPE_RESOURCE_STATE_CHANGE"] = 3;
                        values[valuesById[4] = "TYPE_PROCESS_ABORTED"] = 4;
                        values[valuesById[5] = "TYPE_RESTRICTION_VIOLATED"] = 5;
                        values[valuesById[6] = "TYPE_RESOURCE_DELETED"] = 6;
                        values[valuesById[2] = "TYPE_RENDER_STATUES_CHANGE"] = 2;
                        return values;
                    })();
    
                    v1.JobRunNotificationEvent = (function() {
    
                        /**
                         * Properties of a JobRunNotificationEvent.
                         * @memberof google.cloud.deploy.v1
                         * @interface IJobRunNotificationEvent
                         * @property {string|null} [message] JobRunNotificationEvent message
                         * @property {string|null} [jobRun] JobRunNotificationEvent jobRun
                         * @property {string|null} [pipelineUid] JobRunNotificationEvent pipelineUid
                         * @property {string|null} [releaseUid] JobRunNotificationEvent releaseUid
                         * @property {string|null} [rolloutUid] JobRunNotificationEvent rolloutUid
                         * @property {string|null} [targetId] JobRunNotificationEvent targetId
                         * @property {google.cloud.deploy.v1.Type|null} [type] JobRunNotificationEvent type
                         */
    
                        /**
                         * Constructs a new JobRunNotificationEvent.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a JobRunNotificationEvent.
                         * @implements IJobRunNotificationEvent
                         * @constructor
                         * @param {google.cloud.deploy.v1.IJobRunNotificationEvent=} [properties] Properties to set
                         */
                        function JobRunNotificationEvent(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * JobRunNotificationEvent message.
                         * @member {string} message
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @instance
                         */
                        JobRunNotificationEvent.prototype.message = "";
    
                        /**
                         * JobRunNotificationEvent jobRun.
                         * @member {string} jobRun
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @instance
                         */
                        JobRunNotificationEvent.prototype.jobRun = "";
    
                        /**
                         * JobRunNotificationEvent pipelineUid.
                         * @member {string} pipelineUid
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @instance
                         */
                        JobRunNotificationEvent.prototype.pipelineUid = "";
    
                        /**
                         * JobRunNotificationEvent releaseUid.
                         * @member {string} releaseUid
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @instance
                         */
                        JobRunNotificationEvent.prototype.releaseUid = "";
    
                        /**
                         * JobRunNotificationEvent rolloutUid.
                         * @member {string} rolloutUid
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @instance
                         */
                        JobRunNotificationEvent.prototype.rolloutUid = "";
    
                        /**
                         * JobRunNotificationEvent targetId.
                         * @member {string} targetId
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @instance
                         */
                        JobRunNotificationEvent.prototype.targetId = "";
    
                        /**
                         * JobRunNotificationEvent type.
                         * @member {google.cloud.deploy.v1.Type} type
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @instance
                         */
                        JobRunNotificationEvent.prototype.type = 0;
    
                        /**
                         * Creates a new JobRunNotificationEvent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.IJobRunNotificationEvent=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.JobRunNotificationEvent} JobRunNotificationEvent instance
                         */
                        JobRunNotificationEvent.create = function create(properties) {
                            return new JobRunNotificationEvent(properties);
                        };
    
                        /**
                         * Encodes the specified JobRunNotificationEvent message. Does not implicitly {@link google.cloud.deploy.v1.JobRunNotificationEvent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.IJobRunNotificationEvent} message JobRunNotificationEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobRunNotificationEvent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.message);
                            if (message.jobRun != null && Object.hasOwnProperty.call(message, "jobRun"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.jobRun);
                            if (message.pipelineUid != null && Object.hasOwnProperty.call(message, "pipelineUid"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pipelineUid);
                            if (message.releaseUid != null && Object.hasOwnProperty.call(message, "releaseUid"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.releaseUid);
                            if (message.rolloutUid != null && Object.hasOwnProperty.call(message, "rolloutUid"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.rolloutUid);
                            if (message.targetId != null && Object.hasOwnProperty.call(message, "targetId"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.targetId);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.type);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified JobRunNotificationEvent message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.JobRunNotificationEvent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.IJobRunNotificationEvent} message JobRunNotificationEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobRunNotificationEvent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a JobRunNotificationEvent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.JobRunNotificationEvent} JobRunNotificationEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobRunNotificationEvent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.JobRunNotificationEvent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.message = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.jobRun = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.pipelineUid = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.releaseUid = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.rolloutUid = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.targetId = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a JobRunNotificationEvent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.JobRunNotificationEvent} JobRunNotificationEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobRunNotificationEvent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a JobRunNotificationEvent message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        JobRunNotificationEvent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            if (message.jobRun != null && message.hasOwnProperty("jobRun"))
                                if (!$util.isString(message.jobRun))
                                    return "jobRun: string expected";
                            if (message.pipelineUid != null && message.hasOwnProperty("pipelineUid"))
                                if (!$util.isString(message.pipelineUid))
                                    return "pipelineUid: string expected";
                            if (message.releaseUid != null && message.hasOwnProperty("releaseUid"))
                                if (!$util.isString(message.releaseUid))
                                    return "releaseUid: string expected";
                            if (message.rolloutUid != null && message.hasOwnProperty("rolloutUid"))
                                if (!$util.isString(message.rolloutUid))
                                    return "rolloutUid: string expected";
                            if (message.targetId != null && message.hasOwnProperty("targetId"))
                                if (!$util.isString(message.targetId))
                                    return "targetId: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a JobRunNotificationEvent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.JobRunNotificationEvent} JobRunNotificationEvent
                         */
                        JobRunNotificationEvent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.JobRunNotificationEvent)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.JobRunNotificationEvent();
                            if (object.message != null)
                                message.message = String(object.message);
                            if (object.jobRun != null)
                                message.jobRun = String(object.jobRun);
                            if (object.pipelineUid != null)
                                message.pipelineUid = String(object.pipelineUid);
                            if (object.releaseUid != null)
                                message.releaseUid = String(object.releaseUid);
                            if (object.rolloutUid != null)
                                message.rolloutUid = String(object.rolloutUid);
                            if (object.targetId != null)
                                message.targetId = String(object.targetId);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "TYPE_PUBSUB_NOTIFICATION_FAILURE":
                            case 1:
                                message.type = 1;
                                break;
                            case "TYPE_RESOURCE_STATE_CHANGE":
                            case 3:
                                message.type = 3;
                                break;
                            case "TYPE_PROCESS_ABORTED":
                            case 4:
                                message.type = 4;
                                break;
                            case "TYPE_RESTRICTION_VIOLATED":
                            case 5:
                                message.type = 5;
                                break;
                            case "TYPE_RESOURCE_DELETED":
                            case 6:
                                message.type = 6;
                                break;
                            case "TYPE_RENDER_STATUES_CHANGE":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a JobRunNotificationEvent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.JobRunNotificationEvent} message JobRunNotificationEvent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        JobRunNotificationEvent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.message = "";
                                object.jobRun = "";
                                object.pipelineUid = "";
                                object.releaseUid = "";
                                object.rolloutUid = "";
                                object.targetId = "";
                                object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            if (message.jobRun != null && message.hasOwnProperty("jobRun"))
                                object.jobRun = message.jobRun;
                            if (message.pipelineUid != null && message.hasOwnProperty("pipelineUid"))
                                object.pipelineUid = message.pipelineUid;
                            if (message.releaseUid != null && message.hasOwnProperty("releaseUid"))
                                object.releaseUid = message.releaseUid;
                            if (message.rolloutUid != null && message.hasOwnProperty("rolloutUid"))
                                object.rolloutUid = message.rolloutUid;
                            if (message.targetId != null && message.hasOwnProperty("targetId"))
                                object.targetId = message.targetId;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.deploy.v1.Type[message.type] === undefined ? message.type : $root.google.cloud.deploy.v1.Type[message.type] : message.type;
                            return object;
                        };
    
                        /**
                         * Converts this JobRunNotificationEvent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        JobRunNotificationEvent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for JobRunNotificationEvent
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.JobRunNotificationEvent
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        JobRunNotificationEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.JobRunNotificationEvent";
                        };
    
                        return JobRunNotificationEvent;
                    })();
    
                    v1.ReleaseNotificationEvent = (function() {
    
                        /**
                         * Properties of a ReleaseNotificationEvent.
                         * @memberof google.cloud.deploy.v1
                         * @interface IReleaseNotificationEvent
                         * @property {string|null} [message] ReleaseNotificationEvent message
                         * @property {string|null} [release] ReleaseNotificationEvent release
                         * @property {google.cloud.deploy.v1.Type|null} [type] ReleaseNotificationEvent type
                         */
    
                        /**
                         * Constructs a new ReleaseNotificationEvent.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a ReleaseNotificationEvent.
                         * @implements IReleaseNotificationEvent
                         * @constructor
                         * @param {google.cloud.deploy.v1.IReleaseNotificationEvent=} [properties] Properties to set
                         */
                        function ReleaseNotificationEvent(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReleaseNotificationEvent message.
                         * @member {string} message
                         * @memberof google.cloud.deploy.v1.ReleaseNotificationEvent
                         * @instance
                         */
                        ReleaseNotificationEvent.prototype.message = "";
    
                        /**
                         * ReleaseNotificationEvent release.
                         * @member {string} release
                         * @memberof google.cloud.deploy.v1.ReleaseNotificationEvent
                         * @instance
                         */
                        ReleaseNotificationEvent.prototype.release = "";
    
                        /**
                         * ReleaseNotificationEvent type.
                         * @member {google.cloud.deploy.v1.Type} type
                         * @memberof google.cloud.deploy.v1.ReleaseNotificationEvent
                         * @instance
                         */
                        ReleaseNotificationEvent.prototype.type = 0;
    
                        /**
                         * Creates a new ReleaseNotificationEvent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ReleaseNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.IReleaseNotificationEvent=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ReleaseNotificationEvent} ReleaseNotificationEvent instance
                         */
                        ReleaseNotificationEvent.create = function create(properties) {
                            return new ReleaseNotificationEvent(properties);
                        };
    
                        /**
                         * Encodes the specified ReleaseNotificationEvent message. Does not implicitly {@link google.cloud.deploy.v1.ReleaseNotificationEvent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ReleaseNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.IReleaseNotificationEvent} message ReleaseNotificationEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReleaseNotificationEvent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.message);
                            if (message.release != null && Object.hasOwnProperty.call(message, "release"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.release);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.type);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReleaseNotificationEvent message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ReleaseNotificationEvent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ReleaseNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.IReleaseNotificationEvent} message ReleaseNotificationEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReleaseNotificationEvent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReleaseNotificationEvent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ReleaseNotificationEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ReleaseNotificationEvent} ReleaseNotificationEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReleaseNotificationEvent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ReleaseNotificationEvent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.message = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.release = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReleaseNotificationEvent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ReleaseNotificationEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ReleaseNotificationEvent} ReleaseNotificationEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReleaseNotificationEvent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReleaseNotificationEvent message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ReleaseNotificationEvent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReleaseNotificationEvent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            if (message.release != null && message.hasOwnProperty("release"))
                                if (!$util.isString(message.release))
                                    return "release: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a ReleaseNotificationEvent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ReleaseNotificationEvent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ReleaseNotificationEvent} ReleaseNotificationEvent
                         */
                        ReleaseNotificationEvent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ReleaseNotificationEvent)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.ReleaseNotificationEvent();
                            if (object.message != null)
                                message.message = String(object.message);
                            if (object.release != null)
                                message.release = String(object.release);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "TYPE_PUBSUB_NOTIFICATION_FAILURE":
                            case 1:
                                message.type = 1;
                                break;
                            case "TYPE_RESOURCE_STATE_CHANGE":
                            case 3:
                                message.type = 3;
                                break;
                            case "TYPE_PROCESS_ABORTED":
                            case 4:
                                message.type = 4;
                                break;
                            case "TYPE_RESTRICTION_VIOLATED":
                            case 5:
                                message.type = 5;
                                break;
                            case "TYPE_RESOURCE_DELETED":
                            case 6:
                                message.type = 6;
                                break;
                            case "TYPE_RENDER_STATUES_CHANGE":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReleaseNotificationEvent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ReleaseNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.ReleaseNotificationEvent} message ReleaseNotificationEvent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReleaseNotificationEvent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.message = "";
                                object.release = "";
                                object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            if (message.release != null && message.hasOwnProperty("release"))
                                object.release = message.release;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.deploy.v1.Type[message.type] === undefined ? message.type : $root.google.cloud.deploy.v1.Type[message.type] : message.type;
                            return object;
                        };
    
                        /**
                         * Converts this ReleaseNotificationEvent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ReleaseNotificationEvent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReleaseNotificationEvent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReleaseNotificationEvent
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ReleaseNotificationEvent
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReleaseNotificationEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ReleaseNotificationEvent";
                        };
    
                        return ReleaseNotificationEvent;
                    })();
    
                    v1.ReleaseRenderEvent = (function() {
    
                        /**
                         * Properties of a ReleaseRenderEvent.
                         * @memberof google.cloud.deploy.v1
                         * @interface IReleaseRenderEvent
                         * @property {string|null} [message] ReleaseRenderEvent message
                         * @property {string|null} [release] ReleaseRenderEvent release
                         */
    
                        /**
                         * Constructs a new ReleaseRenderEvent.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a ReleaseRenderEvent.
                         * @implements IReleaseRenderEvent
                         * @constructor
                         * @param {google.cloud.deploy.v1.IReleaseRenderEvent=} [properties] Properties to set
                         */
                        function ReleaseRenderEvent(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReleaseRenderEvent message.
                         * @member {string} message
                         * @memberof google.cloud.deploy.v1.ReleaseRenderEvent
                         * @instance
                         */
                        ReleaseRenderEvent.prototype.message = "";
    
                        /**
                         * ReleaseRenderEvent release.
                         * @member {string} release
                         * @memberof google.cloud.deploy.v1.ReleaseRenderEvent
                         * @instance
                         */
                        ReleaseRenderEvent.prototype.release = "";
    
                        /**
                         * Creates a new ReleaseRenderEvent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.ReleaseRenderEvent
                         * @static
                         * @param {google.cloud.deploy.v1.IReleaseRenderEvent=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.ReleaseRenderEvent} ReleaseRenderEvent instance
                         */
                        ReleaseRenderEvent.create = function create(properties) {
                            return new ReleaseRenderEvent(properties);
                        };
    
                        /**
                         * Encodes the specified ReleaseRenderEvent message. Does not implicitly {@link google.cloud.deploy.v1.ReleaseRenderEvent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.ReleaseRenderEvent
                         * @static
                         * @param {google.cloud.deploy.v1.IReleaseRenderEvent} message ReleaseRenderEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReleaseRenderEvent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.message);
                            if (message.release != null && Object.hasOwnProperty.call(message, "release"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.release);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReleaseRenderEvent message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.ReleaseRenderEvent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.ReleaseRenderEvent
                         * @static
                         * @param {google.cloud.deploy.v1.IReleaseRenderEvent} message ReleaseRenderEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReleaseRenderEvent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReleaseRenderEvent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.ReleaseRenderEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.ReleaseRenderEvent} ReleaseRenderEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReleaseRenderEvent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.ReleaseRenderEvent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.message = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.release = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReleaseRenderEvent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.ReleaseRenderEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.ReleaseRenderEvent} ReleaseRenderEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReleaseRenderEvent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReleaseRenderEvent message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.ReleaseRenderEvent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReleaseRenderEvent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            if (message.release != null && message.hasOwnProperty("release"))
                                if (!$util.isString(message.release))
                                    return "release: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ReleaseRenderEvent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.ReleaseRenderEvent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.ReleaseRenderEvent} ReleaseRenderEvent
                         */
                        ReleaseRenderEvent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.ReleaseRenderEvent)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.ReleaseRenderEvent();
                            if (object.message != null)
                                message.message = String(object.message);
                            if (object.release != null)
                                message.release = String(object.release);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReleaseRenderEvent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.ReleaseRenderEvent
                         * @static
                         * @param {google.cloud.deploy.v1.ReleaseRenderEvent} message ReleaseRenderEvent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReleaseRenderEvent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.message = "";
                                object.release = "";
                            }
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            if (message.release != null && message.hasOwnProperty("release"))
                                object.release = message.release;
                            return object;
                        };
    
                        /**
                         * Converts this ReleaseRenderEvent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.ReleaseRenderEvent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReleaseRenderEvent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReleaseRenderEvent
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.ReleaseRenderEvent
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReleaseRenderEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.ReleaseRenderEvent";
                        };
    
                        return ReleaseRenderEvent;
                    })();
    
                    v1.RolloutNotificationEvent = (function() {
    
                        /**
                         * Properties of a RolloutNotificationEvent.
                         * @memberof google.cloud.deploy.v1
                         * @interface IRolloutNotificationEvent
                         * @property {string|null} [message] RolloutNotificationEvent message
                         * @property {string|null} [pipelineUid] RolloutNotificationEvent pipelineUid
                         * @property {string|null} [releaseUid] RolloutNotificationEvent releaseUid
                         * @property {string|null} [rollout] RolloutNotificationEvent rollout
                         * @property {google.cloud.deploy.v1.Type|null} [type] RolloutNotificationEvent type
                         * @property {string|null} [targetId] RolloutNotificationEvent targetId
                         */
    
                        /**
                         * Constructs a new RolloutNotificationEvent.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a RolloutNotificationEvent.
                         * @implements IRolloutNotificationEvent
                         * @constructor
                         * @param {google.cloud.deploy.v1.IRolloutNotificationEvent=} [properties] Properties to set
                         */
                        function RolloutNotificationEvent(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RolloutNotificationEvent message.
                         * @member {string} message
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @instance
                         */
                        RolloutNotificationEvent.prototype.message = "";
    
                        /**
                         * RolloutNotificationEvent pipelineUid.
                         * @member {string} pipelineUid
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @instance
                         */
                        RolloutNotificationEvent.prototype.pipelineUid = "";
    
                        /**
                         * RolloutNotificationEvent releaseUid.
                         * @member {string} releaseUid
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @instance
                         */
                        RolloutNotificationEvent.prototype.releaseUid = "";
    
                        /**
                         * RolloutNotificationEvent rollout.
                         * @member {string} rollout
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @instance
                         */
                        RolloutNotificationEvent.prototype.rollout = "";
    
                        /**
                         * RolloutNotificationEvent type.
                         * @member {google.cloud.deploy.v1.Type} type
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @instance
                         */
                        RolloutNotificationEvent.prototype.type = 0;
    
                        /**
                         * RolloutNotificationEvent targetId.
                         * @member {string} targetId
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @instance
                         */
                        RolloutNotificationEvent.prototype.targetId = "";
    
                        /**
                         * Creates a new RolloutNotificationEvent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.IRolloutNotificationEvent=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.RolloutNotificationEvent} RolloutNotificationEvent instance
                         */
                        RolloutNotificationEvent.create = function create(properties) {
                            return new RolloutNotificationEvent(properties);
                        };
    
                        /**
                         * Encodes the specified RolloutNotificationEvent message. Does not implicitly {@link google.cloud.deploy.v1.RolloutNotificationEvent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.IRolloutNotificationEvent} message RolloutNotificationEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RolloutNotificationEvent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.message);
                            if (message.pipelineUid != null && Object.hasOwnProperty.call(message, "pipelineUid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.pipelineUid);
                            if (message.releaseUid != null && Object.hasOwnProperty.call(message, "releaseUid"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.releaseUid);
                            if (message.rollout != null && Object.hasOwnProperty.call(message, "rollout"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.rollout);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                            if (message.targetId != null && Object.hasOwnProperty.call(message, "targetId"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.targetId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RolloutNotificationEvent message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.RolloutNotificationEvent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.IRolloutNotificationEvent} message RolloutNotificationEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RolloutNotificationEvent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RolloutNotificationEvent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.RolloutNotificationEvent} RolloutNotificationEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RolloutNotificationEvent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.RolloutNotificationEvent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.message = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pipelineUid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.releaseUid = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.rollout = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.targetId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RolloutNotificationEvent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.RolloutNotificationEvent} RolloutNotificationEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RolloutNotificationEvent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RolloutNotificationEvent message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RolloutNotificationEvent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            if (message.pipelineUid != null && message.hasOwnProperty("pipelineUid"))
                                if (!$util.isString(message.pipelineUid))
                                    return "pipelineUid: string expected";
                            if (message.releaseUid != null && message.hasOwnProperty("releaseUid"))
                                if (!$util.isString(message.releaseUid))
                                    return "releaseUid: string expected";
                            if (message.rollout != null && message.hasOwnProperty("rollout"))
                                if (!$util.isString(message.rollout))
                                    return "rollout: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 2:
                                    break;
                                }
                            if (message.targetId != null && message.hasOwnProperty("targetId"))
                                if (!$util.isString(message.targetId))
                                    return "targetId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RolloutNotificationEvent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.RolloutNotificationEvent} RolloutNotificationEvent
                         */
                        RolloutNotificationEvent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.RolloutNotificationEvent)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.RolloutNotificationEvent();
                            if (object.message != null)
                                message.message = String(object.message);
                            if (object.pipelineUid != null)
                                message.pipelineUid = String(object.pipelineUid);
                            if (object.releaseUid != null)
                                message.releaseUid = String(object.releaseUid);
                            if (object.rollout != null)
                                message.rollout = String(object.rollout);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "TYPE_PUBSUB_NOTIFICATION_FAILURE":
                            case 1:
                                message.type = 1;
                                break;
                            case "TYPE_RESOURCE_STATE_CHANGE":
                            case 3:
                                message.type = 3;
                                break;
                            case "TYPE_PROCESS_ABORTED":
                            case 4:
                                message.type = 4;
                                break;
                            case "TYPE_RESTRICTION_VIOLATED":
                            case 5:
                                message.type = 5;
                                break;
                            case "TYPE_RESOURCE_DELETED":
                            case 6:
                                message.type = 6;
                                break;
                            case "TYPE_RENDER_STATUES_CHANGE":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            if (object.targetId != null)
                                message.targetId = String(object.targetId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RolloutNotificationEvent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.RolloutNotificationEvent} message RolloutNotificationEvent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RolloutNotificationEvent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.message = "";
                                object.pipelineUid = "";
                                object.releaseUid = "";
                                object.rollout = "";
                                object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                object.targetId = "";
                            }
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            if (message.pipelineUid != null && message.hasOwnProperty("pipelineUid"))
                                object.pipelineUid = message.pipelineUid;
                            if (message.releaseUid != null && message.hasOwnProperty("releaseUid"))
                                object.releaseUid = message.releaseUid;
                            if (message.rollout != null && message.hasOwnProperty("rollout"))
                                object.rollout = message.rollout;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.deploy.v1.Type[message.type] === undefined ? message.type : $root.google.cloud.deploy.v1.Type[message.type] : message.type;
                            if (message.targetId != null && message.hasOwnProperty("targetId"))
                                object.targetId = message.targetId;
                            return object;
                        };
    
                        /**
                         * Converts this RolloutNotificationEvent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RolloutNotificationEvent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RolloutNotificationEvent
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.RolloutNotificationEvent
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RolloutNotificationEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.RolloutNotificationEvent";
                        };
    
                        return RolloutNotificationEvent;
                    })();
    
                    v1.TargetNotificationEvent = (function() {
    
                        /**
                         * Properties of a TargetNotificationEvent.
                         * @memberof google.cloud.deploy.v1
                         * @interface ITargetNotificationEvent
                         * @property {string|null} [message] TargetNotificationEvent message
                         * @property {string|null} [target] TargetNotificationEvent target
                         * @property {google.cloud.deploy.v1.Type|null} [type] TargetNotificationEvent type
                         */
    
                        /**
                         * Constructs a new TargetNotificationEvent.
                         * @memberof google.cloud.deploy.v1
                         * @classdesc Represents a TargetNotificationEvent.
                         * @implements ITargetNotificationEvent
                         * @constructor
                         * @param {google.cloud.deploy.v1.ITargetNotificationEvent=} [properties] Properties to set
                         */
                        function TargetNotificationEvent(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TargetNotificationEvent message.
                         * @member {string} message
                         * @memberof google.cloud.deploy.v1.TargetNotificationEvent
                         * @instance
                         */
                        TargetNotificationEvent.prototype.message = "";
    
                        /**
                         * TargetNotificationEvent target.
                         * @member {string} target
                         * @memberof google.cloud.deploy.v1.TargetNotificationEvent
                         * @instance
                         */
                        TargetNotificationEvent.prototype.target = "";
    
                        /**
                         * TargetNotificationEvent type.
                         * @member {google.cloud.deploy.v1.Type} type
                         * @memberof google.cloud.deploy.v1.TargetNotificationEvent
                         * @instance
                         */
                        TargetNotificationEvent.prototype.type = 0;
    
                        /**
                         * Creates a new TargetNotificationEvent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.deploy.v1.TargetNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.ITargetNotificationEvent=} [properties] Properties to set
                         * @returns {google.cloud.deploy.v1.TargetNotificationEvent} TargetNotificationEvent instance
                         */
                        TargetNotificationEvent.create = function create(properties) {
                            return new TargetNotificationEvent(properties);
                        };
    
                        /**
                         * Encodes the specified TargetNotificationEvent message. Does not implicitly {@link google.cloud.deploy.v1.TargetNotificationEvent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.deploy.v1.TargetNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.ITargetNotificationEvent} message TargetNotificationEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TargetNotificationEvent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.message);
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.target);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.type);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TargetNotificationEvent message, length delimited. Does not implicitly {@link google.cloud.deploy.v1.TargetNotificationEvent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.deploy.v1.TargetNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.ITargetNotificationEvent} message TargetNotificationEvent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TargetNotificationEvent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TargetNotificationEvent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.deploy.v1.TargetNotificationEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.deploy.v1.TargetNotificationEvent} TargetNotificationEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TargetNotificationEvent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.deploy.v1.TargetNotificationEvent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.message = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TargetNotificationEvent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.deploy.v1.TargetNotificationEvent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.deploy.v1.TargetNotificationEvent} TargetNotificationEvent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TargetNotificationEvent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TargetNotificationEvent message.
                         * @function verify
                         * @memberof google.cloud.deploy.v1.TargetNotificationEvent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TargetNotificationEvent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a TargetNotificationEvent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.deploy.v1.TargetNotificationEvent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.deploy.v1.TargetNotificationEvent} TargetNotificationEvent
                         */
                        TargetNotificationEvent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.deploy.v1.TargetNotificationEvent)
                                return object;
                            var message = new $root.google.cloud.deploy.v1.TargetNotificationEvent();
                            if (object.message != null)
                                message.message = String(object.message);
                            if (object.target != null)
                                message.target = String(object.target);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "TYPE_PUBSUB_NOTIFICATION_FAILURE":
                            case 1:
                                message.type = 1;
                                break;
                            case "TYPE_RESOURCE_STATE_CHANGE":
                            case 3:
                                message.type = 3;
                                break;
                            case "TYPE_PROCESS_ABORTED":
                            case 4:
                                message.type = 4;
                                break;
                            case "TYPE_RESTRICTION_VIOLATED":
                            case 5:
                                message.type = 5;
                                break;
                            case "TYPE_RESOURCE_DELETED":
                            case 6:
                                message.type = 6;
                                break;
                            case "TYPE_RENDER_STATUES_CHANGE":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TargetNotificationEvent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.deploy.v1.TargetNotificationEvent
                         * @static
                         * @param {google.cloud.deploy.v1.TargetNotificationEvent} message TargetNotificationEvent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TargetNotificationEvent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.message = "";
                                object.target = "";
                                object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.deploy.v1.Type[message.type] === undefined ? message.type : $root.google.cloud.deploy.v1.Type[message.type] : message.type;
                            return object;
                        };
    
                        /**
                         * Converts this TargetNotificationEvent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.deploy.v1.TargetNotificationEvent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TargetNotificationEvent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TargetNotificationEvent
                         * @function getTypeUrl
                         * @memberof google.cloud.deploy.v1.TargetNotificationEvent
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TargetNotificationEvent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.deploy.v1.TargetNotificationEvent";
                        };
    
                        return TargetNotificationEvent;
                    })();
    
                    return v1;
                })();
    
                return deploy;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            api.CommonLanguageSettings = (function() {
    
                /**
                 * Properties of a CommonLanguageSettings.
                 * @memberof google.api
                 * @interface ICommonLanguageSettings
                 * @property {string|null} [referenceDocsUri] CommonLanguageSettings referenceDocsUri
                 * @property {Array.<google.api.ClientLibraryDestination>|null} [destinations] CommonLanguageSettings destinations
                 */
    
                /**
                 * Constructs a new CommonLanguageSettings.
                 * @memberof google.api
                 * @classdesc Represents a CommonLanguageSettings.
                 * @implements ICommonLanguageSettings
                 * @constructor
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 */
                function CommonLanguageSettings(properties) {
                    this.destinations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CommonLanguageSettings referenceDocsUri.
                 * @member {string} referenceDocsUri
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.referenceDocsUri = "";
    
                /**
                 * CommonLanguageSettings destinations.
                 * @member {Array.<google.api.ClientLibraryDestination>} destinations
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.destinations = $util.emptyArray;
    
                /**
                 * Creates a new CommonLanguageSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings instance
                 */
                CommonLanguageSettings.create = function create(properties) {
                    return new CommonLanguageSettings(properties);
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.referenceDocsUri != null && Object.hasOwnProperty.call(message, "referenceDocsUri"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.referenceDocsUri);
                    if (message.destinations != null && message.destinations.length) {
                        writer.uint32(/* id 2, wireType 2 =*/18).fork();
                        for (var i = 0; i < message.destinations.length; ++i)
                            writer.int32(message.destinations[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message, length delimited. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CommonLanguageSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.referenceDocsUri = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.destinations && message.destinations.length))
                                    message.destinations = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.destinations.push(reader.int32());
                                } else
                                    message.destinations.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CommonLanguageSettings message.
                 * @function verify
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CommonLanguageSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        if (!$util.isString(message.referenceDocsUri))
                            return "referenceDocsUri: string expected";
                    if (message.destinations != null && message.hasOwnProperty("destinations")) {
                        if (!Array.isArray(message.destinations))
                            return "destinations: array expected";
                        for (var i = 0; i < message.destinations.length; ++i)
                            switch (message.destinations[i]) {
                            default:
                                return "destinations: enum value[] expected";
                            case 0:
                            case 10:
                            case 20:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a CommonLanguageSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 */
                CommonLanguageSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CommonLanguageSettings)
                        return object;
                    var message = new $root.google.api.CommonLanguageSettings();
                    if (object.referenceDocsUri != null)
                        message.referenceDocsUri = String(object.referenceDocsUri);
                    if (object.destinations) {
                        if (!Array.isArray(object.destinations))
                            throw TypeError(".google.api.CommonLanguageSettings.destinations: array expected");
                        message.destinations = [];
                        for (var i = 0; i < object.destinations.length; ++i)
                            switch (object.destinations[i]) {
                            default:
                                if (typeof object.destinations[i] === "number") {
                                    message.destinations[i] = object.destinations[i];
                                    break;
                                }
                            case "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED":
                            case 0:
                                message.destinations[i] = 0;
                                break;
                            case "GITHUB":
                            case 10:
                                message.destinations[i] = 10;
                                break;
                            case "PACKAGE_MANAGER":
                            case 20:
                                message.destinations[i] = 20;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CommonLanguageSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.CommonLanguageSettings} message CommonLanguageSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CommonLanguageSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.destinations = [];
                    if (options.defaults)
                        object.referenceDocsUri = "";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        object.referenceDocsUri = message.referenceDocsUri;
                    if (message.destinations && message.destinations.length) {
                        object.destinations = [];
                        for (var j = 0; j < message.destinations.length; ++j)
                            object.destinations[j] = options.enums === String ? $root.google.api.ClientLibraryDestination[message.destinations[j]] === undefined ? message.destinations[j] : $root.google.api.ClientLibraryDestination[message.destinations[j]] : message.destinations[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this CommonLanguageSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CommonLanguageSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CommonLanguageSettings
                 * @function getTypeUrl
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CommonLanguageSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CommonLanguageSettings";
                };
    
                return CommonLanguageSettings;
            })();
    
            api.ClientLibrarySettings = (function() {
    
                /**
                 * Properties of a ClientLibrarySettings.
                 * @memberof google.api
                 * @interface IClientLibrarySettings
                 * @property {string|null} [version] ClientLibrarySettings version
                 * @property {google.api.LaunchStage|null} [launchStage] ClientLibrarySettings launchStage
                 * @property {boolean|null} [restNumericEnums] ClientLibrarySettings restNumericEnums
                 * @property {google.api.IJavaSettings|null} [javaSettings] ClientLibrarySettings javaSettings
                 * @property {google.api.ICppSettings|null} [cppSettings] ClientLibrarySettings cppSettings
                 * @property {google.api.IPhpSettings|null} [phpSettings] ClientLibrarySettings phpSettings
                 * @property {google.api.IPythonSettings|null} [pythonSettings] ClientLibrarySettings pythonSettings
                 * @property {google.api.INodeSettings|null} [nodeSettings] ClientLibrarySettings nodeSettings
                 * @property {google.api.IDotnetSettings|null} [dotnetSettings] ClientLibrarySettings dotnetSettings
                 * @property {google.api.IRubySettings|null} [rubySettings] ClientLibrarySettings rubySettings
                 * @property {google.api.IGoSettings|null} [goSettings] ClientLibrarySettings goSettings
                 */
    
                /**
                 * Constructs a new ClientLibrarySettings.
                 * @memberof google.api
                 * @classdesc Represents a ClientLibrarySettings.
                 * @implements IClientLibrarySettings
                 * @constructor
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 */
                function ClientLibrarySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ClientLibrarySettings version.
                 * @member {string} version
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.version = "";
    
                /**
                 * ClientLibrarySettings launchStage.
                 * @member {google.api.LaunchStage} launchStage
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.launchStage = 0;
    
                /**
                 * ClientLibrarySettings restNumericEnums.
                 * @member {boolean} restNumericEnums
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.restNumericEnums = false;
    
                /**
                 * ClientLibrarySettings javaSettings.
                 * @member {google.api.IJavaSettings|null|undefined} javaSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.javaSettings = null;
    
                /**
                 * ClientLibrarySettings cppSettings.
                 * @member {google.api.ICppSettings|null|undefined} cppSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.cppSettings = null;
    
                /**
                 * ClientLibrarySettings phpSettings.
                 * @member {google.api.IPhpSettings|null|undefined} phpSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.phpSettings = null;
    
                /**
                 * ClientLibrarySettings pythonSettings.
                 * @member {google.api.IPythonSettings|null|undefined} pythonSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.pythonSettings = null;
    
                /**
                 * ClientLibrarySettings nodeSettings.
                 * @member {google.api.INodeSettings|null|undefined} nodeSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.nodeSettings = null;
    
                /**
                 * ClientLibrarySettings dotnetSettings.
                 * @member {google.api.IDotnetSettings|null|undefined} dotnetSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.dotnetSettings = null;
    
                /**
                 * ClientLibrarySettings rubySettings.
                 * @member {google.api.IRubySettings|null|undefined} rubySettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.rubySettings = null;
    
                /**
                 * ClientLibrarySettings goSettings.
                 * @member {google.api.IGoSettings|null|undefined} goSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.goSettings = null;
    
                /**
                 * Creates a new ClientLibrarySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings instance
                 */
                ClientLibrarySettings.create = function create(properties) {
                    return new ClientLibrarySettings(properties);
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                    if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.launchStage);
                    if (message.restNumericEnums != null && Object.hasOwnProperty.call(message, "restNumericEnums"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.restNumericEnums);
                    if (message.javaSettings != null && Object.hasOwnProperty.call(message, "javaSettings"))
                        $root.google.api.JavaSettings.encode(message.javaSettings, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                    if (message.cppSettings != null && Object.hasOwnProperty.call(message, "cppSettings"))
                        $root.google.api.CppSettings.encode(message.cppSettings, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                    if (message.phpSettings != null && Object.hasOwnProperty.call(message, "phpSettings"))
                        $root.google.api.PhpSettings.encode(message.phpSettings, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                    if (message.pythonSettings != null && Object.hasOwnProperty.call(message, "pythonSettings"))
                        $root.google.api.PythonSettings.encode(message.pythonSettings, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                    if (message.nodeSettings != null && Object.hasOwnProperty.call(message, "nodeSettings"))
                        $root.google.api.NodeSettings.encode(message.nodeSettings, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                    if (message.dotnetSettings != null && Object.hasOwnProperty.call(message, "dotnetSettings"))
                        $root.google.api.DotnetSettings.encode(message.dotnetSettings, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                    if (message.rubySettings != null && Object.hasOwnProperty.call(message, "rubySettings"))
                        $root.google.api.RubySettings.encode(message.rubySettings, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                    if (message.goSettings != null && Object.hasOwnProperty.call(message, "goSettings"))
                        $root.google.api.GoSettings.encode(message.goSettings, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message, length delimited. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ClientLibrarySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.version = reader.string();
                                break;
                            }
                        case 2: {
                                message.launchStage = reader.int32();
                                break;
                            }
                        case 3: {
                                message.restNumericEnums = reader.bool();
                                break;
                            }
                        case 21: {
                                message.javaSettings = $root.google.api.JavaSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 22: {
                                message.cppSettings = $root.google.api.CppSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 23: {
                                message.phpSettings = $root.google.api.PhpSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 24: {
                                message.pythonSettings = $root.google.api.PythonSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 25: {
                                message.nodeSettings = $root.google.api.NodeSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 26: {
                                message.dotnetSettings = $root.google.api.DotnetSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 27: {
                                message.rubySettings = $root.google.api.RubySettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 28: {
                                message.goSettings = $root.google.api.GoSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ClientLibrarySettings message.
                 * @function verify
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ClientLibrarySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isString(message.version))
                            return "version: string expected";
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        switch (message.launchStage) {
                        default:
                            return "launchStage: enum value expected";
                        case 0:
                        case 6:
                        case 7:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        if (typeof message.restNumericEnums !== "boolean")
                            return "restNumericEnums: boolean expected";
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings")) {
                        var error = $root.google.api.JavaSettings.verify(message.javaSettings);
                        if (error)
                            return "javaSettings." + error;
                    }
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings")) {
                        var error = $root.google.api.CppSettings.verify(message.cppSettings);
                        if (error)
                            return "cppSettings." + error;
                    }
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings")) {
                        var error = $root.google.api.PhpSettings.verify(message.phpSettings);
                        if (error)
                            return "phpSettings." + error;
                    }
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings")) {
                        var error = $root.google.api.PythonSettings.verify(message.pythonSettings);
                        if (error)
                            return "pythonSettings." + error;
                    }
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings")) {
                        var error = $root.google.api.NodeSettings.verify(message.nodeSettings);
                        if (error)
                            return "nodeSettings." + error;
                    }
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings")) {
                        var error = $root.google.api.DotnetSettings.verify(message.dotnetSettings);
                        if (error)
                            return "dotnetSettings." + error;
                    }
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings")) {
                        var error = $root.google.api.RubySettings.verify(message.rubySettings);
                        if (error)
                            return "rubySettings." + error;
                    }
                    if (message.goSettings != null && message.hasOwnProperty("goSettings")) {
                        var error = $root.google.api.GoSettings.verify(message.goSettings);
                        if (error)
                            return "goSettings." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ClientLibrarySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 */
                ClientLibrarySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ClientLibrarySettings)
                        return object;
                    var message = new $root.google.api.ClientLibrarySettings();
                    if (object.version != null)
                        message.version = String(object.version);
                    switch (object.launchStage) {
                    default:
                        if (typeof object.launchStage === "number") {
                            message.launchStage = object.launchStage;
                            break;
                        }
                        break;
                    case "LAUNCH_STAGE_UNSPECIFIED":
                    case 0:
                        message.launchStage = 0;
                        break;
                    case "UNIMPLEMENTED":
                    case 6:
                        message.launchStage = 6;
                        break;
                    case "PRELAUNCH":
                    case 7:
                        message.launchStage = 7;
                        break;
                    case "EARLY_ACCESS":
                    case 1:
                        message.launchStage = 1;
                        break;
                    case "ALPHA":
                    case 2:
                        message.launchStage = 2;
                        break;
                    case "BETA":
                    case 3:
                        message.launchStage = 3;
                        break;
                    case "GA":
                    case 4:
                        message.launchStage = 4;
                        break;
                    case "DEPRECATED":
                    case 5:
                        message.launchStage = 5;
                        break;
                    }
                    if (object.restNumericEnums != null)
                        message.restNumericEnums = Boolean(object.restNumericEnums);
                    if (object.javaSettings != null) {
                        if (typeof object.javaSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.javaSettings: object expected");
                        message.javaSettings = $root.google.api.JavaSettings.fromObject(object.javaSettings);
                    }
                    if (object.cppSettings != null) {
                        if (typeof object.cppSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.cppSettings: object expected");
                        message.cppSettings = $root.google.api.CppSettings.fromObject(object.cppSettings);
                    }
                    if (object.phpSettings != null) {
                        if (typeof object.phpSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.phpSettings: object expected");
                        message.phpSettings = $root.google.api.PhpSettings.fromObject(object.phpSettings);
                    }
                    if (object.pythonSettings != null) {
                        if (typeof object.pythonSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.pythonSettings: object expected");
                        message.pythonSettings = $root.google.api.PythonSettings.fromObject(object.pythonSettings);
                    }
                    if (object.nodeSettings != null) {
                        if (typeof object.nodeSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.nodeSettings: object expected");
                        message.nodeSettings = $root.google.api.NodeSettings.fromObject(object.nodeSettings);
                    }
                    if (object.dotnetSettings != null) {
                        if (typeof object.dotnetSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.dotnetSettings: object expected");
                        message.dotnetSettings = $root.google.api.DotnetSettings.fromObject(object.dotnetSettings);
                    }
                    if (object.rubySettings != null) {
                        if (typeof object.rubySettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.rubySettings: object expected");
                        message.rubySettings = $root.google.api.RubySettings.fromObject(object.rubySettings);
                    }
                    if (object.goSettings != null) {
                        if (typeof object.goSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.goSettings: object expected");
                        message.goSettings = $root.google.api.GoSettings.fromObject(object.goSettings);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ClientLibrarySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.ClientLibrarySettings} message ClientLibrarySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ClientLibrarySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.version = "";
                        object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                        object.restNumericEnums = false;
                        object.javaSettings = null;
                        object.cppSettings = null;
                        object.phpSettings = null;
                        object.pythonSettings = null;
                        object.nodeSettings = null;
                        object.dotnetSettings = null;
                        object.rubySettings = null;
                        object.goSettings = null;
                    }
                    if (message.version != null && message.hasOwnProperty("version"))
                        object.version = message.version;
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        object.restNumericEnums = message.restNumericEnums;
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings"))
                        object.javaSettings = $root.google.api.JavaSettings.toObject(message.javaSettings, options);
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings"))
                        object.cppSettings = $root.google.api.CppSettings.toObject(message.cppSettings, options);
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings"))
                        object.phpSettings = $root.google.api.PhpSettings.toObject(message.phpSettings, options);
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings"))
                        object.pythonSettings = $root.google.api.PythonSettings.toObject(message.pythonSettings, options);
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings"))
                        object.nodeSettings = $root.google.api.NodeSettings.toObject(message.nodeSettings, options);
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings"))
                        object.dotnetSettings = $root.google.api.DotnetSettings.toObject(message.dotnetSettings, options);
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings"))
                        object.rubySettings = $root.google.api.RubySettings.toObject(message.rubySettings, options);
                    if (message.goSettings != null && message.hasOwnProperty("goSettings"))
                        object.goSettings = $root.google.api.GoSettings.toObject(message.goSettings, options);
                    return object;
                };
    
                /**
                 * Converts this ClientLibrarySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ClientLibrarySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ClientLibrarySettings
                 * @function getTypeUrl
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ClientLibrarySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ClientLibrarySettings";
                };
    
                return ClientLibrarySettings;
            })();
    
            api.Publishing = (function() {
    
                /**
                 * Properties of a Publishing.
                 * @memberof google.api
                 * @interface IPublishing
                 * @property {Array.<google.api.IMethodSettings>|null} [methodSettings] Publishing methodSettings
                 * @property {string|null} [newIssueUri] Publishing newIssueUri
                 * @property {string|null} [documentationUri] Publishing documentationUri
                 * @property {string|null} [apiShortName] Publishing apiShortName
                 * @property {string|null} [githubLabel] Publishing githubLabel
                 * @property {Array.<string>|null} [codeownerGithubTeams] Publishing codeownerGithubTeams
                 * @property {string|null} [docTagPrefix] Publishing docTagPrefix
                 * @property {google.api.ClientLibraryOrganization|null} [organization] Publishing organization
                 * @property {Array.<google.api.IClientLibrarySettings>|null} [librarySettings] Publishing librarySettings
                 */
    
                /**
                 * Constructs a new Publishing.
                 * @memberof google.api
                 * @classdesc Represents a Publishing.
                 * @implements IPublishing
                 * @constructor
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 */
                function Publishing(properties) {
                    this.methodSettings = [];
                    this.codeownerGithubTeams = [];
                    this.librarySettings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Publishing methodSettings.
                 * @member {Array.<google.api.IMethodSettings>} methodSettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.methodSettings = $util.emptyArray;
    
                /**
                 * Publishing newIssueUri.
                 * @member {string} newIssueUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.newIssueUri = "";
    
                /**
                 * Publishing documentationUri.
                 * @member {string} documentationUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.documentationUri = "";
    
                /**
                 * Publishing apiShortName.
                 * @member {string} apiShortName
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.apiShortName = "";
    
                /**
                 * Publishing githubLabel.
                 * @member {string} githubLabel
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.githubLabel = "";
    
                /**
                 * Publishing codeownerGithubTeams.
                 * @member {Array.<string>} codeownerGithubTeams
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.codeownerGithubTeams = $util.emptyArray;
    
                /**
                 * Publishing docTagPrefix.
                 * @member {string} docTagPrefix
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.docTagPrefix = "";
    
                /**
                 * Publishing organization.
                 * @member {google.api.ClientLibraryOrganization} organization
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.organization = 0;
    
                /**
                 * Publishing librarySettings.
                 * @member {Array.<google.api.IClientLibrarySettings>} librarySettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.librarySettings = $util.emptyArray;
    
                /**
                 * Creates a new Publishing instance using the specified properties.
                 * @function create
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 * @returns {google.api.Publishing} Publishing instance
                 */
                Publishing.create = function create(properties) {
                    return new Publishing(properties);
                };
    
                /**
                 * Encodes the specified Publishing message. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.methodSettings != null && message.methodSettings.length)
                        for (var i = 0; i < message.methodSettings.length; ++i)
                            $root.google.api.MethodSettings.encode(message.methodSettings[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.newIssueUri != null && Object.hasOwnProperty.call(message, "newIssueUri"))
                        writer.uint32(/* id 101, wireType 2 =*/810).string(message.newIssueUri);
                    if (message.documentationUri != null && Object.hasOwnProperty.call(message, "documentationUri"))
                        writer.uint32(/* id 102, wireType 2 =*/818).string(message.documentationUri);
                    if (message.apiShortName != null && Object.hasOwnProperty.call(message, "apiShortName"))
                        writer.uint32(/* id 103, wireType 2 =*/826).string(message.apiShortName);
                    if (message.githubLabel != null && Object.hasOwnProperty.call(message, "githubLabel"))
                        writer.uint32(/* id 104, wireType 2 =*/834).string(message.githubLabel);
                    if (message.codeownerGithubTeams != null && message.codeownerGithubTeams.length)
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            writer.uint32(/* id 105, wireType 2 =*/842).string(message.codeownerGithubTeams[i]);
                    if (message.docTagPrefix != null && Object.hasOwnProperty.call(message, "docTagPrefix"))
                        writer.uint32(/* id 106, wireType 2 =*/850).string(message.docTagPrefix);
                    if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                        writer.uint32(/* id 107, wireType 0 =*/856).int32(message.organization);
                    if (message.librarySettings != null && message.librarySettings.length)
                        for (var i = 0; i < message.librarySettings.length; ++i)
                            $root.google.api.ClientLibrarySettings.encode(message.librarySettings[i], writer.uint32(/* id 109, wireType 2 =*/874).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Publishing message, length delimited. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Publishing();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.methodSettings && message.methodSettings.length))
                                    message.methodSettings = [];
                                message.methodSettings.push($root.google.api.MethodSettings.decode(reader, reader.uint32()));
                                break;
                            }
                        case 101: {
                                message.newIssueUri = reader.string();
                                break;
                            }
                        case 102: {
                                message.documentationUri = reader.string();
                                break;
                            }
                        case 103: {
                                message.apiShortName = reader.string();
                                break;
                            }
                        case 104: {
                                message.githubLabel = reader.string();
                                break;
                            }
                        case 105: {
                                if (!(message.codeownerGithubTeams && message.codeownerGithubTeams.length))
                                    message.codeownerGithubTeams = [];
                                message.codeownerGithubTeams.push(reader.string());
                                break;
                            }
                        case 106: {
                                message.docTagPrefix = reader.string();
                                break;
                            }
                        case 107: {
                                message.organization = reader.int32();
                                break;
                            }
                        case 109: {
                                if (!(message.librarySettings && message.librarySettings.length))
                                    message.librarySettings = [];
                                message.librarySettings.push($root.google.api.ClientLibrarySettings.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Publishing message.
                 * @function verify
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Publishing.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.methodSettings != null && message.hasOwnProperty("methodSettings")) {
                        if (!Array.isArray(message.methodSettings))
                            return "methodSettings: array expected";
                        for (var i = 0; i < message.methodSettings.length; ++i) {
                            var error = $root.google.api.MethodSettings.verify(message.methodSettings[i]);
                            if (error)
                                return "methodSettings." + error;
                        }
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        if (!$util.isString(message.newIssueUri))
                            return "newIssueUri: string expected";
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        if (!$util.isString(message.documentationUri))
                            return "documentationUri: string expected";
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        if (!$util.isString(message.apiShortName))
                            return "apiShortName: string expected";
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        if (!$util.isString(message.githubLabel))
                            return "githubLabel: string expected";
                    if (message.codeownerGithubTeams != null && message.hasOwnProperty("codeownerGithubTeams")) {
                        if (!Array.isArray(message.codeownerGithubTeams))
                            return "codeownerGithubTeams: array expected";
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            if (!$util.isString(message.codeownerGithubTeams[i]))
                                return "codeownerGithubTeams: string[] expected";
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        if (!$util.isString(message.docTagPrefix))
                            return "docTagPrefix: string expected";
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        switch (message.organization) {
                        default:
                            return "organization: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                            break;
                        }
                    if (message.librarySettings != null && message.hasOwnProperty("librarySettings")) {
                        if (!Array.isArray(message.librarySettings))
                            return "librarySettings: array expected";
                        for (var i = 0; i < message.librarySettings.length; ++i) {
                            var error = $root.google.api.ClientLibrarySettings.verify(message.librarySettings[i]);
                            if (error)
                                return "librarySettings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Publishing message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Publishing} Publishing
                 */
                Publishing.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Publishing)
                        return object;
                    var message = new $root.google.api.Publishing();
                    if (object.methodSettings) {
                        if (!Array.isArray(object.methodSettings))
                            throw TypeError(".google.api.Publishing.methodSettings: array expected");
                        message.methodSettings = [];
                        for (var i = 0; i < object.methodSettings.length; ++i) {
                            if (typeof object.methodSettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.methodSettings: object expected");
                            message.methodSettings[i] = $root.google.api.MethodSettings.fromObject(object.methodSettings[i]);
                        }
                    }
                    if (object.newIssueUri != null)
                        message.newIssueUri = String(object.newIssueUri);
                    if (object.documentationUri != null)
                        message.documentationUri = String(object.documentationUri);
                    if (object.apiShortName != null)
                        message.apiShortName = String(object.apiShortName);
                    if (object.githubLabel != null)
                        message.githubLabel = String(object.githubLabel);
                    if (object.codeownerGithubTeams) {
                        if (!Array.isArray(object.codeownerGithubTeams))
                            throw TypeError(".google.api.Publishing.codeownerGithubTeams: array expected");
                        message.codeownerGithubTeams = [];
                        for (var i = 0; i < object.codeownerGithubTeams.length; ++i)
                            message.codeownerGithubTeams[i] = String(object.codeownerGithubTeams[i]);
                    }
                    if (object.docTagPrefix != null)
                        message.docTagPrefix = String(object.docTagPrefix);
                    switch (object.organization) {
                    default:
                        if (typeof object.organization === "number") {
                            message.organization = object.organization;
                            break;
                        }
                        break;
                    case "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED":
                    case 0:
                        message.organization = 0;
                        break;
                    case "CLOUD":
                    case 1:
                        message.organization = 1;
                        break;
                    case "ADS":
                    case 2:
                        message.organization = 2;
                        break;
                    case "PHOTOS":
                    case 3:
                        message.organization = 3;
                        break;
                    case "STREET_VIEW":
                    case 4:
                        message.organization = 4;
                        break;
                    }
                    if (object.librarySettings) {
                        if (!Array.isArray(object.librarySettings))
                            throw TypeError(".google.api.Publishing.librarySettings: array expected");
                        message.librarySettings = [];
                        for (var i = 0; i < object.librarySettings.length; ++i) {
                            if (typeof object.librarySettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.librarySettings: object expected");
                            message.librarySettings[i] = $root.google.api.ClientLibrarySettings.fromObject(object.librarySettings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Publishing message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.Publishing} message Publishing
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Publishing.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.methodSettings = [];
                        object.codeownerGithubTeams = [];
                        object.librarySettings = [];
                    }
                    if (options.defaults) {
                        object.newIssueUri = "";
                        object.documentationUri = "";
                        object.apiShortName = "";
                        object.githubLabel = "";
                        object.docTagPrefix = "";
                        object.organization = options.enums === String ? "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED" : 0;
                    }
                    if (message.methodSettings && message.methodSettings.length) {
                        object.methodSettings = [];
                        for (var j = 0; j < message.methodSettings.length; ++j)
                            object.methodSettings[j] = $root.google.api.MethodSettings.toObject(message.methodSettings[j], options);
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        object.newIssueUri = message.newIssueUri;
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        object.documentationUri = message.documentationUri;
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        object.apiShortName = message.apiShortName;
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        object.githubLabel = message.githubLabel;
                    if (message.codeownerGithubTeams && message.codeownerGithubTeams.length) {
                        object.codeownerGithubTeams = [];
                        for (var j = 0; j < message.codeownerGithubTeams.length; ++j)
                            object.codeownerGithubTeams[j] = message.codeownerGithubTeams[j];
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        object.docTagPrefix = message.docTagPrefix;
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = options.enums === String ? $root.google.api.ClientLibraryOrganization[message.organization] === undefined ? message.organization : $root.google.api.ClientLibraryOrganization[message.organization] : message.organization;
                    if (message.librarySettings && message.librarySettings.length) {
                        object.librarySettings = [];
                        for (var j = 0; j < message.librarySettings.length; ++j)
                            object.librarySettings[j] = $root.google.api.ClientLibrarySettings.toObject(message.librarySettings[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Publishing to JSON.
                 * @function toJSON
                 * @memberof google.api.Publishing
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Publishing.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Publishing
                 * @function getTypeUrl
                 * @memberof google.api.Publishing
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Publishing.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Publishing";
                };
    
                return Publishing;
            })();
    
            api.JavaSettings = (function() {
    
                /**
                 * Properties of a JavaSettings.
                 * @memberof google.api
                 * @interface IJavaSettings
                 * @property {string|null} [libraryPackage] JavaSettings libraryPackage
                 * @property {Object.<string,string>|null} [serviceClassNames] JavaSettings serviceClassNames
                 * @property {google.api.ICommonLanguageSettings|null} [common] JavaSettings common
                 */
    
                /**
                 * Constructs a new JavaSettings.
                 * @memberof google.api
                 * @classdesc Represents a JavaSettings.
                 * @implements IJavaSettings
                 * @constructor
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 */
                function JavaSettings(properties) {
                    this.serviceClassNames = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * JavaSettings libraryPackage.
                 * @member {string} libraryPackage
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.libraryPackage = "";
    
                /**
                 * JavaSettings serviceClassNames.
                 * @member {Object.<string,string>} serviceClassNames
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.serviceClassNames = $util.emptyObject;
    
                /**
                 * JavaSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.common = null;
    
                /**
                 * Creates a new JavaSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 * @returns {google.api.JavaSettings} JavaSettings instance
                 */
                JavaSettings.create = function create(properties) {
                    return new JavaSettings(properties);
                };
    
                /**
                 * Encodes the specified JavaSettings message. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.libraryPackage != null && Object.hasOwnProperty.call(message, "libraryPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.libraryPackage);
                    if (message.serviceClassNames != null && Object.hasOwnProperty.call(message, "serviceClassNames"))
                        for (var keys = Object.keys(message.serviceClassNames), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.serviceClassNames[keys[i]]).ldelim();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified JavaSettings message, length delimited. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.JavaSettings(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.libraryPackage = reader.string();
                                break;
                            }
                        case 2: {
                                if (message.serviceClassNames === $util.emptyObject)
                                    message.serviceClassNames = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.serviceClassNames[key] = value;
                                break;
                            }
                        case 3: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a JavaSettings message.
                 * @function verify
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                JavaSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        if (!$util.isString(message.libraryPackage))
                            return "libraryPackage: string expected";
                    if (message.serviceClassNames != null && message.hasOwnProperty("serviceClassNames")) {
                        if (!$util.isObject(message.serviceClassNames))
                            return "serviceClassNames: object expected";
                        var key = Object.keys(message.serviceClassNames);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.serviceClassNames[key[i]]))
                                return "serviceClassNames: string{k:string} expected";
                    }
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a JavaSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.JavaSettings} JavaSettings
                 */
                JavaSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.JavaSettings)
                        return object;
                    var message = new $root.google.api.JavaSettings();
                    if (object.libraryPackage != null)
                        message.libraryPackage = String(object.libraryPackage);
                    if (object.serviceClassNames) {
                        if (typeof object.serviceClassNames !== "object")
                            throw TypeError(".google.api.JavaSettings.serviceClassNames: object expected");
                        message.serviceClassNames = {};
                        for (var keys = Object.keys(object.serviceClassNames), i = 0; i < keys.length; ++i)
                            message.serviceClassNames[keys[i]] = String(object.serviceClassNames[keys[i]]);
                    }
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.JavaSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a JavaSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.JavaSettings} message JavaSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                JavaSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.serviceClassNames = {};
                    if (options.defaults) {
                        object.libraryPackage = "";
                        object.common = null;
                    }
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        object.libraryPackage = message.libraryPackage;
                    var keys2;
                    if (message.serviceClassNames && (keys2 = Object.keys(message.serviceClassNames)).length) {
                        object.serviceClassNames = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.serviceClassNames[keys2[j]] = message.serviceClassNames[keys2[j]];
                    }
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this JavaSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.JavaSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                JavaSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for JavaSettings
                 * @function getTypeUrl
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                JavaSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.JavaSettings";
                };
    
                return JavaSettings;
            })();
    
            api.CppSettings = (function() {
    
                /**
                 * Properties of a CppSettings.
                 * @memberof google.api
                 * @interface ICppSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] CppSettings common
                 */
    
                /**
                 * Constructs a new CppSettings.
                 * @memberof google.api
                 * @classdesc Represents a CppSettings.
                 * @implements ICppSettings
                 * @constructor
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 */
                function CppSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CppSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.CppSettings
                 * @instance
                 */
                CppSettings.prototype.common = null;
    
                /**
                 * Creates a new CppSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 * @returns {google.api.CppSettings} CppSettings instance
                 */
                CppSettings.create = function create(properties) {
                    return new CppSettings(properties);
                };
    
                /**
                 * Encodes the specified CppSettings message. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified CppSettings message, length delimited. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CppSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CppSettings message.
                 * @function verify
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CppSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a CppSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CppSettings} CppSettings
                 */
                CppSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CppSettings)
                        return object;
                    var message = new $root.google.api.CppSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.CppSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CppSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.CppSettings} message CppSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CppSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this CppSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CppSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CppSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CppSettings
                 * @function getTypeUrl
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CppSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CppSettings";
                };
    
                return CppSettings;
            })();
    
            api.PhpSettings = (function() {
    
                /**
                 * Properties of a PhpSettings.
                 * @memberof google.api
                 * @interface IPhpSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PhpSettings common
                 */
    
                /**
                 * Constructs a new PhpSettings.
                 * @memberof google.api
                 * @classdesc Represents a PhpSettings.
                 * @implements IPhpSettings
                 * @constructor
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 */
                function PhpSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PhpSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PhpSettings
                 * @instance
                 */
                PhpSettings.prototype.common = null;
    
                /**
                 * Creates a new PhpSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 * @returns {google.api.PhpSettings} PhpSettings instance
                 */
                PhpSettings.create = function create(properties) {
                    return new PhpSettings(properties);
                };
    
                /**
                 * Encodes the specified PhpSettings message. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PhpSettings message, length delimited. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PhpSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PhpSettings message.
                 * @function verify
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PhpSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PhpSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PhpSettings} PhpSettings
                 */
                PhpSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PhpSettings)
                        return object;
                    var message = new $root.google.api.PhpSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PhpSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PhpSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.PhpSettings} message PhpSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PhpSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PhpSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PhpSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PhpSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PhpSettings
                 * @function getTypeUrl
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PhpSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PhpSettings";
                };
    
                return PhpSettings;
            })();
    
            api.PythonSettings = (function() {
    
                /**
                 * Properties of a PythonSettings.
                 * @memberof google.api
                 * @interface IPythonSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PythonSettings common
                 */
    
                /**
                 * Constructs a new PythonSettings.
                 * @memberof google.api
                 * @classdesc Represents a PythonSettings.
                 * @implements IPythonSettings
                 * @constructor
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 */
                function PythonSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PythonSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PythonSettings
                 * @instance
                 */
                PythonSettings.prototype.common = null;
    
                /**
                 * Creates a new PythonSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 * @returns {google.api.PythonSettings} PythonSettings instance
                 */
                PythonSettings.create = function create(properties) {
                    return new PythonSettings(properties);
                };
    
                /**
                 * Encodes the specified PythonSettings message. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PythonSettings message, length delimited. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PythonSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PythonSettings message.
                 * @function verify
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PythonSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PythonSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PythonSettings} PythonSettings
                 */
                PythonSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PythonSettings)
                        return object;
                    var message = new $root.google.api.PythonSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PythonSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PythonSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.PythonSettings} message PythonSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PythonSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PythonSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PythonSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PythonSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PythonSettings
                 * @function getTypeUrl
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PythonSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PythonSettings";
                };
    
                return PythonSettings;
            })();
    
            api.NodeSettings = (function() {
    
                /**
                 * Properties of a NodeSettings.
                 * @memberof google.api
                 * @interface INodeSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] NodeSettings common
                 */
    
                /**
                 * Constructs a new NodeSettings.
                 * @memberof google.api
                 * @classdesc Represents a NodeSettings.
                 * @implements INodeSettings
                 * @constructor
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 */
                function NodeSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * NodeSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.NodeSettings
                 * @instance
                 */
                NodeSettings.prototype.common = null;
    
                /**
                 * Creates a new NodeSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 * @returns {google.api.NodeSettings} NodeSettings instance
                 */
                NodeSettings.create = function create(properties) {
                    return new NodeSettings(properties);
                };
    
                /**
                 * Encodes the specified NodeSettings message. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified NodeSettings message, length delimited. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.NodeSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a NodeSettings message.
                 * @function verify
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                NodeSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a NodeSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.NodeSettings} NodeSettings
                 */
                NodeSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.NodeSettings)
                        return object;
                    var message = new $root.google.api.NodeSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.NodeSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a NodeSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.NodeSettings} message NodeSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                NodeSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this NodeSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.NodeSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                NodeSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for NodeSettings
                 * @function getTypeUrl
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                NodeSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.NodeSettings";
                };
    
                return NodeSettings;
            })();
    
            api.DotnetSettings = (function() {
    
                /**
                 * Properties of a DotnetSettings.
                 * @memberof google.api
                 * @interface IDotnetSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] DotnetSettings common
                 */
    
                /**
                 * Constructs a new DotnetSettings.
                 * @memberof google.api
                 * @classdesc Represents a DotnetSettings.
                 * @implements IDotnetSettings
                 * @constructor
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 */
                function DotnetSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DotnetSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.common = null;
    
                /**
                 * Creates a new DotnetSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 * @returns {google.api.DotnetSettings} DotnetSettings instance
                 */
                DotnetSettings.create = function create(properties) {
                    return new DotnetSettings(properties);
                };
    
                /**
                 * Encodes the specified DotnetSettings message. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified DotnetSettings message, length delimited. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.DotnetSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DotnetSettings message.
                 * @function verify
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DotnetSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a DotnetSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 */
                DotnetSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.DotnetSettings)
                        return object;
                    var message = new $root.google.api.DotnetSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.DotnetSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DotnetSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.DotnetSettings} message DotnetSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DotnetSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this DotnetSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.DotnetSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DotnetSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DotnetSettings
                 * @function getTypeUrl
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DotnetSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.DotnetSettings";
                };
    
                return DotnetSettings;
            })();
    
            api.RubySettings = (function() {
    
                /**
                 * Properties of a RubySettings.
                 * @memberof google.api
                 * @interface IRubySettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] RubySettings common
                 */
    
                /**
                 * Constructs a new RubySettings.
                 * @memberof google.api
                 * @classdesc Represents a RubySettings.
                 * @implements IRubySettings
                 * @constructor
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 */
                function RubySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RubySettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.RubySettings
                 * @instance
                 */
                RubySettings.prototype.common = null;
    
                /**
                 * Creates a new RubySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 * @returns {google.api.RubySettings} RubySettings instance
                 */
                RubySettings.create = function create(properties) {
                    return new RubySettings(properties);
                };
    
                /**
                 * Encodes the specified RubySettings message. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified RubySettings message, length delimited. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.RubySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RubySettings message.
                 * @function verify
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RubySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a RubySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.RubySettings} RubySettings
                 */
                RubySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.RubySettings)
                        return object;
                    var message = new $root.google.api.RubySettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.RubySettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a RubySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.RubySettings} message RubySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RubySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this RubySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.RubySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RubySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RubySettings
                 * @function getTypeUrl
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RubySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.RubySettings";
                };
    
                return RubySettings;
            })();
    
            api.GoSettings = (function() {
    
                /**
                 * Properties of a GoSettings.
                 * @memberof google.api
                 * @interface IGoSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] GoSettings common
                 */
    
                /**
                 * Constructs a new GoSettings.
                 * @memberof google.api
                 * @classdesc Represents a GoSettings.
                 * @implements IGoSettings
                 * @constructor
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 */
                function GoSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GoSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.GoSettings
                 * @instance
                 */
                GoSettings.prototype.common = null;
    
                /**
                 * Creates a new GoSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 * @returns {google.api.GoSettings} GoSettings instance
                 */
                GoSettings.create = function create(properties) {
                    return new GoSettings(properties);
                };
    
                /**
                 * Encodes the specified GoSettings message. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GoSettings message, length delimited. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.GoSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GoSettings message.
                 * @function verify
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GoSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a GoSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.GoSettings} GoSettings
                 */
                GoSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.GoSettings)
                        return object;
                    var message = new $root.google.api.GoSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.GoSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GoSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.GoSettings} message GoSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GoSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this GoSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.GoSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GoSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GoSettings
                 * @function getTypeUrl
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GoSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.GoSettings";
                };
    
                return GoSettings;
            })();
    
            api.MethodSettings = (function() {
    
                /**
                 * Properties of a MethodSettings.
                 * @memberof google.api
                 * @interface IMethodSettings
                 * @property {string|null} [selector] MethodSettings selector
                 * @property {google.api.MethodSettings.ILongRunning|null} [longRunning] MethodSettings longRunning
                 */
    
                /**
                 * Constructs a new MethodSettings.
                 * @memberof google.api
                 * @classdesc Represents a MethodSettings.
                 * @implements IMethodSettings
                 * @constructor
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 */
                function MethodSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodSettings selector.
                 * @member {string} selector
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.selector = "";
    
                /**
                 * MethodSettings longRunning.
                 * @member {google.api.MethodSettings.ILongRunning|null|undefined} longRunning
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.longRunning = null;
    
                /**
                 * Creates a new MethodSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 * @returns {google.api.MethodSettings} MethodSettings instance
                 */
                MethodSettings.create = function create(properties) {
                    return new MethodSettings(properties);
                };
    
                /**
                 * Encodes the specified MethodSettings message. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.longRunning != null && Object.hasOwnProperty.call(message, "longRunning"))
                        $root.google.api.MethodSettings.LongRunning.encode(message.longRunning, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodSettings message, length delimited. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.longRunning = $root.google.api.MethodSettings.LongRunning.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodSettings message.
                 * @function verify
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.longRunning != null && message.hasOwnProperty("longRunning")) {
                        var error = $root.google.api.MethodSettings.LongRunning.verify(message.longRunning);
                        if (error)
                            return "longRunning." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.MethodSettings} MethodSettings
                 */
                MethodSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.MethodSettings)
                        return object;
                    var message = new $root.google.api.MethodSettings();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.longRunning != null) {
                        if (typeof object.longRunning !== "object")
                            throw TypeError(".google.api.MethodSettings.longRunning: object expected");
                        message.longRunning = $root.google.api.MethodSettings.LongRunning.fromObject(object.longRunning);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.MethodSettings} message MethodSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.selector = "";
                        object.longRunning = null;
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.longRunning != null && message.hasOwnProperty("longRunning"))
                        object.longRunning = $root.google.api.MethodSettings.LongRunning.toObject(message.longRunning, options);
                    return object;
                };
    
                /**
                 * Converts this MethodSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.MethodSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodSettings
                 * @function getTypeUrl
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.MethodSettings";
                };
    
                MethodSettings.LongRunning = (function() {
    
                    /**
                     * Properties of a LongRunning.
                     * @memberof google.api.MethodSettings
                     * @interface ILongRunning
                     * @property {google.protobuf.IDuration|null} [initialPollDelay] LongRunning initialPollDelay
                     * @property {number|null} [pollDelayMultiplier] LongRunning pollDelayMultiplier
                     * @property {google.protobuf.IDuration|null} [maxPollDelay] LongRunning maxPollDelay
                     * @property {google.protobuf.IDuration|null} [totalPollTimeout] LongRunning totalPollTimeout
                     */
    
                    /**
                     * Constructs a new LongRunning.
                     * @memberof google.api.MethodSettings
                     * @classdesc Represents a LongRunning.
                     * @implements ILongRunning
                     * @constructor
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     */
                    function LongRunning(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LongRunning initialPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} initialPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.initialPollDelay = null;
    
                    /**
                     * LongRunning pollDelayMultiplier.
                     * @member {number} pollDelayMultiplier
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.pollDelayMultiplier = 0;
    
                    /**
                     * LongRunning maxPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} maxPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.maxPollDelay = null;
    
                    /**
                     * LongRunning totalPollTimeout.
                     * @member {google.protobuf.IDuration|null|undefined} totalPollTimeout
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.totalPollTimeout = null;
    
                    /**
                     * Creates a new LongRunning instance using the specified properties.
                     * @function create
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning instance
                     */
                    LongRunning.create = function create(properties) {
                        return new LongRunning(properties);
                    };
    
                    /**
                     * Encodes the specified LongRunning message. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.initialPollDelay != null && Object.hasOwnProperty.call(message, "initialPollDelay"))
                            $root.google.protobuf.Duration.encode(message.initialPollDelay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pollDelayMultiplier != null && Object.hasOwnProperty.call(message, "pollDelayMultiplier"))
                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.pollDelayMultiplier);
                        if (message.maxPollDelay != null && Object.hasOwnProperty.call(message, "maxPollDelay"))
                            $root.google.protobuf.Duration.encode(message.maxPollDelay, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.totalPollTimeout != null && Object.hasOwnProperty.call(message, "totalPollTimeout"))
                            $root.google.protobuf.Duration.encode(message.totalPollTimeout, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LongRunning message, length delimited. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings.LongRunning();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.initialPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.pollDelayMultiplier = reader.float();
                                    break;
                                }
                            case 3: {
                                    message.maxPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.totalPollTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LongRunning message.
                     * @function verify
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LongRunning.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.initialPollDelay);
                            if (error)
                                return "initialPollDelay." + error;
                        }
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            if (typeof message.pollDelayMultiplier !== "number")
                                return "pollDelayMultiplier: number expected";
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.maxPollDelay);
                            if (error)
                                return "maxPollDelay." + error;
                        }
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout")) {
                            var error = $root.google.protobuf.Duration.verify(message.totalPollTimeout);
                            if (error)
                                return "totalPollTimeout." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a LongRunning message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     */
                    LongRunning.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.api.MethodSettings.LongRunning)
                            return object;
                        var message = new $root.google.api.MethodSettings.LongRunning();
                        if (object.initialPollDelay != null) {
                            if (typeof object.initialPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.initialPollDelay: object expected");
                            message.initialPollDelay = $root.google.protobuf.Duration.fromObject(object.initialPollDelay);
                        }
                        if (object.pollDelayMultiplier != null)
                            message.pollDelayMultiplier = Number(object.pollDelayMultiplier);
                        if (object.maxPollDelay != null) {
                            if (typeof object.maxPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.maxPollDelay: object expected");
                            message.maxPollDelay = $root.google.protobuf.Duration.fromObject(object.maxPollDelay);
                        }
                        if (object.totalPollTimeout != null) {
                            if (typeof object.totalPollTimeout !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.totalPollTimeout: object expected");
                            message.totalPollTimeout = $root.google.protobuf.Duration.fromObject(object.totalPollTimeout);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LongRunning message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.LongRunning} message LongRunning
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LongRunning.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.initialPollDelay = null;
                            object.pollDelayMultiplier = 0;
                            object.maxPollDelay = null;
                            object.totalPollTimeout = null;
                        }
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay"))
                            object.initialPollDelay = $root.google.protobuf.Duration.toObject(message.initialPollDelay, options);
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            object.pollDelayMultiplier = options.json && !isFinite(message.pollDelayMultiplier) ? String(message.pollDelayMultiplier) : message.pollDelayMultiplier;
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay"))
                            object.maxPollDelay = $root.google.protobuf.Duration.toObject(message.maxPollDelay, options);
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout"))
                            object.totalPollTimeout = $root.google.protobuf.Duration.toObject(message.totalPollTimeout, options);
                        return object;
                    };
    
                    /**
                     * Converts this LongRunning to JSON.
                     * @function toJSON
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LongRunning.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LongRunning
                     * @function getTypeUrl
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LongRunning.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.api.MethodSettings.LongRunning";
                    };
    
                    return LongRunning;
                })();
    
                return MethodSettings;
            })();
    
            /**
             * ClientLibraryOrganization enum.
             * @name google.api.ClientLibraryOrganization
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED=0 CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED value
             * @property {number} CLOUD=1 CLOUD value
             * @property {number} ADS=2 ADS value
             * @property {number} PHOTOS=3 PHOTOS value
             * @property {number} STREET_VIEW=4 STREET_VIEW value
             */
            api.ClientLibraryOrganization = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED"] = 0;
                values[valuesById[1] = "CLOUD"] = 1;
                values[valuesById[2] = "ADS"] = 2;
                values[valuesById[3] = "PHOTOS"] = 3;
                values[valuesById[4] = "STREET_VIEW"] = 4;
                return values;
            })();
    
            /**
             * ClientLibraryDestination enum.
             * @name google.api.ClientLibraryDestination
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_DESTINATION_UNSPECIFIED=0 CLIENT_LIBRARY_DESTINATION_UNSPECIFIED value
             * @property {number} GITHUB=10 GITHUB value
             * @property {number} PACKAGE_MANAGER=20 PACKAGE_MANAGER value
             */
            api.ClientLibraryDestination = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED"] = 0;
                values[valuesById[10] = "GITHUB"] = 10;
                values[valuesById[20] = "PACKAGE_MANAGER"] = 20;
                return values;
            })();
    
            /**
             * LaunchStage enum.
             * @name google.api.LaunchStage
             * @enum {number}
             * @property {number} LAUNCH_STAGE_UNSPECIFIED=0 LAUNCH_STAGE_UNSPECIFIED value
             * @property {number} UNIMPLEMENTED=6 UNIMPLEMENTED value
             * @property {number} PRELAUNCH=7 PRELAUNCH value
             * @property {number} EARLY_ACCESS=1 EARLY_ACCESS value
             * @property {number} ALPHA=2 ALPHA value
             * @property {number} BETA=3 BETA value
             * @property {number} GA=4 GA value
             * @property {number} DEPRECATED=5 DEPRECATED value
             */
            api.LaunchStage = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "LAUNCH_STAGE_UNSPECIFIED"] = 0;
                values[valuesById[6] = "UNIMPLEMENTED"] = 6;
                values[valuesById[7] = "PRELAUNCH"] = 7;
                values[valuesById[1] = "EARLY_ACCESS"] = 1;
                values[valuesById[2] = "ALPHA"] = 2;
                values[valuesById[3] = "BETA"] = 3;
                values[valuesById[4] = "GA"] = 4;
                values[valuesById[5] = "DEPRECATED"] = 5;
                return values;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] MessageOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 11, wireType 0 =*/88).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 11: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {boolean|null} [debugRedact] FieldOptions debugRedact
                 * @property {google.protobuf.FieldOptions.OptionRetention|null} [retention] FieldOptions retention
                 * @property {google.protobuf.FieldOptions.OptionTargetType|null} [target] FieldOptions target
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions debugRedact.
                 * @member {boolean} debugRedact
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.debugRedact = false;
    
                /**
                 * FieldOptions retention.
                 * @member {google.protobuf.FieldOptions.OptionRetention} retention
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.retention = 0;
    
                /**
                 * FieldOptions target.
                 * @member {google.protobuf.FieldOptions.OptionTargetType} target
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.target = 0;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.debugRedact != null && Object.hasOwnProperty.call(message, "debugRedact"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.debugRedact);
                    if (message.retention != null && Object.hasOwnProperty.call(message, "retention"))
                        writer.uint32(/* id 17, wireType 0 =*/136).int32(message.retention);
                    if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                        writer.uint32(/* id 18, wireType 0 =*/144).int32(message.target);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 16: {
                                message.debugRedact = reader.bool();
                                break;
                            }
                        case 17: {
                                message.retention = reader.int32();
                                break;
                            }
                        case 18: {
                                message.target = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        if (typeof message.debugRedact !== "boolean")
                            return "debugRedact: boolean expected";
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        switch (message.retention) {
                        default:
                            return "retention: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.target != null && message.hasOwnProperty("target"))
                        switch (message.target) {
                        default:
                            return "target: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.debugRedact != null)
                        message.debugRedact = Boolean(object.debugRedact);
                    switch (object.retention) {
                    default:
                        if (typeof object.retention === "number") {
                            message.retention = object.retention;
                            break;
                        }
                        break;
                    case "RETENTION_UNKNOWN":
                    case 0:
                        message.retention = 0;
                        break;
                    case "RETENTION_RUNTIME":
                    case 1:
                        message.retention = 1;
                        break;
                    case "RETENTION_SOURCE":
                    case 2:
                        message.retention = 2;
                        break;
                    }
                    switch (object.target) {
                    default:
                        if (typeof object.target === "number") {
                            message.target = object.target;
                            break;
                        }
                        break;
                    case "TARGET_TYPE_UNKNOWN":
                    case 0:
                        message.target = 0;
                        break;
                    case "TARGET_TYPE_FILE":
                    case 1:
                        message.target = 1;
                        break;
                    case "TARGET_TYPE_EXTENSION_RANGE":
                    case 2:
                        message.target = 2;
                        break;
                    case "TARGET_TYPE_MESSAGE":
                    case 3:
                        message.target = 3;
                        break;
                    case "TARGET_TYPE_FIELD":
                    case 4:
                        message.target = 4;
                        break;
                    case "TARGET_TYPE_ONEOF":
                    case 5:
                        message.target = 5;
                        break;
                    case "TARGET_TYPE_ENUM":
                    case 6:
                        message.target = 6;
                        break;
                    case "TARGET_TYPE_ENUM_ENTRY":
                    case 7:
                        message.target = 7;
                        break;
                    case "TARGET_TYPE_SERVICE":
                    case 8:
                        message.target = 8;
                        break;
                    case "TARGET_TYPE_METHOD":
                    case 9:
                        message.target = 9;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object.debugRedact = false;
                        object.retention = options.enums === String ? "RETENTION_UNKNOWN" : 0;
                        object.target = options.enums === String ? "TARGET_TYPE_UNKNOWN" : 0;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        object.debugRedact = message.debugRedact;
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        object.retention = options.enums === String ? $root.google.protobuf.FieldOptions.OptionRetention[message.retention] === undefined ? message.retention : $root.google.protobuf.FieldOptions.OptionRetention[message.retention] : message.retention;
                    if (message.target != null && message.hasOwnProperty("target"))
                        object.target = options.enums === String ? $root.google.protobuf.FieldOptions.OptionTargetType[message.target] === undefined ? message.target : $root.google.protobuf.FieldOptions.OptionTargetType[message.target] : message.target;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                /**
                 * OptionRetention enum.
                 * @name google.protobuf.FieldOptions.OptionRetention
                 * @enum {number}
                 * @property {number} RETENTION_UNKNOWN=0 RETENTION_UNKNOWN value
                 * @property {number} RETENTION_RUNTIME=1 RETENTION_RUNTIME value
                 * @property {number} RETENTION_SOURCE=2 RETENTION_SOURCE value
                 */
                FieldOptions.OptionRetention = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "RETENTION_UNKNOWN"] = 0;
                    values[valuesById[1] = "RETENTION_RUNTIME"] = 1;
                    values[valuesById[2] = "RETENTION_SOURCE"] = 2;
                    return values;
                })();
    
                /**
                 * OptionTargetType enum.
                 * @name google.protobuf.FieldOptions.OptionTargetType
                 * @enum {number}
                 * @property {number} TARGET_TYPE_UNKNOWN=0 TARGET_TYPE_UNKNOWN value
                 * @property {number} TARGET_TYPE_FILE=1 TARGET_TYPE_FILE value
                 * @property {number} TARGET_TYPE_EXTENSION_RANGE=2 TARGET_TYPE_EXTENSION_RANGE value
                 * @property {number} TARGET_TYPE_MESSAGE=3 TARGET_TYPE_MESSAGE value
                 * @property {number} TARGET_TYPE_FIELD=4 TARGET_TYPE_FIELD value
                 * @property {number} TARGET_TYPE_ONEOF=5 TARGET_TYPE_ONEOF value
                 * @property {number} TARGET_TYPE_ENUM=6 TARGET_TYPE_ENUM value
                 * @property {number} TARGET_TYPE_ENUM_ENTRY=7 TARGET_TYPE_ENUM_ENTRY value
                 * @property {number} TARGET_TYPE_SERVICE=8 TARGET_TYPE_SERVICE value
                 * @property {number} TARGET_TYPE_METHOD=9 TARGET_TYPE_METHOD value
                 */
                FieldOptions.OptionTargetType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "TARGET_TYPE_UNKNOWN"] = 0;
                    values[valuesById[1] = "TARGET_TYPE_FILE"] = 1;
                    values[valuesById[2] = "TARGET_TYPE_EXTENSION_RANGE"] = 2;
                    values[valuesById[3] = "TARGET_TYPE_MESSAGE"] = 3;
                    values[valuesById[4] = "TARGET_TYPE_FIELD"] = 4;
                    values[valuesById[5] = "TARGET_TYPE_ONEOF"] = 5;
                    values[valuesById[6] = "TARGET_TYPE_ENUM"] = 6;
                    values[valuesById[7] = "TARGET_TYPE_ENUM_ENTRY"] = 7;
                    values[valuesById[8] = "TARGET_TYPE_SERVICE"] = 8;
                    values[valuesById[9] = "TARGET_TYPE_METHOD"] = 9;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] EnumOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 6: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && Object.hasOwnProperty.call(message, ".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        case 1049: {
                                message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            return protobuf;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.done = reader.bool();
                                break;
                            }
                        case 4: {
                                message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Operation
                 * @function getTypeUrl
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Operation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.Operation";
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GetOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GetOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.GetOperationRequest";
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 4: {
                                message.name = reader.string();
                                break;
                            }
                        case 1: {
                                message.filter = reader.string();
                                break;
                            }
                        case 2: {
                                message.pageSize = reader.int32();
                                break;
                            }
                        case 3: {
                                message.pageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsRequest";
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operations && message.operations.length))
                                    message.operations = [];
                                message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.nextPageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsResponse
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsResponse";
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CancelOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CancelOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.CancelOperationRequest";
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DeleteOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DeleteOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.DeleteOperationRequest";
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for WaitOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                WaitOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.WaitOperationRequest";
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && Object.hasOwnProperty.call(message, "responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && Object.hasOwnProperty.call(message, "metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.responseType = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadataType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OperationInfo
                 * @function getTypeUrl
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OperationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.OperationInfo";
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        google.type = (function() {
    
            /**
             * Namespace type.
             * @memberof google
             * @namespace
             */
            var type = {};
    
            type.Date = (function() {
    
                /**
                 * Properties of a Date.
                 * @memberof google.type
                 * @interface IDate
                 * @property {number|null} [year] Date year
                 * @property {number|null} [month] Date month
                 * @property {number|null} [day] Date day
                 */
    
                /**
                 * Constructs a new Date.
                 * @memberof google.type
                 * @classdesc Represents a Date.
                 * @implements IDate
                 * @constructor
                 * @param {google.type.IDate=} [properties] Properties to set
                 */
                function Date(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Date year.
                 * @member {number} year
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.year = 0;
    
                /**
                 * Date month.
                 * @member {number} month
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.month = 0;
    
                /**
                 * Date day.
                 * @member {number} day
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.day = 0;
    
                /**
                 * Creates a new Date instance using the specified properties.
                 * @function create
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate=} [properties] Properties to set
                 * @returns {google.type.Date} Date instance
                 */
                Date.create = function create(properties) {
                    return new Date(properties);
                };
    
                /**
                 * Encodes the specified Date message. Does not implicitly {@link google.type.Date.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate} message Date message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Date.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.year != null && Object.hasOwnProperty.call(message, "year"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.year);
                    if (message.month != null && Object.hasOwnProperty.call(message, "month"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.month);
                    if (message.day != null && Object.hasOwnProperty.call(message, "day"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.day);
                    return writer;
                };
    
                /**
                 * Encodes the specified Date message, length delimited. Does not implicitly {@link google.type.Date.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate} message Date message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Date.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Date message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Date
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Date} Date
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Date.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Date();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.year = reader.int32();
                                break;
                            }
                        case 2: {
                                message.month = reader.int32();
                                break;
                            }
                        case 3: {
                                message.day = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Date message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Date
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Date} Date
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Date.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Date message.
                 * @function verify
                 * @memberof google.type.Date
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Date.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.year != null && message.hasOwnProperty("year"))
                        if (!$util.isInteger(message.year))
                            return "year: integer expected";
                    if (message.month != null && message.hasOwnProperty("month"))
                        if (!$util.isInteger(message.month))
                            return "month: integer expected";
                    if (message.day != null && message.hasOwnProperty("day"))
                        if (!$util.isInteger(message.day))
                            return "day: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Date message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Date
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Date} Date
                 */
                Date.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Date)
                        return object;
                    var message = new $root.google.type.Date();
                    if (object.year != null)
                        message.year = object.year | 0;
                    if (object.month != null)
                        message.month = object.month | 0;
                    if (object.day != null)
                        message.day = object.day | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Date message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.Date} message Date
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Date.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.year = 0;
                        object.month = 0;
                        object.day = 0;
                    }
                    if (message.year != null && message.hasOwnProperty("year"))
                        object.year = message.year;
                    if (message.month != null && message.hasOwnProperty("month"))
                        object.month = message.month;
                    if (message.day != null && message.hasOwnProperty("day"))
                        object.day = message.day;
                    return object;
                };
    
                /**
                 * Converts this Date to JSON.
                 * @function toJSON
                 * @memberof google.type.Date
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Date.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Date
                 * @function getTypeUrl
                 * @memberof google.type.Date
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Date.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Date";
                };
    
                return Date;
            })();
    
            return type;
        })();
    
        return google;
    })();

    return $root;
});
