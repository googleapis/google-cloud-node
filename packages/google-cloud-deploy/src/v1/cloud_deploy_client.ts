// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  GrpcClientOptions,
  LROperation,
  PaginationCallback,
  GaxCall,
  IamClient,
  IamProtos,
  LocationsClient,
  LocationProtos,
} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');

/**
 * Client JSON configuration object, loaded from
 * `src/v1/cloud_deploy_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './cloud_deploy_client_config.json';
const version = require('../../../package.json').version;

/**
 *  CloudDeploy service creates and manages Continuous Delivery operations
 *  on Google Cloud Platform via Skaffold (https://skaffold.dev).
 * @class
 * @memberof v1
 */
export class CloudDeployClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  private _universeDomain: string;
  private _servicePath: string;
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  iamClient: IamClient;
  locationsClient: LocationsClient;
  pathTemplates: {[name: string]: gax.PathTemplate};
  operationsClient: gax.OperationsClient;
  cloudDeployStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of CloudDeployClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new CloudDeployClient({fallback: true}, gax);
   *     ```
   */
  constructor(
    opts?: ClientOptions,
    gaxInstance?: typeof gax | typeof gax.fallback
  ) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof CloudDeployClient;
    if (
      opts?.universe_domain &&
      opts?.universeDomain &&
      opts?.universe_domain !== opts?.universeDomain
    ) {
      throw new Error(
        'Please set either universe_domain or universeDomain, but not both.'
      );
    }
    const universeDomainEnvVar =
      typeof process === 'object' && typeof process.env === 'object'
        ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']
        : undefined;
    this._universeDomain =
      opts?.universeDomain ??
      opts?.universe_domain ??
      universeDomainEnvVar ??
      'googleapis.com';
    this._servicePath = 'clouddeploy.' + this._universeDomain;
    const servicePath =
      opts?.servicePath || opts?.apiEndpoint || this._servicePath;
    this._providedCustomServicePath = !!(
      opts?.servicePath || opts?.apiEndpoint
    );
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback =
      opts?.fallback ??
      (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // Request numeric enum values if REST transport is used.
    opts.numericEnums = true;

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== this._servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = this._servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === this._servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }
    this.iamClient = new this._gaxModule.IamClient(this._gaxGrpc, opts);

    this.locationsClient = new this._gaxModule.LocationsClient(
      this._gaxGrpc,
      opts
    );

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process === 'object' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      automationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automations/{automation}'
      ),
      automationRunPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}'
      ),
      buildPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/builds/{build}'
      ),
      clusterPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/clusters/{cluster}'
      ),
      configPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/config'
      ),
      customTargetTypePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/customTargetTypes/{custom_target_type}'
      ),
      deliveryPipelinePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}'
      ),
      jobPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/jobs/{job}'
      ),
      jobRunPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/releases/{release}/rollouts/{rollout}/jobRuns/{job_run}'
      ),
      locationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}'
      ),
      membershipPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/memberships/{membership}'
      ),
      projectPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}'
      ),
      releasePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/releases/{release}'
      ),
      rolloutPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/releases/{release}/rollouts/{rollout}'
      ),
      servicePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/services/{service}'
      ),
      targetPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/targets/{target}'
      ),
      workerPoolPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/workerPools/{worker_pool}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listDeliveryPipelines: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'deliveryPipelines'
      ),
      listTargets: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'targets'
      ),
      listCustomTargetTypes: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'customTargetTypes'
      ),
      listReleases: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'releases'
      ),
      listRollouts: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'rollouts'
      ),
      listJobRuns: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'jobRuns'
      ),
      listAutomations: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'automations'
      ),
      listAutomationRuns: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'automationRuns'
      ),
    };

    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);
    // This API contains "long-running operations", which return a
    // an Operation object that allows for tracking of the operation,
    // rather than holding a request open.
    const lroOptions: GrpcClientOptions = {
      auth: this.auth,
      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,
    };
    if (opts.fallback) {
      lroOptions.protoJson = protoFilesRoot;
      lroOptions.httpRules = [
        {
          selector: 'google.cloud.location.Locations.GetLocation',
          get: '/v1/{name=projects/*/locations/*}',
        },
        {
          selector: 'google.cloud.location.Locations.ListLocations',
          get: '/v1/{name=projects/*}/locations',
        },
        {
          selector: 'google.iam.v1.IAMPolicy.GetIamPolicy',
          get: '/v1/{resource=projects/*/locations/*/deliveryPipelines/*}:getIamPolicy',
          additional_bindings: [
            {
              get: '/v1/{resource=projects/*/locations/*/targets/*}:getIamPolicy',
            },
            {
              get: '/v1/{resource=projects/*/locations/*/customTargetTypes/*}:getIamPolicy',
            },
          ],
        },
        {
          selector: 'google.iam.v1.IAMPolicy.SetIamPolicy',
          post: '/v1/{resource=projects/*/locations/*/deliveryPipelines/*}:setIamPolicy',
          body: '*',
          additional_bindings: [
            {
              post: '/v1/{resource=projects/*/locations/*/targets/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/v1/{resource=projects/*/locations/*/customTargetTypes/*}:setIamPolicy',
              body: '*',
            },
          ],
        },
        {
          selector: 'google.iam.v1.IAMPolicy.TestIamPermissions',
          post: '/v1/{resource=projects/*/locations/*/deliveryPipelines/*}:testIamPermissions',
          body: '*',
          additional_bindings: [
            {
              post: '/v1/{resource=projects/*/locations/*/targets/*}:testIamPermissions',
              body: '*',
            },
          ],
        },
        {
          selector: 'google.longrunning.Operations.CancelOperation',
          post: '/v1/{name=projects/*/locations/*/operations/*}:cancel',
          body: '*',
        },
        {
          selector: 'google.longrunning.Operations.DeleteOperation',
          delete: '/v1/{name=projects/*/locations/*/operations/*}',
        },
        {
          selector: 'google.longrunning.Operations.GetOperation',
          get: '/v1/{name=projects/*/locations/*/operations/*}',
        },
        {
          selector: 'google.longrunning.Operations.ListOperations',
          get: '/v1/{name=projects/*/locations/*}/operations',
        },
      ];
    }
    this.operationsClient = this._gaxModule
      .lro(lroOptions)
      .operationsClient(opts);
    const createDeliveryPipelineResponse = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.DeliveryPipeline'
    ) as gax.protobuf.Type;
    const createDeliveryPipelineMetadata = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updateDeliveryPipelineResponse = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.DeliveryPipeline'
    ) as gax.protobuf.Type;
    const updateDeliveryPipelineMetadata = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const deleteDeliveryPipelineResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteDeliveryPipelineMetadata = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createTargetResponse = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.Target'
    ) as gax.protobuf.Type;
    const createTargetMetadata = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updateTargetResponse = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.Target'
    ) as gax.protobuf.Type;
    const updateTargetMetadata = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const deleteTargetResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteTargetMetadata = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createCustomTargetTypeResponse = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.CustomTargetType'
    ) as gax.protobuf.Type;
    const createCustomTargetTypeMetadata = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updateCustomTargetTypeResponse = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.CustomTargetType'
    ) as gax.protobuf.Type;
    const updateCustomTargetTypeMetadata = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const deleteCustomTargetTypeResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteCustomTargetTypeMetadata = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createReleaseResponse = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.Release'
    ) as gax.protobuf.Type;
    const createReleaseMetadata = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createRolloutResponse = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.Rollout'
    ) as gax.protobuf.Type;
    const createRolloutMetadata = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createAutomationResponse = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.Automation'
    ) as gax.protobuf.Type;
    const createAutomationMetadata = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updateAutomationResponse = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.Automation'
    ) as gax.protobuf.Type;
    const updateAutomationMetadata = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const deleteAutomationResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteAutomationMetadata = protoFilesRoot.lookup(
      '.google.cloud.deploy.v1.OperationMetadata'
    ) as gax.protobuf.Type;

    this.descriptors.longrunning = {
      createDeliveryPipeline: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createDeliveryPipelineResponse.decode.bind(
          createDeliveryPipelineResponse
        ),
        createDeliveryPipelineMetadata.decode.bind(
          createDeliveryPipelineMetadata
        )
      ),
      updateDeliveryPipeline: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateDeliveryPipelineResponse.decode.bind(
          updateDeliveryPipelineResponse
        ),
        updateDeliveryPipelineMetadata.decode.bind(
          updateDeliveryPipelineMetadata
        )
      ),
      deleteDeliveryPipeline: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteDeliveryPipelineResponse.decode.bind(
          deleteDeliveryPipelineResponse
        ),
        deleteDeliveryPipelineMetadata.decode.bind(
          deleteDeliveryPipelineMetadata
        )
      ),
      createTarget: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createTargetResponse.decode.bind(createTargetResponse),
        createTargetMetadata.decode.bind(createTargetMetadata)
      ),
      updateTarget: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateTargetResponse.decode.bind(updateTargetResponse),
        updateTargetMetadata.decode.bind(updateTargetMetadata)
      ),
      deleteTarget: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteTargetResponse.decode.bind(deleteTargetResponse),
        deleteTargetMetadata.decode.bind(deleteTargetMetadata)
      ),
      createCustomTargetType: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createCustomTargetTypeResponse.decode.bind(
          createCustomTargetTypeResponse
        ),
        createCustomTargetTypeMetadata.decode.bind(
          createCustomTargetTypeMetadata
        )
      ),
      updateCustomTargetType: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateCustomTargetTypeResponse.decode.bind(
          updateCustomTargetTypeResponse
        ),
        updateCustomTargetTypeMetadata.decode.bind(
          updateCustomTargetTypeMetadata
        )
      ),
      deleteCustomTargetType: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteCustomTargetTypeResponse.decode.bind(
          deleteCustomTargetTypeResponse
        ),
        deleteCustomTargetTypeMetadata.decode.bind(
          deleteCustomTargetTypeMetadata
        )
      ),
      createRelease: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createReleaseResponse.decode.bind(createReleaseResponse),
        createReleaseMetadata.decode.bind(createReleaseMetadata)
      ),
      createRollout: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createRolloutResponse.decode.bind(createRolloutResponse),
        createRolloutMetadata.decode.bind(createRolloutMetadata)
      ),
      createAutomation: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createAutomationResponse.decode.bind(createAutomationResponse),
        createAutomationMetadata.decode.bind(createAutomationMetadata)
      ),
      updateAutomation: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateAutomationResponse.decode.bind(updateAutomationResponse),
        updateAutomationMetadata.decode.bind(updateAutomationMetadata)
      ),
      deleteAutomation: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteAutomationResponse.decode.bind(deleteAutomationResponse),
        deleteAutomationMetadata.decode.bind(deleteAutomationMetadata)
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.deploy.v1.CloudDeploy',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.cloudDeployStub) {
      return this.cloudDeployStub;
    }

    // Put together the "service stub" for
    // google.cloud.deploy.v1.CloudDeploy.
    this.cloudDeployStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.deploy.v1.CloudDeploy'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.deploy.v1.CloudDeploy,
      this._opts,
      this._providedCustomServicePath
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const cloudDeployStubMethods = [
      'listDeliveryPipelines',
      'getDeliveryPipeline',
      'createDeliveryPipeline',
      'updateDeliveryPipeline',
      'deleteDeliveryPipeline',
      'listTargets',
      'rollbackTarget',
      'getTarget',
      'createTarget',
      'updateTarget',
      'deleteTarget',
      'listCustomTargetTypes',
      'getCustomTargetType',
      'createCustomTargetType',
      'updateCustomTargetType',
      'deleteCustomTargetType',
      'listReleases',
      'getRelease',
      'createRelease',
      'abandonRelease',
      'approveRollout',
      'advanceRollout',
      'cancelRollout',
      'listRollouts',
      'getRollout',
      'createRollout',
      'ignoreJob',
      'retryJob',
      'listJobRuns',
      'getJobRun',
      'terminateJobRun',
      'getConfig',
      'createAutomation',
      'updateAutomation',
      'deleteAutomation',
      'getAutomation',
      'listAutomations',
      'getAutomationRun',
      'listAutomationRuns',
      'cancelAutomationRun',
    ];
    for (const methodName of cloudDeployStubMethods) {
      const callPromise = this.cloudDeployStub.then(
        stub =>
          (...args: Array<{}>) => {
            if (this._terminated) {
              return Promise.reject('The client has already been closed.');
            }
            const func = stub[methodName];
            return func.apply(stub, args);
          },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const descriptor =
        this.descriptors.page[methodName] ||
        this.descriptors.longrunning[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.cloudDeployStub;
  }

  /**
   * The DNS address for this API service.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    if (
      typeof process === 'object' &&
      typeof process.emitWarning === 'function'
    ) {
      process.emitWarning(
        'Static servicePath is deprecated, please use the instance method instead.',
        'DeprecationWarning'
      );
    }
    return 'clouddeploy.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    if (
      typeof process === 'object' &&
      typeof process.emitWarning === 'function'
    ) {
      process.emitWarning(
        'Static apiEndpoint is deprecated, please use the instance method instead.',
        'DeprecationWarning'
      );
    }
    return 'clouddeploy.googleapis.com';
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  get apiEndpoint() {
    return this._servicePath;
  }

  get universeDomain() {
    return this._universeDomain;
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return ['https://www.googleapis.com/auth/cloud-platform'];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  /**
   * Gets details of a single DeliveryPipeline.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the `DeliveryPipeline`. Format must be
   *   `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.DeliveryPipeline|DeliveryPipeline}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.get_delivery_pipeline.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_GetDeliveryPipeline_async
   */
  getDeliveryPipeline(
    request?: protos.google.cloud.deploy.v1.IGetDeliveryPipelineRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IDeliveryPipeline,
      protos.google.cloud.deploy.v1.IGetDeliveryPipelineRequest | undefined,
      {} | undefined,
    ]
  >;
  getDeliveryPipeline(
    request: protos.google.cloud.deploy.v1.IGetDeliveryPipelineRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.IDeliveryPipeline,
      | protos.google.cloud.deploy.v1.IGetDeliveryPipelineRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getDeliveryPipeline(
    request: protos.google.cloud.deploy.v1.IGetDeliveryPipelineRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.IDeliveryPipeline,
      | protos.google.cloud.deploy.v1.IGetDeliveryPipelineRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getDeliveryPipeline(
    request?: protos.google.cloud.deploy.v1.IGetDeliveryPipelineRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.IDeliveryPipeline,
          | protos.google.cloud.deploy.v1.IGetDeliveryPipelineRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.IDeliveryPipeline,
      | protos.google.cloud.deploy.v1.IGetDeliveryPipelineRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IDeliveryPipeline,
      protos.google.cloud.deploy.v1.IGetDeliveryPipelineRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getDeliveryPipeline(request, options, callback);
  }
  /**
   * Creates a `Rollout` to roll back the specified target.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The `DeliveryPipeline` for which the rollback `Rollout` should be
   *   created. Format should be
   *   `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
   * @param {string} request.targetId
   *   Required. ID of the `Target` that is being rolled back.
   * @param {string} request.rolloutId
   *   Required. ID of the rollback `Rollout` to create.
   * @param {string} [request.releaseId]
   *   Optional. ID of the `Release` to roll back to. If this isn't specified, the
   *   previous successful `Rollout` to the specified target will be used to
   *   determine the `Release`.
   * @param {string} [request.rolloutToRollBack]
   *   Optional. If provided, this must be the latest `Rollout` that is on the
   *   `Target`.
   * @param {google.cloud.deploy.v1.RollbackTargetConfig} [request.rollbackConfig]
   *   Optional. Configs for the rollback `Rollout`.
   * @param {boolean} [request.validateOnly]
   *   Optional. If set to true, the request is validated and the user is provided
   *   with a `RollbackTargetResponse`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.RollbackTargetResponse|RollbackTargetResponse}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.rollback_target.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_RollbackTarget_async
   */
  rollbackTarget(
    request?: protos.google.cloud.deploy.v1.IRollbackTargetRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IRollbackTargetResponse,
      protos.google.cloud.deploy.v1.IRollbackTargetRequest | undefined,
      {} | undefined,
    ]
  >;
  rollbackTarget(
    request: protos.google.cloud.deploy.v1.IRollbackTargetRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.IRollbackTargetResponse,
      protos.google.cloud.deploy.v1.IRollbackTargetRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  rollbackTarget(
    request: protos.google.cloud.deploy.v1.IRollbackTargetRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.IRollbackTargetResponse,
      protos.google.cloud.deploy.v1.IRollbackTargetRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  rollbackTarget(
    request?: protos.google.cloud.deploy.v1.IRollbackTargetRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.IRollbackTargetResponse,
          | protos.google.cloud.deploy.v1.IRollbackTargetRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.IRollbackTargetResponse,
      protos.google.cloud.deploy.v1.IRollbackTargetRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IRollbackTargetResponse,
      protos.google.cloud.deploy.v1.IRollbackTargetRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.rollbackTarget(request, options, callback);
  }
  /**
   * Gets details of a single Target.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the `Target`. Format must be
   *   `projects/{project_id}/locations/{location_name}/targets/{target_name}`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.Target|Target}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.get_target.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_GetTarget_async
   */
  getTarget(
    request?: protos.google.cloud.deploy.v1.IGetTargetRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.ITarget,
      protos.google.cloud.deploy.v1.IGetTargetRequest | undefined,
      {} | undefined,
    ]
  >;
  getTarget(
    request: protos.google.cloud.deploy.v1.IGetTargetRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.ITarget,
      protos.google.cloud.deploy.v1.IGetTargetRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getTarget(
    request: protos.google.cloud.deploy.v1.IGetTargetRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.ITarget,
      protos.google.cloud.deploy.v1.IGetTargetRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getTarget(
    request?: protos.google.cloud.deploy.v1.IGetTargetRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.ITarget,
          protos.google.cloud.deploy.v1.IGetTargetRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.ITarget,
      protos.google.cloud.deploy.v1.IGetTargetRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.ITarget,
      protos.google.cloud.deploy.v1.IGetTargetRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getTarget(request, options, callback);
  }
  /**
   * Gets details of a single CustomTargetType.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the `CustomTargetType`. Format must be
   *   `projects/{project_id}/locations/{location_name}/customTargetTypes/{custom_target_type}`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.CustomTargetType|CustomTargetType}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.get_custom_target_type.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_GetCustomTargetType_async
   */
  getCustomTargetType(
    request?: protos.google.cloud.deploy.v1.IGetCustomTargetTypeRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.ICustomTargetType,
      protos.google.cloud.deploy.v1.IGetCustomTargetTypeRequest | undefined,
      {} | undefined,
    ]
  >;
  getCustomTargetType(
    request: protos.google.cloud.deploy.v1.IGetCustomTargetTypeRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.ICustomTargetType,
      | protos.google.cloud.deploy.v1.IGetCustomTargetTypeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getCustomTargetType(
    request: protos.google.cloud.deploy.v1.IGetCustomTargetTypeRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.ICustomTargetType,
      | protos.google.cloud.deploy.v1.IGetCustomTargetTypeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getCustomTargetType(
    request?: protos.google.cloud.deploy.v1.IGetCustomTargetTypeRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.ICustomTargetType,
          | protos.google.cloud.deploy.v1.IGetCustomTargetTypeRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.ICustomTargetType,
      | protos.google.cloud.deploy.v1.IGetCustomTargetTypeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.ICustomTargetType,
      protos.google.cloud.deploy.v1.IGetCustomTargetTypeRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getCustomTargetType(request, options, callback);
  }
  /**
   * Gets details of a single Release.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the `Release`. Format must be
   *   `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.Release|Release}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.get_release.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_GetRelease_async
   */
  getRelease(
    request?: protos.google.cloud.deploy.v1.IGetReleaseRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IRelease,
      protos.google.cloud.deploy.v1.IGetReleaseRequest | undefined,
      {} | undefined,
    ]
  >;
  getRelease(
    request: protos.google.cloud.deploy.v1.IGetReleaseRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.IRelease,
      protos.google.cloud.deploy.v1.IGetReleaseRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getRelease(
    request: protos.google.cloud.deploy.v1.IGetReleaseRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.IRelease,
      protos.google.cloud.deploy.v1.IGetReleaseRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getRelease(
    request?: protos.google.cloud.deploy.v1.IGetReleaseRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.IRelease,
          protos.google.cloud.deploy.v1.IGetReleaseRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.IRelease,
      protos.google.cloud.deploy.v1.IGetReleaseRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IRelease,
      protos.google.cloud.deploy.v1.IGetReleaseRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getRelease(request, options, callback);
  }
  /**
   * Abandons a Release in the Delivery Pipeline.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the Release. Format is
   *   `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.AbandonReleaseResponse|AbandonReleaseResponse}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.abandon_release.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_AbandonRelease_async
   */
  abandonRelease(
    request?: protos.google.cloud.deploy.v1.IAbandonReleaseRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IAbandonReleaseResponse,
      protos.google.cloud.deploy.v1.IAbandonReleaseRequest | undefined,
      {} | undefined,
    ]
  >;
  abandonRelease(
    request: protos.google.cloud.deploy.v1.IAbandonReleaseRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.IAbandonReleaseResponse,
      protos.google.cloud.deploy.v1.IAbandonReleaseRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  abandonRelease(
    request: protos.google.cloud.deploy.v1.IAbandonReleaseRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.IAbandonReleaseResponse,
      protos.google.cloud.deploy.v1.IAbandonReleaseRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  abandonRelease(
    request?: protos.google.cloud.deploy.v1.IAbandonReleaseRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.IAbandonReleaseResponse,
          | protos.google.cloud.deploy.v1.IAbandonReleaseRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.IAbandonReleaseResponse,
      protos.google.cloud.deploy.v1.IAbandonReleaseRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IAbandonReleaseResponse,
      protos.google.cloud.deploy.v1.IAbandonReleaseRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.abandonRelease(request, options, callback);
  }
  /**
   * Approves a Rollout.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the Rollout. Format is
   *   `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   * @param {boolean} request.approved
   *   Required. True = approve; false = reject
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.ApproveRolloutResponse|ApproveRolloutResponse}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.approve_rollout.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_ApproveRollout_async
   */
  approveRollout(
    request?: protos.google.cloud.deploy.v1.IApproveRolloutRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IApproveRolloutResponse,
      protos.google.cloud.deploy.v1.IApproveRolloutRequest | undefined,
      {} | undefined,
    ]
  >;
  approveRollout(
    request: protos.google.cloud.deploy.v1.IApproveRolloutRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.IApproveRolloutResponse,
      protos.google.cloud.deploy.v1.IApproveRolloutRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  approveRollout(
    request: protos.google.cloud.deploy.v1.IApproveRolloutRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.IApproveRolloutResponse,
      protos.google.cloud.deploy.v1.IApproveRolloutRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  approveRollout(
    request?: protos.google.cloud.deploy.v1.IApproveRolloutRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.IApproveRolloutResponse,
          | protos.google.cloud.deploy.v1.IApproveRolloutRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.IApproveRolloutResponse,
      protos.google.cloud.deploy.v1.IApproveRolloutRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IApproveRolloutResponse,
      protos.google.cloud.deploy.v1.IApproveRolloutRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.approveRollout(request, options, callback);
  }
  /**
   * Advances a Rollout in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the Rollout. Format is
   *   `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   * @param {string} request.phaseId
   *   Required. The phase ID to advance the `Rollout` to.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.AdvanceRolloutResponse|AdvanceRolloutResponse}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.advance_rollout.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_AdvanceRollout_async
   */
  advanceRollout(
    request?: protos.google.cloud.deploy.v1.IAdvanceRolloutRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IAdvanceRolloutResponse,
      protos.google.cloud.deploy.v1.IAdvanceRolloutRequest | undefined,
      {} | undefined,
    ]
  >;
  advanceRollout(
    request: protos.google.cloud.deploy.v1.IAdvanceRolloutRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.IAdvanceRolloutResponse,
      protos.google.cloud.deploy.v1.IAdvanceRolloutRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  advanceRollout(
    request: protos.google.cloud.deploy.v1.IAdvanceRolloutRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.IAdvanceRolloutResponse,
      protos.google.cloud.deploy.v1.IAdvanceRolloutRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  advanceRollout(
    request?: protos.google.cloud.deploy.v1.IAdvanceRolloutRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.IAdvanceRolloutResponse,
          | protos.google.cloud.deploy.v1.IAdvanceRolloutRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.IAdvanceRolloutResponse,
      protos.google.cloud.deploy.v1.IAdvanceRolloutRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IAdvanceRolloutResponse,
      protos.google.cloud.deploy.v1.IAdvanceRolloutRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.advanceRollout(request, options, callback);
  }
  /**
   * Cancels a Rollout in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the Rollout. Format is
   *   `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.CancelRolloutResponse|CancelRolloutResponse}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.cancel_rollout.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_CancelRollout_async
   */
  cancelRollout(
    request?: protos.google.cloud.deploy.v1.ICancelRolloutRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.ICancelRolloutResponse,
      protos.google.cloud.deploy.v1.ICancelRolloutRequest | undefined,
      {} | undefined,
    ]
  >;
  cancelRollout(
    request: protos.google.cloud.deploy.v1.ICancelRolloutRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.ICancelRolloutResponse,
      protos.google.cloud.deploy.v1.ICancelRolloutRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  cancelRollout(
    request: protos.google.cloud.deploy.v1.ICancelRolloutRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.ICancelRolloutResponse,
      protos.google.cloud.deploy.v1.ICancelRolloutRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  cancelRollout(
    request?: protos.google.cloud.deploy.v1.ICancelRolloutRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.ICancelRolloutResponse,
          | protos.google.cloud.deploy.v1.ICancelRolloutRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.ICancelRolloutResponse,
      protos.google.cloud.deploy.v1.ICancelRolloutRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.ICancelRolloutResponse,
      protos.google.cloud.deploy.v1.ICancelRolloutRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.cancelRollout(request, options, callback);
  }
  /**
   * Gets details of a single Rollout.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the `Rollout`. Format must be
   *   `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.Rollout|Rollout}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.get_rollout.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_GetRollout_async
   */
  getRollout(
    request?: protos.google.cloud.deploy.v1.IGetRolloutRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IRollout,
      protos.google.cloud.deploy.v1.IGetRolloutRequest | undefined,
      {} | undefined,
    ]
  >;
  getRollout(
    request: protos.google.cloud.deploy.v1.IGetRolloutRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.IRollout,
      protos.google.cloud.deploy.v1.IGetRolloutRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getRollout(
    request: protos.google.cloud.deploy.v1.IGetRolloutRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.IRollout,
      protos.google.cloud.deploy.v1.IGetRolloutRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getRollout(
    request?: protos.google.cloud.deploy.v1.IGetRolloutRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.IRollout,
          protos.google.cloud.deploy.v1.IGetRolloutRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.IRollout,
      protos.google.cloud.deploy.v1.IGetRolloutRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IRollout,
      protos.google.cloud.deploy.v1.IGetRolloutRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getRollout(request, options, callback);
  }
  /**
   * Ignores the specified Job in a Rollout.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.rollout
   *   Required. Name of the Rollout. Format is
   *   `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   * @param {string} request.phaseId
   *   Required. The phase ID the Job to ignore belongs to.
   * @param {string} request.jobId
   *   Required. The job ID for the Job to ignore.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.IgnoreJobResponse|IgnoreJobResponse}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.ignore_job.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_IgnoreJob_async
   */
  ignoreJob(
    request?: protos.google.cloud.deploy.v1.IIgnoreJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IIgnoreJobResponse,
      protos.google.cloud.deploy.v1.IIgnoreJobRequest | undefined,
      {} | undefined,
    ]
  >;
  ignoreJob(
    request: protos.google.cloud.deploy.v1.IIgnoreJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.IIgnoreJobResponse,
      protos.google.cloud.deploy.v1.IIgnoreJobRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  ignoreJob(
    request: protos.google.cloud.deploy.v1.IIgnoreJobRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.IIgnoreJobResponse,
      protos.google.cloud.deploy.v1.IIgnoreJobRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  ignoreJob(
    request?: protos.google.cloud.deploy.v1.IIgnoreJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.IIgnoreJobResponse,
          protos.google.cloud.deploy.v1.IIgnoreJobRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.IIgnoreJobResponse,
      protos.google.cloud.deploy.v1.IIgnoreJobRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IIgnoreJobResponse,
      protos.google.cloud.deploy.v1.IIgnoreJobRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        rollout: request.rollout ?? '',
      });
    this.initialize();
    return this.innerApiCalls.ignoreJob(request, options, callback);
  }
  /**
   * Retries the specified Job in a Rollout.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.rollout
   *   Required. Name of the Rollout. Format is
   *   `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
   * @param {string} request.phaseId
   *   Required. The phase ID the Job to retry belongs to.
   * @param {string} request.jobId
   *   Required. The job ID for the Job to retry.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.RetryJobResponse|RetryJobResponse}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.retry_job.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_RetryJob_async
   */
  retryJob(
    request?: protos.google.cloud.deploy.v1.IRetryJobRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IRetryJobResponse,
      protos.google.cloud.deploy.v1.IRetryJobRequest | undefined,
      {} | undefined,
    ]
  >;
  retryJob(
    request: protos.google.cloud.deploy.v1.IRetryJobRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.IRetryJobResponse,
      protos.google.cloud.deploy.v1.IRetryJobRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  retryJob(
    request: protos.google.cloud.deploy.v1.IRetryJobRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.IRetryJobResponse,
      protos.google.cloud.deploy.v1.IRetryJobRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  retryJob(
    request?: protos.google.cloud.deploy.v1.IRetryJobRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.IRetryJobResponse,
          protos.google.cloud.deploy.v1.IRetryJobRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.IRetryJobResponse,
      protos.google.cloud.deploy.v1.IRetryJobRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IRetryJobResponse,
      protos.google.cloud.deploy.v1.IRetryJobRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        rollout: request.rollout ?? '',
      });
    this.initialize();
    return this.innerApiCalls.retryJob(request, options, callback);
  }
  /**
   * Gets details of a single JobRun.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the `JobRun`. Format must be
   *   `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}/rollouts/{rollout_name}/jobRuns/{job_run_name}`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.JobRun|JobRun}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.get_job_run.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_GetJobRun_async
   */
  getJobRun(
    request?: protos.google.cloud.deploy.v1.IGetJobRunRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IJobRun,
      protos.google.cloud.deploy.v1.IGetJobRunRequest | undefined,
      {} | undefined,
    ]
  >;
  getJobRun(
    request: protos.google.cloud.deploy.v1.IGetJobRunRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.IJobRun,
      protos.google.cloud.deploy.v1.IGetJobRunRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getJobRun(
    request: protos.google.cloud.deploy.v1.IGetJobRunRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.IJobRun,
      protos.google.cloud.deploy.v1.IGetJobRunRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getJobRun(
    request?: protos.google.cloud.deploy.v1.IGetJobRunRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.IJobRun,
          protos.google.cloud.deploy.v1.IGetJobRunRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.IJobRun,
      protos.google.cloud.deploy.v1.IGetJobRunRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IJobRun,
      protos.google.cloud.deploy.v1.IGetJobRunRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getJobRun(request, options, callback);
  }
  /**
   * Terminates a Job Run in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the `JobRun`. Format must be
   *   `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}/jobRuns/{jobRun}`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.TerminateJobRunResponse|TerminateJobRunResponse}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.terminate_job_run.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_TerminateJobRun_async
   */
  terminateJobRun(
    request?: protos.google.cloud.deploy.v1.ITerminateJobRunRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.ITerminateJobRunResponse,
      protos.google.cloud.deploy.v1.ITerminateJobRunRequest | undefined,
      {} | undefined,
    ]
  >;
  terminateJobRun(
    request: protos.google.cloud.deploy.v1.ITerminateJobRunRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.ITerminateJobRunResponse,
      protos.google.cloud.deploy.v1.ITerminateJobRunRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  terminateJobRun(
    request: protos.google.cloud.deploy.v1.ITerminateJobRunRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.ITerminateJobRunResponse,
      protos.google.cloud.deploy.v1.ITerminateJobRunRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  terminateJobRun(
    request?: protos.google.cloud.deploy.v1.ITerminateJobRunRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.ITerminateJobRunResponse,
          | protos.google.cloud.deploy.v1.ITerminateJobRunRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.ITerminateJobRunResponse,
      protos.google.cloud.deploy.v1.ITerminateJobRunRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.ITerminateJobRunResponse,
      protos.google.cloud.deploy.v1.ITerminateJobRunRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.terminateJobRun(request, options, callback);
  }
  /**
   * Gets the configuration for a location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of requested configuration.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.Config|Config}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.get_config.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_GetConfig_async
   */
  getConfig(
    request?: protos.google.cloud.deploy.v1.IGetConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IConfig,
      protos.google.cloud.deploy.v1.IGetConfigRequest | undefined,
      {} | undefined,
    ]
  >;
  getConfig(
    request: protos.google.cloud.deploy.v1.IGetConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.IConfig,
      protos.google.cloud.deploy.v1.IGetConfigRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getConfig(
    request: protos.google.cloud.deploy.v1.IGetConfigRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.IConfig,
      protos.google.cloud.deploy.v1.IGetConfigRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getConfig(
    request?: protos.google.cloud.deploy.v1.IGetConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.IConfig,
          protos.google.cloud.deploy.v1.IGetConfigRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.IConfig,
      protos.google.cloud.deploy.v1.IGetConfigRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IConfig,
      protos.google.cloud.deploy.v1.IGetConfigRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getConfig(request, options, callback);
  }
  /**
   * Gets details of a single Automation.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the `Automation`. Format must be
   *   `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/automations/{automation_name}`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.Automation|Automation}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.get_automation.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_GetAutomation_async
   */
  getAutomation(
    request?: protos.google.cloud.deploy.v1.IGetAutomationRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IAutomation,
      protos.google.cloud.deploy.v1.IGetAutomationRequest | undefined,
      {} | undefined,
    ]
  >;
  getAutomation(
    request: protos.google.cloud.deploy.v1.IGetAutomationRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.IAutomation,
      protos.google.cloud.deploy.v1.IGetAutomationRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getAutomation(
    request: protos.google.cloud.deploy.v1.IGetAutomationRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.IAutomation,
      protos.google.cloud.deploy.v1.IGetAutomationRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getAutomation(
    request?: protos.google.cloud.deploy.v1.IGetAutomationRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.IAutomation,
          | protos.google.cloud.deploy.v1.IGetAutomationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.IAutomation,
      protos.google.cloud.deploy.v1.IGetAutomationRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IAutomation,
      protos.google.cloud.deploy.v1.IGetAutomationRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getAutomation(request, options, callback);
  }
  /**
   * Gets details of a single AutomationRun.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the `AutomationRun`. Format must be
   *   `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.AutomationRun|AutomationRun}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.get_automation_run.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_GetAutomationRun_async
   */
  getAutomationRun(
    request?: protos.google.cloud.deploy.v1.IGetAutomationRunRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IAutomationRun,
      protos.google.cloud.deploy.v1.IGetAutomationRunRequest | undefined,
      {} | undefined,
    ]
  >;
  getAutomationRun(
    request: protos.google.cloud.deploy.v1.IGetAutomationRunRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.IAutomationRun,
      protos.google.cloud.deploy.v1.IGetAutomationRunRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getAutomationRun(
    request: protos.google.cloud.deploy.v1.IGetAutomationRunRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.IAutomationRun,
      protos.google.cloud.deploy.v1.IGetAutomationRunRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getAutomationRun(
    request?: protos.google.cloud.deploy.v1.IGetAutomationRunRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.IAutomationRun,
          | protos.google.cloud.deploy.v1.IGetAutomationRunRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.IAutomationRun,
      protos.google.cloud.deploy.v1.IGetAutomationRunRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IAutomationRun,
      protos.google.cloud.deploy.v1.IGetAutomationRunRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getAutomationRun(request, options, callback);
  }
  /**
   * Cancels an AutomationRun. The `state` of the `AutomationRun` after
   * cancelling is `CANCELLED`. `CancelAutomationRun` can be called on
   * AutomationRun in the state `IN_PROGRESS` and `PENDING`; AutomationRun
   * in a different state returns an `FAILED_PRECONDITION` error.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the `AutomationRun`. Format is
   *   `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.deploy.v1.CancelAutomationRunResponse|CancelAutomationRunResponse}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.cancel_automation_run.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_CancelAutomationRun_async
   */
  cancelAutomationRun(
    request?: protos.google.cloud.deploy.v1.ICancelAutomationRunRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.ICancelAutomationRunResponse,
      protos.google.cloud.deploy.v1.ICancelAutomationRunRequest | undefined,
      {} | undefined,
    ]
  >;
  cancelAutomationRun(
    request: protos.google.cloud.deploy.v1.ICancelAutomationRunRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.deploy.v1.ICancelAutomationRunResponse,
      | protos.google.cloud.deploy.v1.ICancelAutomationRunRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  cancelAutomationRun(
    request: protos.google.cloud.deploy.v1.ICancelAutomationRunRequest,
    callback: Callback<
      protos.google.cloud.deploy.v1.ICancelAutomationRunResponse,
      | protos.google.cloud.deploy.v1.ICancelAutomationRunRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  cancelAutomationRun(
    request?: protos.google.cloud.deploy.v1.ICancelAutomationRunRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.deploy.v1.ICancelAutomationRunResponse,
          | protos.google.cloud.deploy.v1.ICancelAutomationRunRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.deploy.v1.ICancelAutomationRunResponse,
      | protos.google.cloud.deploy.v1.ICancelAutomationRunRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.ICancelAutomationRunResponse,
      protos.google.cloud.deploy.v1.ICancelAutomationRunRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.cancelAutomationRun(request, options, callback);
  }

  /**
   * Creates a new DeliveryPipeline in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent collection in which the `DeliveryPipeline` should be
   *   created. Format should be
   *   `projects/{project_id}/locations/{location_name}`.
   * @param {string} request.deliveryPipelineId
   *   Required. ID of the `DeliveryPipeline`.
   * @param {google.cloud.deploy.v1.DeliveryPipeline} request.deliveryPipeline
   *   Required. The `DeliveryPipeline` to create.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server knows to ignore the
   *   request if it has already been completed. The server guarantees that for
   *   at least 60 minutes after the first request.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.validateOnly]
   *   Optional. If set to true, the request is validated and the user is provided
   *   with an expected result, but no actual change is made.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.create_delivery_pipeline.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_CreateDeliveryPipeline_async
   */
  createDeliveryPipeline(
    request?: protos.google.cloud.deploy.v1.ICreateDeliveryPipelineRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.IDeliveryPipeline,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createDeliveryPipeline(
    request: protos.google.cloud.deploy.v1.ICreateDeliveryPipelineRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IDeliveryPipeline,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createDeliveryPipeline(
    request: protos.google.cloud.deploy.v1.ICreateDeliveryPipelineRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IDeliveryPipeline,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createDeliveryPipeline(
    request?: protos.google.cloud.deploy.v1.ICreateDeliveryPipelineRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.deploy.v1.IDeliveryPipeline,
            protos.google.cloud.deploy.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IDeliveryPipeline,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.IDeliveryPipeline,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createDeliveryPipeline(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `createDeliveryPipeline()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.create_delivery_pipeline.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_CreateDeliveryPipeline_async
   */
  async checkCreateDeliveryPipelineProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.deploy.v1.DeliveryPipeline,
      protos.google.cloud.deploy.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createDeliveryPipeline,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.deploy.v1.DeliveryPipeline,
      protos.google.cloud.deploy.v1.OperationMetadata
    >;
  }
  /**
   * Updates the parameters of a single DeliveryPipeline.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   `DeliveryPipeline` resource by the update.
   *   The fields specified in the update_mask are relative to the resource, not
   *   the full request. A field will be overwritten if it's in the mask. If the
   *   user doesn't provide a mask then all fields are overwritten.
   * @param {google.cloud.deploy.v1.DeliveryPipeline} request.deliveryPipeline
   *   Required. The `DeliveryPipeline` to update.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server knows to ignore the
   *   request if it has already been completed. The server guarantees that for
   *   at least 60 minutes after the first request.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.allowMissing]
   *   Optional. If set to true, updating a `DeliveryPipeline` that does not exist
   *   will result in the creation of a new `DeliveryPipeline`.
   * @param {boolean} [request.validateOnly]
   *   Optional. If set to true, the request is validated and the user is provided
   *   with an expected result, but no actual change is made.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.update_delivery_pipeline.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_UpdateDeliveryPipeline_async
   */
  updateDeliveryPipeline(
    request?: protos.google.cloud.deploy.v1.IUpdateDeliveryPipelineRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.IDeliveryPipeline,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updateDeliveryPipeline(
    request: protos.google.cloud.deploy.v1.IUpdateDeliveryPipelineRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IDeliveryPipeline,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateDeliveryPipeline(
    request: protos.google.cloud.deploy.v1.IUpdateDeliveryPipelineRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IDeliveryPipeline,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateDeliveryPipeline(
    request?: protos.google.cloud.deploy.v1.IUpdateDeliveryPipelineRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.deploy.v1.IDeliveryPipeline,
            protos.google.cloud.deploy.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IDeliveryPipeline,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.IDeliveryPipeline,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'delivery_pipeline.name': request.deliveryPipeline!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateDeliveryPipeline(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `updateDeliveryPipeline()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.update_delivery_pipeline.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_UpdateDeliveryPipeline_async
   */
  async checkUpdateDeliveryPipelineProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.deploy.v1.DeliveryPipeline,
      protos.google.cloud.deploy.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateDeliveryPipeline,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.deploy.v1.DeliveryPipeline,
      protos.google.cloud.deploy.v1.OperationMetadata
    >;
  }
  /**
   * Deletes a single DeliveryPipeline.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the `DeliveryPipeline` to delete. Format should be
   *   `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server knows to ignore the
   *   request if it has already been completed. The server guarantees that for
   *   at least 60 minutes after the first request.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.allowMissing]
   *   Optional. If set to true, then deleting an already deleted or non-existing
   *   `DeliveryPipeline` will succeed.
   * @param {boolean} [request.validateOnly]
   *   Optional. If set, validate the request and preview the review, but do not
   *   actually post it.
   * @param {boolean} [request.force]
   *   Optional. If set to true, all child resources under this pipeline will also
   *   be deleted. Otherwise, the request will only work if the pipeline has no
   *   child resources.
   * @param {string} [request.etag]
   *   Optional. This checksum is computed by the server based on the value of
   *   other fields, and may be sent on update and delete requests to ensure the
   *   client has an up-to-date value before proceeding.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.delete_delivery_pipeline.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_DeleteDeliveryPipeline_async
   */
  deleteDeliveryPipeline(
    request?: protos.google.cloud.deploy.v1.IDeleteDeliveryPipelineRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  deleteDeliveryPipeline(
    request: protos.google.cloud.deploy.v1.IDeleteDeliveryPipelineRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteDeliveryPipeline(
    request: protos.google.cloud.deploy.v1.IDeleteDeliveryPipelineRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteDeliveryPipeline(
    request?: protos.google.cloud.deploy.v1.IDeleteDeliveryPipelineRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.deploy.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteDeliveryPipeline(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `deleteDeliveryPipeline()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.delete_delivery_pipeline.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_DeleteDeliveryPipeline_async
   */
  async checkDeleteDeliveryPipelineProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.deploy.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteDeliveryPipeline,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.deploy.v1.OperationMetadata
    >;
  }
  /**
   * Creates a new Target in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent collection in which the `Target` should be created.
   *   Format should be
   *   `projects/{project_id}/locations/{location_name}`.
   * @param {string} request.targetId
   *   Required. ID of the `Target`.
   * @param {google.cloud.deploy.v1.Target} request.target
   *   Required. The `Target` to create.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server knows to ignore the
   *   request if it has already been completed. The server guarantees that for
   *   at least 60 minutes after the first request.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.validateOnly]
   *   Optional. If set to true, the request is validated and the user is provided
   *   with an expected result, but no actual change is made.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.create_target.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_CreateTarget_async
   */
  createTarget(
    request?: protos.google.cloud.deploy.v1.ICreateTargetRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.ITarget,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createTarget(
    request: protos.google.cloud.deploy.v1.ICreateTargetRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.ITarget,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createTarget(
    request: protos.google.cloud.deploy.v1.ICreateTargetRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.ITarget,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createTarget(
    request?: protos.google.cloud.deploy.v1.ICreateTargetRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.deploy.v1.ITarget,
            protos.google.cloud.deploy.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.ITarget,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.ITarget,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createTarget(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `createTarget()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.create_target.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_CreateTarget_async
   */
  async checkCreateTargetProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.deploy.v1.Target,
      protos.google.cloud.deploy.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createTarget,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.deploy.v1.Target,
      protos.google.cloud.deploy.v1.OperationMetadata
    >;
  }
  /**
   * Updates the parameters of a single Target.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   Target resource by the update.
   *   The fields specified in the update_mask are relative to the resource, not
   *   the full request. A field will be overwritten if it's in the mask. If the
   *   user doesn't provide a mask then all fields are overwritten.
   * @param {google.cloud.deploy.v1.Target} request.target
   *   Required. The `Target` to update.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server knows to ignore the
   *   request if it has already been completed. The server guarantees that for
   *   at least 60 minutes after the first request.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.allowMissing]
   *   Optional. If set to true, updating a `Target` that does not exist will
   *   result in the creation of a new `Target`.
   * @param {boolean} [request.validateOnly]
   *   Optional. If set to true, the request is validated and the user is provided
   *   with an expected result, but no actual change is made.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.update_target.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_UpdateTarget_async
   */
  updateTarget(
    request?: protos.google.cloud.deploy.v1.IUpdateTargetRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.ITarget,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updateTarget(
    request: protos.google.cloud.deploy.v1.IUpdateTargetRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.ITarget,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateTarget(
    request: protos.google.cloud.deploy.v1.IUpdateTargetRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.ITarget,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateTarget(
    request?: protos.google.cloud.deploy.v1.IUpdateTargetRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.deploy.v1.ITarget,
            protos.google.cloud.deploy.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.ITarget,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.ITarget,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'target.name': request.target!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateTarget(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `updateTarget()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.update_target.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_UpdateTarget_async
   */
  async checkUpdateTargetProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.deploy.v1.Target,
      protos.google.cloud.deploy.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateTarget,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.deploy.v1.Target,
      protos.google.cloud.deploy.v1.OperationMetadata
    >;
  }
  /**
   * Deletes a single Target.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the `Target` to delete. Format should be
   *   `projects/{project_id}/locations/{location_name}/targets/{target_name}`.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server knows to ignore the
   *   request if it has already been completed. The server guarantees that for
   *   at least 60 minutes after the first request.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.allowMissing]
   *   Optional. If set to true, then deleting an already deleted or non-existing
   *   `Target` will succeed.
   * @param {boolean} [request.validateOnly]
   *   Optional. If set, validate the request and preview the review, but do not
   *   actually post it.
   * @param {string} [request.etag]
   *   Optional. This checksum is computed by the server based on the value of
   *   other fields, and may be sent on update and delete requests to ensure the
   *   client has an up-to-date value before proceeding.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.delete_target.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_DeleteTarget_async
   */
  deleteTarget(
    request?: protos.google.cloud.deploy.v1.IDeleteTargetRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  deleteTarget(
    request: protos.google.cloud.deploy.v1.IDeleteTargetRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteTarget(
    request: protos.google.cloud.deploy.v1.IDeleteTargetRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteTarget(
    request?: protos.google.cloud.deploy.v1.IDeleteTargetRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.deploy.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteTarget(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `deleteTarget()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.delete_target.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_DeleteTarget_async
   */
  async checkDeleteTargetProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.deploy.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteTarget,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.deploy.v1.OperationMetadata
    >;
  }
  /**
   * Creates a new CustomTargetType in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent collection in which the `CustomTargetType` should be
   *   created. Format should be
   *   `projects/{project_id}/locations/{location_name}`.
   * @param {string} request.customTargetTypeId
   *   Required. ID of the `CustomTargetType`.
   * @param {google.cloud.deploy.v1.CustomTargetType} request.customTargetType
   *   Required. The `CustomTargetType` to create.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server knows to ignore the
   *   request if it has already been completed. The server guarantees that for
   *   at least 60 minutes after the first request.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.validateOnly]
   *   Optional. If set to true, the request is validated and the user is provided
   *   with an expected result, but no actual change is made.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.create_custom_target_type.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_CreateCustomTargetType_async
   */
  createCustomTargetType(
    request?: protos.google.cloud.deploy.v1.ICreateCustomTargetTypeRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.ICustomTargetType,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createCustomTargetType(
    request: protos.google.cloud.deploy.v1.ICreateCustomTargetTypeRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.ICustomTargetType,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createCustomTargetType(
    request: protos.google.cloud.deploy.v1.ICreateCustomTargetTypeRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.ICustomTargetType,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createCustomTargetType(
    request?: protos.google.cloud.deploy.v1.ICreateCustomTargetTypeRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.deploy.v1.ICustomTargetType,
            protos.google.cloud.deploy.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.ICustomTargetType,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.ICustomTargetType,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createCustomTargetType(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `createCustomTargetType()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.create_custom_target_type.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_CreateCustomTargetType_async
   */
  async checkCreateCustomTargetTypeProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.deploy.v1.CustomTargetType,
      protos.google.cloud.deploy.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createCustomTargetType,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.deploy.v1.CustomTargetType,
      protos.google.cloud.deploy.v1.OperationMetadata
    >;
  }
  /**
   * Updates a single CustomTargetType.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   `CustomTargetType` resource by the update.
   *   The fields specified in the update_mask are relative to the resource, not
   *   the full request. A field will be overwritten if it's in the mask. If the
   *   user doesn't provide a mask then all fields are overwritten.
   * @param {google.cloud.deploy.v1.CustomTargetType} request.customTargetType
   *   Required. The `CustomTargetType` to update.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server knows to ignore the
   *   request if it has already been completed. The server guarantees that for
   *   at least 60 minutes after the first request.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.allowMissing]
   *   Optional. If set to true, updating a `CustomTargetType` that does not exist
   *   will result in the creation of a new `CustomTargetType`.
   * @param {boolean} [request.validateOnly]
   *   Optional. If set to true, the request is validated and the user is provided
   *   with an expected result, but no actual change is made.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.update_custom_target_type.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_UpdateCustomTargetType_async
   */
  updateCustomTargetType(
    request?: protos.google.cloud.deploy.v1.IUpdateCustomTargetTypeRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.ICustomTargetType,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updateCustomTargetType(
    request: protos.google.cloud.deploy.v1.IUpdateCustomTargetTypeRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.ICustomTargetType,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateCustomTargetType(
    request: protos.google.cloud.deploy.v1.IUpdateCustomTargetTypeRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.ICustomTargetType,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateCustomTargetType(
    request?: protos.google.cloud.deploy.v1.IUpdateCustomTargetTypeRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.deploy.v1.ICustomTargetType,
            protos.google.cloud.deploy.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.ICustomTargetType,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.ICustomTargetType,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'custom_target_type.name': request.customTargetType!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateCustomTargetType(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `updateCustomTargetType()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.update_custom_target_type.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_UpdateCustomTargetType_async
   */
  async checkUpdateCustomTargetTypeProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.deploy.v1.CustomTargetType,
      protos.google.cloud.deploy.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateCustomTargetType,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.deploy.v1.CustomTargetType,
      protos.google.cloud.deploy.v1.OperationMetadata
    >;
  }
  /**
   * Deletes a single CustomTargetType.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the `CustomTargetType` to delete. Format must be
   *   `projects/{project_id}/locations/{location_name}/customTargetTypes/{custom_target_type}`.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server knows to ignore the
   *   request if it has already been completed. The server guarantees that for
   *   at least 60 minutes after the first request.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.allowMissing]
   *   Optional. If set to true, then deleting an already deleted or non-existing
   *   `CustomTargetType` will succeed.
   * @param {boolean} [request.validateOnly]
   *   Optional. If set to true, the request is validated but no actual change is
   *   made.
   * @param {string} [request.etag]
   *   Optional. This checksum is computed by the server based on the value of
   *   other fields, and may be sent on update and delete requests to ensure the
   *   client has an up-to-date value before proceeding.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.delete_custom_target_type.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_DeleteCustomTargetType_async
   */
  deleteCustomTargetType(
    request?: protos.google.cloud.deploy.v1.IDeleteCustomTargetTypeRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  deleteCustomTargetType(
    request: protos.google.cloud.deploy.v1.IDeleteCustomTargetTypeRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteCustomTargetType(
    request: protos.google.cloud.deploy.v1.IDeleteCustomTargetTypeRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteCustomTargetType(
    request?: protos.google.cloud.deploy.v1.IDeleteCustomTargetTypeRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.deploy.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteCustomTargetType(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `deleteCustomTargetType()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.delete_custom_target_type.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_DeleteCustomTargetType_async
   */
  async checkDeleteCustomTargetTypeProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.deploy.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteCustomTargetType,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.deploy.v1.OperationMetadata
    >;
  }
  /**
   * Creates a new Release in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent collection in which the `Release` should be created.
   *   Format should be
   *   `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
   * @param {string} request.releaseId
   *   Required. ID of the `Release`.
   * @param {google.cloud.deploy.v1.Release} request.release
   *   Required. The `Release` to create.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server knows to ignore the
   *   request if it has already been completed. The server guarantees that for
   *   at least 60 minutes after the first request.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.validateOnly]
   *   Optional. If set to true, the request is validated and the user is provided
   *   with an expected result, but no actual change is made.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.create_release.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_CreateRelease_async
   */
  createRelease(
    request?: protos.google.cloud.deploy.v1.ICreateReleaseRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.IRelease,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createRelease(
    request: protos.google.cloud.deploy.v1.ICreateReleaseRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IRelease,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createRelease(
    request: protos.google.cloud.deploy.v1.ICreateReleaseRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IRelease,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createRelease(
    request?: protos.google.cloud.deploy.v1.ICreateReleaseRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.deploy.v1.IRelease,
            protos.google.cloud.deploy.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IRelease,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.IRelease,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createRelease(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `createRelease()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.create_release.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_CreateRelease_async
   */
  async checkCreateReleaseProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.deploy.v1.Release,
      protos.google.cloud.deploy.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createRelease,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.deploy.v1.Release,
      protos.google.cloud.deploy.v1.OperationMetadata
    >;
  }
  /**
   * Creates a new Rollout in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent collection in which the `Rollout` should be created.
   *   Format should be
   *   `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}`.
   * @param {string} request.rolloutId
   *   Required. ID of the `Rollout`.
   * @param {google.cloud.deploy.v1.Rollout} request.rollout
   *   Required. The `Rollout` to create.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server knows to ignore the
   *   request if it has already been completed. The server guarantees that for
   *   at least 60 minutes after the first request.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.validateOnly]
   *   Optional. If set to true, the request is validated and the user is provided
   *   with an expected result, but no actual change is made.
   * @param {string} [request.startingPhaseId]
   *   Optional. The starting phase ID for the `Rollout`. If empty the `Rollout`
   *   will start at the first phase.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.create_rollout.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_CreateRollout_async
   */
  createRollout(
    request?: protos.google.cloud.deploy.v1.ICreateRolloutRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.IRollout,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createRollout(
    request: protos.google.cloud.deploy.v1.ICreateRolloutRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IRollout,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createRollout(
    request: protos.google.cloud.deploy.v1.ICreateRolloutRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IRollout,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createRollout(
    request?: protos.google.cloud.deploy.v1.ICreateRolloutRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.deploy.v1.IRollout,
            protos.google.cloud.deploy.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IRollout,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.IRollout,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createRollout(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `createRollout()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.create_rollout.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_CreateRollout_async
   */
  async checkCreateRolloutProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.deploy.v1.Rollout,
      protos.google.cloud.deploy.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createRollout,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.deploy.v1.Rollout,
      protos.google.cloud.deploy.v1.OperationMetadata
    >;
  }
  /**
   * Creates a new Automation in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent collection in which the `Automation` should be
   *   created. Format should be
   *   `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
   * @param {string} request.automationId
   *   Required. ID of the `Automation`.
   * @param {google.cloud.deploy.v1.Automation} request.automation
   *   Required. The `Automation` to create.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server knows to ignore the
   *   request if it has already been completed. The server guarantees that for
   *   at least 60 minutes after the first request.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.validateOnly]
   *   Optional. If set to true, the request is validated and the user is provided
   *   with an expected result, but no actual change is made.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.create_automation.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_CreateAutomation_async
   */
  createAutomation(
    request?: protos.google.cloud.deploy.v1.ICreateAutomationRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.IAutomation,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createAutomation(
    request: protos.google.cloud.deploy.v1.ICreateAutomationRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IAutomation,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createAutomation(
    request: protos.google.cloud.deploy.v1.ICreateAutomationRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IAutomation,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createAutomation(
    request?: protos.google.cloud.deploy.v1.ICreateAutomationRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.deploy.v1.IAutomation,
            protos.google.cloud.deploy.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IAutomation,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.IAutomation,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createAutomation(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `createAutomation()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.create_automation.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_CreateAutomation_async
   */
  async checkCreateAutomationProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.deploy.v1.Automation,
      protos.google.cloud.deploy.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createAutomation,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.deploy.v1.Automation,
      protos.google.cloud.deploy.v1.OperationMetadata
    >;
  }
  /**
   * Updates the parameters of a single Automation resource.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   `Automation` resource by the update.
   *   The fields specified in the update_mask are relative to the resource, not
   *   the full request. A field will be overwritten if it's in the mask. If the
   *   user doesn't provide a mask then all fields are overwritten.
   * @param {google.cloud.deploy.v1.Automation} request.automation
   *   Required. The `Automation` to update.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server knows to ignore the
   *   request if it has already been completed. The server guarantees that for
   *   at least 60 minutes after the first request.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.allowMissing]
   *   Optional. If set to true, updating a `Automation` that does not exist will
   *   result in the creation of a new `Automation`.
   * @param {boolean} [request.validateOnly]
   *   Optional. If set to true, the request is validated and the user is provided
   *   with an expected result, but no actual change is made.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.update_automation.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_UpdateAutomation_async
   */
  updateAutomation(
    request?: protos.google.cloud.deploy.v1.IUpdateAutomationRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.IAutomation,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updateAutomation(
    request: protos.google.cloud.deploy.v1.IUpdateAutomationRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IAutomation,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateAutomation(
    request: protos.google.cloud.deploy.v1.IUpdateAutomationRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IAutomation,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateAutomation(
    request?: protos.google.cloud.deploy.v1.IUpdateAutomationRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.deploy.v1.IAutomation,
            protos.google.cloud.deploy.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.deploy.v1.IAutomation,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.deploy.v1.IAutomation,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'automation.name': request.automation!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateAutomation(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `updateAutomation()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.update_automation.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_UpdateAutomation_async
   */
  async checkUpdateAutomationProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.deploy.v1.Automation,
      protos.google.cloud.deploy.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateAutomation,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.deploy.v1.Automation,
      protos.google.cloud.deploy.v1.OperationMetadata
    >;
  }
  /**
   * Deletes a single Automation resource.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the `Automation` to delete. Format should be
   *   `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/automations/{automation_name}`.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server knows to ignore the
   *   request if it has already been completed. The server guarantees that for
   *   at least 60 minutes after the first request.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.allowMissing]
   *   Optional. If set to true, then deleting an already deleted or non-existing
   *   `Automation` will succeed.
   * @param {boolean} [request.validateOnly]
   *   Optional. If set, validate the request and verify whether the resource
   *   exists, but do not actually post it.
   * @param {string} [request.etag]
   *   Optional. The weak etag of the request.
   *   This checksum is computed by the server based on the value of other
   *   fields, and may be sent on update and delete requests to ensure the
   *   client has an up-to-date value before proceeding.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.delete_automation.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_DeleteAutomation_async
   */
  deleteAutomation(
    request?: protos.google.cloud.deploy.v1.IDeleteAutomationRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  deleteAutomation(
    request: protos.google.cloud.deploy.v1.IDeleteAutomationRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteAutomation(
    request: protos.google.cloud.deploy.v1.IDeleteAutomationRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteAutomation(
    request?: protos.google.cloud.deploy.v1.IDeleteAutomationRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.deploy.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.deploy.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteAutomation(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `deleteAutomation()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.delete_automation.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_DeleteAutomation_async
   */
  async checkDeleteAutomationProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.deploy.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteAutomation,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.deploy.v1.OperationMetadata
    >;
  }
  /**
   * Lists DeliveryPipelines in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, which owns this collection of pipelines. Format must
   *   be `projects/{project_id}/locations/{location_name}`.
   * @param {number} request.pageSize
   *   The maximum number of pipelines to return. The service may return
   *   fewer than this value. If unspecified, at most 50 pipelines will
   *   be returned. The maximum value is 1000; values above 1000 will be set
   *   to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListDeliveryPipelines` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} request.filter
   *   Filter pipelines to be returned. See https://google.aip.dev/160 for more
   *   details.
   * @param {string} request.orderBy
   *   Field to sort by. See https://google.aip.dev/132#ordering for more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.deploy.v1.DeliveryPipeline|DeliveryPipeline}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listDeliveryPipelinesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listDeliveryPipelines(
    request?: protos.google.cloud.deploy.v1.IListDeliveryPipelinesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IDeliveryPipeline[],
      protos.google.cloud.deploy.v1.IListDeliveryPipelinesRequest | null,
      protos.google.cloud.deploy.v1.IListDeliveryPipelinesResponse,
    ]
  >;
  listDeliveryPipelines(
    request: protos.google.cloud.deploy.v1.IListDeliveryPipelinesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListDeliveryPipelinesRequest,
      | protos.google.cloud.deploy.v1.IListDeliveryPipelinesResponse
      | null
      | undefined,
      protos.google.cloud.deploy.v1.IDeliveryPipeline
    >
  ): void;
  listDeliveryPipelines(
    request: protos.google.cloud.deploy.v1.IListDeliveryPipelinesRequest,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListDeliveryPipelinesRequest,
      | protos.google.cloud.deploy.v1.IListDeliveryPipelinesResponse
      | null
      | undefined,
      protos.google.cloud.deploy.v1.IDeliveryPipeline
    >
  ): void;
  listDeliveryPipelines(
    request?: protos.google.cloud.deploy.v1.IListDeliveryPipelinesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.deploy.v1.IListDeliveryPipelinesRequest,
          | protos.google.cloud.deploy.v1.IListDeliveryPipelinesResponse
          | null
          | undefined,
          protos.google.cloud.deploy.v1.IDeliveryPipeline
        >,
    callback?: PaginationCallback<
      protos.google.cloud.deploy.v1.IListDeliveryPipelinesRequest,
      | protos.google.cloud.deploy.v1.IListDeliveryPipelinesResponse
      | null
      | undefined,
      protos.google.cloud.deploy.v1.IDeliveryPipeline
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IDeliveryPipeline[],
      protos.google.cloud.deploy.v1.IListDeliveryPipelinesRequest | null,
      protos.google.cloud.deploy.v1.IListDeliveryPipelinesResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listDeliveryPipelines(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, which owns this collection of pipelines. Format must
   *   be `projects/{project_id}/locations/{location_name}`.
   * @param {number} request.pageSize
   *   The maximum number of pipelines to return. The service may return
   *   fewer than this value. If unspecified, at most 50 pipelines will
   *   be returned. The maximum value is 1000; values above 1000 will be set
   *   to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListDeliveryPipelines` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} request.filter
   *   Filter pipelines to be returned. See https://google.aip.dev/160 for more
   *   details.
   * @param {string} request.orderBy
   *   Field to sort by. See https://google.aip.dev/132#ordering for more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.deploy.v1.DeliveryPipeline|DeliveryPipeline} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listDeliveryPipelinesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listDeliveryPipelinesStream(
    request?: protos.google.cloud.deploy.v1.IListDeliveryPipelinesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listDeliveryPipelines'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listDeliveryPipelines.createStream(
      this.innerApiCalls.listDeliveryPipelines as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listDeliveryPipelines`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, which owns this collection of pipelines. Format must
   *   be `projects/{project_id}/locations/{location_name}`.
   * @param {number} request.pageSize
   *   The maximum number of pipelines to return. The service may return
   *   fewer than this value. If unspecified, at most 50 pipelines will
   *   be returned. The maximum value is 1000; values above 1000 will be set
   *   to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListDeliveryPipelines` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} request.filter
   *   Filter pipelines to be returned. See https://google.aip.dev/160 for more
   *   details.
   * @param {string} request.orderBy
   *   Field to sort by. See https://google.aip.dev/132#ordering for more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.deploy.v1.DeliveryPipeline|DeliveryPipeline}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.list_delivery_pipelines.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_ListDeliveryPipelines_async
   */
  listDeliveryPipelinesAsync(
    request?: protos.google.cloud.deploy.v1.IListDeliveryPipelinesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.deploy.v1.IDeliveryPipeline> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listDeliveryPipelines'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listDeliveryPipelines.asyncIterate(
      this.innerApiCalls['listDeliveryPipelines'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.deploy.v1.IDeliveryPipeline>;
  }
  /**
   * Lists Targets in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, which owns this collection of targets. Format must be
   *   `projects/{project_id}/locations/{location_name}`.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of `Target` objects to return. The service may
   *   return fewer than this value. If unspecified, at most 50 `Target` objects
   *   will be returned. The maximum value is 1000; values above 1000 will be set
   *   to 1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListTargets` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} [request.filter]
   *   Optional. Filter targets to be returned. See https://google.aip.dev/160 for
   *   more details.
   * @param {string} [request.orderBy]
   *   Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   *   more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.deploy.v1.Target|Target}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listTargetsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listTargets(
    request?: protos.google.cloud.deploy.v1.IListTargetsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.ITarget[],
      protos.google.cloud.deploy.v1.IListTargetsRequest | null,
      protos.google.cloud.deploy.v1.IListTargetsResponse,
    ]
  >;
  listTargets(
    request: protos.google.cloud.deploy.v1.IListTargetsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListTargetsRequest,
      protos.google.cloud.deploy.v1.IListTargetsResponse | null | undefined,
      protos.google.cloud.deploy.v1.ITarget
    >
  ): void;
  listTargets(
    request: protos.google.cloud.deploy.v1.IListTargetsRequest,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListTargetsRequest,
      protos.google.cloud.deploy.v1.IListTargetsResponse | null | undefined,
      protos.google.cloud.deploy.v1.ITarget
    >
  ): void;
  listTargets(
    request?: protos.google.cloud.deploy.v1.IListTargetsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.deploy.v1.IListTargetsRequest,
          protos.google.cloud.deploy.v1.IListTargetsResponse | null | undefined,
          protos.google.cloud.deploy.v1.ITarget
        >,
    callback?: PaginationCallback<
      protos.google.cloud.deploy.v1.IListTargetsRequest,
      protos.google.cloud.deploy.v1.IListTargetsResponse | null | undefined,
      protos.google.cloud.deploy.v1.ITarget
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.ITarget[],
      protos.google.cloud.deploy.v1.IListTargetsRequest | null,
      protos.google.cloud.deploy.v1.IListTargetsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listTargets(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, which owns this collection of targets. Format must be
   *   `projects/{project_id}/locations/{location_name}`.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of `Target` objects to return. The service may
   *   return fewer than this value. If unspecified, at most 50 `Target` objects
   *   will be returned. The maximum value is 1000; values above 1000 will be set
   *   to 1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListTargets` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} [request.filter]
   *   Optional. Filter targets to be returned. See https://google.aip.dev/160 for
   *   more details.
   * @param {string} [request.orderBy]
   *   Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   *   more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.deploy.v1.Target|Target} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listTargetsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listTargetsStream(
    request?: protos.google.cloud.deploy.v1.IListTargetsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listTargets'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listTargets.createStream(
      this.innerApiCalls.listTargets as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listTargets`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, which owns this collection of targets. Format must be
   *   `projects/{project_id}/locations/{location_name}`.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of `Target` objects to return. The service may
   *   return fewer than this value. If unspecified, at most 50 `Target` objects
   *   will be returned. The maximum value is 1000; values above 1000 will be set
   *   to 1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListTargets` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} [request.filter]
   *   Optional. Filter targets to be returned. See https://google.aip.dev/160 for
   *   more details.
   * @param {string} [request.orderBy]
   *   Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   *   more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.deploy.v1.Target|Target}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.list_targets.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_ListTargets_async
   */
  listTargetsAsync(
    request?: protos.google.cloud.deploy.v1.IListTargetsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.deploy.v1.ITarget> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listTargets'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listTargets.asyncIterate(
      this.innerApiCalls['listTargets'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.deploy.v1.ITarget>;
  }
  /**
   * Lists CustomTargetTypes in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent that owns this collection of custom target types.
   *   Format must be `projects/{project_id}/locations/{location_name}`.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of `CustomTargetType` objects to return. The
   *   service may return fewer than this value. If unspecified, at most 50
   *   `CustomTargetType` objects will be returned. The maximum value is 1000;
   *   values above 1000 will be set to 1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListCustomTargetTypes`
   *   call. Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} [request.filter]
   *   Optional. Filter custom target types to be returned. See
   *   https://google.aip.dev/160 for more details.
   * @param {string} [request.orderBy]
   *   Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   *   more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.deploy.v1.CustomTargetType|CustomTargetType}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listCustomTargetTypesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listCustomTargetTypes(
    request?: protos.google.cloud.deploy.v1.IListCustomTargetTypesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.ICustomTargetType[],
      protos.google.cloud.deploy.v1.IListCustomTargetTypesRequest | null,
      protos.google.cloud.deploy.v1.IListCustomTargetTypesResponse,
    ]
  >;
  listCustomTargetTypes(
    request: protos.google.cloud.deploy.v1.IListCustomTargetTypesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListCustomTargetTypesRequest,
      | protos.google.cloud.deploy.v1.IListCustomTargetTypesResponse
      | null
      | undefined,
      protos.google.cloud.deploy.v1.ICustomTargetType
    >
  ): void;
  listCustomTargetTypes(
    request: protos.google.cloud.deploy.v1.IListCustomTargetTypesRequest,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListCustomTargetTypesRequest,
      | protos.google.cloud.deploy.v1.IListCustomTargetTypesResponse
      | null
      | undefined,
      protos.google.cloud.deploy.v1.ICustomTargetType
    >
  ): void;
  listCustomTargetTypes(
    request?: protos.google.cloud.deploy.v1.IListCustomTargetTypesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.deploy.v1.IListCustomTargetTypesRequest,
          | protos.google.cloud.deploy.v1.IListCustomTargetTypesResponse
          | null
          | undefined,
          protos.google.cloud.deploy.v1.ICustomTargetType
        >,
    callback?: PaginationCallback<
      protos.google.cloud.deploy.v1.IListCustomTargetTypesRequest,
      | protos.google.cloud.deploy.v1.IListCustomTargetTypesResponse
      | null
      | undefined,
      protos.google.cloud.deploy.v1.ICustomTargetType
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.ICustomTargetType[],
      protos.google.cloud.deploy.v1.IListCustomTargetTypesRequest | null,
      protos.google.cloud.deploy.v1.IListCustomTargetTypesResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listCustomTargetTypes(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent that owns this collection of custom target types.
   *   Format must be `projects/{project_id}/locations/{location_name}`.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of `CustomTargetType` objects to return. The
   *   service may return fewer than this value. If unspecified, at most 50
   *   `CustomTargetType` objects will be returned. The maximum value is 1000;
   *   values above 1000 will be set to 1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListCustomTargetTypes`
   *   call. Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} [request.filter]
   *   Optional. Filter custom target types to be returned. See
   *   https://google.aip.dev/160 for more details.
   * @param {string} [request.orderBy]
   *   Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   *   more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.deploy.v1.CustomTargetType|CustomTargetType} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listCustomTargetTypesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listCustomTargetTypesStream(
    request?: protos.google.cloud.deploy.v1.IListCustomTargetTypesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listCustomTargetTypes'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCustomTargetTypes.createStream(
      this.innerApiCalls.listCustomTargetTypes as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listCustomTargetTypes`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent that owns this collection of custom target types.
   *   Format must be `projects/{project_id}/locations/{location_name}`.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of `CustomTargetType` objects to return. The
   *   service may return fewer than this value. If unspecified, at most 50
   *   `CustomTargetType` objects will be returned. The maximum value is 1000;
   *   values above 1000 will be set to 1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListCustomTargetTypes`
   *   call. Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} [request.filter]
   *   Optional. Filter custom target types to be returned. See
   *   https://google.aip.dev/160 for more details.
   * @param {string} [request.orderBy]
   *   Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   *   more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.deploy.v1.CustomTargetType|CustomTargetType}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.list_custom_target_types.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_ListCustomTargetTypes_async
   */
  listCustomTargetTypesAsync(
    request?: protos.google.cloud.deploy.v1.IListCustomTargetTypesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.deploy.v1.ICustomTargetType> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listCustomTargetTypes'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listCustomTargetTypes.asyncIterate(
      this.innerApiCalls['listCustomTargetTypes'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.deploy.v1.ICustomTargetType>;
  }
  /**
   * Lists Releases in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The `DeliveryPipeline` which owns this collection of `Release`
   *   objects.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of `Release` objects to return. The service
   *   may return fewer than this value. If unspecified, at most 50 `Release`
   *   objects will be returned. The maximum value is 1000; values above 1000 will
   *   be set to 1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListReleases` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} [request.filter]
   *   Optional. Filter releases to be returned. See https://google.aip.dev/160
   *   for more details.
   * @param {string} [request.orderBy]
   *   Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   *   more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.deploy.v1.Release|Release}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listReleasesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listReleases(
    request?: protos.google.cloud.deploy.v1.IListReleasesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IRelease[],
      protos.google.cloud.deploy.v1.IListReleasesRequest | null,
      protos.google.cloud.deploy.v1.IListReleasesResponse,
    ]
  >;
  listReleases(
    request: protos.google.cloud.deploy.v1.IListReleasesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListReleasesRequest,
      protos.google.cloud.deploy.v1.IListReleasesResponse | null | undefined,
      protos.google.cloud.deploy.v1.IRelease
    >
  ): void;
  listReleases(
    request: protos.google.cloud.deploy.v1.IListReleasesRequest,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListReleasesRequest,
      protos.google.cloud.deploy.v1.IListReleasesResponse | null | undefined,
      protos.google.cloud.deploy.v1.IRelease
    >
  ): void;
  listReleases(
    request?: protos.google.cloud.deploy.v1.IListReleasesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.deploy.v1.IListReleasesRequest,
          | protos.google.cloud.deploy.v1.IListReleasesResponse
          | null
          | undefined,
          protos.google.cloud.deploy.v1.IRelease
        >,
    callback?: PaginationCallback<
      protos.google.cloud.deploy.v1.IListReleasesRequest,
      protos.google.cloud.deploy.v1.IListReleasesResponse | null | undefined,
      protos.google.cloud.deploy.v1.IRelease
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IRelease[],
      protos.google.cloud.deploy.v1.IListReleasesRequest | null,
      protos.google.cloud.deploy.v1.IListReleasesResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listReleases(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The `DeliveryPipeline` which owns this collection of `Release`
   *   objects.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of `Release` objects to return. The service
   *   may return fewer than this value. If unspecified, at most 50 `Release`
   *   objects will be returned. The maximum value is 1000; values above 1000 will
   *   be set to 1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListReleases` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} [request.filter]
   *   Optional. Filter releases to be returned. See https://google.aip.dev/160
   *   for more details.
   * @param {string} [request.orderBy]
   *   Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   *   more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.deploy.v1.Release|Release} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listReleasesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listReleasesStream(
    request?: protos.google.cloud.deploy.v1.IListReleasesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listReleases'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listReleases.createStream(
      this.innerApiCalls.listReleases as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listReleases`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The `DeliveryPipeline` which owns this collection of `Release`
   *   objects.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of `Release` objects to return. The service
   *   may return fewer than this value. If unspecified, at most 50 `Release`
   *   objects will be returned. The maximum value is 1000; values above 1000 will
   *   be set to 1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListReleases` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} [request.filter]
   *   Optional. Filter releases to be returned. See https://google.aip.dev/160
   *   for more details.
   * @param {string} [request.orderBy]
   *   Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   *   more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.deploy.v1.Release|Release}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.list_releases.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_ListReleases_async
   */
  listReleasesAsync(
    request?: protos.google.cloud.deploy.v1.IListReleasesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.deploy.v1.IRelease> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listReleases'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listReleases.asyncIterate(
      this.innerApiCalls['listReleases'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.deploy.v1.IRelease>;
  }
  /**
   * Lists Rollouts in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The `Release` which owns this collection of `Rollout` objects.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of `Rollout` objects to return. The service
   *   may return fewer than this value. If unspecified, at most 50 `Rollout`
   *   objects will be returned. The maximum value is 1000; values above 1000 will
   *   be set to 1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListRollouts` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} [request.filter]
   *   Optional. Filter rollouts to be returned. See https://google.aip.dev/160
   *   for more details.
   * @param {string} [request.orderBy]
   *   Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   *   more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.deploy.v1.Rollout|Rollout}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listRolloutsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listRollouts(
    request?: protos.google.cloud.deploy.v1.IListRolloutsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IRollout[],
      protos.google.cloud.deploy.v1.IListRolloutsRequest | null,
      protos.google.cloud.deploy.v1.IListRolloutsResponse,
    ]
  >;
  listRollouts(
    request: protos.google.cloud.deploy.v1.IListRolloutsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListRolloutsRequest,
      protos.google.cloud.deploy.v1.IListRolloutsResponse | null | undefined,
      protos.google.cloud.deploy.v1.IRollout
    >
  ): void;
  listRollouts(
    request: protos.google.cloud.deploy.v1.IListRolloutsRequest,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListRolloutsRequest,
      protos.google.cloud.deploy.v1.IListRolloutsResponse | null | undefined,
      protos.google.cloud.deploy.v1.IRollout
    >
  ): void;
  listRollouts(
    request?: protos.google.cloud.deploy.v1.IListRolloutsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.deploy.v1.IListRolloutsRequest,
          | protos.google.cloud.deploy.v1.IListRolloutsResponse
          | null
          | undefined,
          protos.google.cloud.deploy.v1.IRollout
        >,
    callback?: PaginationCallback<
      protos.google.cloud.deploy.v1.IListRolloutsRequest,
      protos.google.cloud.deploy.v1.IListRolloutsResponse | null | undefined,
      protos.google.cloud.deploy.v1.IRollout
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IRollout[],
      protos.google.cloud.deploy.v1.IListRolloutsRequest | null,
      protos.google.cloud.deploy.v1.IListRolloutsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listRollouts(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The `Release` which owns this collection of `Rollout` objects.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of `Rollout` objects to return. The service
   *   may return fewer than this value. If unspecified, at most 50 `Rollout`
   *   objects will be returned. The maximum value is 1000; values above 1000 will
   *   be set to 1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListRollouts` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} [request.filter]
   *   Optional. Filter rollouts to be returned. See https://google.aip.dev/160
   *   for more details.
   * @param {string} [request.orderBy]
   *   Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   *   more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.deploy.v1.Rollout|Rollout} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listRolloutsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listRolloutsStream(
    request?: protos.google.cloud.deploy.v1.IListRolloutsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listRollouts'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listRollouts.createStream(
      this.innerApiCalls.listRollouts as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listRollouts`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The `Release` which owns this collection of `Rollout` objects.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of `Rollout` objects to return. The service
   *   may return fewer than this value. If unspecified, at most 50 `Rollout`
   *   objects will be returned. The maximum value is 1000; values above 1000 will
   *   be set to 1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListRollouts` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} [request.filter]
   *   Optional. Filter rollouts to be returned. See https://google.aip.dev/160
   *   for more details.
   * @param {string} [request.orderBy]
   *   Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   *   more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.deploy.v1.Rollout|Rollout}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.list_rollouts.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_ListRollouts_async
   */
  listRolloutsAsync(
    request?: protos.google.cloud.deploy.v1.IListRolloutsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.deploy.v1.IRollout> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listRollouts'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listRollouts.asyncIterate(
      this.innerApiCalls['listRollouts'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.deploy.v1.IRollout>;
  }
  /**
   * Lists JobRuns in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The `Rollout` which owns this collection of `JobRun` objects.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of `JobRun` objects to return. The service may
   *   return fewer than this value. If unspecified, at most 50 `JobRun` objects
   *   will be returned. The maximum value is 1000; values above 1000 will be set
   *   to 1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListJobRuns` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match the call that provided
   *   the page token.
   * @param {string} [request.filter]
   *   Optional. Filter results to be returned. See https://google.aip.dev/160 for
   *   more details.
   * @param {string} [request.orderBy]
   *   Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   *   more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.deploy.v1.JobRun|JobRun}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listJobRunsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listJobRuns(
    request?: protos.google.cloud.deploy.v1.IListJobRunsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IJobRun[],
      protos.google.cloud.deploy.v1.IListJobRunsRequest | null,
      protos.google.cloud.deploy.v1.IListJobRunsResponse,
    ]
  >;
  listJobRuns(
    request: protos.google.cloud.deploy.v1.IListJobRunsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListJobRunsRequest,
      protos.google.cloud.deploy.v1.IListJobRunsResponse | null | undefined,
      protos.google.cloud.deploy.v1.IJobRun
    >
  ): void;
  listJobRuns(
    request: protos.google.cloud.deploy.v1.IListJobRunsRequest,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListJobRunsRequest,
      protos.google.cloud.deploy.v1.IListJobRunsResponse | null | undefined,
      protos.google.cloud.deploy.v1.IJobRun
    >
  ): void;
  listJobRuns(
    request?: protos.google.cloud.deploy.v1.IListJobRunsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.deploy.v1.IListJobRunsRequest,
          protos.google.cloud.deploy.v1.IListJobRunsResponse | null | undefined,
          protos.google.cloud.deploy.v1.IJobRun
        >,
    callback?: PaginationCallback<
      protos.google.cloud.deploy.v1.IListJobRunsRequest,
      protos.google.cloud.deploy.v1.IListJobRunsResponse | null | undefined,
      protos.google.cloud.deploy.v1.IJobRun
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IJobRun[],
      protos.google.cloud.deploy.v1.IListJobRunsRequest | null,
      protos.google.cloud.deploy.v1.IListJobRunsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listJobRuns(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The `Rollout` which owns this collection of `JobRun` objects.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of `JobRun` objects to return. The service may
   *   return fewer than this value. If unspecified, at most 50 `JobRun` objects
   *   will be returned. The maximum value is 1000; values above 1000 will be set
   *   to 1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListJobRuns` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match the call that provided
   *   the page token.
   * @param {string} [request.filter]
   *   Optional. Filter results to be returned. See https://google.aip.dev/160 for
   *   more details.
   * @param {string} [request.orderBy]
   *   Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   *   more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.deploy.v1.JobRun|JobRun} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listJobRunsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listJobRunsStream(
    request?: protos.google.cloud.deploy.v1.IListJobRunsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listJobRuns'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listJobRuns.createStream(
      this.innerApiCalls.listJobRuns as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listJobRuns`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The `Rollout` which owns this collection of `JobRun` objects.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of `JobRun` objects to return. The service may
   *   return fewer than this value. If unspecified, at most 50 `JobRun` objects
   *   will be returned. The maximum value is 1000; values above 1000 will be set
   *   to 1000.
   * @param {string} [request.pageToken]
   *   Optional. A page token, received from a previous `ListJobRuns` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match the call that provided
   *   the page token.
   * @param {string} [request.filter]
   *   Optional. Filter results to be returned. See https://google.aip.dev/160 for
   *   more details.
   * @param {string} [request.orderBy]
   *   Optional. Field to sort by. See https://google.aip.dev/132#ordering for
   *   more details.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.deploy.v1.JobRun|JobRun}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.list_job_runs.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_ListJobRuns_async
   */
  listJobRunsAsync(
    request?: protos.google.cloud.deploy.v1.IListJobRunsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.deploy.v1.IJobRun> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listJobRuns'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listJobRuns.asyncIterate(
      this.innerApiCalls['listJobRuns'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.deploy.v1.IJobRun>;
  }
  /**
   * Lists Automations in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent `Delivery Pipeline`, which owns this collection of
   *   automations. Format must be
   *   `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
   * @param {number} request.pageSize
   *   The maximum number of automations to return. The service may return
   *   fewer than this value. If unspecified, at most 50 automations will
   *   be returned. The maximum value is 1000; values above 1000 will be set
   *   to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListAutomations` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} request.filter
   *   Filter automations to be returned. All fields can be used in the
   *   filter.
   * @param {string} request.orderBy
   *   Field to sort by.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.deploy.v1.Automation|Automation}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listAutomationsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listAutomations(
    request?: protos.google.cloud.deploy.v1.IListAutomationsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IAutomation[],
      protos.google.cloud.deploy.v1.IListAutomationsRequest | null,
      protos.google.cloud.deploy.v1.IListAutomationsResponse,
    ]
  >;
  listAutomations(
    request: protos.google.cloud.deploy.v1.IListAutomationsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListAutomationsRequest,
      protos.google.cloud.deploy.v1.IListAutomationsResponse | null | undefined,
      protos.google.cloud.deploy.v1.IAutomation
    >
  ): void;
  listAutomations(
    request: protos.google.cloud.deploy.v1.IListAutomationsRequest,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListAutomationsRequest,
      protos.google.cloud.deploy.v1.IListAutomationsResponse | null | undefined,
      protos.google.cloud.deploy.v1.IAutomation
    >
  ): void;
  listAutomations(
    request?: protos.google.cloud.deploy.v1.IListAutomationsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.deploy.v1.IListAutomationsRequest,
          | protos.google.cloud.deploy.v1.IListAutomationsResponse
          | null
          | undefined,
          protos.google.cloud.deploy.v1.IAutomation
        >,
    callback?: PaginationCallback<
      protos.google.cloud.deploy.v1.IListAutomationsRequest,
      protos.google.cloud.deploy.v1.IListAutomationsResponse | null | undefined,
      protos.google.cloud.deploy.v1.IAutomation
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IAutomation[],
      protos.google.cloud.deploy.v1.IListAutomationsRequest | null,
      protos.google.cloud.deploy.v1.IListAutomationsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listAutomations(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent `Delivery Pipeline`, which owns this collection of
   *   automations. Format must be
   *   `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
   * @param {number} request.pageSize
   *   The maximum number of automations to return. The service may return
   *   fewer than this value. If unspecified, at most 50 automations will
   *   be returned. The maximum value is 1000; values above 1000 will be set
   *   to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListAutomations` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} request.filter
   *   Filter automations to be returned. All fields can be used in the
   *   filter.
   * @param {string} request.orderBy
   *   Field to sort by.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.deploy.v1.Automation|Automation} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listAutomationsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listAutomationsStream(
    request?: protos.google.cloud.deploy.v1.IListAutomationsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listAutomations'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listAutomations.createStream(
      this.innerApiCalls.listAutomations as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listAutomations`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent `Delivery Pipeline`, which owns this collection of
   *   automations. Format must be
   *   `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
   * @param {number} request.pageSize
   *   The maximum number of automations to return. The service may return
   *   fewer than this value. If unspecified, at most 50 automations will
   *   be returned. The maximum value is 1000; values above 1000 will be set
   *   to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListAutomations` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} request.filter
   *   Filter automations to be returned. All fields can be used in the
   *   filter.
   * @param {string} request.orderBy
   *   Field to sort by.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.deploy.v1.Automation|Automation}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.list_automations.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_ListAutomations_async
   */
  listAutomationsAsync(
    request?: protos.google.cloud.deploy.v1.IListAutomationsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.deploy.v1.IAutomation> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listAutomations'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listAutomations.asyncIterate(
      this.innerApiCalls['listAutomations'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.deploy.v1.IAutomation>;
  }
  /**
   * Lists AutomationRuns in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent `Delivery Pipeline`, which owns this collection of
   *   automationRuns. Format must be
   *   `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}`.
   * @param {number} request.pageSize
   *   The maximum number of automationRuns to return. The service may return
   *   fewer than this value. If unspecified, at most 50 automationRuns will
   *   be returned. The maximum value is 1000; values above 1000 will be set
   *   to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListAutomationRuns` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} request.filter
   *   Filter automationRuns to be returned. All fields can be used in the
   *   filter.
   * @param {string} request.orderBy
   *   Field to sort by.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.deploy.v1.AutomationRun|AutomationRun}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listAutomationRunsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listAutomationRuns(
    request?: protos.google.cloud.deploy.v1.IListAutomationRunsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IAutomationRun[],
      protos.google.cloud.deploy.v1.IListAutomationRunsRequest | null,
      protos.google.cloud.deploy.v1.IListAutomationRunsResponse,
    ]
  >;
  listAutomationRuns(
    request: protos.google.cloud.deploy.v1.IListAutomationRunsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListAutomationRunsRequest,
      | protos.google.cloud.deploy.v1.IListAutomationRunsResponse
      | null
      | undefined,
      protos.google.cloud.deploy.v1.IAutomationRun
    >
  ): void;
  listAutomationRuns(
    request: protos.google.cloud.deploy.v1.IListAutomationRunsRequest,
    callback: PaginationCallback<
      protos.google.cloud.deploy.v1.IListAutomationRunsRequest,
      | protos.google.cloud.deploy.v1.IListAutomationRunsResponse
      | null
      | undefined,
      protos.google.cloud.deploy.v1.IAutomationRun
    >
  ): void;
  listAutomationRuns(
    request?: protos.google.cloud.deploy.v1.IListAutomationRunsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.deploy.v1.IListAutomationRunsRequest,
          | protos.google.cloud.deploy.v1.IListAutomationRunsResponse
          | null
          | undefined,
          protos.google.cloud.deploy.v1.IAutomationRun
        >,
    callback?: PaginationCallback<
      protos.google.cloud.deploy.v1.IListAutomationRunsRequest,
      | protos.google.cloud.deploy.v1.IListAutomationRunsResponse
      | null
      | undefined,
      protos.google.cloud.deploy.v1.IAutomationRun
    >
  ): Promise<
    [
      protos.google.cloud.deploy.v1.IAutomationRun[],
      protos.google.cloud.deploy.v1.IListAutomationRunsRequest | null,
      protos.google.cloud.deploy.v1.IListAutomationRunsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listAutomationRuns(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent `Delivery Pipeline`, which owns this collection of
   *   automationRuns. Format must be
   *   `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}`.
   * @param {number} request.pageSize
   *   The maximum number of automationRuns to return. The service may return
   *   fewer than this value. If unspecified, at most 50 automationRuns will
   *   be returned. The maximum value is 1000; values above 1000 will be set
   *   to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListAutomationRuns` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} request.filter
   *   Filter automationRuns to be returned. All fields can be used in the
   *   filter.
   * @param {string} request.orderBy
   *   Field to sort by.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.deploy.v1.AutomationRun|AutomationRun} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listAutomationRunsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listAutomationRunsStream(
    request?: protos.google.cloud.deploy.v1.IListAutomationRunsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listAutomationRuns'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listAutomationRuns.createStream(
      this.innerApiCalls.listAutomationRuns as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listAutomationRuns`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent `Delivery Pipeline`, which owns this collection of
   *   automationRuns. Format must be
   *   `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}`.
   * @param {number} request.pageSize
   *   The maximum number of automationRuns to return. The service may return
   *   fewer than this value. If unspecified, at most 50 automationRuns will
   *   be returned. The maximum value is 1000; values above 1000 will be set
   *   to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListAutomationRuns` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other provided parameters match
   *   the call that provided the page token.
   * @param {string} request.filter
   *   Filter automationRuns to be returned. All fields can be used in the
   *   filter.
   * @param {string} request.orderBy
   *   Field to sort by.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.deploy.v1.AutomationRun|AutomationRun}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/cloud_deploy.list_automation_runs.js</caption>
   * region_tag:clouddeploy_v1_generated_CloudDeploy_ListAutomationRuns_async
   */
  listAutomationRunsAsync(
    request?: protos.google.cloud.deploy.v1.IListAutomationRunsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.deploy.v1.IAutomationRun> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listAutomationRuns'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listAutomationRuns.asyncIterate(
      this.innerApiCalls['listAutomationRuns'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.deploy.v1.IAutomationRun>;
  }
  /**
   * Gets the access control policy for a resource. Returns an empty policy
   * if the resource exists and does not have a policy set.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {Object} [request.options]
   *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
   *   `GetIamPolicy`. This field is only used by Cloud IAM.
   *
   *   This object should have the same structure as {@link google.iam.v1.GetPolicyOptions | GetPolicyOptions}.
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing {@link google.iam.v1.Policy | Policy}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.iam.v1.Policy | Policy}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getIamPolicy(
    request: IamProtos.google.iam.v1.GetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<[IamProtos.google.iam.v1.Policy]> {
    return this.iamClient.getIamPolicy(request, options, callback);
  }

  /**
   * Returns permissions that a caller has on the specified resource. If the
   * resource does not exist, this will return an empty set of
   * permissions, not a NOT_FOUND error.
   *
   * Note: This operation is designed to be used for building
   * permission-aware UIs and command-line tools, not for authorization
   * checking. This operation may "fail open" without warning.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy detail is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {string[]} request.permissions
   *   The set of permissions to check for the `resource`. Permissions with
   *   wildcards (such as '*' or 'storage.*') are not allowed. For more
   *   information see {@link https://cloud.google.com/iam/docs/overview#permissions | IAM Overview }.
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  setIamPolicy(
    request: IamProtos.google.iam.v1.SetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<[IamProtos.google.iam.v1.Policy]> {
    return this.iamClient.setIamPolicy(request, options, callback);
  }

  /**
   * Returns permissions that a caller has on the specified resource. If the
   * resource does not exist, this will return an empty set of
   * permissions, not a NOT_FOUND error.
   *
   * Note: This operation is designed to be used for building
   * permission-aware UIs and command-line tools, not for authorization
   * checking. This operation may "fail open" without warning.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy detail is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {string[]} request.permissions
   *   The set of permissions to check for the `resource`. Permissions with
   *   wildcards (such as '*' or 'storage.*') are not allowed. For more
   *   information see {@link https://cloud.google.com/iam/docs/overview#permissions | IAM Overview }.
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   *
   */
  testIamPermissions(
    request: IamProtos.google.iam.v1.TestIamPermissionsRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.TestIamPermissionsResponse,
          IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.TestIamPermissionsResponse,
      IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<[IamProtos.google.iam.v1.TestIamPermissionsResponse]> {
    return this.iamClient.testIamPermissions(request, options, callback);
  }

  /**
   * Gets information about a location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Resource name for the location.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example
   * ```
   * const [response] = await client.getLocation(request);
   * ```
   */
  getLocation(
    request: LocationProtos.google.cloud.location.IGetLocationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          LocationProtos.google.cloud.location.ILocation,
          | LocationProtos.google.cloud.location.IGetLocationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LocationProtos.google.cloud.location.ILocation,
      | LocationProtos.google.cloud.location.IGetLocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.getLocation(request, options, callback);
  }

  /**
   * Lists information about the supported locations for this service. Returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   The resource that owns the locations collection, if applicable.
   * @param {string} request.filter
   *   The standard list filter.
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example
   * ```
   * const iterable = client.listLocationsAsync(request);
   * for await (const response of iterable) {
   *   // process response
   * }
   * ```
   */
  listLocationsAsync(
    request: LocationProtos.google.cloud.location.IListLocationsRequest,
    options?: CallOptions
  ): AsyncIterable<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.listLocationsAsync(request, options);
  }

  /**
   * Gets the latest state of a long-running operation.  Clients can use this
   * method to poll the operation result at intervals as recommended by the API
   * service.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See {@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
   *   for the details.
   * @param {function(?Error, ?Object)=} callback
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing
   *   {@link google.longrunning.Operation | google.longrunning.Operation}.
   * @return {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   * {@link google.longrunning.Operation | google.longrunning.Operation}.
   * The promise has a method named "cancel" which cancels the ongoing API call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * const name = '';
   * const [response] = await client.getOperation({name});
   * // doThingsWith(response)
   * ```
   */
  getOperation(
    request: protos.google.longrunning.GetOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.longrunning.Operation,
          protos.google.longrunning.GetOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.longrunning.Operation,
      protos.google.longrunning.GetOperationRequest,
      {} | null | undefined
    >
  ): Promise<[protos.google.longrunning.Operation]> {
    return this.operationsClient.getOperation(request, options, callback);
  }
  /**
   * Lists operations that match the specified filter in the request. If the
   * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.
   *
   * For-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation collection.
   * @param {string} request.filter - The standard list filter.
   * @param {number=} request.pageSize -
   *   The maximum number of resources contained in the underlying API
   *   response. If page streaming is performed per-resource, this
   *   parameter does not affect the return value. If page streaming is
   *   performed per-page, this determines the maximum number of
   *   resources in a page.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See {@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
   *   details.
   * @returns {Object}
   *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * for await (const response of client.listOperationsAsync(request));
   * // doThingsWith(response)
   * ```
   */
  listOperationsAsync(
    request: protos.google.longrunning.ListOperationsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.longrunning.ListOperationsResponse> {
    return this.operationsClient.listOperationsAsync(request, options);
  }
  /**
   * Starts asynchronous cancellation on a long-running operation.  The server
   * makes a best effort to cancel the operation, but success is not
   * guaranteed.  If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
   * {@link Operations.GetOperation} or
   * other methods to check whether the cancellation succeeded or whether the
   * operation completed despite cancellation. On successful cancellation,
   * the operation is not deleted; instead, it becomes an operation with
   * an {@link Operation.error} value with a {@link google.rpc.Status.code} of
   * 1, corresponding to `Code.CANCELLED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be cancelled.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See {@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
   * details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.cancelOperation({name: ''});
   * ```
   */
  cancelOperation(
    request: protos.google.longrunning.CancelOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.CancelOperationRequest,
          {} | undefined | null
        >,
    callback?: Callback<
      protos.google.longrunning.CancelOperationRequest,
      protos.google.protobuf.Empty,
      {} | undefined | null
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.cancelOperation(request, options, callback);
  }

  /**
   * Deletes a long-running operation. This method indicates that the client is
   * no longer interested in the operation result. It does not cancel the
   * operation. If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be deleted.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See {@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
   * for the details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.deleteOperation({name: ''});
   * ```
   */
  deleteOperation(
    request: protos.google.longrunning.DeleteOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.DeleteOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.Empty,
      protos.google.longrunning.DeleteOperationRequest,
      {} | null | undefined
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.deleteOperation(request, options, callback);
  }

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified automation resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} delivery_pipeline
   * @param {string} automation
   * @returns {string} Resource name string.
   */
  automationPath(
    project: string,
    location: string,
    deliveryPipeline: string,
    automation: string
  ) {
    return this.pathTemplates.automationPathTemplate.render({
      project: project,
      location: location,
      delivery_pipeline: deliveryPipeline,
      automation: automation,
    });
  }

  /**
   * Parse the project from Automation resource.
   *
   * @param {string} automationName
   *   A fully-qualified path representing Automation resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromAutomationName(automationName: string) {
    return this.pathTemplates.automationPathTemplate.match(automationName)
      .project;
  }

  /**
   * Parse the location from Automation resource.
   *
   * @param {string} automationName
   *   A fully-qualified path representing Automation resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromAutomationName(automationName: string) {
    return this.pathTemplates.automationPathTemplate.match(automationName)
      .location;
  }

  /**
   * Parse the delivery_pipeline from Automation resource.
   *
   * @param {string} automationName
   *   A fully-qualified path representing Automation resource.
   * @returns {string} A string representing the delivery_pipeline.
   */
  matchDeliveryPipelineFromAutomationName(automationName: string) {
    return this.pathTemplates.automationPathTemplate.match(automationName)
      .delivery_pipeline;
  }

  /**
   * Parse the automation from Automation resource.
   *
   * @param {string} automationName
   *   A fully-qualified path representing Automation resource.
   * @returns {string} A string representing the automation.
   */
  matchAutomationFromAutomationName(automationName: string) {
    return this.pathTemplates.automationPathTemplate.match(automationName)
      .automation;
  }

  /**
   * Return a fully-qualified automationRun resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} delivery_pipeline
   * @param {string} automation_run
   * @returns {string} Resource name string.
   */
  automationRunPath(
    project: string,
    location: string,
    deliveryPipeline: string,
    automationRun: string
  ) {
    return this.pathTemplates.automationRunPathTemplate.render({
      project: project,
      location: location,
      delivery_pipeline: deliveryPipeline,
      automation_run: automationRun,
    });
  }

  /**
   * Parse the project from AutomationRun resource.
   *
   * @param {string} automationRunName
   *   A fully-qualified path representing AutomationRun resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromAutomationRunName(automationRunName: string) {
    return this.pathTemplates.automationRunPathTemplate.match(automationRunName)
      .project;
  }

  /**
   * Parse the location from AutomationRun resource.
   *
   * @param {string} automationRunName
   *   A fully-qualified path representing AutomationRun resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromAutomationRunName(automationRunName: string) {
    return this.pathTemplates.automationRunPathTemplate.match(automationRunName)
      .location;
  }

  /**
   * Parse the delivery_pipeline from AutomationRun resource.
   *
   * @param {string} automationRunName
   *   A fully-qualified path representing AutomationRun resource.
   * @returns {string} A string representing the delivery_pipeline.
   */
  matchDeliveryPipelineFromAutomationRunName(automationRunName: string) {
    return this.pathTemplates.automationRunPathTemplate.match(automationRunName)
      .delivery_pipeline;
  }

  /**
   * Parse the automation_run from AutomationRun resource.
   *
   * @param {string} automationRunName
   *   A fully-qualified path representing AutomationRun resource.
   * @returns {string} A string representing the automation_run.
   */
  matchAutomationRunFromAutomationRunName(automationRunName: string) {
    return this.pathTemplates.automationRunPathTemplate.match(automationRunName)
      .automation_run;
  }

  /**
   * Return a fully-qualified build resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} build
   * @returns {string} Resource name string.
   */
  buildPath(project: string, location: string, build: string) {
    return this.pathTemplates.buildPathTemplate.render({
      project: project,
      location: location,
      build: build,
    });
  }

  /**
   * Parse the project from Build resource.
   *
   * @param {string} buildName
   *   A fully-qualified path representing Build resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromBuildName(buildName: string) {
    return this.pathTemplates.buildPathTemplate.match(buildName).project;
  }

  /**
   * Parse the location from Build resource.
   *
   * @param {string} buildName
   *   A fully-qualified path representing Build resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromBuildName(buildName: string) {
    return this.pathTemplates.buildPathTemplate.match(buildName).location;
  }

  /**
   * Parse the build from Build resource.
   *
   * @param {string} buildName
   *   A fully-qualified path representing Build resource.
   * @returns {string} A string representing the build.
   */
  matchBuildFromBuildName(buildName: string) {
    return this.pathTemplates.buildPathTemplate.match(buildName).build;
  }

  /**
   * Return a fully-qualified cluster resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} cluster
   * @returns {string} Resource name string.
   */
  clusterPath(project: string, location: string, cluster: string) {
    return this.pathTemplates.clusterPathTemplate.render({
      project: project,
      location: location,
      cluster: cluster,
    });
  }

  /**
   * Parse the project from Cluster resource.
   *
   * @param {string} clusterName
   *   A fully-qualified path representing Cluster resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromClusterName(clusterName: string) {
    return this.pathTemplates.clusterPathTemplate.match(clusterName).project;
  }

  /**
   * Parse the location from Cluster resource.
   *
   * @param {string} clusterName
   *   A fully-qualified path representing Cluster resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromClusterName(clusterName: string) {
    return this.pathTemplates.clusterPathTemplate.match(clusterName).location;
  }

  /**
   * Parse the cluster from Cluster resource.
   *
   * @param {string} clusterName
   *   A fully-qualified path representing Cluster resource.
   * @returns {string} A string representing the cluster.
   */
  matchClusterFromClusterName(clusterName: string) {
    return this.pathTemplates.clusterPathTemplate.match(clusterName).cluster;
  }

  /**
   * Return a fully-qualified config resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @returns {string} Resource name string.
   */
  configPath(project: string, location: string) {
    return this.pathTemplates.configPathTemplate.render({
      project: project,
      location: location,
    });
  }

  /**
   * Parse the project from Config resource.
   *
   * @param {string} configName
   *   A fully-qualified path representing Config resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromConfigName(configName: string) {
    return this.pathTemplates.configPathTemplate.match(configName).project;
  }

  /**
   * Parse the location from Config resource.
   *
   * @param {string} configName
   *   A fully-qualified path representing Config resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromConfigName(configName: string) {
    return this.pathTemplates.configPathTemplate.match(configName).location;
  }

  /**
   * Return a fully-qualified customTargetType resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} custom_target_type
   * @returns {string} Resource name string.
   */
  customTargetTypePath(
    project: string,
    location: string,
    customTargetType: string
  ) {
    return this.pathTemplates.customTargetTypePathTemplate.render({
      project: project,
      location: location,
      custom_target_type: customTargetType,
    });
  }

  /**
   * Parse the project from CustomTargetType resource.
   *
   * @param {string} customTargetTypeName
   *   A fully-qualified path representing CustomTargetType resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromCustomTargetTypeName(customTargetTypeName: string) {
    return this.pathTemplates.customTargetTypePathTemplate.match(
      customTargetTypeName
    ).project;
  }

  /**
   * Parse the location from CustomTargetType resource.
   *
   * @param {string} customTargetTypeName
   *   A fully-qualified path representing CustomTargetType resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromCustomTargetTypeName(customTargetTypeName: string) {
    return this.pathTemplates.customTargetTypePathTemplate.match(
      customTargetTypeName
    ).location;
  }

  /**
   * Parse the custom_target_type from CustomTargetType resource.
   *
   * @param {string} customTargetTypeName
   *   A fully-qualified path representing CustomTargetType resource.
   * @returns {string} A string representing the custom_target_type.
   */
  matchCustomTargetTypeFromCustomTargetTypeName(customTargetTypeName: string) {
    return this.pathTemplates.customTargetTypePathTemplate.match(
      customTargetTypeName
    ).custom_target_type;
  }

  /**
   * Return a fully-qualified deliveryPipeline resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} delivery_pipeline
   * @returns {string} Resource name string.
   */
  deliveryPipelinePath(
    project: string,
    location: string,
    deliveryPipeline: string
  ) {
    return this.pathTemplates.deliveryPipelinePathTemplate.render({
      project: project,
      location: location,
      delivery_pipeline: deliveryPipeline,
    });
  }

  /**
   * Parse the project from DeliveryPipeline resource.
   *
   * @param {string} deliveryPipelineName
   *   A fully-qualified path representing DeliveryPipeline resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromDeliveryPipelineName(deliveryPipelineName: string) {
    return this.pathTemplates.deliveryPipelinePathTemplate.match(
      deliveryPipelineName
    ).project;
  }

  /**
   * Parse the location from DeliveryPipeline resource.
   *
   * @param {string} deliveryPipelineName
   *   A fully-qualified path representing DeliveryPipeline resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromDeliveryPipelineName(deliveryPipelineName: string) {
    return this.pathTemplates.deliveryPipelinePathTemplate.match(
      deliveryPipelineName
    ).location;
  }

  /**
   * Parse the delivery_pipeline from DeliveryPipeline resource.
   *
   * @param {string} deliveryPipelineName
   *   A fully-qualified path representing DeliveryPipeline resource.
   * @returns {string} A string representing the delivery_pipeline.
   */
  matchDeliveryPipelineFromDeliveryPipelineName(deliveryPipelineName: string) {
    return this.pathTemplates.deliveryPipelinePathTemplate.match(
      deliveryPipelineName
    ).delivery_pipeline;
  }

  /**
   * Return a fully-qualified job resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} job
   * @returns {string} Resource name string.
   */
  jobPath(project: string, location: string, job: string) {
    return this.pathTemplates.jobPathTemplate.render({
      project: project,
      location: location,
      job: job,
    });
  }

  /**
   * Parse the project from Job resource.
   *
   * @param {string} jobName
   *   A fully-qualified path representing Job resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromJobName(jobName: string) {
    return this.pathTemplates.jobPathTemplate.match(jobName).project;
  }

  /**
   * Parse the location from Job resource.
   *
   * @param {string} jobName
   *   A fully-qualified path representing Job resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromJobName(jobName: string) {
    return this.pathTemplates.jobPathTemplate.match(jobName).location;
  }

  /**
   * Parse the job from Job resource.
   *
   * @param {string} jobName
   *   A fully-qualified path representing Job resource.
   * @returns {string} A string representing the job.
   */
  matchJobFromJobName(jobName: string) {
    return this.pathTemplates.jobPathTemplate.match(jobName).job;
  }

  /**
   * Return a fully-qualified jobRun resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} delivery_pipeline
   * @param {string} release
   * @param {string} rollout
   * @param {string} job_run
   * @returns {string} Resource name string.
   */
  jobRunPath(
    project: string,
    location: string,
    deliveryPipeline: string,
    release: string,
    rollout: string,
    jobRun: string
  ) {
    return this.pathTemplates.jobRunPathTemplate.render({
      project: project,
      location: location,
      delivery_pipeline: deliveryPipeline,
      release: release,
      rollout: rollout,
      job_run: jobRun,
    });
  }

  /**
   * Parse the project from JobRun resource.
   *
   * @param {string} jobRunName
   *   A fully-qualified path representing JobRun resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromJobRunName(jobRunName: string) {
    return this.pathTemplates.jobRunPathTemplate.match(jobRunName).project;
  }

  /**
   * Parse the location from JobRun resource.
   *
   * @param {string} jobRunName
   *   A fully-qualified path representing JobRun resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromJobRunName(jobRunName: string) {
    return this.pathTemplates.jobRunPathTemplate.match(jobRunName).location;
  }

  /**
   * Parse the delivery_pipeline from JobRun resource.
   *
   * @param {string} jobRunName
   *   A fully-qualified path representing JobRun resource.
   * @returns {string} A string representing the delivery_pipeline.
   */
  matchDeliveryPipelineFromJobRunName(jobRunName: string) {
    return this.pathTemplates.jobRunPathTemplate.match(jobRunName)
      .delivery_pipeline;
  }

  /**
   * Parse the release from JobRun resource.
   *
   * @param {string} jobRunName
   *   A fully-qualified path representing JobRun resource.
   * @returns {string} A string representing the release.
   */
  matchReleaseFromJobRunName(jobRunName: string) {
    return this.pathTemplates.jobRunPathTemplate.match(jobRunName).release;
  }

  /**
   * Parse the rollout from JobRun resource.
   *
   * @param {string} jobRunName
   *   A fully-qualified path representing JobRun resource.
   * @returns {string} A string representing the rollout.
   */
  matchRolloutFromJobRunName(jobRunName: string) {
    return this.pathTemplates.jobRunPathTemplate.match(jobRunName).rollout;
  }

  /**
   * Parse the job_run from JobRun resource.
   *
   * @param {string} jobRunName
   *   A fully-qualified path representing JobRun resource.
   * @returns {string} A string representing the job_run.
   */
  matchJobRunFromJobRunName(jobRunName: string) {
    return this.pathTemplates.jobRunPathTemplate.match(jobRunName).job_run;
  }

  /**
   * Return a fully-qualified location resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @returns {string} Resource name string.
   */
  locationPath(project: string, location: string) {
    return this.pathTemplates.locationPathTemplate.render({
      project: project,
      location: location,
    });
  }

  /**
   * Parse the project from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).project;
  }

  /**
   * Parse the location from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).location;
  }

  /**
   * Return a fully-qualified membership resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} membership
   * @returns {string} Resource name string.
   */
  membershipPath(project: string, location: string, membership: string) {
    return this.pathTemplates.membershipPathTemplate.render({
      project: project,
      location: location,
      membership: membership,
    });
  }

  /**
   * Parse the project from Membership resource.
   *
   * @param {string} membershipName
   *   A fully-qualified path representing Membership resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromMembershipName(membershipName: string) {
    return this.pathTemplates.membershipPathTemplate.match(membershipName)
      .project;
  }

  /**
   * Parse the location from Membership resource.
   *
   * @param {string} membershipName
   *   A fully-qualified path representing Membership resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromMembershipName(membershipName: string) {
    return this.pathTemplates.membershipPathTemplate.match(membershipName)
      .location;
  }

  /**
   * Parse the membership from Membership resource.
   *
   * @param {string} membershipName
   *   A fully-qualified path representing Membership resource.
   * @returns {string} A string representing the membership.
   */
  matchMembershipFromMembershipName(membershipName: string) {
    return this.pathTemplates.membershipPathTemplate.match(membershipName)
      .membership;
  }

  /**
   * Return a fully-qualified project resource name string.
   *
   * @param {string} project
   * @returns {string} Resource name string.
   */
  projectPath(project: string) {
    return this.pathTemplates.projectPathTemplate.render({
      project: project,
    });
  }

  /**
   * Parse the project from Project resource.
   *
   * @param {string} projectName
   *   A fully-qualified path representing Project resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectName(projectName: string) {
    return this.pathTemplates.projectPathTemplate.match(projectName).project;
  }

  /**
   * Return a fully-qualified release resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} delivery_pipeline
   * @param {string} release
   * @returns {string} Resource name string.
   */
  releasePath(
    project: string,
    location: string,
    deliveryPipeline: string,
    release: string
  ) {
    return this.pathTemplates.releasePathTemplate.render({
      project: project,
      location: location,
      delivery_pipeline: deliveryPipeline,
      release: release,
    });
  }

  /**
   * Parse the project from Release resource.
   *
   * @param {string} releaseName
   *   A fully-qualified path representing Release resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromReleaseName(releaseName: string) {
    return this.pathTemplates.releasePathTemplate.match(releaseName).project;
  }

  /**
   * Parse the location from Release resource.
   *
   * @param {string} releaseName
   *   A fully-qualified path representing Release resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromReleaseName(releaseName: string) {
    return this.pathTemplates.releasePathTemplate.match(releaseName).location;
  }

  /**
   * Parse the delivery_pipeline from Release resource.
   *
   * @param {string} releaseName
   *   A fully-qualified path representing Release resource.
   * @returns {string} A string representing the delivery_pipeline.
   */
  matchDeliveryPipelineFromReleaseName(releaseName: string) {
    return this.pathTemplates.releasePathTemplate.match(releaseName)
      .delivery_pipeline;
  }

  /**
   * Parse the release from Release resource.
   *
   * @param {string} releaseName
   *   A fully-qualified path representing Release resource.
   * @returns {string} A string representing the release.
   */
  matchReleaseFromReleaseName(releaseName: string) {
    return this.pathTemplates.releasePathTemplate.match(releaseName).release;
  }

  /**
   * Return a fully-qualified rollout resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} delivery_pipeline
   * @param {string} release
   * @param {string} rollout
   * @returns {string} Resource name string.
   */
  rolloutPath(
    project: string,
    location: string,
    deliveryPipeline: string,
    release: string,
    rollout: string
  ) {
    return this.pathTemplates.rolloutPathTemplate.render({
      project: project,
      location: location,
      delivery_pipeline: deliveryPipeline,
      release: release,
      rollout: rollout,
    });
  }

  /**
   * Parse the project from Rollout resource.
   *
   * @param {string} rolloutName
   *   A fully-qualified path representing Rollout resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromRolloutName(rolloutName: string) {
    return this.pathTemplates.rolloutPathTemplate.match(rolloutName).project;
  }

  /**
   * Parse the location from Rollout resource.
   *
   * @param {string} rolloutName
   *   A fully-qualified path representing Rollout resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromRolloutName(rolloutName: string) {
    return this.pathTemplates.rolloutPathTemplate.match(rolloutName).location;
  }

  /**
   * Parse the delivery_pipeline from Rollout resource.
   *
   * @param {string} rolloutName
   *   A fully-qualified path representing Rollout resource.
   * @returns {string} A string representing the delivery_pipeline.
   */
  matchDeliveryPipelineFromRolloutName(rolloutName: string) {
    return this.pathTemplates.rolloutPathTemplate.match(rolloutName)
      .delivery_pipeline;
  }

  /**
   * Parse the release from Rollout resource.
   *
   * @param {string} rolloutName
   *   A fully-qualified path representing Rollout resource.
   * @returns {string} A string representing the release.
   */
  matchReleaseFromRolloutName(rolloutName: string) {
    return this.pathTemplates.rolloutPathTemplate.match(rolloutName).release;
  }

  /**
   * Parse the rollout from Rollout resource.
   *
   * @param {string} rolloutName
   *   A fully-qualified path representing Rollout resource.
   * @returns {string} A string representing the rollout.
   */
  matchRolloutFromRolloutName(rolloutName: string) {
    return this.pathTemplates.rolloutPathTemplate.match(rolloutName).rollout;
  }

  /**
   * Return a fully-qualified service resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} service
   * @returns {string} Resource name string.
   */
  servicePath(project: string, location: string, service: string) {
    return this.pathTemplates.servicePathTemplate.render({
      project: project,
      location: location,
      service: service,
    });
  }

  /**
   * Parse the project from Service resource.
   *
   * @param {string} serviceName
   *   A fully-qualified path representing Service resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromServiceName(serviceName: string) {
    return this.pathTemplates.servicePathTemplate.match(serviceName).project;
  }

  /**
   * Parse the location from Service resource.
   *
   * @param {string} serviceName
   *   A fully-qualified path representing Service resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromServiceName(serviceName: string) {
    return this.pathTemplates.servicePathTemplate.match(serviceName).location;
  }

  /**
   * Parse the service from Service resource.
   *
   * @param {string} serviceName
   *   A fully-qualified path representing Service resource.
   * @returns {string} A string representing the service.
   */
  matchServiceFromServiceName(serviceName: string) {
    return this.pathTemplates.servicePathTemplate.match(serviceName).service;
  }

  /**
   * Return a fully-qualified target resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} target
   * @returns {string} Resource name string.
   */
  targetPath(project: string, location: string, target: string) {
    return this.pathTemplates.targetPathTemplate.render({
      project: project,
      location: location,
      target: target,
    });
  }

  /**
   * Parse the project from Target resource.
   *
   * @param {string} targetName
   *   A fully-qualified path representing Target resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromTargetName(targetName: string) {
    return this.pathTemplates.targetPathTemplate.match(targetName).project;
  }

  /**
   * Parse the location from Target resource.
   *
   * @param {string} targetName
   *   A fully-qualified path representing Target resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromTargetName(targetName: string) {
    return this.pathTemplates.targetPathTemplate.match(targetName).location;
  }

  /**
   * Parse the target from Target resource.
   *
   * @param {string} targetName
   *   A fully-qualified path representing Target resource.
   * @returns {string} A string representing the target.
   */
  matchTargetFromTargetName(targetName: string) {
    return this.pathTemplates.targetPathTemplate.match(targetName).target;
  }

  /**
   * Return a fully-qualified workerPool resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} worker_pool
   * @returns {string} Resource name string.
   */
  workerPoolPath(project: string, location: string, workerPool: string) {
    return this.pathTemplates.workerPoolPathTemplate.render({
      project: project,
      location: location,
      worker_pool: workerPool,
    });
  }

  /**
   * Parse the project from WorkerPool resource.
   *
   * @param {string} workerPoolName
   *   A fully-qualified path representing WorkerPool resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromWorkerPoolName(workerPoolName: string) {
    return this.pathTemplates.workerPoolPathTemplate.match(workerPoolName)
      .project;
  }

  /**
   * Parse the location from WorkerPool resource.
   *
   * @param {string} workerPoolName
   *   A fully-qualified path representing WorkerPool resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromWorkerPoolName(workerPoolName: string) {
    return this.pathTemplates.workerPoolPathTemplate.match(workerPoolName)
      .location;
  }

  /**
   * Parse the worker_pool from WorkerPool resource.
   *
   * @param {string} workerPoolName
   *   A fully-qualified path representing WorkerPool resource.
   * @returns {string} A string representing the worker_pool.
   */
  matchWorkerPoolFromWorkerPoolName(workerPoolName: string) {
    return this.pathTemplates.workerPoolPathTemplate.match(workerPoolName)
      .worker_pool;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.cloudDeployStub && !this._terminated) {
      return this.cloudDeployStub.then(stub => {
        this._terminated = true;
        stub.close();
        this.iamClient.close();
        this.locationsClient.close();
        this.operationsClient.close();
      });
    }
    return Promise.resolve();
  }
}
