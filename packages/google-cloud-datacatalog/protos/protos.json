{
  "nested": {
    "google": {
      "nested": {
        "cloud": {
          "nested": {
            "datacatalog": {
              "nested": {
                "v1": {
                  "options": {
                    "cc_enable_arenas": true,
                    "csharp_namespace": "Google.Cloud.DataCatalog.V1",
                    "go_package": "cloud.google.com/go/datacatalog/apiv1/datacatalogpb;datacatalogpb",
                    "java_multiple_files": true,
                    "java_outer_classname": "PolicyTagManagerSerializationProto",
                    "java_package": "com.google.cloud.datacatalog.v1",
                    "php_namespace": "Google\\Cloud\\DataCatalog\\V1",
                    "ruby_package": "Google::Cloud::DataCatalog::V1",
                    "(google.api.resource_definition).type": "datacatalog.googleapis.com/TagTemplateFieldEnumValue",
                    "(google.api.resource_definition).pattern": "projects/{project}/locations/{location}/tagTemplates/{tag_template}/fields/{tag_template_field_id}/enumValues/{enum_value_display_name}"
                  },
                  "nested": {
                    "BigQueryConnectionSpec": {
                      "oneofs": {
                        "connectionSpec": {
                          "oneof": [
                            "cloudSql"
                          ]
                        }
                      },
                      "fields": {
                        "connectionType": {
                          "type": "ConnectionType",
                          "id": 1
                        },
                        "cloudSql": {
                          "type": "CloudSqlBigQueryConnectionSpec",
                          "id": 2
                        },
                        "hasCredential": {
                          "type": "bool",
                          "id": 3
                        }
                      },
                      "nested": {
                        "ConnectionType": {
                          "values": {
                            "CONNECTION_TYPE_UNSPECIFIED": 0,
                            "CLOUD_SQL": 1
                          }
                        }
                      }
                    },
                    "CloudSqlBigQueryConnectionSpec": {
                      "fields": {
                        "instanceId": {
                          "type": "string",
                          "id": 1
                        },
                        "database": {
                          "type": "string",
                          "id": 2
                        },
                        "type": {
                          "type": "DatabaseType",
                          "id": 3
                        }
                      },
                      "nested": {
                        "DatabaseType": {
                          "values": {
                            "DATABASE_TYPE_UNSPECIFIED": 0,
                            "POSTGRES": 1,
                            "MYSQL": 2
                          }
                        }
                      }
                    },
                    "BigQueryRoutineSpec": {
                      "fields": {
                        "importedLibraries": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "PersonalDetails": {
                      "fields": {
                        "starred": {
                          "type": "bool",
                          "id": 1
                        },
                        "starTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        }
                      }
                    },
                    "IntegratedSystem": {
                      "values": {
                        "INTEGRATED_SYSTEM_UNSPECIFIED": 0,
                        "BIGQUERY": 1,
                        "CLOUD_PUBSUB": 2,
                        "DATAPROC_METASTORE": 3,
                        "DATAPLEX": 4,
                        "CLOUD_SPANNER": 6,
                        "CLOUD_BIGTABLE": 7,
                        "CLOUD_SQL": 8,
                        "LOOKER": 9,
                        "VERTEX_AI": 10
                      }
                    },
                    "ManagingSystem": {
                      "values": {
                        "MANAGING_SYSTEM_UNSPECIFIED": 0,
                        "MANAGING_SYSTEM_DATAPLEX": 1,
                        "MANAGING_SYSTEM_OTHER": 2
                      }
                    },
                    "DataSource": {
                      "oneofs": {
                        "properties": {
                          "oneof": [
                            "storageProperties"
                          ]
                        }
                      },
                      "fields": {
                        "service": {
                          "type": "Service",
                          "id": 1
                        },
                        "resource": {
                          "type": "string",
                          "id": 2
                        },
                        "sourceEntry": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "storageProperties": {
                          "type": "StorageProperties",
                          "id": 4
                        }
                      },
                      "nested": {
                        "Service": {
                          "values": {
                            "SERVICE_UNSPECIFIED": 0,
                            "CLOUD_STORAGE": 1,
                            "BIGQUERY": 2
                          }
                        }
                      }
                    },
                    "StorageProperties": {
                      "fields": {
                        "filePattern": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1
                        },
                        "fileType": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "DataCatalog": {
                      "options": {
                        "(google.api.default_host)": "datacatalog.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "SearchCatalog": {
                          "requestType": "SearchCatalogRequest",
                          "responseType": "SearchCatalogResponse",
                          "options": {
                            "(google.api.http).post": "/v1/catalog:search",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "scope,query"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/catalog:search",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "scope,query"
                            }
                          ]
                        },
                        "CreateEntryGroup": {
                          "requestType": "CreateEntryGroupRequest",
                          "responseType": "EntryGroup",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/entryGroups",
                            "(google.api.http).body": "entry_group",
                            "(google.api.method_signature)": "parent,entry_group_id,entry_group"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/entryGroups",
                                "body": "entry_group"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,entry_group_id,entry_group"
                            }
                          ]
                        },
                        "GetEntryGroup": {
                          "requestType": "GetEntryGroupRequest",
                          "responseType": "EntryGroup",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/entryGroups/*}",
                            "(google.api.method_signature)": "name,read_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/entryGroups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.api.method_signature)": "name,read_mask"
                            }
                          ]
                        },
                        "UpdateEntryGroup": {
                          "requestType": "UpdateEntryGroupRequest",
                          "responseType": "EntryGroup",
                          "options": {
                            "(google.api.http).patch": "/v1/{entry_group.name=projects/*/locations/*/entryGroups/*}",
                            "(google.api.http).body": "entry_group",
                            "(google.api.method_signature)": "entry_group,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{entry_group.name=projects/*/locations/*/entryGroups/*}",
                                "body": "entry_group"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entry_group"
                            },
                            {
                              "(google.api.method_signature)": "entry_group,update_mask"
                            }
                          ]
                        },
                        "DeleteEntryGroup": {
                          "requestType": "DeleteEntryGroupRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/entryGroups/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/entryGroups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListEntryGroups": {
                          "requestType": "ListEntryGroupsRequest",
                          "responseType": "ListEntryGroupsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/entryGroups",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/entryGroups"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreateEntry": {
                          "requestType": "CreateEntryRequest",
                          "responseType": "Entry",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/entryGroups/*}/entries",
                            "(google.api.http).body": "entry",
                            "(google.api.method_signature)": "parent,entry_id,entry"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/entryGroups/*}/entries",
                                "body": "entry"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,entry_id,entry"
                            }
                          ]
                        },
                        "UpdateEntry": {
                          "requestType": "UpdateEntryRequest",
                          "responseType": "Entry",
                          "options": {
                            "(google.api.http).patch": "/v1/{entry.name=projects/*/locations/*/entryGroups/*/entries/*}",
                            "(google.api.http).body": "entry",
                            "(google.api.method_signature)": "entry,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{entry.name=projects/*/locations/*/entryGroups/*/entries/*}",
                                "body": "entry"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entry"
                            },
                            {
                              "(google.api.method_signature)": "entry,update_mask"
                            }
                          ]
                        },
                        "DeleteEntry": {
                          "requestType": "DeleteEntryRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/entryGroups/*/entries/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/entryGroups/*/entries/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetEntry": {
                          "requestType": "GetEntryRequest",
                          "responseType": "Entry",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/entryGroups/*/entries/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/entryGroups/*/entries/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "LookupEntry": {
                          "requestType": "LookupEntryRequest",
                          "responseType": "Entry",
                          "options": {
                            "(google.api.http).get": "/v1/entries:lookup"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/entries:lookup"
                              }
                            }
                          ]
                        },
                        "ListEntries": {
                          "requestType": "ListEntriesRequest",
                          "responseType": "ListEntriesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/entryGroups/*}/entries",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/entryGroups/*}/entries"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "ModifyEntryOverview": {
                          "requestType": "ModifyEntryOverviewRequest",
                          "responseType": "EntryOverview",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/entryGroups/*/entries/*}:modifyEntryOverview",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/entryGroups/*/entries/*}:modifyEntryOverview",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "ModifyEntryContacts": {
                          "requestType": "ModifyEntryContactsRequest",
                          "responseType": "Contacts",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/entryGroups/*/entries/*}:modifyEntryContacts",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/entryGroups/*/entries/*}:modifyEntryContacts",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "CreateTagTemplate": {
                          "requestType": "CreateTagTemplateRequest",
                          "responseType": "TagTemplate",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/tagTemplates",
                            "(google.api.http).body": "tag_template",
                            "(google.api.method_signature)": "parent,tag_template_id,tag_template"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/tagTemplates",
                                "body": "tag_template"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tag_template_id,tag_template"
                            }
                          ]
                        },
                        "GetTagTemplate": {
                          "requestType": "GetTagTemplateRequest",
                          "responseType": "TagTemplate",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/tagTemplates/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/tagTemplates/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateTagTemplate": {
                          "requestType": "UpdateTagTemplateRequest",
                          "responseType": "TagTemplate",
                          "options": {
                            "(google.api.http).patch": "/v1/{tag_template.name=projects/*/locations/*/tagTemplates/*}",
                            "(google.api.http).body": "tag_template",
                            "(google.api.method_signature)": "tag_template,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{tag_template.name=projects/*/locations/*/tagTemplates/*}",
                                "body": "tag_template"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tag_template"
                            },
                            {
                              "(google.api.method_signature)": "tag_template,update_mask"
                            }
                          ]
                        },
                        "DeleteTagTemplate": {
                          "requestType": "DeleteTagTemplateRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/tagTemplates/*}",
                            "(google.api.method_signature)": "name,force"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/tagTemplates/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,force"
                            }
                          ]
                        },
                        "CreateTagTemplateField": {
                          "requestType": "CreateTagTemplateFieldRequest",
                          "responseType": "TagTemplateField",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/tagTemplates/*}/fields",
                            "(google.api.http).body": "tag_template_field",
                            "(google.api.method_signature)": "parent,tag_template_field_id,tag_template_field"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/tagTemplates/*}/fields",
                                "body": "tag_template_field"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tag_template_field_id,tag_template_field"
                            }
                          ]
                        },
                        "UpdateTagTemplateField": {
                          "requestType": "UpdateTagTemplateFieldRequest",
                          "responseType": "TagTemplateField",
                          "options": {
                            "(google.api.http).patch": "/v1/{name=projects/*/locations/*/tagTemplates/*/fields/*}",
                            "(google.api.http).body": "tag_template_field",
                            "(google.api.method_signature)": "name,tag_template_field,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{name=projects/*/locations/*/tagTemplates/*/fields/*}",
                                "body": "tag_template_field"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,tag_template_field"
                            },
                            {
                              "(google.api.method_signature)": "name,tag_template_field,update_mask"
                            }
                          ]
                        },
                        "RenameTagTemplateField": {
                          "requestType": "RenameTagTemplateFieldRequest",
                          "responseType": "TagTemplateField",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/tagTemplates/*/fields/*}:rename",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,new_tag_template_field_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/tagTemplates/*/fields/*}:rename",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,new_tag_template_field_id"
                            }
                          ]
                        },
                        "RenameTagTemplateFieldEnumValue": {
                          "requestType": "RenameTagTemplateFieldEnumValueRequest",
                          "responseType": "TagTemplateField",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/tagTemplates/*/fields/*/enumValues/*}:rename",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,new_enum_value_display_name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/tagTemplates/*/fields/*/enumValues/*}:rename",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,new_enum_value_display_name"
                            }
                          ]
                        },
                        "DeleteTagTemplateField": {
                          "requestType": "DeleteTagTemplateFieldRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/tagTemplates/*/fields/*}",
                            "(google.api.method_signature)": "name,force"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/tagTemplates/*/fields/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,force"
                            }
                          ]
                        },
                        "CreateTag": {
                          "requestType": "CreateTagRequest",
                          "responseType": "Tag",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/entryGroups/*/entries/*}/tags",
                            "(google.api.http).body": "tag",
                            "(google.api.http).additional_bindings.post": "/v1/{parent=projects/*/locations/*/entryGroups/*}/tags",
                            "(google.api.http).additional_bindings.body": "tag",
                            "(google.api.method_signature)": "parent,tag"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/entryGroups/*/entries/*}/tags",
                                "body": "tag",
                                "additional_bindings": {
                                  "post": "/v1/{parent=projects/*/locations/*/entryGroups/*}/tags",
                                  "body": "tag"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tag"
                            }
                          ]
                        },
                        "UpdateTag": {
                          "requestType": "UpdateTagRequest",
                          "responseType": "Tag",
                          "options": {
                            "(google.api.http).patch": "/v1/{tag.name=projects/*/locations/*/entryGroups/*/entries/*/tags/*}",
                            "(google.api.http).body": "tag",
                            "(google.api.http).additional_bindings.patch": "/v1/{tag.name=projects/*/locations/*/entryGroups/*/tags/*}",
                            "(google.api.http).additional_bindings.body": "tag",
                            "(google.api.method_signature)": "tag,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{tag.name=projects/*/locations/*/entryGroups/*/entries/*/tags/*}",
                                "body": "tag",
                                "additional_bindings": {
                                  "patch": "/v1/{tag.name=projects/*/locations/*/entryGroups/*/tags/*}",
                                  "body": "tag"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "tag"
                            },
                            {
                              "(google.api.method_signature)": "tag,update_mask"
                            }
                          ]
                        },
                        "DeleteTag": {
                          "requestType": "DeleteTagRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/entryGroups/*/entries/*/tags/*}",
                            "(google.api.http).additional_bindings.delete": "/v1/{name=projects/*/locations/*/entryGroups/*/tags/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/entryGroups/*/entries/*/tags/*}",
                                "additional_bindings": {
                                  "delete": "/v1/{name=projects/*/locations/*/entryGroups/*/tags/*}"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListTags": {
                          "requestType": "ListTagsRequest",
                          "responseType": "ListTagsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/entryGroups/*/entries/*}/tags",
                            "(google.api.http).additional_bindings.get": "/v1/{parent=projects/*/locations/*/entryGroups/*}/tags",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/entryGroups/*/entries/*}/tags",
                                "additional_bindings": {
                                  "get": "/v1/{parent=projects/*/locations/*/entryGroups/*}/tags"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "ReconcileTags": {
                          "requestType": "ReconcileTagsRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/entryGroups/*/entries/*}/tags:reconcile",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "ReconcileTagsResponse",
                            "(google.longrunning.operation_info).metadata_type": "ReconcileTagsMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/entryGroups/*/entries/*}/tags:reconcile",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ReconcileTagsResponse",
                                "metadata_type": "ReconcileTagsMetadata"
                              }
                            }
                          ]
                        },
                        "StarEntry": {
                          "requestType": "StarEntryRequest",
                          "responseType": "StarEntryResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/entryGroups/*/entries/*}:star",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/entryGroups/*/entries/*}:star",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UnstarEntry": {
                          "requestType": "UnstarEntryRequest",
                          "responseType": "UnstarEntryResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/entryGroups/*/entries/*}:unstar",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/entryGroups/*/entries/*}:unstar",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "SetIamPolicy": {
                          "requestType": "google.iam.v1.SetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v1/{resource=projects/*/locations/*/tagTemplates/*}:setIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{resource=projects/*/locations/*/entryGroups/*}:setIamPolicy",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "resource,policy"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{resource=projects/*/locations/*/tagTemplates/*}:setIamPolicy",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{resource=projects/*/locations/*/entryGroups/*}:setIamPolicy",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource,policy"
                            }
                          ]
                        },
                        "GetIamPolicy": {
                          "requestType": "google.iam.v1.GetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v1/{resource=projects/*/locations/*/tagTemplates/*}:getIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{resource=projects/*/locations/*/entryGroups/*/entries/*}:getIamPolicy",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "resource"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{resource=projects/*/locations/*/tagTemplates/*}:getIamPolicy",
                                "body": "*",
                                "additional_bindings": [
                                  {
                                    "post": "/v1/{resource=projects/*/locations/*/entryGroups/*}:getIamPolicy",
                                    "body": "*"
                                  },
                                  {
                                    "post": "/v1/{resource=projects/*/locations/*/entryGroups/*/entries/*}:getIamPolicy",
                                    "body": "*"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource"
                            }
                          ]
                        },
                        "TestIamPermissions": {
                          "requestType": "google.iam.v1.TestIamPermissionsRequest",
                          "responseType": "google.iam.v1.TestIamPermissionsResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{resource=projects/*/locations/*/tagTemplates/*}:testIamPermissions",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{resource=projects/*/locations/*/entryGroups/*/entries/*}:testIamPermissions",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{resource=projects/*/locations/*/tagTemplates/*}:testIamPermissions",
                                "body": "*",
                                "additional_bindings": [
                                  {
                                    "post": "/v1/{resource=projects/*/locations/*/entryGroups/*}:testIamPermissions",
                                    "body": "*"
                                  },
                                  {
                                    "post": "/v1/{resource=projects/*/locations/*/entryGroups/*/entries/*}:testIamPermissions",
                                    "body": "*"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "ImportEntries": {
                          "requestType": "ImportEntriesRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/entryGroups/*}/entries:import",
                            "(google.api.http).body": "*",
                            "(google.longrunning.operation_info).response_type": "ImportEntriesResponse",
                            "(google.longrunning.operation_info).metadata_type": "ImportEntriesMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/entryGroups/*}/entries:import",
                                "body": "*"
                              }
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "ImportEntriesResponse",
                                "metadata_type": "ImportEntriesMetadata"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "SearchCatalogRequest": {
                      "fields": {
                        "scope": {
                          "type": "Scope",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "query": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "adminSearch": {
                          "type": "bool",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "Scope": {
                          "fields": {
                            "includeOrgIds": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            },
                            "includeProjectIds": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3
                            },
                            "includeGcpPublicDatasets": {
                              "type": "bool",
                              "id": 7
                            },
                            "restrictedLocations": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 16,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "starredOnly": {
                              "type": "bool",
                              "id": 18,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "includePublicTagTemplates": {
                              "type": "bool",
                              "id": 19,
                              "options": {
                                "deprecated": true,
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        }
                      }
                    },
                    "SearchCatalogResponse": {
                      "fields": {
                        "results": {
                          "rule": "repeated",
                          "type": "SearchCatalogResult",
                          "id": 1
                        },
                        "totalSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "CreateEntryGroupRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/EntryGroup"
                          }
                        },
                        "entryGroupId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "entryGroup": {
                          "type": "EntryGroup",
                          "id": 2
                        }
                      }
                    },
                    "UpdateEntryGroupRequest": {
                      "fields": {
                        "entryGroup": {
                          "type": "EntryGroup",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "GetEntryGroupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/EntryGroup"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteEntryGroupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/EntryGroup"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListEntryGroupsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/EntryGroup"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListEntryGroupsResponse": {
                      "fields": {
                        "entryGroups": {
                          "rule": "repeated",
                          "type": "EntryGroup",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "CreateEntryRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/EntryGroup"
                          }
                        },
                        "entryId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "entry": {
                          "type": "Entry",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateEntryRequest": {
                      "fields": {
                        "entry": {
                          "type": "Entry",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteEntryRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Entry"
                          }
                        }
                      }
                    },
                    "GetEntryRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Entry"
                          }
                        }
                      }
                    },
                    "LookupEntryRequest": {
                      "oneofs": {
                        "targetName": {
                          "oneof": [
                            "linkedResource",
                            "sqlResource",
                            "fullyQualifiedName"
                          ]
                        }
                      },
                      "fields": {
                        "linkedResource": {
                          "type": "string",
                          "id": 1
                        },
                        "sqlResource": {
                          "type": "string",
                          "id": 3
                        },
                        "fullyQualifiedName": {
                          "type": "string",
                          "id": 5
                        },
                        "project": {
                          "type": "string",
                          "id": 6
                        },
                        "location": {
                          "type": "string",
                          "id": 7
                        }
                      }
                    },
                    "Entry": {
                      "options": {
                        "(google.api.resource).type": "datacatalog.googleapis.com/Entry",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/entryGroups/{entry_group}/entries/{entry}"
                      },
                      "oneofs": {
                        "entryType": {
                          "oneof": [
                            "type",
                            "userSpecifiedType"
                          ]
                        },
                        "system": {
                          "oneof": [
                            "integratedSystem",
                            "userSpecifiedSystem"
                          ]
                        },
                        "systemSpec": {
                          "oneof": [
                            "sqlDatabaseSystemSpec",
                            "lookerSystemSpec",
                            "cloudBigtableSystemSpec"
                          ]
                        },
                        "typeSpec": {
                          "oneof": [
                            "gcsFilesetSpec",
                            "bigqueryTableSpec",
                            "bigqueryDateShardedSpec"
                          ]
                        },
                        "spec": {
                          "oneof": [
                            "databaseTableSpec",
                            "dataSourceConnectionSpec",
                            "routineSpec",
                            "datasetSpec",
                            "filesetSpec",
                            "serviceSpec",
                            "modelSpec"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/EntryGroup"
                          }
                        },
                        "linkedResource": {
                          "type": "string",
                          "id": 9
                        },
                        "fullyQualifiedName": {
                          "type": "string",
                          "id": 29
                        },
                        "type": {
                          "type": "EntryType",
                          "id": 2
                        },
                        "userSpecifiedType": {
                          "type": "string",
                          "id": 16
                        },
                        "integratedSystem": {
                          "type": "IntegratedSystem",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "userSpecifiedSystem": {
                          "type": "string",
                          "id": 18
                        },
                        "sqlDatabaseSystemSpec": {
                          "type": "SqlDatabaseSystemSpec",
                          "id": 39
                        },
                        "lookerSystemSpec": {
                          "type": "LookerSystemSpec",
                          "id": 40
                        },
                        "cloudBigtableSystemSpec": {
                          "type": "CloudBigtableSystemSpec",
                          "id": 41
                        },
                        "gcsFilesetSpec": {
                          "type": "GcsFilesetSpec",
                          "id": 6
                        },
                        "bigqueryTableSpec": {
                          "type": "BigQueryTableSpec",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "bigqueryDateShardedSpec": {
                          "type": "BigQueryDateShardedSpec",
                          "id": 15,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "databaseTableSpec": {
                          "type": "DatabaseTableSpec",
                          "id": 24
                        },
                        "dataSourceConnectionSpec": {
                          "type": "DataSourceConnectionSpec",
                          "id": 27
                        },
                        "routineSpec": {
                          "type": "RoutineSpec",
                          "id": 28
                        },
                        "datasetSpec": {
                          "type": "DatasetSpec",
                          "id": 32
                        },
                        "filesetSpec": {
                          "type": "FilesetSpec",
                          "id": 33
                        },
                        "serviceSpec": {
                          "type": "ServiceSpec",
                          "id": 42
                        },
                        "modelSpec": {
                          "type": "ModelSpec",
                          "id": 43
                        },
                        "displayName": {
                          "type": "string",
                          "id": 3
                        },
                        "description": {
                          "type": "string",
                          "id": 4
                        },
                        "businessContext": {
                          "type": "BusinessContext",
                          "id": 37
                        },
                        "schema": {
                          "type": "Schema",
                          "id": 5
                        },
                        "sourceSystemTimestamps": {
                          "type": "SystemTimestamps",
                          "id": 7
                        },
                        "usageSignal": {
                          "type": "UsageSignal",
                          "id": 13
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 14
                        },
                        "dataSource": {
                          "type": "DataSource",
                          "id": 20,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "personalDetails": {
                          "type": "PersonalDetails",
                          "id": 26,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "DatabaseTableSpec": {
                      "fields": {
                        "type": {
                          "type": "TableType",
                          "id": 1
                        },
                        "dataplexTable": {
                          "type": "DataplexTableSpec",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "databaseViewSpec": {
                          "type": "DatabaseViewSpec",
                          "id": 3
                        }
                      },
                      "nested": {
                        "TableType": {
                          "values": {
                            "TABLE_TYPE_UNSPECIFIED": 0,
                            "NATIVE": 1,
                            "EXTERNAL": 2
                          }
                        },
                        "DatabaseViewSpec": {
                          "oneofs": {
                            "sourceDefinition": {
                              "oneof": [
                                "baseTable",
                                "sqlQuery"
                              ]
                            }
                          },
                          "fields": {
                            "viewType": {
                              "type": "ViewType",
                              "id": 1
                            },
                            "baseTable": {
                              "type": "string",
                              "id": 2
                            },
                            "sqlQuery": {
                              "type": "string",
                              "id": 3
                            }
                          },
                          "nested": {
                            "ViewType": {
                              "values": {
                                "VIEW_TYPE_UNSPECIFIED": 0,
                                "STANDARD_VIEW": 1,
                                "MATERIALIZED_VIEW": 2
                              }
                            }
                          }
                        }
                      }
                    },
                    "FilesetSpec": {
                      "fields": {
                        "dataplexFileset": {
                          "type": "DataplexFilesetSpec",
                          "id": 1
                        }
                      }
                    },
                    "DataSourceConnectionSpec": {
                      "fields": {
                        "bigqueryConnectionSpec": {
                          "type": "BigQueryConnectionSpec",
                          "id": 1
                        }
                      }
                    },
                    "RoutineSpec": {
                      "oneofs": {
                        "systemSpec": {
                          "oneof": [
                            "bigqueryRoutineSpec"
                          ]
                        }
                      },
                      "fields": {
                        "routineType": {
                          "type": "RoutineType",
                          "id": 1
                        },
                        "language": {
                          "type": "string",
                          "id": 2
                        },
                        "routineArguments": {
                          "rule": "repeated",
                          "type": "Argument",
                          "id": 3
                        },
                        "returnType": {
                          "type": "string",
                          "id": 4
                        },
                        "definitionBody": {
                          "type": "string",
                          "id": 5
                        },
                        "bigqueryRoutineSpec": {
                          "type": "BigQueryRoutineSpec",
                          "id": 6
                        }
                      },
                      "nested": {
                        "RoutineType": {
                          "values": {
                            "ROUTINE_TYPE_UNSPECIFIED": 0,
                            "SCALAR_FUNCTION": 1,
                            "PROCEDURE": 2
                          }
                        },
                        "Argument": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "mode": {
                              "type": "Mode",
                              "id": 2
                            },
                            "type": {
                              "type": "string",
                              "id": 3
                            }
                          },
                          "nested": {
                            "Mode": {
                              "values": {
                                "MODE_UNSPECIFIED": 0,
                                "IN": 1,
                                "OUT": 2,
                                "INOUT": 3
                              }
                            }
                          }
                        }
                      }
                    },
                    "DatasetSpec": {
                      "oneofs": {
                        "systemSpec": {
                          "oneof": [
                            "vertexDatasetSpec"
                          ]
                        }
                      },
                      "fields": {
                        "vertexDatasetSpec": {
                          "type": "VertexDatasetSpec",
                          "id": 2
                        }
                      }
                    },
                    "SqlDatabaseSystemSpec": {
                      "fields": {
                        "sqlEngine": {
                          "type": "string",
                          "id": 1
                        },
                        "databaseVersion": {
                          "type": "string",
                          "id": 2
                        },
                        "instanceHost": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "LookerSystemSpec": {
                      "fields": {
                        "parentInstanceId": {
                          "type": "string",
                          "id": 1
                        },
                        "parentInstanceDisplayName": {
                          "type": "string",
                          "id": 2
                        },
                        "parentModelId": {
                          "type": "string",
                          "id": 3
                        },
                        "parentModelDisplayName": {
                          "type": "string",
                          "id": 4
                        },
                        "parentViewId": {
                          "type": "string",
                          "id": 5
                        },
                        "parentViewDisplayName": {
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "CloudBigtableSystemSpec": {
                      "fields": {
                        "instanceDisplayName": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "CloudBigtableInstanceSpec": {
                      "fields": {
                        "cloudBigtableClusterSpecs": {
                          "rule": "repeated",
                          "type": "CloudBigtableClusterSpec",
                          "id": 1
                        }
                      },
                      "nested": {
                        "CloudBigtableClusterSpec": {
                          "fields": {
                            "displayName": {
                              "type": "string",
                              "id": 1
                            },
                            "location": {
                              "type": "string",
                              "id": 2
                            },
                            "type": {
                              "type": "string",
                              "id": 3
                            },
                            "linkedResource": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        }
                      }
                    },
                    "ServiceSpec": {
                      "oneofs": {
                        "systemSpec": {
                          "oneof": [
                            "cloudBigtableInstanceSpec"
                          ]
                        }
                      },
                      "fields": {
                        "cloudBigtableInstanceSpec": {
                          "type": "CloudBigtableInstanceSpec",
                          "id": 1
                        }
                      }
                    },
                    "VertexModelSourceInfo": {
                      "fields": {
                        "sourceType": {
                          "type": "ModelSourceType",
                          "id": 1
                        },
                        "copy": {
                          "type": "bool",
                          "id": 2
                        }
                      },
                      "nested": {
                        "ModelSourceType": {
                          "values": {
                            "MODEL_SOURCE_TYPE_UNSPECIFIED": 0,
                            "AUTOML": 1,
                            "CUSTOM": 2,
                            "BQML": 3,
                            "MODEL_GARDEN": 4
                          }
                        }
                      }
                    },
                    "VertexModelSpec": {
                      "fields": {
                        "versionId": {
                          "type": "string",
                          "id": 1
                        },
                        "versionAliases": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        },
                        "versionDescription": {
                          "type": "string",
                          "id": 3
                        },
                        "vertexModelSourceInfo": {
                          "type": "VertexModelSourceInfo",
                          "id": 4
                        },
                        "containerImageUri": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "VertexDatasetSpec": {
                      "fields": {
                        "dataItemCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "dataType": {
                          "type": "DataType",
                          "id": 2
                        }
                      },
                      "nested": {
                        "DataType": {
                          "values": {
                            "DATA_TYPE_UNSPECIFIED": 0,
                            "TABLE": 1,
                            "IMAGE": 2,
                            "TEXT": 3,
                            "VIDEO": 4,
                            "CONVERSATION": 5,
                            "TIME_SERIES": 6,
                            "DOCUMENT": 7,
                            "TEXT_TO_SPEECH": 8,
                            "TRANSLATION": 9,
                            "STORE_VISION": 10,
                            "ENTERPRISE_KNOWLEDGE_GRAPH": 11,
                            "TEXT_PROMPT": 12
                          }
                        }
                      }
                    },
                    "ModelSpec": {
                      "oneofs": {
                        "systemSpec": {
                          "oneof": [
                            "vertexModelSpec"
                          ]
                        }
                      },
                      "fields": {
                        "vertexModelSpec": {
                          "type": "VertexModelSpec",
                          "id": 1
                        }
                      }
                    },
                    "BusinessContext": {
                      "fields": {
                        "entryOverview": {
                          "type": "EntryOverview",
                          "id": 1
                        },
                        "contacts": {
                          "type": "Contacts",
                          "id": 2
                        }
                      }
                    },
                    "EntryOverview": {
                      "fields": {
                        "overview": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "Contacts": {
                      "fields": {
                        "people": {
                          "rule": "repeated",
                          "type": "Person",
                          "id": 1
                        }
                      },
                      "nested": {
                        "Person": {
                          "fields": {
                            "designation": {
                              "type": "string",
                              "id": 1
                            },
                            "email": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "EntryGroup": {
                      "options": {
                        "(google.api.resource).type": "datacatalog.googleapis.com/EntryGroup",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/entryGroups/{entry_group}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "dataCatalogTimestamps": {
                          "type": "SystemTimestamps",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "CreateTagTemplateRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/TagTemplate"
                          }
                        },
                        "tagTemplateId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tagTemplate": {
                          "type": "TagTemplate",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTagTemplateRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/TagTemplate"
                          }
                        }
                      }
                    },
                    "UpdateTagTemplateRequest": {
                      "fields": {
                        "tagTemplate": {
                          "type": "TagTemplate",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteTagTemplateRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/TagTemplate"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateTagRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/Tag"
                          }
                        },
                        "tag": {
                          "type": "Tag",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateTagRequest": {
                      "fields": {
                        "tag": {
                          "type": "Tag",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteTagRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/Tag"
                          }
                        }
                      }
                    },
                    "CreateTagTemplateFieldRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/TagTemplate"
                          }
                        },
                        "tagTemplateFieldId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tagTemplateField": {
                          "type": "TagTemplateField",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateTagTemplateFieldRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/TagTemplateField"
                          }
                        },
                        "tagTemplateField": {
                          "type": "TagTemplateField",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "RenameTagTemplateFieldRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/TagTemplateField"
                          }
                        },
                        "newTagTemplateFieldId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "RenameTagTemplateFieldEnumValueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/TagTemplateFieldEnumValue"
                          }
                        },
                        "newEnumValueDisplayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteTagTemplateFieldRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/TagTemplateField"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ListTagsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/Tag"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListTagsResponse": {
                      "fields": {
                        "tags": {
                          "rule": "repeated",
                          "type": "Tag",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ReconcileTagsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Entry"
                          }
                        },
                        "tagTemplate": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/TagTemplate"
                          }
                        },
                        "forceDeleteMissing": {
                          "type": "bool",
                          "id": 3
                        },
                        "tags": {
                          "rule": "repeated",
                          "type": "Tag",
                          "id": 4
                        }
                      }
                    },
                    "ReconcileTagsResponse": {
                      "fields": {
                        "createdTagsCount": {
                          "type": "int64",
                          "id": 1
                        },
                        "updatedTagsCount": {
                          "type": "int64",
                          "id": 2
                        },
                        "deletedTagsCount": {
                          "type": "int64",
                          "id": 3
                        }
                      }
                    },
                    "ReconcileTagsMetadata": {
                      "fields": {
                        "state": {
                          "type": "ReconciliationState",
                          "id": 1
                        },
                        "errors": {
                          "keyType": "string",
                          "type": "google.rpc.Status",
                          "id": 2
                        }
                      },
                      "nested": {
                        "ReconciliationState": {
                          "values": {
                            "RECONCILIATION_STATE_UNSPECIFIED": 0,
                            "RECONCILIATION_QUEUED": 1,
                            "RECONCILIATION_IN_PROGRESS": 2,
                            "RECONCILIATION_DONE": 3
                          }
                        }
                      }
                    },
                    "ListEntriesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/EntryGroup"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 4
                        }
                      }
                    },
                    "ListEntriesResponse": {
                      "fields": {
                        "entries": {
                          "rule": "repeated",
                          "type": "Entry",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "StarEntryRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Entry"
                          }
                        }
                      }
                    },
                    "StarEntryResponse": {
                      "fields": {}
                    },
                    "UnstarEntryRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Entry"
                          }
                        }
                      }
                    },
                    "UnstarEntryResponse": {
                      "fields": {}
                    },
                    "ImportEntriesRequest": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "gcsBucketPath"
                          ]
                        }
                      },
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/Entry"
                          }
                        },
                        "gcsBucketPath": {
                          "type": "string",
                          "id": 2
                        },
                        "jobId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ImportEntriesResponse": {
                      "oneofs": {
                        "_upsertedEntriesCount": {
                          "oneof": [
                            "upsertedEntriesCount"
                          ]
                        },
                        "_deletedEntriesCount": {
                          "oneof": [
                            "deletedEntriesCount"
                          ]
                        }
                      },
                      "fields": {
                        "upsertedEntriesCount": {
                          "type": "int64",
                          "id": 5,
                          "options": {
                            "proto3_optional": true
                          }
                        },
                        "deletedEntriesCount": {
                          "type": "int64",
                          "id": 6,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "ImportEntriesMetadata": {
                      "fields": {
                        "state": {
                          "type": "ImportState",
                          "id": 1
                        },
                        "errors": {
                          "rule": "repeated",
                          "type": "google.rpc.Status",
                          "id": 2
                        }
                      },
                      "nested": {
                        "ImportState": {
                          "values": {
                            "IMPORT_STATE_UNSPECIFIED": 0,
                            "IMPORT_QUEUED": 1,
                            "IMPORT_IN_PROGRESS": 2,
                            "IMPORT_DONE": 3,
                            "IMPORT_OBSOLETE": 4
                          }
                        }
                      }
                    },
                    "ModifyEntryOverviewRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Entry"
                          }
                        },
                        "entryOverview": {
                          "type": "EntryOverview",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ModifyEntryContactsRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Entry"
                          }
                        },
                        "contacts": {
                          "type": "Contacts",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "EntryType": {
                      "values": {
                        "ENTRY_TYPE_UNSPECIFIED": 0,
                        "TABLE": 2,
                        "MODEL": 5,
                        "DATA_STREAM": 3,
                        "FILESET": 4,
                        "CLUSTER": 6,
                        "DATABASE": 7,
                        "DATA_SOURCE_CONNECTION": 8,
                        "ROUTINE": 9,
                        "LAKE": 10,
                        "ZONE": 11,
                        "SERVICE": 14,
                        "DATABASE_SCHEMA": 15,
                        "DASHBOARD": 16,
                        "EXPLORE": 17,
                        "LOOK": 18
                      }
                    },
                    "DataplexSpec": {
                      "fields": {
                        "asset": {
                          "type": "string",
                          "id": 1
                        },
                        "dataFormat": {
                          "type": "PhysicalSchema",
                          "id": 2
                        },
                        "compressionFormat": {
                          "type": "string",
                          "id": 3
                        },
                        "projectId": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "DataplexFilesetSpec": {
                      "fields": {
                        "dataplexSpec": {
                          "type": "DataplexSpec",
                          "id": 1
                        }
                      }
                    },
                    "DataplexTableSpec": {
                      "fields": {
                        "externalTables": {
                          "rule": "repeated",
                          "type": "DataplexExternalTable",
                          "id": 1
                        },
                        "dataplexSpec": {
                          "type": "DataplexSpec",
                          "id": 2
                        },
                        "userManaged": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "DataplexExternalTable": {
                      "fields": {
                        "system": {
                          "type": "IntegratedSystem",
                          "id": 1
                        },
                        "fullyQualifiedName": {
                          "type": "string",
                          "id": 28
                        },
                        "googleCloudResource": {
                          "type": "string",
                          "id": 3
                        },
                        "dataCatalogEntry": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "PhysicalSchema": {
                      "oneofs": {
                        "schema": {
                          "oneof": [
                            "avro",
                            "thrift",
                            "protobuf",
                            "parquet",
                            "orc",
                            "csv"
                          ]
                        }
                      },
                      "fields": {
                        "avro": {
                          "type": "AvroSchema",
                          "id": 1
                        },
                        "thrift": {
                          "type": "ThriftSchema",
                          "id": 2
                        },
                        "protobuf": {
                          "type": "ProtobufSchema",
                          "id": 3
                        },
                        "parquet": {
                          "type": "ParquetSchema",
                          "id": 4
                        },
                        "orc": {
                          "type": "OrcSchema",
                          "id": 5
                        },
                        "csv": {
                          "type": "CsvSchema",
                          "id": 6
                        }
                      },
                      "nested": {
                        "AvroSchema": {
                          "fields": {
                            "text": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "ThriftSchema": {
                          "fields": {
                            "text": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "ProtobufSchema": {
                          "fields": {
                            "text": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "ParquetSchema": {
                          "fields": {}
                        },
                        "OrcSchema": {
                          "fields": {}
                        },
                        "CsvSchema": {
                          "fields": {}
                        }
                      }
                    },
                    "GcsFilesetSpec": {
                      "fields": {
                        "filePatterns": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "sampleGcsFileSpecs": {
                          "rule": "repeated",
                          "type": "GcsFileSpec",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "GcsFileSpec": {
                      "fields": {
                        "filePath": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "gcsTimestamps": {
                          "type": "SystemTimestamps",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "sizeBytes": {
                          "type": "int64",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "SystemTimestamps": {
                      "fields": {
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "expireTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Schema": {
                      "fields": {
                        "columns": {
                          "rule": "repeated",
                          "type": "ColumnSchema",
                          "id": 2
                        }
                      }
                    },
                    "ColumnSchema": {
                      "oneofs": {
                        "systemSpec": {
                          "oneof": [
                            "lookerColumnSpec"
                          ]
                        }
                      },
                      "fields": {
                        "column": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "type": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "mode": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "defaultValue": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "ordinalPosition": {
                          "type": "int32",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "highestIndexingType": {
                          "type": "IndexingType",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "subcolumns": {
                          "rule": "repeated",
                          "type": "ColumnSchema",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "lookerColumnSpec": {
                          "type": "LookerColumnSpec",
                          "id": 18
                        },
                        "rangeElementType": {
                          "type": "FieldElementType",
                          "id": 19,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "gcRule": {
                          "type": "string",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      },
                      "nested": {
                        "IndexingType": {
                          "values": {
                            "INDEXING_TYPE_UNSPECIFIED": 0,
                            "INDEXING_TYPE_NONE": 1,
                            "INDEXING_TYPE_NON_UNIQUE": 2,
                            "INDEXING_TYPE_UNIQUE": 3,
                            "INDEXING_TYPE_PRIMARY_KEY": 4
                          }
                        },
                        "LookerColumnSpec": {
                          "fields": {
                            "type": {
                              "type": "LookerColumnType",
                              "id": 1
                            }
                          },
                          "nested": {
                            "LookerColumnType": {
                              "values": {
                                "LOOKER_COLUMN_TYPE_UNSPECIFIED": 0,
                                "DIMENSION": 1,
                                "DIMENSION_GROUP": 2,
                                "FILTER": 3,
                                "MEASURE": 4,
                                "PARAMETER": 5
                              }
                            }
                          }
                        },
                        "FieldElementType": {
                          "fields": {
                            "type": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        }
                      }
                    },
                    "SearchCatalogResult": {
                      "oneofs": {
                        "system": {
                          "oneof": [
                            "integratedSystem",
                            "userSpecifiedSystem"
                          ]
                        }
                      },
                      "fields": {
                        "searchResultType": {
                          "type": "SearchResultType",
                          "id": 1
                        },
                        "searchResultSubtype": {
                          "type": "string",
                          "id": 2
                        },
                        "relativeResourceName": {
                          "type": "string",
                          "id": 3
                        },
                        "linkedResource": {
                          "type": "string",
                          "id": 4
                        },
                        "modifyTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7
                        },
                        "integratedSystem": {
                          "type": "IntegratedSystem",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "userSpecifiedSystem": {
                          "type": "string",
                          "id": 9
                        },
                        "fullyQualifiedName": {
                          "type": "string",
                          "id": 10
                        },
                        "displayName": {
                          "type": "string",
                          "id": 12
                        },
                        "description": {
                          "type": "string",
                          "id": 13
                        }
                      }
                    },
                    "SearchResultType": {
                      "values": {
                        "SEARCH_RESULT_TYPE_UNSPECIFIED": 0,
                        "ENTRY": 1,
                        "TAG_TEMPLATE": 2,
                        "ENTRY_GROUP": 3
                      }
                    },
                    "BigQueryTableSpec": {
                      "oneofs": {
                        "typeSpec": {
                          "oneof": [
                            "viewSpec",
                            "tableSpec"
                          ]
                        }
                      },
                      "fields": {
                        "tableSourceType": {
                          "type": "TableSourceType",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "viewSpec": {
                          "type": "ViewSpec",
                          "id": 2
                        },
                        "tableSpec": {
                          "type": "TableSpec",
                          "id": 3
                        }
                      }
                    },
                    "TableSourceType": {
                      "values": {
                        "TABLE_SOURCE_TYPE_UNSPECIFIED": 0,
                        "BIGQUERY_VIEW": 2,
                        "BIGQUERY_TABLE": 5,
                        "BIGQUERY_MATERIALIZED_VIEW": 7
                      }
                    },
                    "ViewSpec": {
                      "fields": {
                        "viewQuery": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "TableSpec": {
                      "fields": {
                        "groupedEntry": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Entry"
                          }
                        }
                      }
                    },
                    "BigQueryDateShardedSpec": {
                      "fields": {
                        "dataset": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Entry"
                          }
                        },
                        "tablePrefix": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "shardCount": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "latestShardResource": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Tag": {
                      "options": {
                        "(google.api.resource).type": "datacatalog.googleapis.com/Tag",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/entryGroups/{entry_group}/entries/{entry}/tags/{tag}"
                      },
                      "oneofs": {
                        "scope": {
                          "oneof": [
                            "column"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "template": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "templateDisplayName": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "column": {
                          "type": "string",
                          "id": 4
                        },
                        "fields": {
                          "keyType": "string",
                          "type": "TagField",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TagField": {
                      "oneofs": {
                        "kind": {
                          "oneof": [
                            "doubleValue",
                            "stringValue",
                            "boolValue",
                            "timestampValue",
                            "enumValue",
                            "richtextValue"
                          ]
                        }
                      },
                      "fields": {
                        "displayName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "doubleValue": {
                          "type": "double",
                          "id": 2
                        },
                        "stringValue": {
                          "type": "string",
                          "id": 3
                        },
                        "boolValue": {
                          "type": "bool",
                          "id": 4
                        },
                        "timestampValue": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5
                        },
                        "enumValue": {
                          "type": "EnumValue",
                          "id": 6
                        },
                        "richtextValue": {
                          "type": "string",
                          "id": 8
                        },
                        "order": {
                          "type": "int32",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "EnumValue": {
                          "fields": {
                            "displayName": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "TagTemplate": {
                      "options": {
                        "(google.api.resource).type": "datacatalog.googleapis.com/TagTemplate",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/tagTemplates/{tag_template}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "isPubliclyReadable": {
                          "type": "bool",
                          "id": 5
                        },
                        "fields": {
                          "keyType": "string",
                          "type": "TagTemplateField",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TagTemplateField": {
                      "options": {
                        "(google.api.resource).type": "datacatalog.googleapis.com/TagTemplateField",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/tagTemplates/{tag_template}/fields/{field}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 1
                        },
                        "type": {
                          "type": "FieldType",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "isRequired": {
                          "type": "bool",
                          "id": 3
                        },
                        "description": {
                          "type": "string",
                          "id": 4
                        },
                        "order": {
                          "type": "int32",
                          "id": 5
                        }
                      }
                    },
                    "FieldType": {
                      "oneofs": {
                        "typeDecl": {
                          "oneof": [
                            "primitiveType",
                            "enumType"
                          ]
                        }
                      },
                      "fields": {
                        "primitiveType": {
                          "type": "PrimitiveType",
                          "id": 1
                        },
                        "enumType": {
                          "type": "EnumType",
                          "id": 2
                        }
                      },
                      "nested": {
                        "PrimitiveType": {
                          "values": {
                            "PRIMITIVE_TYPE_UNSPECIFIED": 0,
                            "DOUBLE": 1,
                            "STRING": 2,
                            "BOOL": 3,
                            "TIMESTAMP": 4,
                            "RICHTEXT": 5
                          }
                        },
                        "EnumType": {
                          "fields": {
                            "allowedValues": {
                              "rule": "repeated",
                              "type": "EnumValue",
                              "id": 1
                            }
                          },
                          "nested": {
                            "EnumValue": {
                              "fields": {
                                "displayName": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "UsageStats": {
                      "fields": {
                        "totalCompletions": {
                          "type": "float",
                          "id": 1
                        },
                        "totalFailures": {
                          "type": "float",
                          "id": 2
                        },
                        "totalCancellations": {
                          "type": "float",
                          "id": 3
                        },
                        "totalExecutionTimeForCompletionsMillis": {
                          "type": "float",
                          "id": 4
                        }
                      }
                    },
                    "CommonUsageStats": {
                      "oneofs": {
                        "_viewCount": {
                          "oneof": [
                            "viewCount"
                          ]
                        }
                      },
                      "fields": {
                        "viewCount": {
                          "type": "int64",
                          "id": 1,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "UsageSignal": {
                      "oneofs": {
                        "_favoriteCount": {
                          "oneof": [
                            "favoriteCount"
                          ]
                        }
                      },
                      "fields": {
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "usageWithinTimeRange": {
                          "keyType": "string",
                          "type": "UsageStats",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "commonUsageWithinTimeRange": {
                          "keyType": "string",
                          "type": "CommonUsageStats",
                          "id": 3
                        },
                        "favoriteCount": {
                          "type": "int64",
                          "id": 4,
                          "options": {
                            "proto3_optional": true
                          }
                        }
                      }
                    },
                    "TaggedEntry": {
                      "oneofs": {
                        "entry": {
                          "oneof": [
                            "v1Entry"
                          ]
                        }
                      },
                      "fields": {
                        "v1Entry": {
                          "type": "Entry",
                          "id": 1
                        },
                        "presentTags": {
                          "rule": "repeated",
                          "type": "Tag",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "absentTags": {
                          "rule": "repeated",
                          "type": "Tag",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "DumpItem": {
                      "oneofs": {
                        "item": {
                          "oneof": [
                            "taggedEntry"
                          ]
                        }
                      },
                      "fields": {
                        "taggedEntry": {
                          "type": "TaggedEntry",
                          "id": 1
                        }
                      }
                    },
                    "PolicyTagManager": {
                      "options": {
                        "(google.api.default_host)": "datacatalog.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateTaxonomy": {
                          "requestType": "CreateTaxonomyRequest",
                          "responseType": "Taxonomy",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/taxonomies",
                            "(google.api.http).body": "taxonomy",
                            "(google.api.method_signature)": "parent,taxonomy"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/taxonomies",
                                "body": "taxonomy"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,taxonomy"
                            }
                          ]
                        },
                        "DeleteTaxonomy": {
                          "requestType": "DeleteTaxonomyRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/taxonomies/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/taxonomies/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateTaxonomy": {
                          "requestType": "UpdateTaxonomyRequest",
                          "responseType": "Taxonomy",
                          "options": {
                            "(google.api.http).patch": "/v1/{taxonomy.name=projects/*/locations/*/taxonomies/*}",
                            "(google.api.http).body": "taxonomy",
                            "(google.api.method_signature)": "taxonomy"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{taxonomy.name=projects/*/locations/*/taxonomies/*}",
                                "body": "taxonomy"
                              }
                            },
                            {
                              "(google.api.method_signature)": "taxonomy"
                            }
                          ]
                        },
                        "ListTaxonomies": {
                          "requestType": "ListTaxonomiesRequest",
                          "responseType": "ListTaxonomiesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/taxonomies",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/taxonomies"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetTaxonomy": {
                          "requestType": "GetTaxonomyRequest",
                          "responseType": "Taxonomy",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/taxonomies/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/taxonomies/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreatePolicyTag": {
                          "requestType": "CreatePolicyTagRequest",
                          "responseType": "PolicyTag",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*/taxonomies/*}/policyTags",
                            "(google.api.http).body": "policy_tag",
                            "(google.api.method_signature)": "parent,policy_tag"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*/taxonomies/*}/policyTags",
                                "body": "policy_tag"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,policy_tag"
                            }
                          ]
                        },
                        "DeletePolicyTag": {
                          "requestType": "DeletePolicyTagRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/taxonomies/*/policyTags/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/taxonomies/*/policyTags/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdatePolicyTag": {
                          "requestType": "UpdatePolicyTagRequest",
                          "responseType": "PolicyTag",
                          "options": {
                            "(google.api.http).patch": "/v1/{policy_tag.name=projects/*/locations/*/taxonomies/*/policyTags/*}",
                            "(google.api.http).body": "policy_tag",
                            "(google.api.method_signature)": "policy_tag"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{policy_tag.name=projects/*/locations/*/taxonomies/*/policyTags/*}",
                                "body": "policy_tag"
                              }
                            },
                            {
                              "(google.api.method_signature)": "policy_tag"
                            }
                          ]
                        },
                        "ListPolicyTags": {
                          "requestType": "ListPolicyTagsRequest",
                          "responseType": "ListPolicyTagsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/taxonomies/*}/policyTags",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/taxonomies/*}/policyTags"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetPolicyTag": {
                          "requestType": "GetPolicyTagRequest",
                          "responseType": "PolicyTag",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/taxonomies/*/policyTags/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/taxonomies/*/policyTags/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetIamPolicy": {
                          "requestType": "google.iam.v1.GetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v1/{resource=projects/*/locations/*/taxonomies/*}:getIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{resource=projects/*/locations/*/taxonomies/*/policyTags/*}:getIamPolicy",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{resource=projects/*/locations/*/taxonomies/*}:getIamPolicy",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{resource=projects/*/locations/*/taxonomies/*/policyTags/*}:getIamPolicy",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        },
                        "SetIamPolicy": {
                          "requestType": "google.iam.v1.SetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v1/{resource=projects/*/locations/*/taxonomies/*}:setIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{resource=projects/*/locations/*/taxonomies/*/policyTags/*}:setIamPolicy",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{resource=projects/*/locations/*/taxonomies/*}:setIamPolicy",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{resource=projects/*/locations/*/taxonomies/*/policyTags/*}:setIamPolicy",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        },
                        "TestIamPermissions": {
                          "requestType": "google.iam.v1.TestIamPermissionsRequest",
                          "responseType": "google.iam.v1.TestIamPermissionsResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{resource=projects/*/locations/*/taxonomies/*}:testIamPermissions",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1/{resource=projects/*/locations/*/taxonomies/*/policyTags/*}:testIamPermissions",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{resource=projects/*/locations/*/taxonomies/*}:testIamPermissions",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1/{resource=projects/*/locations/*/taxonomies/*/policyTags/*}:testIamPermissions",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    "Taxonomy": {
                      "options": {
                        "(google.api.resource).type": "datacatalog.googleapis.com/Taxonomy",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/taxonomies/{taxonomy}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IDENTIFIER"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "policyTagCount": {
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "taxonomyTimestamps": {
                          "type": "SystemTimestamps",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "activatedPolicyTypes": {
                          "rule": "repeated",
                          "type": "PolicyType",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "service": {
                          "type": "Service",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "PolicyType": {
                          "values": {
                            "POLICY_TYPE_UNSPECIFIED": 0,
                            "FINE_GRAINED_ACCESS_CONTROL": 1
                          }
                        },
                        "Service": {
                          "fields": {
                            "name": {
                              "type": "ManagingSystem",
                              "id": 1
                            },
                            "identity": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "PolicyTag": {
                      "options": {
                        "(google.api.resource).type": "datacatalog.googleapis.com/PolicyTag",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/taxonomies/{taxonomy}/policyTags/{policy_tag}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IDENTIFIER"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "parentPolicyTag": {
                          "type": "string",
                          "id": 4
                        },
                        "childPolicyTags": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "CreateTaxonomyRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        },
                        "taxonomy": {
                          "type": "Taxonomy",
                          "id": 2
                        }
                      }
                    },
                    "DeleteTaxonomyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        }
                      }
                    },
                    "UpdateTaxonomyRequest": {
                      "fields": {
                        "taxonomy": {
                          "type": "Taxonomy",
                          "id": 1
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "ListTaxonomiesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "ListTaxonomiesResponse": {
                      "fields": {
                        "taxonomies": {
                          "rule": "repeated",
                          "type": "Taxonomy",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetTaxonomyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        }
                      }
                    },
                    "CreatePolicyTagRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/PolicyTag"
                          }
                        },
                        "policyTag": {
                          "type": "PolicyTag",
                          "id": 2
                        }
                      }
                    },
                    "DeletePolicyTagRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/PolicyTag"
                          }
                        }
                      }
                    },
                    "UpdatePolicyTagRequest": {
                      "fields": {
                        "policyTag": {
                          "type": "PolicyTag",
                          "id": 1
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "ListPolicyTagsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/PolicyTag"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListPolicyTagsResponse": {
                      "fields": {
                        "policyTags": {
                          "rule": "repeated",
                          "type": "PolicyTag",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetPolicyTagRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/PolicyTag"
                          }
                        }
                      }
                    },
                    "PolicyTagManagerSerialization": {
                      "options": {
                        "(google.api.default_host)": "datacatalog.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ReplaceTaxonomy": {
                          "requestType": "ReplaceTaxonomyRequest",
                          "responseType": "Taxonomy",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/taxonomies/*}:replace",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/taxonomies/*}:replace",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "ImportTaxonomies": {
                          "requestType": "ImportTaxonomiesRequest",
                          "responseType": "ImportTaxonomiesResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/taxonomies:import",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/taxonomies:import",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "ExportTaxonomies": {
                          "requestType": "ExportTaxonomiesRequest",
                          "responseType": "ExportTaxonomiesResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/taxonomies:export"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/taxonomies:export"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "SerializedTaxonomy": {
                      "fields": {
                        "displayName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 2
                        },
                        "policyTags": {
                          "rule": "repeated",
                          "type": "SerializedPolicyTag",
                          "id": 3
                        },
                        "activatedPolicyTypes": {
                          "rule": "repeated",
                          "type": "Taxonomy.PolicyType",
                          "id": 4
                        }
                      }
                    },
                    "SerializedPolicyTag": {
                      "fields": {
                        "policyTag": {
                          "type": "string",
                          "id": 1
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "childPolicyTags": {
                          "rule": "repeated",
                          "type": "SerializedPolicyTag",
                          "id": 4
                        }
                      }
                    },
                    "ReplaceTaxonomyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        },
                        "serializedTaxonomy": {
                          "type": "SerializedTaxonomy",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ImportTaxonomiesRequest": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "inlineSource",
                            "crossRegionalSource"
                          ]
                        }
                      },
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        },
                        "inlineSource": {
                          "type": "InlineSource",
                          "id": 2
                        },
                        "crossRegionalSource": {
                          "type": "CrossRegionalSource",
                          "id": 3
                        }
                      }
                    },
                    "InlineSource": {
                      "fields": {
                        "taxonomies": {
                          "rule": "repeated",
                          "type": "SerializedTaxonomy",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CrossRegionalSource": {
                      "fields": {
                        "taxonomy": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        }
                      }
                    },
                    "ImportTaxonomiesResponse": {
                      "fields": {
                        "taxonomies": {
                          "rule": "repeated",
                          "type": "Taxonomy",
                          "id": 1
                        }
                      }
                    },
                    "ExportTaxonomiesRequest": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "serializedTaxonomies"
                          ]
                        }
                      },
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        },
                        "taxonomies": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        },
                        "serializedTaxonomies": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "ExportTaxonomiesResponse": {
                      "fields": {
                        "taxonomies": {
                          "rule": "repeated",
                          "type": "SerializedTaxonomy",
                          "id": 1
                        }
                      }
                    }
                  }
                },
                "v1beta1": {
                  "options": {
                    "cc_enable_arenas": true,
                    "csharp_namespace": "Google.Cloud.DataCatalog.V1Beta1",
                    "go_package": "cloud.google.com/go/datacatalog/apiv1beta1/datacatalogpb;datacatalogpb",
                    "java_multiple_files": true,
                    "java_package": "com.google.cloud.datacatalog.v1beta1",
                    "php_namespace": "Google\\Cloud\\DataCatalog\\V1beta1",
                    "ruby_package": "Google::Cloud::DataCatalog::V1beta1",
                    "(google.api.resource_definition).type": "datacatalog.googleapis.com/TagTemplateFieldEnumValue",
                    "(google.api.resource_definition).pattern": "projects/{project}/locations/{location}/tagTemplates/{tag_template}/fields/{tag_template_field_id}/enumValues/{enum_value_display_name}",
                    "java_outer_classname": "PolicyTagManagerSerializationProto"
                  },
                  "nested": {
                    "IntegratedSystem": {
                      "values": {
                        "INTEGRATED_SYSTEM_UNSPECIFIED": 0,
                        "BIGQUERY": 1,
                        "CLOUD_PUBSUB": 2
                      }
                    },
                    "ManagingSystem": {
                      "values": {
                        "MANAGING_SYSTEM_UNSPECIFIED": 0,
                        "MANAGING_SYSTEM_DATAPLEX": 1,
                        "MANAGING_SYSTEM_OTHER": 2
                      }
                    },
                    "DataCatalog": {
                      "options": {
                        "(google.api.default_host)": "datacatalog.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "SearchCatalog": {
                          "requestType": "SearchCatalogRequest",
                          "responseType": "SearchCatalogResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/catalog:search",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "scope,query"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/catalog:search",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "scope,query"
                            }
                          ]
                        },
                        "CreateEntryGroup": {
                          "requestType": "CreateEntryGroupRequest",
                          "responseType": "EntryGroup",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/entryGroups",
                            "(google.api.http).body": "entry_group",
                            "(google.api.method_signature)": "parent,entry_group_id,entry_group"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/entryGroups",
                                "body": "entry_group"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,entry_group_id,entry_group"
                            }
                          ]
                        },
                        "UpdateEntryGroup": {
                          "requestType": "UpdateEntryGroupRequest",
                          "responseType": "EntryGroup",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{entry_group.name=projects/*/locations/*/entryGroups/*}",
                            "(google.api.http).body": "entry_group",
                            "(google.api.method_signature)": "entry_group,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{entry_group.name=projects/*/locations/*/entryGroups/*}",
                                "body": "entry_group"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entry_group"
                            },
                            {
                              "(google.api.method_signature)": "entry_group,update_mask"
                            }
                          ]
                        },
                        "GetEntryGroup": {
                          "requestType": "GetEntryGroupRequest",
                          "responseType": "EntryGroup",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/entryGroups/*}",
                            "(google.api.method_signature)": "name,read_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/entryGroups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.api.method_signature)": "name,read_mask"
                            }
                          ]
                        },
                        "DeleteEntryGroup": {
                          "requestType": "DeleteEntryGroupRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/entryGroups/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/entryGroups/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListEntryGroups": {
                          "requestType": "ListEntryGroupsRequest",
                          "responseType": "ListEntryGroupsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/entryGroups",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/entryGroups"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreateEntry": {
                          "requestType": "CreateEntryRequest",
                          "responseType": "Entry",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/entryGroups/*}/entries",
                            "(google.api.http).body": "entry",
                            "(google.api.method_signature)": "parent,entry_id,entry"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/entryGroups/*}/entries",
                                "body": "entry"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,entry_id,entry"
                            }
                          ]
                        },
                        "UpdateEntry": {
                          "requestType": "UpdateEntryRequest",
                          "responseType": "Entry",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{entry.name=projects/*/locations/*/entryGroups/*/entries/*}",
                            "(google.api.http).body": "entry",
                            "(google.api.method_signature)": "entry,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{entry.name=projects/*/locations/*/entryGroups/*/entries/*}",
                                "body": "entry"
                              }
                            },
                            {
                              "(google.api.method_signature)": "entry"
                            },
                            {
                              "(google.api.method_signature)": "entry,update_mask"
                            }
                          ]
                        },
                        "DeleteEntry": {
                          "requestType": "DeleteEntryRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/entryGroups/*/entries/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/entryGroups/*/entries/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetEntry": {
                          "requestType": "GetEntryRequest",
                          "responseType": "Entry",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/entryGroups/*/entries/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/entryGroups/*/entries/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "LookupEntry": {
                          "requestType": "LookupEntryRequest",
                          "responseType": "Entry",
                          "options": {
                            "(google.api.http).get": "/v1beta1/entries:lookup"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/entries:lookup"
                              }
                            }
                          ]
                        },
                        "ListEntries": {
                          "requestType": "ListEntriesRequest",
                          "responseType": "ListEntriesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/entryGroups/*}/entries",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/entryGroups/*}/entries"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreateTagTemplate": {
                          "requestType": "CreateTagTemplateRequest",
                          "responseType": "TagTemplate",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/tagTemplates",
                            "(google.api.http).body": "tag_template",
                            "(google.api.method_signature)": "parent,tag_template_id,tag_template"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/tagTemplates",
                                "body": "tag_template"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tag_template_id,tag_template"
                            }
                          ]
                        },
                        "GetTagTemplate": {
                          "requestType": "GetTagTemplateRequest",
                          "responseType": "TagTemplate",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/tagTemplates/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/tagTemplates/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateTagTemplate": {
                          "requestType": "UpdateTagTemplateRequest",
                          "responseType": "TagTemplate",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{tag_template.name=projects/*/locations/*/tagTemplates/*}",
                            "(google.api.http).body": "tag_template",
                            "(google.api.method_signature)": "tag_template,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{tag_template.name=projects/*/locations/*/tagTemplates/*}",
                                "body": "tag_template"
                              }
                            },
                            {
                              "(google.api.method_signature)": "tag_template"
                            },
                            {
                              "(google.api.method_signature)": "tag_template,update_mask"
                            }
                          ]
                        },
                        "DeleteTagTemplate": {
                          "requestType": "DeleteTagTemplateRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/tagTemplates/*}",
                            "(google.api.method_signature)": "name,force"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/tagTemplates/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,force"
                            }
                          ]
                        },
                        "CreateTagTemplateField": {
                          "requestType": "CreateTagTemplateFieldRequest",
                          "responseType": "TagTemplateField",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/tagTemplates/*}/fields",
                            "(google.api.http).body": "tag_template_field",
                            "(google.api.method_signature)": "parent,tag_template_field_id,tag_template_field"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/tagTemplates/*}/fields",
                                "body": "tag_template_field"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tag_template_field_id,tag_template_field"
                            }
                          ]
                        },
                        "UpdateTagTemplateField": {
                          "requestType": "UpdateTagTemplateFieldRequest",
                          "responseType": "TagTemplateField",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{name=projects/*/locations/*/tagTemplates/*/fields/*}",
                            "(google.api.http).body": "tag_template_field",
                            "(google.api.method_signature)": "name,tag_template_field,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{name=projects/*/locations/*/tagTemplates/*/fields/*}",
                                "body": "tag_template_field"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,tag_template_field"
                            },
                            {
                              "(google.api.method_signature)": "name,tag_template_field,update_mask"
                            }
                          ]
                        },
                        "RenameTagTemplateField": {
                          "requestType": "RenameTagTemplateFieldRequest",
                          "responseType": "TagTemplateField",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/tagTemplates/*/fields/*}:rename",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,new_tag_template_field_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/tagTemplates/*/fields/*}:rename",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,new_tag_template_field_id"
                            }
                          ]
                        },
                        "RenameTagTemplateFieldEnumValue": {
                          "requestType": "RenameTagTemplateFieldEnumValueRequest",
                          "responseType": "TagTemplateField",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{name=projects/*/locations/*/tagTemplates/*/fields/*/enumValues/*}:rename",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,new_enum_value_display_name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{name=projects/*/locations/*/tagTemplates/*/fields/*/enumValues/*}:rename",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,new_enum_value_display_name"
                            }
                          ]
                        },
                        "DeleteTagTemplateField": {
                          "requestType": "DeleteTagTemplateFieldRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/tagTemplates/*/fields/*}",
                            "(google.api.method_signature)": "name,force"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/tagTemplates/*/fields/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,force"
                            }
                          ]
                        },
                        "CreateTag": {
                          "requestType": "CreateTagRequest",
                          "responseType": "Tag",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/entryGroups/*/entries/*}/tags",
                            "(google.api.http).body": "tag",
                            "(google.api.http).additional_bindings.post": "/v1beta1/{parent=projects/*/locations/*/entryGroups/*}/tags",
                            "(google.api.http).additional_bindings.body": "tag",
                            "(google.api.method_signature)": "parent,tag"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/entryGroups/*/entries/*}/tags",
                                "body": "tag",
                                "additional_bindings": {
                                  "post": "/v1beta1/{parent=projects/*/locations/*/entryGroups/*}/tags",
                                  "body": "tag"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,tag"
                            }
                          ]
                        },
                        "UpdateTag": {
                          "requestType": "UpdateTagRequest",
                          "responseType": "Tag",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{tag.name=projects/*/locations/*/entryGroups/*/entries/*/tags/*}",
                            "(google.api.http).body": "tag",
                            "(google.api.http).additional_bindings.patch": "/v1beta1/{tag.name=projects/*/locations/*/entryGroups/*/tags/*}",
                            "(google.api.http).additional_bindings.body": "tag",
                            "(google.api.method_signature)": "tag,update_mask"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{tag.name=projects/*/locations/*/entryGroups/*/entries/*/tags/*}",
                                "body": "tag",
                                "additional_bindings": {
                                  "patch": "/v1beta1/{tag.name=projects/*/locations/*/entryGroups/*/tags/*}",
                                  "body": "tag"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "tag"
                            },
                            {
                              "(google.api.method_signature)": "tag,update_mask"
                            }
                          ]
                        },
                        "DeleteTag": {
                          "requestType": "DeleteTagRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/entryGroups/*/entries/*/tags/*}",
                            "(google.api.http).additional_bindings.delete": "/v1beta1/{name=projects/*/locations/*/entryGroups/*/tags/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/entryGroups/*/entries/*/tags/*}",
                                "additional_bindings": {
                                  "delete": "/v1beta1/{name=projects/*/locations/*/entryGroups/*/tags/*}"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListTags": {
                          "requestType": "ListTagsRequest",
                          "responseType": "ListTagsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/entryGroups/*/entries/*}/tags",
                            "(google.api.http).additional_bindings.get": "/v1beta1/{parent=projects/*/locations/*/entryGroups/*}/tags",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/entryGroups/*/entries/*}/tags",
                                "additional_bindings": {
                                  "get": "/v1beta1/{parent=projects/*/locations/*/entryGroups/*}/tags"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "SetIamPolicy": {
                          "requestType": "google.iam.v1.SetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{resource=projects/*/locations/*/tagTemplates/*}:setIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1beta1/{resource=projects/*/locations/*/entryGroups/*}:setIamPolicy",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "resource,policy"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{resource=projects/*/locations/*/tagTemplates/*}:setIamPolicy",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1beta1/{resource=projects/*/locations/*/entryGroups/*}:setIamPolicy",
                                  "body": "*"
                                }
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource,policy"
                            }
                          ]
                        },
                        "GetIamPolicy": {
                          "requestType": "google.iam.v1.GetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{resource=projects/*/locations/*/tagTemplates/*}:getIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1beta1/{resource=projects/*/locations/*/entryGroups/*/entries/*}:getIamPolicy",
                            "(google.api.http).additional_bindings.body": "*",
                            "(google.api.method_signature)": "resource"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{resource=projects/*/locations/*/tagTemplates/*}:getIamPolicy",
                                "body": "*",
                                "additional_bindings": [
                                  {
                                    "post": "/v1beta1/{resource=projects/*/locations/*/entryGroups/*}:getIamPolicy",
                                    "body": "*"
                                  },
                                  {
                                    "post": "/v1beta1/{resource=projects/*/locations/*/entryGroups/*/entries/*}:getIamPolicy",
                                    "body": "*"
                                  }
                                ]
                              }
                            },
                            {
                              "(google.api.method_signature)": "resource"
                            }
                          ]
                        },
                        "TestIamPermissions": {
                          "requestType": "google.iam.v1.TestIamPermissionsRequest",
                          "responseType": "google.iam.v1.TestIamPermissionsResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{resource=projects/*/locations/*/tagTemplates/*}:testIamPermissions",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1beta1/{resource=projects/*/locations/*/entryGroups/*/entries/*}:testIamPermissions",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{resource=projects/*/locations/*/tagTemplates/*}:testIamPermissions",
                                "body": "*",
                                "additional_bindings": [
                                  {
                                    "post": "/v1beta1/{resource=projects/*/locations/*/entryGroups/*}:testIamPermissions",
                                    "body": "*"
                                  },
                                  {
                                    "post": "/v1beta1/{resource=projects/*/locations/*/entryGroups/*/entries/*}:testIamPermissions",
                                    "body": "*"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    },
                    "SearchCatalogRequest": {
                      "fields": {
                        "scope": {
                          "type": "Scope",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "query": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      },
                      "nested": {
                        "Scope": {
                          "fields": {
                            "includeOrgIds": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            },
                            "includeProjectIds": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3
                            },
                            "includeGcpPublicDatasets": {
                              "type": "bool",
                              "id": 7
                            },
                            "restrictedLocations": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 16,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        }
                      }
                    },
                    "SearchCatalogResponse": {
                      "fields": {
                        "results": {
                          "rule": "repeated",
                          "type": "SearchCatalogResult",
                          "id": 1
                        },
                        "totalSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 6
                        }
                      }
                    },
                    "CreateEntryGroupRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/EntryGroup"
                          }
                        },
                        "entryGroupId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "entryGroup": {
                          "type": "EntryGroup",
                          "id": 2
                        }
                      }
                    },
                    "UpdateEntryGroupRequest": {
                      "fields": {
                        "entryGroup": {
                          "type": "EntryGroup",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "GetEntryGroupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/EntryGroup"
                          }
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteEntryGroupRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/EntryGroup"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListEntryGroupsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/EntryGroup"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListEntryGroupsResponse": {
                      "fields": {
                        "entryGroups": {
                          "rule": "repeated",
                          "type": "EntryGroup",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "CreateEntryRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/EntryGroup"
                          }
                        },
                        "entryId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "entry": {
                          "type": "Entry",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateEntryRequest": {
                      "fields": {
                        "entry": {
                          "type": "Entry",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteEntryRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Entry"
                          }
                        }
                      }
                    },
                    "GetEntryRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Entry"
                          }
                        }
                      }
                    },
                    "LookupEntryRequest": {
                      "oneofs": {
                        "targetName": {
                          "oneof": [
                            "linkedResource",
                            "sqlResource"
                          ]
                        }
                      },
                      "fields": {
                        "linkedResource": {
                          "type": "string",
                          "id": 1
                        },
                        "sqlResource": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "Entry": {
                      "options": {
                        "(google.api.resource).type": "datacatalog.googleapis.com/Entry",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/entryGroups/{entry_group}/entries/{entry}"
                      },
                      "oneofs": {
                        "entryType": {
                          "oneof": [
                            "type",
                            "userSpecifiedType"
                          ]
                        },
                        "system": {
                          "oneof": [
                            "integratedSystem",
                            "userSpecifiedSystem"
                          ]
                        },
                        "typeSpec": {
                          "oneof": [
                            "gcsFilesetSpec",
                            "bigqueryTableSpec",
                            "bigqueryDateShardedSpec"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/EntryGroup"
                          }
                        },
                        "linkedResource": {
                          "type": "string",
                          "id": 9
                        },
                        "type": {
                          "type": "EntryType",
                          "id": 2
                        },
                        "userSpecifiedType": {
                          "type": "string",
                          "id": 16
                        },
                        "integratedSystem": {
                          "type": "IntegratedSystem",
                          "id": 17,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "userSpecifiedSystem": {
                          "type": "string",
                          "id": 18
                        },
                        "gcsFilesetSpec": {
                          "type": "GcsFilesetSpec",
                          "id": 6
                        },
                        "bigqueryTableSpec": {
                          "type": "BigQueryTableSpec",
                          "id": 12
                        },
                        "bigqueryDateShardedSpec": {
                          "type": "BigQueryDateShardedSpec",
                          "id": 15
                        },
                        "displayName": {
                          "type": "string",
                          "id": 3
                        },
                        "description": {
                          "type": "string",
                          "id": 4
                        },
                        "schema": {
                          "type": "Schema",
                          "id": 5
                        },
                        "sourceSystemTimestamps": {
                          "type": "SystemTimestamps",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "usageSignal": {
                          "type": "UsageSignal",
                          "id": 13,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "EntryGroup": {
                      "options": {
                        "(google.api.resource).type": "datacatalog.googleapis.com/EntryGroup",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/entryGroups/{entry_group}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "dataCatalogTimestamps": {
                          "type": "SystemTimestamps",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "CreateTagTemplateRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/TagTemplate"
                          }
                        },
                        "tagTemplateId": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tagTemplate": {
                          "type": "TagTemplate",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "GetTagTemplateRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/TagTemplate"
                          }
                        }
                      }
                    },
                    "UpdateTagTemplateRequest": {
                      "fields": {
                        "tagTemplate": {
                          "type": "TagTemplate",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteTagTemplateRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/TagTemplate"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CreateTagRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/Tag"
                          }
                        },
                        "tag": {
                          "type": "Tag",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateTagRequest": {
                      "fields": {
                        "tag": {
                          "type": "Tag",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteTagRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/Tag"
                          }
                        }
                      }
                    },
                    "CreateTagTemplateFieldRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/TagTemplate"
                          }
                        },
                        "tagTemplateFieldId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "tagTemplateField": {
                          "type": "TagTemplateField",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateTagTemplateFieldRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/TagTemplateField"
                          }
                        },
                        "tagTemplateField": {
                          "type": "TagTemplateField",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "RenameTagTemplateFieldRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/TagTemplateField"
                          }
                        },
                        "newTagTemplateFieldId": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "RenameTagTemplateFieldEnumValueRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/TagTemplateFieldEnumValue"
                          }
                        },
                        "newEnumValueDisplayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "DeleteTagTemplateFieldRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/TagTemplateField"
                          }
                        },
                        "force": {
                          "type": "bool",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ListTagsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/Tag"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListTagsResponse": {
                      "fields": {
                        "tags": {
                          "rule": "repeated",
                          "type": "Tag",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListEntriesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/EntryGroup"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "readMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 4
                        }
                      }
                    },
                    "ListEntriesResponse": {
                      "fields": {
                        "entries": {
                          "rule": "repeated",
                          "type": "Entry",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "EntryType": {
                      "values": {
                        "ENTRY_TYPE_UNSPECIFIED": 0,
                        "TABLE": 2,
                        "MODEL": 5,
                        "DATA_STREAM": 3,
                        "FILESET": 4
                      }
                    },
                    "GcsFilesetSpec": {
                      "fields": {
                        "filePatterns": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "sampleGcsFileSpecs": {
                          "rule": "repeated",
                          "type": "GcsFileSpec",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "GcsFileSpec": {
                      "fields": {
                        "filePath": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "gcsTimestamps": {
                          "type": "SystemTimestamps",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "sizeBytes": {
                          "type": "int64",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "SystemTimestamps": {
                      "fields": {
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "expireTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Schema": {
                      "fields": {
                        "columns": {
                          "rule": "repeated",
                          "type": "ColumnSchema",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ColumnSchema": {
                      "fields": {
                        "column": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "type": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "mode": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "subcolumns": {
                          "rule": "repeated",
                          "type": "ColumnSchema",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "SearchCatalogResult": {
                      "fields": {
                        "searchResultType": {
                          "type": "SearchResultType",
                          "id": 1
                        },
                        "searchResultSubtype": {
                          "type": "string",
                          "id": 2
                        },
                        "relativeResourceName": {
                          "type": "string",
                          "id": 3
                        },
                        "linkedResource": {
                          "type": "string",
                          "id": 4
                        },
                        "modifyTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7
                        }
                      }
                    },
                    "SearchResultType": {
                      "values": {
                        "SEARCH_RESULT_TYPE_UNSPECIFIED": 0,
                        "ENTRY": 1,
                        "TAG_TEMPLATE": 2,
                        "ENTRY_GROUP": 3
                      }
                    },
                    "BigQueryTableSpec": {
                      "oneofs": {
                        "typeSpec": {
                          "oneof": [
                            "viewSpec",
                            "tableSpec"
                          ]
                        }
                      },
                      "fields": {
                        "tableSourceType": {
                          "type": "TableSourceType",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "viewSpec": {
                          "type": "ViewSpec",
                          "id": 2
                        },
                        "tableSpec": {
                          "type": "TableSpec",
                          "id": 3
                        }
                      }
                    },
                    "TableSourceType": {
                      "values": {
                        "TABLE_SOURCE_TYPE_UNSPECIFIED": 0,
                        "BIGQUERY_VIEW": 2,
                        "BIGQUERY_TABLE": 5,
                        "BIGQUERY_MATERIALIZED_VIEW": 7
                      }
                    },
                    "ViewSpec": {
                      "fields": {
                        "viewQuery": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "TableSpec": {
                      "fields": {
                        "groupedEntry": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Entry"
                          }
                        }
                      }
                    },
                    "BigQueryDateShardedSpec": {
                      "fields": {
                        "dataset": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Entry"
                          }
                        },
                        "tablePrefix": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "shardCount": {
                          "type": "int64",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Tag": {
                      "options": {
                        "(google.api.resource).type": "datacatalog.googleapis.com/Tag",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/entryGroups/{entry_group}/entries/{entry}/tags/{tag}"
                      },
                      "oneofs": {
                        "scope": {
                          "oneof": [
                            "column"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "template": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "templateDisplayName": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "column": {
                          "type": "string",
                          "id": 4
                        },
                        "fields": {
                          "keyType": "string",
                          "type": "TagField",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TagField": {
                      "oneofs": {
                        "kind": {
                          "oneof": [
                            "doubleValue",
                            "stringValue",
                            "boolValue",
                            "timestampValue",
                            "enumValue"
                          ]
                        }
                      },
                      "fields": {
                        "displayName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "doubleValue": {
                          "type": "double",
                          "id": 2
                        },
                        "stringValue": {
                          "type": "string",
                          "id": 3
                        },
                        "boolValue": {
                          "type": "bool",
                          "id": 4
                        },
                        "timestampValue": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5
                        },
                        "enumValue": {
                          "type": "EnumValue",
                          "id": 6
                        },
                        "order": {
                          "type": "int32",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "EnumValue": {
                          "fields": {
                            "displayName": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "TagTemplate": {
                      "options": {
                        "(google.api.resource).type": "datacatalog.googleapis.com/TagTemplate",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/tagTemplates/{tag_template}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2
                        },
                        "fields": {
                          "keyType": "string",
                          "type": "TagTemplateField",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "TagTemplateField": {
                      "options": {
                        "(google.api.resource).type": "datacatalog.googleapis.com/TagTemplateField",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/tagTemplates/{tag_template}/fields/{field}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 1
                        },
                        "type": {
                          "type": "FieldType",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "isRequired": {
                          "type": "bool",
                          "id": 3
                        },
                        "description": {
                          "type": "string",
                          "id": 4
                        },
                        "order": {
                          "type": "int32",
                          "id": 5
                        }
                      }
                    },
                    "FieldType": {
                      "oneofs": {
                        "typeDecl": {
                          "oneof": [
                            "primitiveType",
                            "enumType"
                          ]
                        }
                      },
                      "fields": {
                        "primitiveType": {
                          "type": "PrimitiveType",
                          "id": 1
                        },
                        "enumType": {
                          "type": "EnumType",
                          "id": 2
                        }
                      },
                      "nested": {
                        "PrimitiveType": {
                          "values": {
                            "PRIMITIVE_TYPE_UNSPECIFIED": 0,
                            "DOUBLE": 1,
                            "STRING": 2,
                            "BOOL": 3,
                            "TIMESTAMP": 4
                          }
                        },
                        "EnumType": {
                          "fields": {
                            "allowedValues": {
                              "rule": "repeated",
                              "type": "EnumValue",
                              "id": 1
                            }
                          },
                          "nested": {
                            "EnumValue": {
                              "fields": {
                                "displayName": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "UsageStats": {
                      "fields": {
                        "totalCompletions": {
                          "type": "float",
                          "id": 1
                        },
                        "totalFailures": {
                          "type": "float",
                          "id": 2
                        },
                        "totalCancellations": {
                          "type": "float",
                          "id": 3
                        },
                        "totalExecutionTimeForCompletionsMillis": {
                          "type": "float",
                          "id": 4
                        }
                      }
                    },
                    "UsageSignal": {
                      "fields": {
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "usageWithinTimeRange": {
                          "keyType": "string",
                          "type": "UsageStats",
                          "id": 2
                        }
                      }
                    },
                    "PolicyTagManager": {
                      "options": {
                        "(google.api.default_host)": "datacatalog.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateTaxonomy": {
                          "requestType": "CreateTaxonomyRequest",
                          "responseType": "Taxonomy",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/taxonomies",
                            "(google.api.http).body": "taxonomy",
                            "(google.api.method_signature)": "parent,taxonomy"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/taxonomies",
                                "body": "taxonomy"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,taxonomy"
                            }
                          ]
                        },
                        "DeleteTaxonomy": {
                          "requestType": "DeleteTaxonomyRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/taxonomies/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/taxonomies/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdateTaxonomy": {
                          "requestType": "UpdateTaxonomyRequest",
                          "responseType": "Taxonomy",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{taxonomy.name=projects/*/locations/*/taxonomies/*}",
                            "(google.api.http).body": "taxonomy",
                            "(google.api.method_signature)": "taxonomy"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{taxonomy.name=projects/*/locations/*/taxonomies/*}",
                                "body": "taxonomy"
                              }
                            },
                            {
                              "(google.api.method_signature)": "taxonomy"
                            }
                          ]
                        },
                        "ListTaxonomies": {
                          "requestType": "ListTaxonomiesRequest",
                          "responseType": "ListTaxonomiesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/taxonomies",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/taxonomies"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetTaxonomy": {
                          "requestType": "GetTaxonomyRequest",
                          "responseType": "Taxonomy",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/taxonomies/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/taxonomies/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreatePolicyTag": {
                          "requestType": "CreatePolicyTagRequest",
                          "responseType": "PolicyTag",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*/taxonomies/*}/policyTags",
                            "(google.api.http).body": "policy_tag",
                            "(google.api.method_signature)": "parent,policy_tag"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*/taxonomies/*}/policyTags",
                                "body": "policy_tag"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,policy_tag"
                            }
                          ]
                        },
                        "DeletePolicyTag": {
                          "requestType": "DeletePolicyTagRequest",
                          "responseType": "google.protobuf.Empty",
                          "options": {
                            "(google.api.http).delete": "/v1beta1/{name=projects/*/locations/*/taxonomies/*/policyTags/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1beta1/{name=projects/*/locations/*/taxonomies/*/policyTags/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "UpdatePolicyTag": {
                          "requestType": "UpdatePolicyTagRequest",
                          "responseType": "PolicyTag",
                          "options": {
                            "(google.api.http).patch": "/v1beta1/{policy_tag.name=projects/*/locations/*/taxonomies/*/policyTags/*}",
                            "(google.api.http).body": "policy_tag",
                            "(google.api.method_signature)": "policy_tag"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1beta1/{policy_tag.name=projects/*/locations/*/taxonomies/*/policyTags/*}",
                                "body": "policy_tag"
                              }
                            },
                            {
                              "(google.api.method_signature)": "policy_tag"
                            }
                          ]
                        },
                        "ListPolicyTags": {
                          "requestType": "ListPolicyTagsRequest",
                          "responseType": "ListPolicyTagsResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*/taxonomies/*}/policyTags",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*/taxonomies/*}/policyTags"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetPolicyTag": {
                          "requestType": "GetPolicyTagRequest",
                          "responseType": "PolicyTag",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{name=projects/*/locations/*/taxonomies/*/policyTags/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{name=projects/*/locations/*/taxonomies/*/policyTags/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "GetIamPolicy": {
                          "requestType": "google.iam.v1.GetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{resource=projects/*/locations/*/taxonomies/*}:getIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1beta1/{resource=projects/*/locations/*/taxonomies/*/policyTags/*}:getIamPolicy",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{resource=projects/*/locations/*/taxonomies/*}:getIamPolicy",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1beta1/{resource=projects/*/locations/*/taxonomies/*/policyTags/*}:getIamPolicy",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        },
                        "SetIamPolicy": {
                          "requestType": "google.iam.v1.SetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{resource=projects/*/locations/*/taxonomies/*}:setIamPolicy",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1beta1/{resource=projects/*/locations/*/taxonomies/*/policyTags/*}:setIamPolicy",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{resource=projects/*/locations/*/taxonomies/*}:setIamPolicy",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1beta1/{resource=projects/*/locations/*/taxonomies/*/policyTags/*}:setIamPolicy",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        },
                        "TestIamPermissions": {
                          "requestType": "google.iam.v1.TestIamPermissionsRequest",
                          "responseType": "google.iam.v1.TestIamPermissionsResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{resource=projects/*/locations/*/taxonomies/*}:testIamPermissions",
                            "(google.api.http).body": "*",
                            "(google.api.http).additional_bindings.post": "/v1beta1/{resource=projects/*/locations/*/taxonomies/*/policyTags/*}:testIamPermissions",
                            "(google.api.http).additional_bindings.body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{resource=projects/*/locations/*/taxonomies/*}:testIamPermissions",
                                "body": "*",
                                "additional_bindings": {
                                  "post": "/v1beta1/{resource=projects/*/locations/*/taxonomies/*/policyTags/*}:testIamPermissions",
                                  "body": "*"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    "Taxonomy": {
                      "options": {
                        "(google.api.resource).type": "datacatalog.googleapis.com/Taxonomy",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/taxonomies/{taxonomy}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IDENTIFIER"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "policyTagCount": {
                          "type": "int32",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "taxonomyTimestamps": {
                          "type": "SystemTimestamps",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "activatedPolicyTypes": {
                          "rule": "repeated",
                          "type": "PolicyType",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "service": {
                          "type": "Service",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      },
                      "nested": {
                        "PolicyType": {
                          "values": {
                            "POLICY_TYPE_UNSPECIFIED": 0,
                            "FINE_GRAINED_ACCESS_CONTROL": 1
                          }
                        },
                        "Service": {
                          "fields": {
                            "name": {
                              "type": "ManagingSystem",
                              "id": 1
                            },
                            "identity": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "PolicyTag": {
                      "options": {
                        "(google.api.resource).type": "datacatalog.googleapis.com/PolicyTag",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/taxonomies/{taxonomy}/policyTags/{policy_tag}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "IDENTIFIER"
                          }
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "parentPolicyTag": {
                          "type": "string",
                          "id": 4
                        },
                        "childPolicyTags": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "CreateTaxonomyRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        },
                        "taxonomy": {
                          "type": "Taxonomy",
                          "id": 2
                        }
                      }
                    },
                    "DeleteTaxonomyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        }
                      }
                    },
                    "UpdateTaxonomyRequest": {
                      "fields": {
                        "taxonomy": {
                          "type": "Taxonomy",
                          "id": 1
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "ListTaxonomiesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "ListTaxonomiesResponse": {
                      "fields": {
                        "taxonomies": {
                          "rule": "repeated",
                          "type": "Taxonomy",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetTaxonomyRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        }
                      }
                    },
                    "CreatePolicyTagRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/PolicyTag"
                          }
                        },
                        "policyTag": {
                          "type": "PolicyTag",
                          "id": 2
                        }
                      }
                    },
                    "DeletePolicyTagRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/PolicyTag"
                          }
                        }
                      }
                    },
                    "UpdatePolicyTagRequest": {
                      "fields": {
                        "policyTag": {
                          "type": "PolicyTag",
                          "id": 1
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "ListPolicyTagsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/PolicyTag"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListPolicyTagsResponse": {
                      "fields": {
                        "policyTags": {
                          "rule": "repeated",
                          "type": "PolicyTag",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GetPolicyTagRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/PolicyTag"
                          }
                        }
                      }
                    },
                    "PolicyTagManagerSerialization": {
                      "options": {
                        "(google.api.default_host)": "datacatalog.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ImportTaxonomies": {
                          "requestType": "ImportTaxonomiesRequest",
                          "responseType": "ImportTaxonomiesResponse",
                          "options": {
                            "(google.api.http).post": "/v1beta1/{parent=projects/*/locations/*}/taxonomies:import",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1beta1/{parent=projects/*/locations/*}/taxonomies:import",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "ExportTaxonomies": {
                          "requestType": "ExportTaxonomiesRequest",
                          "responseType": "ExportTaxonomiesResponse",
                          "options": {
                            "(google.api.http).get": "/v1beta1/{parent=projects/*/locations/*}/taxonomies:export"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1beta1/{parent=projects/*/locations/*}/taxonomies:export"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "SerializedTaxonomy": {
                      "fields": {
                        "displayName": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 2
                        },
                        "policyTags": {
                          "rule": "repeated",
                          "type": "SerializedPolicyTag",
                          "id": 3
                        },
                        "activatedPolicyTypes": {
                          "rule": "repeated",
                          "type": "Taxonomy.PolicyType",
                          "id": 4
                        }
                      }
                    },
                    "SerializedPolicyTag": {
                      "fields": {
                        "policyTag": {
                          "type": "string",
                          "id": 1
                        },
                        "displayName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "description": {
                          "type": "string",
                          "id": 3
                        },
                        "childPolicyTags": {
                          "rule": "repeated",
                          "type": "SerializedPolicyTag",
                          "id": 4
                        }
                      }
                    },
                    "ImportTaxonomiesRequest": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "inlineSource"
                          ]
                        }
                      },
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        },
                        "inlineSource": {
                          "type": "InlineSource",
                          "id": 2
                        }
                      }
                    },
                    "InlineSource": {
                      "fields": {
                        "taxonomies": {
                          "rule": "repeated",
                          "type": "SerializedTaxonomy",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "ImportTaxonomiesResponse": {
                      "fields": {
                        "taxonomies": {
                          "rule": "repeated",
                          "type": "Taxonomy",
                          "id": 1
                        }
                      }
                    },
                    "ExportTaxonomiesRequest": {
                      "oneofs": {
                        "destination": {
                          "oneof": [
                            "serializedTaxonomies"
                          ]
                        }
                      },
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        },
                        "taxonomies": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "datacatalog.googleapis.com/Taxonomy"
                          }
                        },
                        "serializedTaxonomies": {
                          "type": "bool",
                          "id": 3
                        }
                      }
                    },
                    "ExportTaxonomiesResponse": {
                      "fields": {
                        "taxonomies": {
                          "rule": "repeated",
                          "type": "SerializedTaxonomy",
                          "id": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "ResourceProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7,
                "IDENTIFIER": 8
              }
            },
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "CommonLanguageSettings": {
              "fields": {
                "referenceDocsUri": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "deprecated": true
                  }
                },
                "destinations": {
                  "rule": "repeated",
                  "type": "ClientLibraryDestination",
                  "id": 2
                }
              }
            },
            "ClientLibrarySettings": {
              "fields": {
                "version": {
                  "type": "string",
                  "id": 1
                },
                "launchStage": {
                  "type": "LaunchStage",
                  "id": 2
                },
                "restNumericEnums": {
                  "type": "bool",
                  "id": 3
                },
                "javaSettings": {
                  "type": "JavaSettings",
                  "id": 21
                },
                "cppSettings": {
                  "type": "CppSettings",
                  "id": 22
                },
                "phpSettings": {
                  "type": "PhpSettings",
                  "id": 23
                },
                "pythonSettings": {
                  "type": "PythonSettings",
                  "id": 24
                },
                "nodeSettings": {
                  "type": "NodeSettings",
                  "id": 25
                },
                "dotnetSettings": {
                  "type": "DotnetSettings",
                  "id": 26
                },
                "rubySettings": {
                  "type": "RubySettings",
                  "id": 27
                },
                "goSettings": {
                  "type": "GoSettings",
                  "id": 28
                }
              }
            },
            "Publishing": {
              "fields": {
                "methodSettings": {
                  "rule": "repeated",
                  "type": "MethodSettings",
                  "id": 2
                },
                "newIssueUri": {
                  "type": "string",
                  "id": 101
                },
                "documentationUri": {
                  "type": "string",
                  "id": 102
                },
                "apiShortName": {
                  "type": "string",
                  "id": 103
                },
                "githubLabel": {
                  "type": "string",
                  "id": 104
                },
                "codeownerGithubTeams": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 105
                },
                "docTagPrefix": {
                  "type": "string",
                  "id": 106
                },
                "organization": {
                  "type": "ClientLibraryOrganization",
                  "id": 107
                },
                "librarySettings": {
                  "rule": "repeated",
                  "type": "ClientLibrarySettings",
                  "id": 109
                },
                "protoReferenceDocumentationUri": {
                  "type": "string",
                  "id": 110
                }
              }
            },
            "JavaSettings": {
              "fields": {
                "libraryPackage": {
                  "type": "string",
                  "id": 1
                },
                "serviceClassNames": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 3
                }
              }
            },
            "CppSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PhpSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PythonSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "NodeSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "DotnetSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                },
                "renamedServices": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "renamedResources": {
                  "keyType": "string",
                  "type": "string",
                  "id": 3
                },
                "ignoredResources": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 4
                },
                "forcedNamespaceAliases": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                },
                "handwrittenSignatures": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 6
                }
              }
            },
            "RubySettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "GoSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "MethodSettings": {
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "longRunning": {
                  "type": "LongRunning",
                  "id": 2
                },
                "autoPopulatedFields": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                }
              },
              "nested": {
                "LongRunning": {
                  "fields": {
                    "initialPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 1
                    },
                    "pollDelayMultiplier": {
                      "type": "float",
                      "id": 2
                    },
                    "maxPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 3
                    },
                    "totalPollTimeout": {
                      "type": "google.protobuf.Duration",
                      "id": 4
                    }
                  }
                }
              }
            },
            "ClientLibraryOrganization": {
              "values": {
                "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED": 0,
                "CLOUD": 1,
                "ADS": 2,
                "PHOTOS": 3,
                "STREET_VIEW": 4,
                "SHOPPING": 5,
                "GEO": 6,
                "GENERATIVE_AI": 7
              }
            },
            "ClientLibraryDestination": {
              "values": {
                "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED": 0,
                "GITHUB": 10,
                "PACKAGE_MANAGER": 20
              }
            },
            "LaunchStage": {
              "values": {
                "LAUNCH_STAGE_UNSPECIFIED": 0,
                "UNIMPLEMENTED": 6,
                "PRELAUNCH": 7,
                "EARLY_ACCESS": 1,
                "ALPHA": 2,
                "BETA": 3,
                "GA": 4,
                "DEPRECATED": 5
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "Edition": {
              "values": {
                "EDITION_UNKNOWN": 0,
                "EDITION_PROTO2": 998,
                "EDITION_PROTO3": 999,
                "EDITION_2023": 1000,
                "EDITION_2024": 1001,
                "EDITION_1_TEST_ONLY": 1,
                "EDITION_2_TEST_ONLY": 2,
                "EDITION_99997_TEST_ONLY": 99997,
                "EDITION_99998_TEST_ONLY": 99998,
                "EDITION_99999_TEST_ONLY": 99999,
                "EDITION_MAX": 2147483647
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "Edition",
                  "id": 14
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                },
                "declaration": {
                  "rule": "repeated",
                  "type": "Declaration",
                  "id": 2,
                  "options": {
                    "retention": "RETENTION_SOURCE"
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 50
                },
                "verification": {
                  "type": "VerificationState",
                  "id": 3,
                  "options": {
                    "default": "UNVERIFIED",
                    "retention": "RETENTION_SOURCE"
                  }
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "Declaration": {
                  "fields": {
                    "number": {
                      "type": "int32",
                      "id": 1
                    },
                    "fullName": {
                      "type": "string",
                      "id": 2
                    },
                    "type": {
                      "type": "string",
                      "id": 3
                    },
                    "reserved": {
                      "type": "bool",
                      "id": 5
                    },
                    "repeated": {
                      "type": "bool",
                      "id": 6
                    }
                  },
                  "reserved": [
                    [
                      4,
                      4
                    ]
                  ]
                },
                "VerificationState": {
                  "values": {
                    "DECLARATION": 0,
                    "UNVERIFIED": 1
                  }
                }
              }
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REPEATED": 3,
                    "LABEL_REQUIRED": 2
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 50
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  42,
                  42
                ],
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 11,
                  "options": {
                    "deprecated": true
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 12
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "retention": {
                  "type": "OptionRetention",
                  "id": 17
                },
                "targets": {
                  "rule": "repeated",
                  "type": "OptionTargetType",
                  "id": 19,
                  "options": {
                    "packed": false
                  }
                },
                "editionDefaults": {
                  "rule": "repeated",
                  "type": "EditionDefault",
                  "id": 20
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 21
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  18,
                  18
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                },
                "OptionRetention": {
                  "values": {
                    "RETENTION_UNKNOWN": 0,
                    "RETENTION_RUNTIME": 1,
                    "RETENTION_SOURCE": 2
                  }
                },
                "OptionTargetType": {
                  "values": {
                    "TARGET_TYPE_UNKNOWN": 0,
                    "TARGET_TYPE_FILE": 1,
                    "TARGET_TYPE_EXTENSION_RANGE": 2,
                    "TARGET_TYPE_MESSAGE": 3,
                    "TARGET_TYPE_FIELD": 4,
                    "TARGET_TYPE_ONEOF": 5,
                    "TARGET_TYPE_ENUM": 6,
                    "TARGET_TYPE_ENUM_ENTRY": 7,
                    "TARGET_TYPE_SERVICE": 8,
                    "TARGET_TYPE_METHOD": 9
                  }
                },
                "EditionDefault": {
                  "fields": {
                    "edition": {
                      "type": "Edition",
                      "id": 3
                    },
                    "value": {
                      "type": "string",
                      "id": 2
                    }
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "features": {
                  "type": "FeatureSet",
                  "id": 1
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "deprecated": true
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 7
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 2
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "features": {
                  "type": "FeatureSet",
                  "id": 34
                },
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "features": {
                  "type": "FeatureSet",
                  "id": 35
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "FeatureSet": {
              "fields": {
                "fieldPresence": {
                  "type": "FieldPresence",
                  "id": 1,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_2023",
                    "edition_defaults.value": "EXPLICIT"
                  }
                },
                "enumType": {
                  "type": "EnumType",
                  "id": 2,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "OPEN"
                  }
                },
                "repeatedFieldEncoding": {
                  "type": "RepeatedFieldEncoding",
                  "id": 3,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "PACKED"
                  }
                },
                "utf8Validation": {
                  "type": "Utf8Validation",
                  "id": 4,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "VERIFY"
                  }
                },
                "messageEncoding": {
                  "type": "MessageEncoding",
                  "id": 5,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO2",
                    "edition_defaults.value": "LENGTH_PREFIXED"
                  }
                },
                "jsonFormat": {
                  "type": "JsonFormat",
                  "id": 6,
                  "options": {
                    "retention": "RETENTION_RUNTIME",
                    "targets": "TARGET_TYPE_FILE",
                    "edition_defaults.edition": "EDITION_PROTO3",
                    "edition_defaults.value": "ALLOW"
                  }
                }
              },
              "extensions": [
                [
                  1000,
                  1000
                ],
                [
                  1001,
                  1001
                ],
                [
                  9995,
                  9999
                ]
              ],
              "reserved": [
                [
                  999,
                  999
                ]
              ],
              "nested": {
                "FieldPresence": {
                  "values": {
                    "FIELD_PRESENCE_UNKNOWN": 0,
                    "EXPLICIT": 1,
                    "IMPLICIT": 2,
                    "LEGACY_REQUIRED": 3
                  }
                },
                "EnumType": {
                  "values": {
                    "ENUM_TYPE_UNKNOWN": 0,
                    "OPEN": 1,
                    "CLOSED": 2
                  }
                },
                "RepeatedFieldEncoding": {
                  "values": {
                    "REPEATED_FIELD_ENCODING_UNKNOWN": 0,
                    "PACKED": 1,
                    "EXPANDED": 2
                  }
                },
                "Utf8Validation": {
                  "values": {
                    "UTF8_VALIDATION_UNKNOWN": 0,
                    "VERIFY": 2,
                    "NONE": 3
                  }
                },
                "MessageEncoding": {
                  "values": {
                    "MESSAGE_ENCODING_UNKNOWN": 0,
                    "LENGTH_PREFIXED": 1,
                    "DELIMITED": 2
                  }
                },
                "JsonFormat": {
                  "values": {
                    "JSON_FORMAT_UNKNOWN": 0,
                    "ALLOW": 1,
                    "LEGACY_BEST_EFFORT": 2
                  }
                }
              }
            },
            "FeatureSetDefaults": {
              "fields": {
                "defaults": {
                  "rule": "repeated",
                  "type": "FeatureSetEditionDefault",
                  "id": 1
                },
                "minimumEdition": {
                  "type": "Edition",
                  "id": 4
                },
                "maximumEdition": {
                  "type": "Edition",
                  "id": 5
                }
              },
              "nested": {
                "FeatureSetEditionDefault": {
                  "fields": {
                    "edition": {
                      "type": "Edition",
                      "id": 3
                    },
                    "features": {
                      "type": "FeatureSet",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            }
          }
        },
        "iam": {
          "nested": {
            "v1": {
              "options": {
                "cc_enable_arenas": true,
                "csharp_namespace": "Google.Cloud.Iam.V1",
                "go_package": "cloud.google.com/go/iam/apiv1/iampb;iampb",
                "java_multiple_files": true,
                "java_outer_classname": "PolicyProto",
                "java_package": "com.google.iam.v1",
                "php_namespace": "Google\\Cloud\\Iam\\V1"
              },
              "nested": {
                "IAMPolicy": {
                  "options": {
                    "(google.api.default_host)": "iam-meta-api.googleapis.com"
                  },
                  "methods": {
                    "SetIamPolicy": {
                      "requestType": "SetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:setIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:setIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "GetIamPolicy": {
                      "requestType": "GetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:getIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:getIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "TestIamPermissions": {
                      "requestType": "TestIamPermissionsRequest",
                      "responseType": "TestIamPermissionsResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:testIamPermissions",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:testIamPermissions",
                            "body": "*"
                          }
                        }
                      ]
                    }
                  }
                },
                "SetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "policy": {
                      "type": "Policy",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "updateMask": {
                      "type": "google.protobuf.FieldMask",
                      "id": 3
                    }
                  }
                },
                "GetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "options": {
                      "type": "GetPolicyOptions",
                      "id": 2
                    }
                  }
                },
                "TestIamPermissionsRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "TestIamPermissionsResponse": {
                  "fields": {
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 1
                    }
                  }
                },
                "GetPolicyOptions": {
                  "fields": {
                    "requestedPolicyVersion": {
                      "type": "int32",
                      "id": 1
                    }
                  }
                },
                "Policy": {
                  "fields": {
                    "version": {
                      "type": "int32",
                      "id": 1
                    },
                    "bindings": {
                      "rule": "repeated",
                      "type": "Binding",
                      "id": 4
                    },
                    "auditConfigs": {
                      "rule": "repeated",
                      "type": "AuditConfig",
                      "id": 6
                    },
                    "etag": {
                      "type": "bytes",
                      "id": 3
                    }
                  }
                },
                "Binding": {
                  "fields": {
                    "role": {
                      "type": "string",
                      "id": 1
                    },
                    "members": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 3
                    }
                  }
                },
                "AuditConfig": {
                  "fields": {
                    "service": {
                      "type": "string",
                      "id": 1
                    },
                    "auditLogConfigs": {
                      "rule": "repeated",
                      "type": "AuditLogConfig",
                      "id": 3
                    }
                  }
                },
                "AuditLogConfig": {
                  "fields": {
                    "logType": {
                      "type": "LogType",
                      "id": 1
                    },
                    "exemptedMembers": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    }
                  },
                  "nested": {
                    "LogType": {
                      "values": {
                        "LOG_TYPE_UNSPECIFIED": 0,
                        "ADMIN_READ": 1,
                        "DATA_WRITE": 2,
                        "DATA_READ": 3
                      }
                    }
                  }
                },
                "PolicyDelta": {
                  "fields": {
                    "bindingDeltas": {
                      "rule": "repeated",
                      "type": "BindingDelta",
                      "id": 1
                    },
                    "auditConfigDeltas": {
                      "rule": "repeated",
                      "type": "AuditConfigDelta",
                      "id": 2
                    }
                  }
                },
                "BindingDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "role": {
                      "type": "string",
                      "id": 2
                    },
                    "member": {
                      "type": "string",
                      "id": 3
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                },
                "AuditConfigDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "service": {
                      "type": "string",
                      "id": 2
                    },
                    "exemptedMember": {
                      "type": "string",
                      "id": 3
                    },
                    "logType": {
                      "type": "string",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "type": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/type/expr;expr",
            "java_multiple_files": true,
            "java_outer_classname": "ExprProto",
            "java_package": "com.google.type",
            "objc_class_prefix": "GTP"
          },
          "nested": {
            "Expr": {
              "fields": {
                "expression": {
                  "type": "string",
                  "id": 1
                },
                "title": {
                  "type": "string",
                  "id": 2
                },
                "description": {
                  "type": "string",
                  "id": 3
                },
                "location": {
                  "type": "string",
                  "id": 4
                }
              }
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "cloud.google.com/go/longrunning/autogen/longrunningpb;longrunningpb",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        }
      }
    }
  }
}