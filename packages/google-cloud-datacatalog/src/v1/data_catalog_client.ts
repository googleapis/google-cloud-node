// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  PaginationCallback,
  GaxCall,
} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v1/data_catalog_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './data_catalog_client_config.json';
const version = require('../../../package.json').version;

/**
 *  Data Catalog API service allows you to discover, understand, and manage
 *  your data.
 * @class
 * @memberof v1
 */
export class DataCatalogClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  dataCatalogStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of DataCatalogClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
   *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new DataCatalogClient({fallback: 'rest'}, gax);
   *     ```
   */
  constructor(
    opts?: ClientOptions,
    gaxInstance?: typeof gax | typeof gax.fallback
  ) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof DataCatalogClient;
    const servicePath =
      opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(
      opts?.servicePath || opts?.apiEndpoint
    );
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback =
      opts?.fallback ??
      (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest') {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      entryPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/entryGroups/{entry_group}/entries/{entry}'
      ),
      entryGroupPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/entryGroups/{entry_group}'
      ),
      locationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}'
      ),
      policyTagPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/taxonomies/{taxonomy}/policyTags/{policy_tag}'
      ),
      projectPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}'
      ),
      tagPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/entryGroups/{entry_group}/entries/{entry}/tags/{tag}'
      ),
      tagTemplatePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/tagTemplates/{tag_template}'
      ),
      tagTemplateFieldPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/tagTemplates/{tag_template}/fields/{field}'
      ),
      tagTemplateFieldEnumValuePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/tagTemplates/{tag_template}/fields/{tag_template_field_id}/enumValues/{enum_value_display_name}'
      ),
      taxonomyPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/taxonomies/{taxonomy}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      searchCatalog: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'results'
      ),
      listEntryGroups: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'entryGroups'
      ),
      listEntries: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'entries'
      ),
      listTags: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'tags'
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.datacatalog.v1.DataCatalog',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.dataCatalogStub) {
      return this.dataCatalogStub;
    }

    // Put together the "service stub" for
    // google.cloud.datacatalog.v1.DataCatalog.
    this.dataCatalogStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.datacatalog.v1.DataCatalog'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.datacatalog.v1.DataCatalog,
      this._opts,
      this._providedCustomServicePath
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const dataCatalogStubMethods = [
      'searchCatalog',
      'createEntryGroup',
      'getEntryGroup',
      'updateEntryGroup',
      'deleteEntryGroup',
      'listEntryGroups',
      'createEntry',
      'updateEntry',
      'deleteEntry',
      'getEntry',
      'lookupEntry',
      'listEntries',
      'modifyEntryOverview',
      'modifyEntryContacts',
      'createTagTemplate',
      'getTagTemplate',
      'updateTagTemplate',
      'deleteTagTemplate',
      'createTagTemplateField',
      'updateTagTemplateField',
      'renameTagTemplateField',
      'renameTagTemplateFieldEnumValue',
      'deleteTagTemplateField',
      'createTag',
      'updateTag',
      'deleteTag',
      'listTags',
      'starEntry',
      'unstarEntry',
      'setIamPolicy',
      'getIamPolicy',
      'testIamPermissions',
    ];
    for (const methodName of dataCatalogStubMethods) {
      const callPromise = this.dataCatalogStub.then(
        stub =>
          (...args: Array<{}>) => {
            if (this._terminated) {
              return Promise.reject('The client has already been closed.');
            }
            const func = stub[methodName];
            return func.apply(stub, args);
          },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const descriptor = this.descriptors.page[methodName] || undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.dataCatalogStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'datacatalog.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'datacatalog.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return ['https://www.googleapis.com/auth/cloud-platform'];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  /**
   * Creates an entry group.
   *
   * An entry group contains logically related entries together with [Cloud
   * Identity and Access Management](/data-catalog/docs/concepts/iam) policies.
   * These policies specify users who can create, edit, and view entries
   * within entry groups.
   *
   * Data Catalog automatically creates entry groups with names that start with
   * the `@` symbol for the following resources:
   *
   * * BigQuery entries (`@bigquery`)
   * * Pub/Sub topics (`@pubsub`)
   * * Dataproc Metastore services (`@dataproc_metastore_{SERVICE_NAME_HASH}`)
   *
   * You can create your own entry groups for Cloud Storage fileset entries
   * and custom entries together with the corresponding IAM policies.
   * User-created entry groups can't contain the `@` symbol, it is reserved
   * for automatically created groups.
   *
   * Entry groups, like entries, can be searched.
   *
   * A maximum of 10,000 entry groups may be created per organization across all
   * locations.
   *
   * You must enable the Data Catalog API in the project identified by
   * the `parent` parameter. For more information, see [Data Catalog resource
   * project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The names of the project and location that the new entry group belongs to.
   *
   *   Note: The entry group itself and its child resources might not be
   *   stored in the location specified in its name.
   * @param {string} request.entryGroupId
   *   Required. The ID of the entry group to create.
   *
   *   The ID must contain only letters (a-z, A-Z), numbers (0-9),
   *   underscores (_), and must start with a letter or underscore.
   *   The maximum size is 64 bytes when encoded in UTF-8.
   * @param {google.cloud.datacatalog.v1.EntryGroup} request.entryGroup
   *   The entry group to create. Defaults to empty.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [EntryGroup]{@link google.cloud.datacatalog.v1.EntryGroup}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.create_entry_group.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_CreateEntryGroup_async
   */
  createEntryGroup(
    request?: protos.google.cloud.datacatalog.v1.ICreateEntryGroupRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntryGroup,
      protos.google.cloud.datacatalog.v1.ICreateEntryGroupRequest | undefined,
      {} | undefined
    ]
  >;
  createEntryGroup(
    request: protos.google.cloud.datacatalog.v1.ICreateEntryGroupRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntryGroup,
      | protos.google.cloud.datacatalog.v1.ICreateEntryGroupRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createEntryGroup(
    request: protos.google.cloud.datacatalog.v1.ICreateEntryGroupRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntryGroup,
      | protos.google.cloud.datacatalog.v1.ICreateEntryGroupRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createEntryGroup(
    request?: protos.google.cloud.datacatalog.v1.ICreateEntryGroupRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.IEntryGroup,
          | protos.google.cloud.datacatalog.v1.ICreateEntryGroupRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.IEntryGroup,
      | protos.google.cloud.datacatalog.v1.ICreateEntryGroupRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntryGroup,
      protos.google.cloud.datacatalog.v1.ICreateEntryGroupRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createEntryGroup(request, options, callback);
  }
  /**
   * Gets an entry group.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the entry group to get.
   * @param {google.protobuf.FieldMask} request.readMask
   *   The fields to return. If empty or omitted, all fields are returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [EntryGroup]{@link google.cloud.datacatalog.v1.EntryGroup}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.get_entry_group.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_GetEntryGroup_async
   */
  getEntryGroup(
    request?: protos.google.cloud.datacatalog.v1.IGetEntryGroupRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntryGroup,
      protos.google.cloud.datacatalog.v1.IGetEntryGroupRequest | undefined,
      {} | undefined
    ]
  >;
  getEntryGroup(
    request: protos.google.cloud.datacatalog.v1.IGetEntryGroupRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntryGroup,
      | protos.google.cloud.datacatalog.v1.IGetEntryGroupRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getEntryGroup(
    request: protos.google.cloud.datacatalog.v1.IGetEntryGroupRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntryGroup,
      | protos.google.cloud.datacatalog.v1.IGetEntryGroupRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getEntryGroup(
    request?: protos.google.cloud.datacatalog.v1.IGetEntryGroupRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.IEntryGroup,
          | protos.google.cloud.datacatalog.v1.IGetEntryGroupRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.IEntryGroup,
      | protos.google.cloud.datacatalog.v1.IGetEntryGroupRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntryGroup,
      protos.google.cloud.datacatalog.v1.IGetEntryGroupRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getEntryGroup(request, options, callback);
  }
  /**
   * Updates an entry group.
   *
   * You must enable the Data Catalog API in the project identified by
   * the `entry_group.name` parameter. For more information, see [Data Catalog
   * resource
   * project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.datacatalog.v1.EntryGroup} request.entryGroup
   *   Required. Updates for the entry group. The `name` field must be set.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Names of fields whose values to overwrite on an entry group.
   *
   *   If this parameter is absent or empty, all modifiable fields
   *   are overwritten. If such fields are non-required and omitted in the
   *   request body, their values are emptied.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [EntryGroup]{@link google.cloud.datacatalog.v1.EntryGroup}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.update_entry_group.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_UpdateEntryGroup_async
   */
  updateEntryGroup(
    request?: protos.google.cloud.datacatalog.v1.IUpdateEntryGroupRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntryGroup,
      protos.google.cloud.datacatalog.v1.IUpdateEntryGroupRequest | undefined,
      {} | undefined
    ]
  >;
  updateEntryGroup(
    request: protos.google.cloud.datacatalog.v1.IUpdateEntryGroupRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntryGroup,
      | protos.google.cloud.datacatalog.v1.IUpdateEntryGroupRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateEntryGroup(
    request: protos.google.cloud.datacatalog.v1.IUpdateEntryGroupRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntryGroup,
      | protos.google.cloud.datacatalog.v1.IUpdateEntryGroupRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateEntryGroup(
    request?: protos.google.cloud.datacatalog.v1.IUpdateEntryGroupRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.IEntryGroup,
          | protos.google.cloud.datacatalog.v1.IUpdateEntryGroupRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.IEntryGroup,
      | protos.google.cloud.datacatalog.v1.IUpdateEntryGroupRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntryGroup,
      protos.google.cloud.datacatalog.v1.IUpdateEntryGroupRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'entry_group.name': request.entryGroup!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateEntryGroup(request, options, callback);
  }
  /**
   * Deletes an entry group.
   *
   * You must enable the Data Catalog API in the project
   * identified by the `name` parameter. For more information, see [Data Catalog
   * resource
   * project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the entry group to delete.
   * @param {boolean} [request.force]
   *   Optional. If true, deletes all entries in the entry group.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.delete_entry_group.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_DeleteEntryGroup_async
   */
  deleteEntryGroup(
    request?: protos.google.cloud.datacatalog.v1.IDeleteEntryGroupRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.datacatalog.v1.IDeleteEntryGroupRequest | undefined,
      {} | undefined
    ]
  >;
  deleteEntryGroup(
    request: protos.google.cloud.datacatalog.v1.IDeleteEntryGroupRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.datacatalog.v1.IDeleteEntryGroupRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteEntryGroup(
    request: protos.google.cloud.datacatalog.v1.IDeleteEntryGroupRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.datacatalog.v1.IDeleteEntryGroupRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteEntryGroup(
    request?: protos.google.cloud.datacatalog.v1.IDeleteEntryGroupRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.datacatalog.v1.IDeleteEntryGroupRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.datacatalog.v1.IDeleteEntryGroupRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.datacatalog.v1.IDeleteEntryGroupRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteEntryGroup(request, options, callback);
  }
  /**
   * Creates an entry.
   *
   * You can create entries only with 'FILESET', 'CLUSTER', 'DATA_STREAM',
   * or custom types. Data Catalog automatically creates entries with other
   * types during metadata ingestion from integrated systems.
   *
   * You must enable the Data Catalog API in the project identified by
   * the `parent` parameter. For more information, see [Data Catalog resource
   * project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
   *
   * An entry group can have a maximum of 100,000 entries.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the entry group this entry belongs to.
   *
   *   Note: The entry itself and its child resources might not be stored in
   *   the location specified in its name.
   * @param {string} request.entryId
   *   Required. The ID of the entry to create.
   *
   *   The ID must contain only letters (a-z, A-Z), numbers (0-9),
   *   and underscores (_).
   *   The maximum size is 64 bytes when encoded in UTF-8.
   * @param {google.cloud.datacatalog.v1.Entry} request.entry
   *   Required. The entry to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Entry]{@link google.cloud.datacatalog.v1.Entry}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.create_entry.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_CreateEntry_async
   */
  createEntry(
    request?: protos.google.cloud.datacatalog.v1.ICreateEntryRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.ICreateEntryRequest | undefined,
      {} | undefined
    ]
  >;
  createEntry(
    request: protos.google.cloud.datacatalog.v1.ICreateEntryRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.ICreateEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  createEntry(
    request: protos.google.cloud.datacatalog.v1.ICreateEntryRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.ICreateEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  createEntry(
    request?: protos.google.cloud.datacatalog.v1.ICreateEntryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.IEntry,
          | protos.google.cloud.datacatalog.v1.ICreateEntryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.ICreateEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.ICreateEntryRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createEntry(request, options, callback);
  }
  /**
   * Updates an existing entry.
   *
   * You must enable the Data Catalog API in the project identified by
   * the `entry.name` parameter. For more information, see [Data Catalog
   * resource
   * project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.datacatalog.v1.Entry} request.entry
   *   Required. Updates for the entry. The `name` field must be set.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Names of fields whose values to overwrite on an entry.
   *
   *   If this parameter is absent or empty, all modifiable fields
   *   are overwritten. If such fields are non-required and omitted in the
   *   request body, their values are emptied.
   *
   *   You can modify only the fields listed below.
   *
   *   For entries with type `DATA_STREAM`:
   *
   *   * `schema`
   *
   *   For entries with type `FILESET`:
   *
   *   * `schema`
   *   * `display_name`
   *   * `description`
   *   * `gcs_fileset_spec`
   *   * `gcs_fileset_spec.file_patterns`
   *
   *   For entries with `user_specified_type`:
   *
   *   * `schema`
   *   * `display_name`
   *   * `description`
   *   * `user_specified_type`
   *   * `user_specified_system`
   *   * `linked_resource`
   *   * `source_system_timestamps`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Entry]{@link google.cloud.datacatalog.v1.Entry}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.update_entry.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_UpdateEntry_async
   */
  updateEntry(
    request?: protos.google.cloud.datacatalog.v1.IUpdateEntryRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.IUpdateEntryRequest | undefined,
      {} | undefined
    ]
  >;
  updateEntry(
    request: protos.google.cloud.datacatalog.v1.IUpdateEntryRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.IUpdateEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateEntry(
    request: protos.google.cloud.datacatalog.v1.IUpdateEntryRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.IUpdateEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateEntry(
    request?: protos.google.cloud.datacatalog.v1.IUpdateEntryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.IEntry,
          | protos.google.cloud.datacatalog.v1.IUpdateEntryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.IUpdateEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.IUpdateEntryRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'entry.name': request.entry!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateEntry(request, options, callback);
  }
  /**
   * Deletes an existing entry.
   *
   * You can delete only the entries created by the
   * {@link google.cloud.datacatalog.v1.DataCatalog.CreateEntry|CreateEntry}
   * method.
   *
   * You must enable the Data Catalog API in the project identified by
   * the `name` parameter. For more information, see [Data Catalog
   * resource
   * project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the entry to delete.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.delete_entry.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_DeleteEntry_async
   */
  deleteEntry(
    request?: protos.google.cloud.datacatalog.v1.IDeleteEntryRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.datacatalog.v1.IDeleteEntryRequest | undefined,
      {} | undefined
    ]
  >;
  deleteEntry(
    request: protos.google.cloud.datacatalog.v1.IDeleteEntryRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      protos.google.cloud.datacatalog.v1.IDeleteEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteEntry(
    request: protos.google.cloud.datacatalog.v1.IDeleteEntryRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      protos.google.cloud.datacatalog.v1.IDeleteEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteEntry(
    request?: protos.google.cloud.datacatalog.v1.IDeleteEntryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.datacatalog.v1.IDeleteEntryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      protos.google.cloud.datacatalog.v1.IDeleteEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.datacatalog.v1.IDeleteEntryRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteEntry(request, options, callback);
  }
  /**
   * Gets an entry.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the entry to get.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Entry]{@link google.cloud.datacatalog.v1.Entry}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.get_entry.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_GetEntry_async
   */
  getEntry(
    request?: protos.google.cloud.datacatalog.v1.IGetEntryRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.IGetEntryRequest | undefined,
      {} | undefined
    ]
  >;
  getEntry(
    request: protos.google.cloud.datacatalog.v1.IGetEntryRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.IGetEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getEntry(
    request: protos.google.cloud.datacatalog.v1.IGetEntryRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.IGetEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getEntry(
    request?: protos.google.cloud.datacatalog.v1.IGetEntryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.IEntry,
          | protos.google.cloud.datacatalog.v1.IGetEntryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.IGetEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.IGetEntryRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getEntry(request, options, callback);
  }
  /**
   * Gets an entry by its target resource name.
   *
   * The resource name comes from the source Google Cloud Platform service.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.linkedResource
   *   The full name of the Google Cloud Platform resource the Data Catalog
   *   entry represents. For more information, see [Full Resource Name]
   *   (https://cloud.google.com/apis/design/resource_names#full_resource_name).
   *
   *   Full names are case-sensitive. For example:
   *
   *    * `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}`
   *    * `//pubsub.googleapis.com/projects/{PROJECT_ID}/topics/{TOPIC_ID}`
   * @param {string} request.sqlResource
   *   The SQL name of the entry. SQL names are case-sensitive.
   *
   *   Examples:
   *
   *   * `pubsub.topic.{PROJECT_ID}.{TOPIC_ID}`
   *   * `pubsub.topic.{PROJECT_ID}.`\``{TOPIC.ID.SEPARATED.WITH.DOTS}`\`
   *   * `bigquery.table.{PROJECT_ID}.{DATASET_ID}.{TABLE_ID}`
   *   * `bigquery.dataset.{PROJECT_ID}.{DATASET_ID}`
   *   * `datacatalog.entry.{PROJECT_ID}.{LOCATION_ID}.{ENTRY_GROUP_ID}.{ENTRY_ID}`
   *
   *   Identifiers (`*_ID`) should comply with the
   *   [Lexical structure in Standard SQL]
   *   (https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical).
   * @param {string} request.fullyQualifiedName
   *   Fully qualified name (FQN) of the resource.
   *
   *   FQNs take two forms:
   *
   *   * For non-regionalized resources:
   *
   *     `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}`
   *
   *   * For regionalized resources:
   *
   *     `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}`
   *
   *   Example for a DPMS table:
   *
   *   `dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Entry]{@link google.cloud.datacatalog.v1.Entry}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.lookup_entry.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_LookupEntry_async
   */
  lookupEntry(
    request?: protos.google.cloud.datacatalog.v1.ILookupEntryRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.ILookupEntryRequest | undefined,
      {} | undefined
    ]
  >;
  lookupEntry(
    request: protos.google.cloud.datacatalog.v1.ILookupEntryRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.ILookupEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  lookupEntry(
    request: protos.google.cloud.datacatalog.v1.ILookupEntryRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.ILookupEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  lookupEntry(
    request?: protos.google.cloud.datacatalog.v1.ILookupEntryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.IEntry,
          | protos.google.cloud.datacatalog.v1.ILookupEntryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.ILookupEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntry,
      protos.google.cloud.datacatalog.v1.ILookupEntryRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    this.initialize();
    return this.innerApiCalls.lookupEntry(request, options, callback);
  }
  /**
   * Modifies entry overview, part of the business context of an
   * {@link google.cloud.datacatalog.v1.Entry|Entry}.
   *
   * To call this method, you must have the `datacatalog.entries.updateOverview`
   * IAM permission on the corresponding project.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The full resource name of the entry.
   * @param {google.cloud.datacatalog.v1.EntryOverview} request.entryOverview
   *   Required. The new value for the Entry Overview.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [EntryOverview]{@link google.cloud.datacatalog.v1.EntryOverview}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.modify_entry_overview.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_ModifyEntryOverview_async
   */
  modifyEntryOverview(
    request?: protos.google.cloud.datacatalog.v1.IModifyEntryOverviewRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntryOverview,
      (
        | protos.google.cloud.datacatalog.v1.IModifyEntryOverviewRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  modifyEntryOverview(
    request: protos.google.cloud.datacatalog.v1.IModifyEntryOverviewRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntryOverview,
      | protos.google.cloud.datacatalog.v1.IModifyEntryOverviewRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  modifyEntryOverview(
    request: protos.google.cloud.datacatalog.v1.IModifyEntryOverviewRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IEntryOverview,
      | protos.google.cloud.datacatalog.v1.IModifyEntryOverviewRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  modifyEntryOverview(
    request?: protos.google.cloud.datacatalog.v1.IModifyEntryOverviewRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.IEntryOverview,
          | protos.google.cloud.datacatalog.v1.IModifyEntryOverviewRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.IEntryOverview,
      | protos.google.cloud.datacatalog.v1.IModifyEntryOverviewRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntryOverview,
      (
        | protos.google.cloud.datacatalog.v1.IModifyEntryOverviewRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.modifyEntryOverview(request, options, callback);
  }
  /**
   * Modifies contacts, part of the business context of an
   * {@link google.cloud.datacatalog.v1.Entry|Entry}.
   *
   * To call this method, you must have the `datacatalog.entries.updateContacts`
   * IAM permission on the corresponding project.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The full resource name of the entry.
   * @param {google.cloud.datacatalog.v1.Contacts} request.contacts
   *   Required. The new value for the Contacts.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Contacts]{@link google.cloud.datacatalog.v1.Contacts}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.modify_entry_contacts.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_ModifyEntryContacts_async
   */
  modifyEntryContacts(
    request?: protos.google.cloud.datacatalog.v1.IModifyEntryContactsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IContacts,
      (
        | protos.google.cloud.datacatalog.v1.IModifyEntryContactsRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  modifyEntryContacts(
    request: protos.google.cloud.datacatalog.v1.IModifyEntryContactsRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IContacts,
      | protos.google.cloud.datacatalog.v1.IModifyEntryContactsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  modifyEntryContacts(
    request: protos.google.cloud.datacatalog.v1.IModifyEntryContactsRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IContacts,
      | protos.google.cloud.datacatalog.v1.IModifyEntryContactsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  modifyEntryContacts(
    request?: protos.google.cloud.datacatalog.v1.IModifyEntryContactsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.IContacts,
          | protos.google.cloud.datacatalog.v1.IModifyEntryContactsRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.IContacts,
      | protos.google.cloud.datacatalog.v1.IModifyEntryContactsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IContacts,
      (
        | protos.google.cloud.datacatalog.v1.IModifyEntryContactsRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.modifyEntryContacts(request, options, callback);
  }
  /**
   * Creates a tag template.
   *
   * You must enable the Data Catalog API in the project identified by the
   * `parent` parameter.
   * For more information, see [Data Catalog resource project]
   * (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the project and the template location
   *   [region](https://cloud.google.com/data-catalog/docs/concepts/regions).
   * @param {string} request.tagTemplateId
   *   Required. The ID of the tag template to create.
   *
   *   The ID must contain only lowercase letters (a-z), numbers (0-9),
   *   or underscores (_), and must start with a letter or underscore.
   *   The maximum size is 64 bytes when encoded in UTF-8.
   * @param {google.cloud.datacatalog.v1.TagTemplate} request.tagTemplate
   *   Required. The tag template to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [TagTemplate]{@link google.cloud.datacatalog.v1.TagTemplate}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.create_tag_template.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_CreateTagTemplate_async
   */
  createTagTemplate(
    request?: protos.google.cloud.datacatalog.v1.ICreateTagTemplateRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITagTemplate,
      protos.google.cloud.datacatalog.v1.ICreateTagTemplateRequest | undefined,
      {} | undefined
    ]
  >;
  createTagTemplate(
    request: protos.google.cloud.datacatalog.v1.ICreateTagTemplateRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplate,
      | protos.google.cloud.datacatalog.v1.ICreateTagTemplateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createTagTemplate(
    request: protos.google.cloud.datacatalog.v1.ICreateTagTemplateRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplate,
      | protos.google.cloud.datacatalog.v1.ICreateTagTemplateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createTagTemplate(
    request?: protos.google.cloud.datacatalog.v1.ICreateTagTemplateRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.ITagTemplate,
          | protos.google.cloud.datacatalog.v1.ICreateTagTemplateRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplate,
      | protos.google.cloud.datacatalog.v1.ICreateTagTemplateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITagTemplate,
      protos.google.cloud.datacatalog.v1.ICreateTagTemplateRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createTagTemplate(request, options, callback);
  }
  /**
   * Gets a tag template.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the tag template to get.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [TagTemplate]{@link google.cloud.datacatalog.v1.TagTemplate}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.get_tag_template.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_GetTagTemplate_async
   */
  getTagTemplate(
    request?: protos.google.cloud.datacatalog.v1.IGetTagTemplateRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITagTemplate,
      protos.google.cloud.datacatalog.v1.IGetTagTemplateRequest | undefined,
      {} | undefined
    ]
  >;
  getTagTemplate(
    request: protos.google.cloud.datacatalog.v1.IGetTagTemplateRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplate,
      | protos.google.cloud.datacatalog.v1.IGetTagTemplateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getTagTemplate(
    request: protos.google.cloud.datacatalog.v1.IGetTagTemplateRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplate,
      | protos.google.cloud.datacatalog.v1.IGetTagTemplateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getTagTemplate(
    request?: protos.google.cloud.datacatalog.v1.IGetTagTemplateRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.ITagTemplate,
          | protos.google.cloud.datacatalog.v1.IGetTagTemplateRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplate,
      | protos.google.cloud.datacatalog.v1.IGetTagTemplateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITagTemplate,
      protos.google.cloud.datacatalog.v1.IGetTagTemplateRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getTagTemplate(request, options, callback);
  }
  /**
   * Updates a tag template.
   *
   * You can't update template fields with this method. These fields are
   * separate resources with their own create, update, and delete methods.
   *
   * You must enable the Data Catalog API in the project identified by
   * the `tag_template.name` parameter. For more information, see [Data Catalog
   * resource
   * project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.datacatalog.v1.TagTemplate} request.tagTemplate
   *   Required. The template to update. The `name` field must be set.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Names of fields whose values to overwrite on a tag template. Currently,
   *   only `display_name` and `is_publicly_readable` can be overwritten.
   *
   *   If this parameter is absent or empty, all modifiable fields
   *   are overwritten. If such fields are non-required and omitted in the
   *   request body, their values are emptied.
   *
   *   Note: Updating the `is_publicly_readable` field may require up to 12
   *   hours to take effect in search results.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [TagTemplate]{@link google.cloud.datacatalog.v1.TagTemplate}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.update_tag_template.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_UpdateTagTemplate_async
   */
  updateTagTemplate(
    request?: protos.google.cloud.datacatalog.v1.IUpdateTagTemplateRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITagTemplate,
      protos.google.cloud.datacatalog.v1.IUpdateTagTemplateRequest | undefined,
      {} | undefined
    ]
  >;
  updateTagTemplate(
    request: protos.google.cloud.datacatalog.v1.IUpdateTagTemplateRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplate,
      | protos.google.cloud.datacatalog.v1.IUpdateTagTemplateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateTagTemplate(
    request: protos.google.cloud.datacatalog.v1.IUpdateTagTemplateRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplate,
      | protos.google.cloud.datacatalog.v1.IUpdateTagTemplateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateTagTemplate(
    request?: protos.google.cloud.datacatalog.v1.IUpdateTagTemplateRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.ITagTemplate,
          | protos.google.cloud.datacatalog.v1.IUpdateTagTemplateRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplate,
      | protos.google.cloud.datacatalog.v1.IUpdateTagTemplateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITagTemplate,
      protos.google.cloud.datacatalog.v1.IUpdateTagTemplateRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'tag_template.name': request.tagTemplate!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateTagTemplate(request, options, callback);
  }
  /**
   * Deletes a tag template and all tags that use it.
   *
   * You must enable the Data Catalog API in the project identified by
   * the `name` parameter. For more information, see [Data Catalog resource
   * project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the tag template to delete.
   * @param {boolean} request.force
   *   Required. If true, deletes all tags that use this template.
   *
   *   Currently, `true` is the only supported value.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.delete_tag_template.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_DeleteTagTemplate_async
   */
  deleteTagTemplate(
    request?: protos.google.cloud.datacatalog.v1.IDeleteTagTemplateRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.datacatalog.v1.IDeleteTagTemplateRequest | undefined,
      {} | undefined
    ]
  >;
  deleteTagTemplate(
    request: protos.google.cloud.datacatalog.v1.IDeleteTagTemplateRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.datacatalog.v1.IDeleteTagTemplateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteTagTemplate(
    request: protos.google.cloud.datacatalog.v1.IDeleteTagTemplateRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.datacatalog.v1.IDeleteTagTemplateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteTagTemplate(
    request?: protos.google.cloud.datacatalog.v1.IDeleteTagTemplateRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.datacatalog.v1.IDeleteTagTemplateRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.datacatalog.v1.IDeleteTagTemplateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.datacatalog.v1.IDeleteTagTemplateRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteTagTemplate(request, options, callback);
  }
  /**
   * Creates a field in a tag template.
   *
   * You must enable the Data Catalog API in the project identified by
   * the `parent` parameter. For more information, see [Data Catalog resource
   * project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the project and the template location
   *   [region](https://cloud.google.com/data-catalog/docs/concepts/regions).
   * @param {string} request.tagTemplateFieldId
   *   Required. The ID of the tag template field to create.
   *
   *   Note: Adding a required field to an existing template is *not* allowed.
   *
   *   Field IDs can contain letters (both uppercase and lowercase), numbers
   *   (0-9), underscores (_) and dashes (-). Field IDs must be at least 1
   *   character long and at most 128 characters long. Field IDs must also be
   *   unique within their template.
   * @param {google.cloud.datacatalog.v1.TagTemplateField} request.tagTemplateField
   *   Required. The tag template field to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [TagTemplateField]{@link google.cloud.datacatalog.v1.TagTemplateField}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.create_tag_template_field.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_CreateTagTemplateField_async
   */
  createTagTemplateField(
    request?: protos.google.cloud.datacatalog.v1.ICreateTagTemplateFieldRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      (
        | protos.google.cloud.datacatalog.v1.ICreateTagTemplateFieldRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createTagTemplateField(
    request: protos.google.cloud.datacatalog.v1.ICreateTagTemplateFieldRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      | protos.google.cloud.datacatalog.v1.ICreateTagTemplateFieldRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createTagTemplateField(
    request: protos.google.cloud.datacatalog.v1.ICreateTagTemplateFieldRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      | protos.google.cloud.datacatalog.v1.ICreateTagTemplateFieldRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createTagTemplateField(
    request?: protos.google.cloud.datacatalog.v1.ICreateTagTemplateFieldRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.ITagTemplateField,
          | protos.google.cloud.datacatalog.v1.ICreateTagTemplateFieldRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      | protos.google.cloud.datacatalog.v1.ICreateTagTemplateFieldRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      (
        | protos.google.cloud.datacatalog.v1.ICreateTagTemplateFieldRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createTagTemplateField(
      request,
      options,
      callback
    );
  }
  /**
   * Updates a field in a tag template.
   *
   * You can't update the field type with this method.
   *
   * You must enable the Data Catalog API in the project
   * identified by the `name` parameter. For more information, see [Data Catalog
   * resource
   * project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the tag template field.
   * @param {google.cloud.datacatalog.v1.TagTemplateField} request.tagTemplateField
   *   Required. The template to update.
   * @param {google.protobuf.FieldMask} [request.updateMask]
   *   Optional. Names of fields whose values to overwrite on an individual field of a tag
   *   template. The following fields are modifiable:
   *
   *   * `display_name`
   *   * `type.enum_type`
   *   * `is_required`
   *
   *   If this parameter is absent or empty, all modifiable fields
   *   are overwritten. If such fields are non-required and omitted in the request
   *   body, their values are emptied with one exception: when updating an enum
   *   type, the provided values are merged with the existing values. Therefore,
   *   enum values can only be added, existing enum values cannot be deleted or
   *   renamed.
   *
   *   Additionally, updating a template field from optional to required is
   *   *not* allowed.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [TagTemplateField]{@link google.cloud.datacatalog.v1.TagTemplateField}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.update_tag_template_field.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_UpdateTagTemplateField_async
   */
  updateTagTemplateField(
    request?: protos.google.cloud.datacatalog.v1.IUpdateTagTemplateFieldRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      (
        | protos.google.cloud.datacatalog.v1.IUpdateTagTemplateFieldRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateTagTemplateField(
    request: protos.google.cloud.datacatalog.v1.IUpdateTagTemplateFieldRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      | protos.google.cloud.datacatalog.v1.IUpdateTagTemplateFieldRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateTagTemplateField(
    request: protos.google.cloud.datacatalog.v1.IUpdateTagTemplateFieldRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      | protos.google.cloud.datacatalog.v1.IUpdateTagTemplateFieldRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateTagTemplateField(
    request?: protos.google.cloud.datacatalog.v1.IUpdateTagTemplateFieldRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.ITagTemplateField,
          | protos.google.cloud.datacatalog.v1.IUpdateTagTemplateFieldRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      | protos.google.cloud.datacatalog.v1.IUpdateTagTemplateFieldRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      (
        | protos.google.cloud.datacatalog.v1.IUpdateTagTemplateFieldRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateTagTemplateField(
      request,
      options,
      callback
    );
  }
  /**
   * Renames a field in a tag template.
   *
   * You must enable the Data Catalog API in the project identified by the
   * `name` parameter. For more information, see [Data Catalog resource project]
   * (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the tag template field.
   * @param {string} request.newTagTemplateFieldId
   *   Required. The new ID of this tag template field. For example, `my_new_field`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [TagTemplateField]{@link google.cloud.datacatalog.v1.TagTemplateField}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.rename_tag_template_field.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_RenameTagTemplateField_async
   */
  renameTagTemplateField(
    request?: protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      (
        | protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  renameTagTemplateField(
    request: protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      | protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  renameTagTemplateField(
    request: protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      | protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  renameTagTemplateField(
    request?: protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.ITagTemplateField,
          | protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      | protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      (
        | protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.renameTagTemplateField(
      request,
      options,
      callback
    );
  }
  /**
   * Renames an enum value in a tag template.
   *
   * Within a single enum field, enum values must be unique.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the enum field value.
   * @param {string} request.newEnumValueDisplayName
   *   Required. The new display name of the enum value. For example, `my_new_enum_value`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [TagTemplateField]{@link google.cloud.datacatalog.v1.TagTemplateField}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.rename_tag_template_field_enum_value.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_RenameTagTemplateFieldEnumValue_async
   */
  renameTagTemplateFieldEnumValue(
    request?: protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldEnumValueRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      (
        | protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldEnumValueRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  renameTagTemplateFieldEnumValue(
    request: protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldEnumValueRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      | protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldEnumValueRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  renameTagTemplateFieldEnumValue(
    request: protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldEnumValueRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      | protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldEnumValueRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  renameTagTemplateFieldEnumValue(
    request?: protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldEnumValueRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.ITagTemplateField,
          | protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldEnumValueRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      | protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldEnumValueRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITagTemplateField,
      (
        | protos.google.cloud.datacatalog.v1.IRenameTagTemplateFieldEnumValueRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.renameTagTemplateFieldEnumValue(
      request,
      options,
      callback
    );
  }
  /**
   * Deletes a field in a tag template and all uses of this field from the tags
   * based on this template.
   *
   * You must enable the Data Catalog API in the project identified by
   * the `name` parameter. For more information, see [Data Catalog resource
   * project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the tag template field to delete.
   * @param {boolean} request.force
   *   Required. If true, deletes this field from any tags that use it.
   *
   *   Currently, `true` is the only supported value.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.delete_tag_template_field.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_DeleteTagTemplateField_async
   */
  deleteTagTemplateField(
    request?: protos.google.cloud.datacatalog.v1.IDeleteTagTemplateFieldRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.datacatalog.v1.IDeleteTagTemplateFieldRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  deleteTagTemplateField(
    request: protos.google.cloud.datacatalog.v1.IDeleteTagTemplateFieldRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.datacatalog.v1.IDeleteTagTemplateFieldRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteTagTemplateField(
    request: protos.google.cloud.datacatalog.v1.IDeleteTagTemplateFieldRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.datacatalog.v1.IDeleteTagTemplateFieldRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteTagTemplateField(
    request?: protos.google.cloud.datacatalog.v1.IDeleteTagTemplateFieldRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.datacatalog.v1.IDeleteTagTemplateFieldRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.datacatalog.v1.IDeleteTagTemplateFieldRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.datacatalog.v1.IDeleteTagTemplateFieldRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteTagTemplateField(
      request,
      options,
      callback
    );
  }
  /**
   * Creates a tag and assigns it to:
   *
   * * An {@link google.cloud.datacatalog.v1.Entry|Entry} if the method name is
   *   `projects.locations.entryGroups.entries.tags.create`.
   * * Or {@link google.cloud.datacatalog.v1.EntryGroup|EntryGroup}if the method
   *   name is `projects.locations.entryGroups.tags.create`.
   *
   * Note: The project identified by the `parent` parameter for the [tag]
   * (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries.tags/create#path-parameters)
   * and the [tag template]
   * (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.tagTemplates/create#path-parameters)
   * used to create the tag must be in the same organization.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the resource to attach this tag to.
   *
   *   Tags can be attached to entries or entry groups. An entry can have up to
   *   1000 attached tags.
   *
   *   Note: The tag and its child resources might not be stored in
   *   the location specified in its name.
   * @param {google.cloud.datacatalog.v1.Tag} request.tag
   *   Required. The tag to create.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Tag]{@link google.cloud.datacatalog.v1.Tag}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.create_tag.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_CreateTag_async
   */
  createTag(
    request?: protos.google.cloud.datacatalog.v1.ICreateTagRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITag,
      protos.google.cloud.datacatalog.v1.ICreateTagRequest | undefined,
      {} | undefined
    ]
  >;
  createTag(
    request: protos.google.cloud.datacatalog.v1.ICreateTagRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITag,
      protos.google.cloud.datacatalog.v1.ICreateTagRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  createTag(
    request: protos.google.cloud.datacatalog.v1.ICreateTagRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITag,
      protos.google.cloud.datacatalog.v1.ICreateTagRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  createTag(
    request?: protos.google.cloud.datacatalog.v1.ICreateTagRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.ITag,
          | protos.google.cloud.datacatalog.v1.ICreateTagRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.ITag,
      protos.google.cloud.datacatalog.v1.ICreateTagRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITag,
      protos.google.cloud.datacatalog.v1.ICreateTagRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createTag(request, options, callback);
  }
  /**
   * Updates an existing tag.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.datacatalog.v1.Tag} request.tag
   *   Required. The updated tag. The "name" field must be set.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Names of fields whose values to overwrite on a tag. Currently, a tag has
   *   the only modifiable field with the name `fields`.
   *
   *   In general, if this parameter is absent or empty, all modifiable fields
   *   are overwritten. If such fields are non-required and omitted in the
   *   request body, their values are emptied.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Tag]{@link google.cloud.datacatalog.v1.Tag}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.update_tag.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_UpdateTag_async
   */
  updateTag(
    request?: protos.google.cloud.datacatalog.v1.IUpdateTagRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITag,
      protos.google.cloud.datacatalog.v1.IUpdateTagRequest | undefined,
      {} | undefined
    ]
  >;
  updateTag(
    request: protos.google.cloud.datacatalog.v1.IUpdateTagRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITag,
      protos.google.cloud.datacatalog.v1.IUpdateTagRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateTag(
    request: protos.google.cloud.datacatalog.v1.IUpdateTagRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.ITag,
      protos.google.cloud.datacatalog.v1.IUpdateTagRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateTag(
    request?: protos.google.cloud.datacatalog.v1.IUpdateTagRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.ITag,
          | protos.google.cloud.datacatalog.v1.IUpdateTagRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.ITag,
      protos.google.cloud.datacatalog.v1.IUpdateTagRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITag,
      protos.google.cloud.datacatalog.v1.IUpdateTagRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'tag.name': request.tag!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateTag(request, options, callback);
  }
  /**
   * Deletes a tag.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the tag to delete.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.delete_tag.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_DeleteTag_async
   */
  deleteTag(
    request?: protos.google.cloud.datacatalog.v1.IDeleteTagRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.datacatalog.v1.IDeleteTagRequest | undefined,
      {} | undefined
    ]
  >;
  deleteTag(
    request: protos.google.cloud.datacatalog.v1.IDeleteTagRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      protos.google.cloud.datacatalog.v1.IDeleteTagRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteTag(
    request: protos.google.cloud.datacatalog.v1.IDeleteTagRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      protos.google.cloud.datacatalog.v1.IDeleteTagRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteTag(
    request?: protos.google.cloud.datacatalog.v1.IDeleteTagRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.datacatalog.v1.IDeleteTagRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      protos.google.cloud.datacatalog.v1.IDeleteTagRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      protos.google.cloud.datacatalog.v1.IDeleteTagRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteTag(request, options, callback);
  }
  /**
   * Marks an {@link google.cloud.datacatalog.v1.Entry|Entry} as starred by
   * the current user. Starring information is private to each user.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the entry to mark as starred.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [StarEntryResponse]{@link google.cloud.datacatalog.v1.StarEntryResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.star_entry.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_StarEntry_async
   */
  starEntry(
    request?: protos.google.cloud.datacatalog.v1.IStarEntryRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IStarEntryResponse,
      protos.google.cloud.datacatalog.v1.IStarEntryRequest | undefined,
      {} | undefined
    ]
  >;
  starEntry(
    request: protos.google.cloud.datacatalog.v1.IStarEntryRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IStarEntryResponse,
      protos.google.cloud.datacatalog.v1.IStarEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  starEntry(
    request: protos.google.cloud.datacatalog.v1.IStarEntryRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IStarEntryResponse,
      protos.google.cloud.datacatalog.v1.IStarEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  starEntry(
    request?: protos.google.cloud.datacatalog.v1.IStarEntryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.IStarEntryResponse,
          | protos.google.cloud.datacatalog.v1.IStarEntryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.IStarEntryResponse,
      protos.google.cloud.datacatalog.v1.IStarEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IStarEntryResponse,
      protos.google.cloud.datacatalog.v1.IStarEntryRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.starEntry(request, options, callback);
  }
  /**
   * Marks an {@link google.cloud.datacatalog.v1.Entry|Entry} as NOT starred by
   * the current user. Starring information is private to each user.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the entry to mark as **not** starred.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [UnstarEntryResponse]{@link google.cloud.datacatalog.v1.UnstarEntryResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.unstar_entry.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_UnstarEntry_async
   */
  unstarEntry(
    request?: protos.google.cloud.datacatalog.v1.IUnstarEntryRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IUnstarEntryResponse,
      protos.google.cloud.datacatalog.v1.IUnstarEntryRequest | undefined,
      {} | undefined
    ]
  >;
  unstarEntry(
    request: protos.google.cloud.datacatalog.v1.IUnstarEntryRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IUnstarEntryResponse,
      protos.google.cloud.datacatalog.v1.IUnstarEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  unstarEntry(
    request: protos.google.cloud.datacatalog.v1.IUnstarEntryRequest,
    callback: Callback<
      protos.google.cloud.datacatalog.v1.IUnstarEntryResponse,
      protos.google.cloud.datacatalog.v1.IUnstarEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  unstarEntry(
    request?: protos.google.cloud.datacatalog.v1.IUnstarEntryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.datacatalog.v1.IUnstarEntryResponse,
          | protos.google.cloud.datacatalog.v1.IUnstarEntryRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.datacatalog.v1.IUnstarEntryResponse,
      protos.google.cloud.datacatalog.v1.IUnstarEntryRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IUnstarEntryResponse,
      protos.google.cloud.datacatalog.v1.IUnstarEntryRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.unstarEntry(request, options, callback);
  }
  /**
   * Sets an access control policy for a resource. Replaces any existing
   * policy.
   *
   * Supported resources are:
   *
   * - Tag templates
   * - Entry groups
   *
   * Note: This method sets policies only within Data Catalog and can't be
   * used to manage policies in BigQuery, Pub/Sub, Dataproc Metastore, and any
   * external Google Cloud Platform resources synced with the Data Catalog.
   *
   * To call this method, you must have the following Google IAM permissions:
   *
   * - `datacatalog.tagTemplates.setIamPolicy` to set policies on tag
   *   templates.
   * - `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being specified.
   *   See the operation documentation for the appropriate value for this field.
   * @param {google.iam.v1.Policy} request.policy
   *   REQUIRED: The complete policy to be applied to the `resource`. The size of
   *   the policy is limited to a few 10s of KB. An empty policy is a
   *   valid policy but certain Cloud Platform services (such as Projects)
   *   might reject them.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
   *   the fields in the mask will be modified. If no mask is provided, the
   *   following default mask is used:
   *
   *   `paths: "bindings, etag"`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Policy]{@link google.iam.v1.Policy}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.set_iam_policy.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_SetIamPolicy_async
   */
  setIamPolicy(
    request?: protos.google.iam.v1.ISetIamPolicyRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | undefined,
      {} | undefined
    ]
  >;
  setIamPolicy(
    request: protos.google.iam.v1.ISetIamPolicyRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  setIamPolicy(
    request: protos.google.iam.v1.ISetIamPolicyRequest,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  setIamPolicy(
    request?: protos.google.iam.v1.ISetIamPolicyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        resource: request.resource ?? '',
      });
    this.initialize();
    return this.innerApiCalls.setIamPolicy(request, options, callback);
  }
  /**
   * Gets the access control policy for a resource.
   *
   * May return:
   *
   * * A`NOT_FOUND` error if the resource doesn't exist or you don't have the
   *   permission to view it.
   * * An empty policy if the resource exists but doesn't have a set policy.
   *
   * Supported resources are:
   *
   * - Tag templates
   * - Entry groups
   *
   * Note: This method doesn't get policies from Google Cloud Platform
   * resources ingested into Data Catalog.
   *
   * To call this method, you must have the following Google IAM permissions:
   *
   * - `datacatalog.tagTemplates.getIamPolicy` to get policies on tag
   *   templates.
   * - `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {google.iam.v1.GetPolicyOptions} request.options
   *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
   *   `GetIamPolicy`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Policy]{@link google.iam.v1.Policy}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.get_iam_policy.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_GetIamPolicy_async
   */
  getIamPolicy(
    request?: protos.google.iam.v1.IGetIamPolicyRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | undefined,
      {} | undefined
    ]
  >;
  getIamPolicy(
    request: protos.google.iam.v1.IGetIamPolicyRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getIamPolicy(
    request: protos.google.iam.v1.IGetIamPolicyRequest,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getIamPolicy(
    request?: protos.google.iam.v1.IGetIamPolicyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        resource: request.resource ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getIamPolicy(request, options, callback);
  }
  /**
   * Gets your permissions on a resource.
   *
   * Returns an empty set of permissions if the resource doesn't exist.
   *
   * Supported resources are:
   *
   * - Tag templates
   * - Entry groups
   *
   * Note: This method gets policies only within Data Catalog and can't be
   * used to get policies from BigQuery, Pub/Sub, Dataproc Metastore, and any
   * external Google Cloud Platform resources ingested into Data Catalog.
   *
   * No Google IAM permissions are required to call this method.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy detail is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {string[]} request.permissions
   *   The set of permissions to check for the `resource`. Permissions with
   *   wildcards (such as '*' or 'storage.*') are not allowed. For more
   *   information see
   *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.test_iam_permissions.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_TestIamPermissions_async
   */
  testIamPermissions(
    request?: protos.google.iam.v1.ITestIamPermissionsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | undefined,
      {} | undefined
    ]
  >;
  testIamPermissions(
    request: protos.google.iam.v1.ITestIamPermissionsRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  testIamPermissions(
    request: protos.google.iam.v1.ITestIamPermissionsRequest,
    callback: Callback<
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  testIamPermissions(
    request?: protos.google.iam.v1.ITestIamPermissionsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.iam.v1.ITestIamPermissionsResponse,
          protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        resource: request.resource ?? '',
      });
    this.initialize();
    return this.innerApiCalls.testIamPermissions(request, options, callback);
  }

  /**
   * Searches Data Catalog for multiple resources like entries and tags that
   * match a query.
   *
   * This is a [Custom Method]
   * (https://cloud.google.com/apis/design/custom_methods) that doesn't return
   * all information on a resource, only its ID and high level fields. To get
   * more information, you can subsequently call specific get methods.
   *
   * Note: Data Catalog search queries don't guarantee full recall. Results
   * that match your query might not be returned, even in subsequent
   * result pages. Additionally, returned (and not returned) results can vary
   * if you repeat search queries.
   *
   * For more information, see [Data Catalog search syntax]
   * (https://cloud.google.com/data-catalog/docs/how-to/search-reference).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.datacatalog.v1.SearchCatalogRequest.Scope} request.scope
   *   Required. The scope of this search request.
   *
   *   The `scope` is invalid if `include_org_ids`, `include_project_ids` are
   *   empty AND `include_gcp_public_datasets` is set to `false`. In this case,
   *   the request returns an error.
   * @param {string} [request.query]
   *   Optional. The query string with a minimum of 3 characters and specific syntax.
   *   For more information, see
   *   [Data Catalog search
   *   syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference).
   *
   *   An empty query string returns all data assets (in the specified scope)
   *   that you have access to.
   *
   *   A query string can be a simple `xyz` or qualified by predicates:
   *
   *   * `name:x`
   *   * `column:y`
   *   * `description:z`
   * @param {number} request.pageSize
   *   Number of results to return in a single search page.
   *
   *   Can't be negative or 0, defaults to 10 in this case.
   *   The maximum number is 1000. If exceeded, throws an "invalid argument"
   *   exception.
   * @param {string} [request.pageToken]
   *   Optional. Pagination token that, if specified, returns the next page of search
   *   results. If empty, returns the first page.
   *
   *   This token is returned in the {@link google.cloud.datacatalog.v1.SearchCatalogResponse.next_page_token|SearchCatalogResponse.next_page_token}
   *   field of the response to a previous
   *   {@link google.cloud.datacatalog.v1.DataCatalog.SearchCatalog|SearchCatalogRequest}
   *   call.
   * @param {string} request.orderBy
   *   Specifies the order of results.
   *
   *   Currently supported case-sensitive values are:
   *
   *   * `relevance` that can only be descending
   *   * `last_modified_timestamp [asc|desc]` with descending (`desc`) as default
   *   * `default` that can only be descending
   *
   *   If this parameter is omitted, it defaults to the descending `relevance`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [SearchCatalogResult]{@link google.cloud.datacatalog.v1.SearchCatalogResult}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `searchCatalogAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  searchCatalog(
    request?: protos.google.cloud.datacatalog.v1.ISearchCatalogRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ISearchCatalogResult[],
      protos.google.cloud.datacatalog.v1.ISearchCatalogRequest | null,
      protos.google.cloud.datacatalog.v1.ISearchCatalogResponse
    ]
  >;
  searchCatalog(
    request: protos.google.cloud.datacatalog.v1.ISearchCatalogRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.datacatalog.v1.ISearchCatalogRequest,
      | protos.google.cloud.datacatalog.v1.ISearchCatalogResponse
      | null
      | undefined,
      protos.google.cloud.datacatalog.v1.ISearchCatalogResult
    >
  ): void;
  searchCatalog(
    request: protos.google.cloud.datacatalog.v1.ISearchCatalogRequest,
    callback: PaginationCallback<
      protos.google.cloud.datacatalog.v1.ISearchCatalogRequest,
      | protos.google.cloud.datacatalog.v1.ISearchCatalogResponse
      | null
      | undefined,
      protos.google.cloud.datacatalog.v1.ISearchCatalogResult
    >
  ): void;
  searchCatalog(
    request?: protos.google.cloud.datacatalog.v1.ISearchCatalogRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.datacatalog.v1.ISearchCatalogRequest,
          | protos.google.cloud.datacatalog.v1.ISearchCatalogResponse
          | null
          | undefined,
          protos.google.cloud.datacatalog.v1.ISearchCatalogResult
        >,
    callback?: PaginationCallback<
      protos.google.cloud.datacatalog.v1.ISearchCatalogRequest,
      | protos.google.cloud.datacatalog.v1.ISearchCatalogResponse
      | null
      | undefined,
      protos.google.cloud.datacatalog.v1.ISearchCatalogResult
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ISearchCatalogResult[],
      protos.google.cloud.datacatalog.v1.ISearchCatalogRequest | null,
      protos.google.cloud.datacatalog.v1.ISearchCatalogResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    this.initialize();
    return this.innerApiCalls.searchCatalog(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.datacatalog.v1.SearchCatalogRequest.Scope} request.scope
   *   Required. The scope of this search request.
   *
   *   The `scope` is invalid if `include_org_ids`, `include_project_ids` are
   *   empty AND `include_gcp_public_datasets` is set to `false`. In this case,
   *   the request returns an error.
   * @param {string} [request.query]
   *   Optional. The query string with a minimum of 3 characters and specific syntax.
   *   For more information, see
   *   [Data Catalog search
   *   syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference).
   *
   *   An empty query string returns all data assets (in the specified scope)
   *   that you have access to.
   *
   *   A query string can be a simple `xyz` or qualified by predicates:
   *
   *   * `name:x`
   *   * `column:y`
   *   * `description:z`
   * @param {number} request.pageSize
   *   Number of results to return in a single search page.
   *
   *   Can't be negative or 0, defaults to 10 in this case.
   *   The maximum number is 1000. If exceeded, throws an "invalid argument"
   *   exception.
   * @param {string} [request.pageToken]
   *   Optional. Pagination token that, if specified, returns the next page of search
   *   results. If empty, returns the first page.
   *
   *   This token is returned in the {@link google.cloud.datacatalog.v1.SearchCatalogResponse.next_page_token|SearchCatalogResponse.next_page_token}
   *   field of the response to a previous
   *   {@link google.cloud.datacatalog.v1.DataCatalog.SearchCatalog|SearchCatalogRequest}
   *   call.
   * @param {string} request.orderBy
   *   Specifies the order of results.
   *
   *   Currently supported case-sensitive values are:
   *
   *   * `relevance` that can only be descending
   *   * `last_modified_timestamp [asc|desc]` with descending (`desc`) as default
   *   * `default` that can only be descending
   *
   *   If this parameter is omitted, it defaults to the descending `relevance`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [SearchCatalogResult]{@link google.cloud.datacatalog.v1.SearchCatalogResult} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `searchCatalogAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  searchCatalogStream(
    request?: protos.google.cloud.datacatalog.v1.ISearchCatalogRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    const defaultCallSettings = this._defaults['searchCatalog'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.searchCatalog.createStream(
      this.innerApiCalls.searchCatalog as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `searchCatalog`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.datacatalog.v1.SearchCatalogRequest.Scope} request.scope
   *   Required. The scope of this search request.
   *
   *   The `scope` is invalid if `include_org_ids`, `include_project_ids` are
   *   empty AND `include_gcp_public_datasets` is set to `false`. In this case,
   *   the request returns an error.
   * @param {string} [request.query]
   *   Optional. The query string with a minimum of 3 characters and specific syntax.
   *   For more information, see
   *   [Data Catalog search
   *   syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference).
   *
   *   An empty query string returns all data assets (in the specified scope)
   *   that you have access to.
   *
   *   A query string can be a simple `xyz` or qualified by predicates:
   *
   *   * `name:x`
   *   * `column:y`
   *   * `description:z`
   * @param {number} request.pageSize
   *   Number of results to return in a single search page.
   *
   *   Can't be negative or 0, defaults to 10 in this case.
   *   The maximum number is 1000. If exceeded, throws an "invalid argument"
   *   exception.
   * @param {string} [request.pageToken]
   *   Optional. Pagination token that, if specified, returns the next page of search
   *   results. If empty, returns the first page.
   *
   *   This token is returned in the {@link google.cloud.datacatalog.v1.SearchCatalogResponse.next_page_token|SearchCatalogResponse.next_page_token}
   *   field of the response to a previous
   *   {@link google.cloud.datacatalog.v1.DataCatalog.SearchCatalog|SearchCatalogRequest}
   *   call.
   * @param {string} request.orderBy
   *   Specifies the order of results.
   *
   *   Currently supported case-sensitive values are:
   *
   *   * `relevance` that can only be descending
   *   * `last_modified_timestamp [asc|desc]` with descending (`desc`) as default
   *   * `default` that can only be descending
   *
   *   If this parameter is omitted, it defaults to the descending `relevance`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [SearchCatalogResult]{@link google.cloud.datacatalog.v1.SearchCatalogResult}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.search_catalog.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_SearchCatalog_async
   */
  searchCatalogAsync(
    request?: protos.google.cloud.datacatalog.v1.ISearchCatalogRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.datacatalog.v1.ISearchCatalogResult> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    const defaultCallSettings = this._defaults['searchCatalog'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.searchCatalog.asyncIterate(
      this.innerApiCalls['searchCatalog'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.datacatalog.v1.ISearchCatalogResult>;
  }
  /**
   * Lists entry groups.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the location that contains the entry groups to list.
   *
   *   Can be provided as a URL.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of items to return.
   *
   *   Default is 10. Maximum limit is 1000.
   *   Throws an invalid argument if `page_size` is greater than 1000.
   * @param {string} [request.pageToken]
   *   Optional. Pagination token that specifies the next page to return.
   *   If empty, returns the first page.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [EntryGroup]{@link google.cloud.datacatalog.v1.EntryGroup}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listEntryGroupsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listEntryGroups(
    request?: protos.google.cloud.datacatalog.v1.IListEntryGroupsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntryGroup[],
      protos.google.cloud.datacatalog.v1.IListEntryGroupsRequest | null,
      protos.google.cloud.datacatalog.v1.IListEntryGroupsResponse
    ]
  >;
  listEntryGroups(
    request: protos.google.cloud.datacatalog.v1.IListEntryGroupsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.datacatalog.v1.IListEntryGroupsRequest,
      | protos.google.cloud.datacatalog.v1.IListEntryGroupsResponse
      | null
      | undefined,
      protos.google.cloud.datacatalog.v1.IEntryGroup
    >
  ): void;
  listEntryGroups(
    request: protos.google.cloud.datacatalog.v1.IListEntryGroupsRequest,
    callback: PaginationCallback<
      protos.google.cloud.datacatalog.v1.IListEntryGroupsRequest,
      | protos.google.cloud.datacatalog.v1.IListEntryGroupsResponse
      | null
      | undefined,
      protos.google.cloud.datacatalog.v1.IEntryGroup
    >
  ): void;
  listEntryGroups(
    request?: protos.google.cloud.datacatalog.v1.IListEntryGroupsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.datacatalog.v1.IListEntryGroupsRequest,
          | protos.google.cloud.datacatalog.v1.IListEntryGroupsResponse
          | null
          | undefined,
          protos.google.cloud.datacatalog.v1.IEntryGroup
        >,
    callback?: PaginationCallback<
      protos.google.cloud.datacatalog.v1.IListEntryGroupsRequest,
      | protos.google.cloud.datacatalog.v1.IListEntryGroupsResponse
      | null
      | undefined,
      protos.google.cloud.datacatalog.v1.IEntryGroup
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntryGroup[],
      protos.google.cloud.datacatalog.v1.IListEntryGroupsRequest | null,
      protos.google.cloud.datacatalog.v1.IListEntryGroupsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listEntryGroups(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the location that contains the entry groups to list.
   *
   *   Can be provided as a URL.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of items to return.
   *
   *   Default is 10. Maximum limit is 1000.
   *   Throws an invalid argument if `page_size` is greater than 1000.
   * @param {string} [request.pageToken]
   *   Optional. Pagination token that specifies the next page to return.
   *   If empty, returns the first page.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [EntryGroup]{@link google.cloud.datacatalog.v1.EntryGroup} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listEntryGroupsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listEntryGroupsStream(
    request?: protos.google.cloud.datacatalog.v1.IListEntryGroupsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listEntryGroups'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listEntryGroups.createStream(
      this.innerApiCalls.listEntryGroups as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listEntryGroups`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the location that contains the entry groups to list.
   *
   *   Can be provided as a URL.
   * @param {number} [request.pageSize]
   *   Optional. The maximum number of items to return.
   *
   *   Default is 10. Maximum limit is 1000.
   *   Throws an invalid argument if `page_size` is greater than 1000.
   * @param {string} [request.pageToken]
   *   Optional. Pagination token that specifies the next page to return.
   *   If empty, returns the first page.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [EntryGroup]{@link google.cloud.datacatalog.v1.EntryGroup}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.list_entry_groups.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_ListEntryGroups_async
   */
  listEntryGroupsAsync(
    request?: protos.google.cloud.datacatalog.v1.IListEntryGroupsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.datacatalog.v1.IEntryGroup> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listEntryGroups'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listEntryGroups.asyncIterate(
      this.innerApiCalls['listEntryGroups'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.datacatalog.v1.IEntryGroup>;
  }
  /**
   * Lists entries.
   *
   * Note: Currently, this method can list only custom entries.
   * To get a list of both custom and automatically created entries, use
   * {@link google.cloud.datacatalog.v1.DataCatalog.SearchCatalog|SearchCatalog}.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the entry group that contains the entries to list.
   *
   *   Can be provided in URL format.
   * @param {number} request.pageSize
   *   The maximum number of items to return. Default is 10. Maximum limit is
   *   1000. Throws an invalid argument if `page_size` is more than 1000.
   * @param {string} request.pageToken
   *   Pagination token that specifies the next page to return. If empty, the
   *   first page is returned.
   * @param {google.protobuf.FieldMask} request.readMask
   *   The fields to return for each entry. If empty or omitted, all
   *   fields are returned.
   *
   *   For example, to return a list of entries with only the `name` field,
   *   set `read_mask` to only one path with the `name` value.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Entry]{@link google.cloud.datacatalog.v1.Entry}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listEntriesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listEntries(
    request?: protos.google.cloud.datacatalog.v1.IListEntriesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntry[],
      protos.google.cloud.datacatalog.v1.IListEntriesRequest | null,
      protos.google.cloud.datacatalog.v1.IListEntriesResponse
    ]
  >;
  listEntries(
    request: protos.google.cloud.datacatalog.v1.IListEntriesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.datacatalog.v1.IListEntriesRequest,
      | protos.google.cloud.datacatalog.v1.IListEntriesResponse
      | null
      | undefined,
      protos.google.cloud.datacatalog.v1.IEntry
    >
  ): void;
  listEntries(
    request: protos.google.cloud.datacatalog.v1.IListEntriesRequest,
    callback: PaginationCallback<
      protos.google.cloud.datacatalog.v1.IListEntriesRequest,
      | protos.google.cloud.datacatalog.v1.IListEntriesResponse
      | null
      | undefined,
      protos.google.cloud.datacatalog.v1.IEntry
    >
  ): void;
  listEntries(
    request?: protos.google.cloud.datacatalog.v1.IListEntriesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.datacatalog.v1.IListEntriesRequest,
          | protos.google.cloud.datacatalog.v1.IListEntriesResponse
          | null
          | undefined,
          protos.google.cloud.datacatalog.v1.IEntry
        >,
    callback?: PaginationCallback<
      protos.google.cloud.datacatalog.v1.IListEntriesRequest,
      | protos.google.cloud.datacatalog.v1.IListEntriesResponse
      | null
      | undefined,
      protos.google.cloud.datacatalog.v1.IEntry
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.IEntry[],
      protos.google.cloud.datacatalog.v1.IListEntriesRequest | null,
      protos.google.cloud.datacatalog.v1.IListEntriesResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listEntries(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the entry group that contains the entries to list.
   *
   *   Can be provided in URL format.
   * @param {number} request.pageSize
   *   The maximum number of items to return. Default is 10. Maximum limit is
   *   1000. Throws an invalid argument if `page_size` is more than 1000.
   * @param {string} request.pageToken
   *   Pagination token that specifies the next page to return. If empty, the
   *   first page is returned.
   * @param {google.protobuf.FieldMask} request.readMask
   *   The fields to return for each entry. If empty or omitted, all
   *   fields are returned.
   *
   *   For example, to return a list of entries with only the `name` field,
   *   set `read_mask` to only one path with the `name` value.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Entry]{@link google.cloud.datacatalog.v1.Entry} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listEntriesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listEntriesStream(
    request?: protos.google.cloud.datacatalog.v1.IListEntriesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listEntries'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listEntries.createStream(
      this.innerApiCalls.listEntries as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listEntries`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the entry group that contains the entries to list.
   *
   *   Can be provided in URL format.
   * @param {number} request.pageSize
   *   The maximum number of items to return. Default is 10. Maximum limit is
   *   1000. Throws an invalid argument if `page_size` is more than 1000.
   * @param {string} request.pageToken
   *   Pagination token that specifies the next page to return. If empty, the
   *   first page is returned.
   * @param {google.protobuf.FieldMask} request.readMask
   *   The fields to return for each entry. If empty or omitted, all
   *   fields are returned.
   *
   *   For example, to return a list of entries with only the `name` field,
   *   set `read_mask` to only one path with the `name` value.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Entry]{@link google.cloud.datacatalog.v1.Entry}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.list_entries.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_ListEntries_async
   */
  listEntriesAsync(
    request?: protos.google.cloud.datacatalog.v1.IListEntriesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.datacatalog.v1.IEntry> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listEntries'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listEntries.asyncIterate(
      this.innerApiCalls['listEntries'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.datacatalog.v1.IEntry>;
  }
  /**
   * Lists tags assigned to an {@link google.cloud.datacatalog.v1.Entry|Entry}.
   * The {@link google.cloud.datacatalog.v1.Tag.column|columns} in the response are
   * lowercased.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the Data Catalog resource to list the tags of.
   *
   *   The resource can be an {@link google.cloud.datacatalog.v1.Entry|Entry}
   *   or an {@link google.cloud.datacatalog.v1.EntryGroup|EntryGroup}
   *   (without `/entries/{entries}` at the end).
   * @param {number} request.pageSize
   *   The maximum number of tags to return. Default is 10. Maximum limit is 1000.
   * @param {string} request.pageToken
   *   Pagination token that specifies the next page to return. If empty, the
   *   first page is returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Tag]{@link google.cloud.datacatalog.v1.Tag}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listTagsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listTags(
    request?: protos.google.cloud.datacatalog.v1.IListTagsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITag[],
      protos.google.cloud.datacatalog.v1.IListTagsRequest | null,
      protos.google.cloud.datacatalog.v1.IListTagsResponse
    ]
  >;
  listTags(
    request: protos.google.cloud.datacatalog.v1.IListTagsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.datacatalog.v1.IListTagsRequest,
      protos.google.cloud.datacatalog.v1.IListTagsResponse | null | undefined,
      protos.google.cloud.datacatalog.v1.ITag
    >
  ): void;
  listTags(
    request: protos.google.cloud.datacatalog.v1.IListTagsRequest,
    callback: PaginationCallback<
      protos.google.cloud.datacatalog.v1.IListTagsRequest,
      protos.google.cloud.datacatalog.v1.IListTagsResponse | null | undefined,
      protos.google.cloud.datacatalog.v1.ITag
    >
  ): void;
  listTags(
    request?: protos.google.cloud.datacatalog.v1.IListTagsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.datacatalog.v1.IListTagsRequest,
          | protos.google.cloud.datacatalog.v1.IListTagsResponse
          | null
          | undefined,
          protos.google.cloud.datacatalog.v1.ITag
        >,
    callback?: PaginationCallback<
      protos.google.cloud.datacatalog.v1.IListTagsRequest,
      protos.google.cloud.datacatalog.v1.IListTagsResponse | null | undefined,
      protos.google.cloud.datacatalog.v1.ITag
    >
  ): Promise<
    [
      protos.google.cloud.datacatalog.v1.ITag[],
      protos.google.cloud.datacatalog.v1.IListTagsRequest | null,
      protos.google.cloud.datacatalog.v1.IListTagsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listTags(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the Data Catalog resource to list the tags of.
   *
   *   The resource can be an {@link google.cloud.datacatalog.v1.Entry|Entry}
   *   or an {@link google.cloud.datacatalog.v1.EntryGroup|EntryGroup}
   *   (without `/entries/{entries}` at the end).
   * @param {number} request.pageSize
   *   The maximum number of tags to return. Default is 10. Maximum limit is 1000.
   * @param {string} request.pageToken
   *   Pagination token that specifies the next page to return. If empty, the
   *   first page is returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Tag]{@link google.cloud.datacatalog.v1.Tag} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listTagsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listTagsStream(
    request?: protos.google.cloud.datacatalog.v1.IListTagsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listTags'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listTags.createStream(
      this.innerApiCalls.listTags as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listTags`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the Data Catalog resource to list the tags of.
   *
   *   The resource can be an {@link google.cloud.datacatalog.v1.Entry|Entry}
   *   or an {@link google.cloud.datacatalog.v1.EntryGroup|EntryGroup}
   *   (without `/entries/{entries}` at the end).
   * @param {number} request.pageSize
   *   The maximum number of tags to return. Default is 10. Maximum limit is 1000.
   * @param {string} request.pageToken
   *   Pagination token that specifies the next page to return. If empty, the
   *   first page is returned.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Tag]{@link google.cloud.datacatalog.v1.Tag}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/data_catalog.list_tags.js</caption>
   * region_tag:datacatalog_v1_generated_DataCatalog_ListTags_async
   */
  listTagsAsync(
    request?: protos.google.cloud.datacatalog.v1.IListTagsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.datacatalog.v1.ITag> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listTags'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listTags.asyncIterate(
      this.innerApiCalls['listTags'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.datacatalog.v1.ITag>;
  }
  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified entry resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} entry_group
   * @param {string} entry
   * @returns {string} Resource name string.
   */
  entryPath(
    project: string,
    location: string,
    entryGroup: string,
    entry: string
  ) {
    return this.pathTemplates.entryPathTemplate.render({
      project: project,
      location: location,
      entry_group: entryGroup,
      entry: entry,
    });
  }

  /**
   * Parse the project from Entry resource.
   *
   * @param {string} entryName
   *   A fully-qualified path representing Entry resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromEntryName(entryName: string) {
    return this.pathTemplates.entryPathTemplate.match(entryName).project;
  }

  /**
   * Parse the location from Entry resource.
   *
   * @param {string} entryName
   *   A fully-qualified path representing Entry resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromEntryName(entryName: string) {
    return this.pathTemplates.entryPathTemplate.match(entryName).location;
  }

  /**
   * Parse the entry_group from Entry resource.
   *
   * @param {string} entryName
   *   A fully-qualified path representing Entry resource.
   * @returns {string} A string representing the entry_group.
   */
  matchEntryGroupFromEntryName(entryName: string) {
    return this.pathTemplates.entryPathTemplate.match(entryName).entry_group;
  }

  /**
   * Parse the entry from Entry resource.
   *
   * @param {string} entryName
   *   A fully-qualified path representing Entry resource.
   * @returns {string} A string representing the entry.
   */
  matchEntryFromEntryName(entryName: string) {
    return this.pathTemplates.entryPathTemplate.match(entryName).entry;
  }

  /**
   * Return a fully-qualified entryGroup resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} entry_group
   * @returns {string} Resource name string.
   */
  entryGroupPath(project: string, location: string, entryGroup: string) {
    return this.pathTemplates.entryGroupPathTemplate.render({
      project: project,
      location: location,
      entry_group: entryGroup,
    });
  }

  /**
   * Parse the project from EntryGroup resource.
   *
   * @param {string} entryGroupName
   *   A fully-qualified path representing EntryGroup resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromEntryGroupName(entryGroupName: string) {
    return this.pathTemplates.entryGroupPathTemplate.match(entryGroupName)
      .project;
  }

  /**
   * Parse the location from EntryGroup resource.
   *
   * @param {string} entryGroupName
   *   A fully-qualified path representing EntryGroup resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromEntryGroupName(entryGroupName: string) {
    return this.pathTemplates.entryGroupPathTemplate.match(entryGroupName)
      .location;
  }

  /**
   * Parse the entry_group from EntryGroup resource.
   *
   * @param {string} entryGroupName
   *   A fully-qualified path representing EntryGroup resource.
   * @returns {string} A string representing the entry_group.
   */
  matchEntryGroupFromEntryGroupName(entryGroupName: string) {
    return this.pathTemplates.entryGroupPathTemplate.match(entryGroupName)
      .entry_group;
  }

  /**
   * Return a fully-qualified location resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @returns {string} Resource name string.
   */
  locationPath(project: string, location: string) {
    return this.pathTemplates.locationPathTemplate.render({
      project: project,
      location: location,
    });
  }

  /**
   * Parse the project from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).project;
  }

  /**
   * Parse the location from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).location;
  }

  /**
   * Return a fully-qualified policyTag resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} taxonomy
   * @param {string} policy_tag
   * @returns {string} Resource name string.
   */
  policyTagPath(
    project: string,
    location: string,
    taxonomy: string,
    policyTag: string
  ) {
    return this.pathTemplates.policyTagPathTemplate.render({
      project: project,
      location: location,
      taxonomy: taxonomy,
      policy_tag: policyTag,
    });
  }

  /**
   * Parse the project from PolicyTag resource.
   *
   * @param {string} policyTagName
   *   A fully-qualified path representing PolicyTag resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromPolicyTagName(policyTagName: string) {
    return this.pathTemplates.policyTagPathTemplate.match(policyTagName)
      .project;
  }

  /**
   * Parse the location from PolicyTag resource.
   *
   * @param {string} policyTagName
   *   A fully-qualified path representing PolicyTag resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromPolicyTagName(policyTagName: string) {
    return this.pathTemplates.policyTagPathTemplate.match(policyTagName)
      .location;
  }

  /**
   * Parse the taxonomy from PolicyTag resource.
   *
   * @param {string} policyTagName
   *   A fully-qualified path representing PolicyTag resource.
   * @returns {string} A string representing the taxonomy.
   */
  matchTaxonomyFromPolicyTagName(policyTagName: string) {
    return this.pathTemplates.policyTagPathTemplate.match(policyTagName)
      .taxonomy;
  }

  /**
   * Parse the policy_tag from PolicyTag resource.
   *
   * @param {string} policyTagName
   *   A fully-qualified path representing PolicyTag resource.
   * @returns {string} A string representing the policy_tag.
   */
  matchPolicyTagFromPolicyTagName(policyTagName: string) {
    return this.pathTemplates.policyTagPathTemplate.match(policyTagName)
      .policy_tag;
  }

  /**
   * Return a fully-qualified project resource name string.
   *
   * @param {string} project
   * @returns {string} Resource name string.
   */
  projectPath(project: string) {
    return this.pathTemplates.projectPathTemplate.render({
      project: project,
    });
  }

  /**
   * Parse the project from Project resource.
   *
   * @param {string} projectName
   *   A fully-qualified path representing Project resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectName(projectName: string) {
    return this.pathTemplates.projectPathTemplate.match(projectName).project;
  }

  /**
   * Return a fully-qualified tag resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} entry_group
   * @param {string} entry
   * @param {string} tag
   * @returns {string} Resource name string.
   */
  tagPath(
    project: string,
    location: string,
    entryGroup: string,
    entry: string,
    tag: string
  ) {
    return this.pathTemplates.tagPathTemplate.render({
      project: project,
      location: location,
      entry_group: entryGroup,
      entry: entry,
      tag: tag,
    });
  }

  /**
   * Parse the project from Tag resource.
   *
   * @param {string} tagName
   *   A fully-qualified path representing Tag resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromTagName(tagName: string) {
    return this.pathTemplates.tagPathTemplate.match(tagName).project;
  }

  /**
   * Parse the location from Tag resource.
   *
   * @param {string} tagName
   *   A fully-qualified path representing Tag resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromTagName(tagName: string) {
    return this.pathTemplates.tagPathTemplate.match(tagName).location;
  }

  /**
   * Parse the entry_group from Tag resource.
   *
   * @param {string} tagName
   *   A fully-qualified path representing Tag resource.
   * @returns {string} A string representing the entry_group.
   */
  matchEntryGroupFromTagName(tagName: string) {
    return this.pathTemplates.tagPathTemplate.match(tagName).entry_group;
  }

  /**
   * Parse the entry from Tag resource.
   *
   * @param {string} tagName
   *   A fully-qualified path representing Tag resource.
   * @returns {string} A string representing the entry.
   */
  matchEntryFromTagName(tagName: string) {
    return this.pathTemplates.tagPathTemplate.match(tagName).entry;
  }

  /**
   * Parse the tag from Tag resource.
   *
   * @param {string} tagName
   *   A fully-qualified path representing Tag resource.
   * @returns {string} A string representing the tag.
   */
  matchTagFromTagName(tagName: string) {
    return this.pathTemplates.tagPathTemplate.match(tagName).tag;
  }

  /**
   * Return a fully-qualified tagTemplate resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} tag_template
   * @returns {string} Resource name string.
   */
  tagTemplatePath(project: string, location: string, tagTemplate: string) {
    return this.pathTemplates.tagTemplatePathTemplate.render({
      project: project,
      location: location,
      tag_template: tagTemplate,
    });
  }

  /**
   * Parse the project from TagTemplate resource.
   *
   * @param {string} tagTemplateName
   *   A fully-qualified path representing TagTemplate resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromTagTemplateName(tagTemplateName: string) {
    return this.pathTemplates.tagTemplatePathTemplate.match(tagTemplateName)
      .project;
  }

  /**
   * Parse the location from TagTemplate resource.
   *
   * @param {string} tagTemplateName
   *   A fully-qualified path representing TagTemplate resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromTagTemplateName(tagTemplateName: string) {
    return this.pathTemplates.tagTemplatePathTemplate.match(tagTemplateName)
      .location;
  }

  /**
   * Parse the tag_template from TagTemplate resource.
   *
   * @param {string} tagTemplateName
   *   A fully-qualified path representing TagTemplate resource.
   * @returns {string} A string representing the tag_template.
   */
  matchTagTemplateFromTagTemplateName(tagTemplateName: string) {
    return this.pathTemplates.tagTemplatePathTemplate.match(tagTemplateName)
      .tag_template;
  }

  /**
   * Return a fully-qualified tagTemplateField resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} tag_template
   * @param {string} field
   * @returns {string} Resource name string.
   */
  tagTemplateFieldPath(
    project: string,
    location: string,
    tagTemplate: string,
    field: string
  ) {
    return this.pathTemplates.tagTemplateFieldPathTemplate.render({
      project: project,
      location: location,
      tag_template: tagTemplate,
      field: field,
    });
  }

  /**
   * Parse the project from TagTemplateField resource.
   *
   * @param {string} tagTemplateFieldName
   *   A fully-qualified path representing TagTemplateField resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromTagTemplateFieldName(tagTemplateFieldName: string) {
    return this.pathTemplates.tagTemplateFieldPathTemplate.match(
      tagTemplateFieldName
    ).project;
  }

  /**
   * Parse the location from TagTemplateField resource.
   *
   * @param {string} tagTemplateFieldName
   *   A fully-qualified path representing TagTemplateField resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromTagTemplateFieldName(tagTemplateFieldName: string) {
    return this.pathTemplates.tagTemplateFieldPathTemplate.match(
      tagTemplateFieldName
    ).location;
  }

  /**
   * Parse the tag_template from TagTemplateField resource.
   *
   * @param {string} tagTemplateFieldName
   *   A fully-qualified path representing TagTemplateField resource.
   * @returns {string} A string representing the tag_template.
   */
  matchTagTemplateFromTagTemplateFieldName(tagTemplateFieldName: string) {
    return this.pathTemplates.tagTemplateFieldPathTemplate.match(
      tagTemplateFieldName
    ).tag_template;
  }

  /**
   * Parse the field from TagTemplateField resource.
   *
   * @param {string} tagTemplateFieldName
   *   A fully-qualified path representing TagTemplateField resource.
   * @returns {string} A string representing the field.
   */
  matchFieldFromTagTemplateFieldName(tagTemplateFieldName: string) {
    return this.pathTemplates.tagTemplateFieldPathTemplate.match(
      tagTemplateFieldName
    ).field;
  }

  /**
   * Return a fully-qualified tagTemplateFieldEnumValue resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} tag_template
   * @param {string} tag_template_field_id
   * @param {string} enum_value_display_name
   * @returns {string} Resource name string.
   */
  tagTemplateFieldEnumValuePath(
    project: string,
    location: string,
    tagTemplate: string,
    tagTemplateFieldId: string,
    enumValueDisplayName: string
  ) {
    return this.pathTemplates.tagTemplateFieldEnumValuePathTemplate.render({
      project: project,
      location: location,
      tag_template: tagTemplate,
      tag_template_field_id: tagTemplateFieldId,
      enum_value_display_name: enumValueDisplayName,
    });
  }

  /**
   * Parse the project from TagTemplateFieldEnumValue resource.
   *
   * @param {string} tagTemplateFieldEnumValueName
   *   A fully-qualified path representing TagTemplateFieldEnumValue resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromTagTemplateFieldEnumValueName(
    tagTemplateFieldEnumValueName: string
  ) {
    return this.pathTemplates.tagTemplateFieldEnumValuePathTemplate.match(
      tagTemplateFieldEnumValueName
    ).project;
  }

  /**
   * Parse the location from TagTemplateFieldEnumValue resource.
   *
   * @param {string} tagTemplateFieldEnumValueName
   *   A fully-qualified path representing TagTemplateFieldEnumValue resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromTagTemplateFieldEnumValueName(
    tagTemplateFieldEnumValueName: string
  ) {
    return this.pathTemplates.tagTemplateFieldEnumValuePathTemplate.match(
      tagTemplateFieldEnumValueName
    ).location;
  }

  /**
   * Parse the tag_template from TagTemplateFieldEnumValue resource.
   *
   * @param {string} tagTemplateFieldEnumValueName
   *   A fully-qualified path representing TagTemplateFieldEnumValue resource.
   * @returns {string} A string representing the tag_template.
   */
  matchTagTemplateFromTagTemplateFieldEnumValueName(
    tagTemplateFieldEnumValueName: string
  ) {
    return this.pathTemplates.tagTemplateFieldEnumValuePathTemplate.match(
      tagTemplateFieldEnumValueName
    ).tag_template;
  }

  /**
   * Parse the tag_template_field_id from TagTemplateFieldEnumValue resource.
   *
   * @param {string} tagTemplateFieldEnumValueName
   *   A fully-qualified path representing TagTemplateFieldEnumValue resource.
   * @returns {string} A string representing the tag_template_field_id.
   */
  matchTagTemplateFieldIdFromTagTemplateFieldEnumValueName(
    tagTemplateFieldEnumValueName: string
  ) {
    return this.pathTemplates.tagTemplateFieldEnumValuePathTemplate.match(
      tagTemplateFieldEnumValueName
    ).tag_template_field_id;
  }

  /**
   * Parse the enum_value_display_name from TagTemplateFieldEnumValue resource.
   *
   * @param {string} tagTemplateFieldEnumValueName
   *   A fully-qualified path representing TagTemplateFieldEnumValue resource.
   * @returns {string} A string representing the enum_value_display_name.
   */
  matchEnumValueDisplayNameFromTagTemplateFieldEnumValueName(
    tagTemplateFieldEnumValueName: string
  ) {
    return this.pathTemplates.tagTemplateFieldEnumValuePathTemplate.match(
      tagTemplateFieldEnumValueName
    ).enum_value_display_name;
  }

  /**
   * Return a fully-qualified taxonomy resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} taxonomy
   * @returns {string} Resource name string.
   */
  taxonomyPath(project: string, location: string, taxonomy: string) {
    return this.pathTemplates.taxonomyPathTemplate.render({
      project: project,
      location: location,
      taxonomy: taxonomy,
    });
  }

  /**
   * Parse the project from Taxonomy resource.
   *
   * @param {string} taxonomyName
   *   A fully-qualified path representing Taxonomy resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromTaxonomyName(taxonomyName: string) {
    return this.pathTemplates.taxonomyPathTemplate.match(taxonomyName).project;
  }

  /**
   * Parse the location from Taxonomy resource.
   *
   * @param {string} taxonomyName
   *   A fully-qualified path representing Taxonomy resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromTaxonomyName(taxonomyName: string) {
    return this.pathTemplates.taxonomyPathTemplate.match(taxonomyName).location;
  }

  /**
   * Parse the taxonomy from Taxonomy resource.
   *
   * @param {string} taxonomyName
   *   A fully-qualified path representing Taxonomy resource.
   * @returns {string} A string representing the taxonomy.
   */
  matchTaxonomyFromTaxonomyName(taxonomyName: string) {
    return this.pathTemplates.taxonomyPathTemplate.match(taxonomyName).taxonomy;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.dataCatalogStub && !this._terminated) {
      return this.dataCatalogStub.then(stub => {
        this._terminated = true;
        stub.close();
      });
    }
    return Promise.resolve();
  }
}
