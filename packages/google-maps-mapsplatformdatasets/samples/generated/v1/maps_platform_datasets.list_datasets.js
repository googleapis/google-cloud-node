// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent) {
  // [START mapsplatformdatasets_v1_generated_MapsPlatformDatasets_ListDatasets_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The name of the project to list all the datasets for.
   */
  // const parent = 'abc123'
  /**
   *  The maximum number of versions to return per page.
   *  If unspecified (or zero), all datasets will be returned.
   */
  // const pageSize = 1234
  /**
   *  The page token, received from a previous ListDatasets call.
   *  Provide this to retrieve the subsequent page.
   */
  // const pageToken = 'abc123'

  // Imports the Mapsplatformdatasets library
  const {MapsPlatformDatasetsClient} = require('@googlemaps/maps-platform-datasets').v1;

  // Instantiates a client
  const mapsplatformdatasetsClient = new MapsPlatformDatasetsClient();

  async function callListDatasets() {
    // Construct request
    const request = {
      parent,
    };

    // Run request
    const iterable = mapsplatformdatasetsClient.listDatasetsAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListDatasets();
  // [END mapsplatformdatasets_v1_generated_MapsPlatformDatasets_ListDatasets_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
