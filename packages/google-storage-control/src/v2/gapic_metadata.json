{
  "schema": "1.0",
  "comment": "This file maps proto services/RPCs to the corresponding library clients/methods",
  "language": "typescript",
  "protoPackage": "google.storage.control.v2",
  "libraryPackage": "@google-cloud/storage-control",
  "services": {
    "StorageControl": {
      "clients": {
        "grpc": {
          "libraryClient": "StorageControlClient",
          "rpcs": {
            "CreateFolder": {
              "methods": [
                "createFolder"
              ]
            },
            "DeleteFolder": {
              "methods": [
                "deleteFolder"
              ]
            },
            "GetFolder": {
              "methods": [
                "getFolder"
              ]
            },
            "GetStorageLayout": {
              "methods": [
                "getStorageLayout"
              ]
            },
            "RenameFolder": {
              "methods": [
                "renameFolder"
              ]
            },
            "ListFolders": {
              "methods": [
                "listFolders",
                "listFoldersStream",
                "listFoldersAsync"
              ]
            }
          }
        },
        "grpc-fallback": {
          "libraryClient": "StorageControlClient",
          "rpcs": {
            "CreateFolder": {
              "methods": [
                "createFolder"
              ]
            },
            "DeleteFolder": {
              "methods": [
                "deleteFolder"
              ]
            },
            "GetFolder": {
              "methods": [
                "getFolder"
              ]
            },
            "GetStorageLayout": {
              "methods": [
                "getStorageLayout"
              ]
            },
            "RenameFolder": {
              "methods": [
                "renameFolder"
              ]
            },
            "ListFolders": {
              "methods": [
                "listFolders",
                "listFoldersStream",
                "listFoldersAsync"
              ]
            }
          }
        }
      }
    }
  }
}
