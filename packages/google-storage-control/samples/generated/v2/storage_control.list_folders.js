// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent) {
  // [START storage_v2_generated_StorageControl_ListFolders_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. Name of the bucket in which to look for folders. The bucket must
   *  be a hierarchical namespace enabled bucket.
   */
  // const parent = 'abc123'
  /**
   *  Optional. Maximum number of folders to return in a single response. The
   *  service will use this parameter or 1,000 items, whichever is smaller.
   */
  // const pageSize = 1234
  /**
   *  Optional. A previously-returned page token representing part of the larger
   *  set of results to view.
   */
  // const pageToken = 'abc123'
  /**
   *  Optional. Filter results to folders whose names begin with this prefix.
   *  If set, the value must either be an empty string or end with a '/'.
   */
  // const prefix = 'abc123'
  /**
   *  Optional. If set, returns results in a directory-like mode. The results
   *  will only include folders that either exactly match the above prefix, or
   *  are one level below the prefix. The only supported value is '/'.
   */
  // const delimiter = 'abc123'
  /**
   *  Optional. Filter results to folders whose names are lexicographically equal
   *  to or after lexicographic_start. If lexicographic_end is also set, the
   *  folders listed have names between lexicographic_start (inclusive) and
   *  lexicographic_end (exclusive).
   */
  // const lexicographicStart = 'abc123'
  /**
   *  Optional. Filter results to folders whose names are lexicographically
   *  before lexicographic_end. If lexicographic_start is also set, the folders
   *  listed have names between lexicographic_start (inclusive) and
   *  lexicographic_end (exclusive).
   */
  // const lexicographicEnd = 'abc123'
  /**
   *  Optional. A unique identifier for this request. UUID is the recommended
   *  format, but other formats are still accepted.
   */
  // const requestId = 'abc123'

  // Imports the Control library
  const {StorageControlClient} = require('@google-cloud/storage-control').v2;

  // Instantiates a client
  const controlClient = new StorageControlClient();

  async function callListFolders() {
    // Construct request
    const request = {
      parent,
    };

    // Run request
    const iterable = controlClient.listFoldersAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callListFolders();
  // [END storage_v2_generated_StorageControl_ListFolders_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
