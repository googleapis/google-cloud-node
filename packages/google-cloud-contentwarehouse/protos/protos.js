// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_contentwarehouse_protos || ($protobuf.roots._google_cloud_contentwarehouse_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.contentwarehouse = (function() {
    
                /**
                 * Namespace contentwarehouse.
                 * @memberof google.cloud
                 * @namespace
                 */
                var contentwarehouse = {};
    
                contentwarehouse.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.cloud.contentwarehouse
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.CreateDocumentMetadata = (function() {
    
                        /**
                         * Properties of a CreateDocumentMetadata.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ICreateDocumentMetadata
                         */
    
                        /**
                         * Constructs a new CreateDocumentMetadata.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a CreateDocumentMetadata.
                         * @implements ICreateDocumentMetadata
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentMetadata=} [properties] Properties to set
                         */
                        function CreateDocumentMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new CreateDocumentMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentMetadata=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentMetadata} CreateDocumentMetadata instance
                         */
                        CreateDocumentMetadata.create = function create(properties) {
                            return new CreateDocumentMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified CreateDocumentMetadata message. Does not implicitly {@link google.cloud.contentwarehouse.v1.CreateDocumentMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentMetadata} message CreateDocumentMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDocumentMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateDocumentMetadata message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.CreateDocumentMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentMetadata} message CreateDocumentMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDocumentMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateDocumentMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentMetadata} CreateDocumentMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDocumentMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.CreateDocumentMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateDocumentMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentMetadata} CreateDocumentMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDocumentMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateDocumentMetadata message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateDocumentMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateDocumentMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentMetadata} CreateDocumentMetadata
                         */
                        CreateDocumentMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.CreateDocumentMetadata)
                                return object;
                            return new $root.google.cloud.contentwarehouse.v1.CreateDocumentMetadata();
                        };
    
                        /**
                         * Creates a plain object from a CreateDocumentMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.CreateDocumentMetadata} message CreateDocumentMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateDocumentMetadata.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this CreateDocumentMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateDocumentMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateDocumentMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateDocumentMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.CreateDocumentMetadata";
                        };
    
                        return CreateDocumentMetadata;
                    })();
    
                    v1.UpdateDocumentMetadata = (function() {
    
                        /**
                         * Properties of an UpdateDocumentMetadata.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IUpdateDocumentMetadata
                         */
    
                        /**
                         * Constructs a new UpdateDocumentMetadata.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an UpdateDocumentMetadata.
                         * @implements IUpdateDocumentMetadata
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentMetadata=} [properties] Properties to set
                         */
                        function UpdateDocumentMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new UpdateDocumentMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentMetadata=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentMetadata} UpdateDocumentMetadata instance
                         */
                        UpdateDocumentMetadata.create = function create(properties) {
                            return new UpdateDocumentMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateDocumentMetadata message. Does not implicitly {@link google.cloud.contentwarehouse.v1.UpdateDocumentMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentMetadata} message UpdateDocumentMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateDocumentMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateDocumentMetadata message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.UpdateDocumentMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentMetadata} message UpdateDocumentMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateDocumentMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateDocumentMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentMetadata} UpdateDocumentMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateDocumentMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.UpdateDocumentMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateDocumentMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentMetadata} UpdateDocumentMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateDocumentMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateDocumentMetadata message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateDocumentMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateDocumentMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentMetadata} UpdateDocumentMetadata
                         */
                        UpdateDocumentMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.UpdateDocumentMetadata)
                                return object;
                            return new $root.google.cloud.contentwarehouse.v1.UpdateDocumentMetadata();
                        };
    
                        /**
                         * Creates a plain object from an UpdateDocumentMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.UpdateDocumentMetadata} message UpdateDocumentMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateDocumentMetadata.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this UpdateDocumentMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateDocumentMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateDocumentMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateDocumentMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.UpdateDocumentMetadata";
                        };
    
                        return UpdateDocumentMetadata;
                    })();
    
                    v1.RequestMetadata = (function() {
    
                        /**
                         * Properties of a RequestMetadata.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IRequestMetadata
                         * @property {google.cloud.contentwarehouse.v1.IUserInfo|null} [userInfo] RequestMetadata userInfo
                         */
    
                        /**
                         * Constructs a new RequestMetadata.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a RequestMetadata.
                         * @implements IRequestMetadata
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IRequestMetadata=} [properties] Properties to set
                         */
                        function RequestMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RequestMetadata userInfo.
                         * @member {google.cloud.contentwarehouse.v1.IUserInfo|null|undefined} userInfo
                         * @memberof google.cloud.contentwarehouse.v1.RequestMetadata
                         * @instance
                         */
                        RequestMetadata.prototype.userInfo = null;
    
                        /**
                         * Creates a new RequestMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.RequestMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRequestMetadata=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.RequestMetadata} RequestMetadata instance
                         */
                        RequestMetadata.create = function create(properties) {
                            return new RequestMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified RequestMetadata message. Does not implicitly {@link google.cloud.contentwarehouse.v1.RequestMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.RequestMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRequestMetadata} message RequestMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RequestMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.userInfo != null && Object.hasOwnProperty.call(message, "userInfo"))
                                $root.google.cloud.contentwarehouse.v1.UserInfo.encode(message.userInfo, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RequestMetadata message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.RequestMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.RequestMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRequestMetadata} message RequestMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RequestMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RequestMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.RequestMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.RequestMetadata} RequestMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RequestMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.RequestMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.userInfo = $root.google.cloud.contentwarehouse.v1.UserInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RequestMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.RequestMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.RequestMetadata} RequestMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RequestMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RequestMetadata message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.RequestMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RequestMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.userInfo != null && message.hasOwnProperty("userInfo")) {
                                var error = $root.google.cloud.contentwarehouse.v1.UserInfo.verify(message.userInfo);
                                if (error)
                                    return "userInfo." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RequestMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.RequestMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.RequestMetadata} RequestMetadata
                         */
                        RequestMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.RequestMetadata)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.RequestMetadata();
                            if (object.userInfo != null) {
                                if (typeof object.userInfo !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.RequestMetadata.userInfo: object expected");
                                message.userInfo = $root.google.cloud.contentwarehouse.v1.UserInfo.fromObject(object.userInfo);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RequestMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.RequestMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.RequestMetadata} message RequestMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RequestMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.userInfo = null;
                            if (message.userInfo != null && message.hasOwnProperty("userInfo"))
                                object.userInfo = $root.google.cloud.contentwarehouse.v1.UserInfo.toObject(message.userInfo, options);
                            return object;
                        };
    
                        /**
                         * Converts this RequestMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.RequestMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RequestMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RequestMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.RequestMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RequestMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.RequestMetadata";
                        };
    
                        return RequestMetadata;
                    })();
    
                    v1.ResponseMetadata = (function() {
    
                        /**
                         * Properties of a ResponseMetadata.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IResponseMetadata
                         * @property {string|null} [requestId] ResponseMetadata requestId
                         */
    
                        /**
                         * Constructs a new ResponseMetadata.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a ResponseMetadata.
                         * @implements IResponseMetadata
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IResponseMetadata=} [properties] Properties to set
                         */
                        function ResponseMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResponseMetadata requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.contentwarehouse.v1.ResponseMetadata
                         * @instance
                         */
                        ResponseMetadata.prototype.requestId = "";
    
                        /**
                         * Creates a new ResponseMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.ResponseMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IResponseMetadata=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.ResponseMetadata} ResponseMetadata instance
                         */
                        ResponseMetadata.create = function create(properties) {
                            return new ResponseMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified ResponseMetadata message. Does not implicitly {@link google.cloud.contentwarehouse.v1.ResponseMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.ResponseMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IResponseMetadata} message ResponseMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResponseMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResponseMetadata message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.ResponseMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ResponseMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IResponseMetadata} message ResponseMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResponseMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResponseMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.ResponseMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.ResponseMetadata} ResponseMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResponseMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.ResponseMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResponseMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ResponseMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.ResponseMetadata} ResponseMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResponseMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResponseMetadata message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.ResponseMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResponseMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResponseMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.ResponseMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.ResponseMetadata} ResponseMetadata
                         */
                        ResponseMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.ResponseMetadata)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.ResponseMetadata();
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResponseMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.ResponseMetadata
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ResponseMetadata} message ResponseMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResponseMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.requestId = "";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this ResponseMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.ResponseMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResponseMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResponseMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.ResponseMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResponseMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.ResponseMetadata";
                        };
    
                        return ResponseMetadata;
                    })();
    
                    v1.UserInfo = (function() {
    
                        /**
                         * Properties of a UserInfo.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IUserInfo
                         * @property {string|null} [id] UserInfo id
                         * @property {Array.<string>|null} [groupIds] UserInfo groupIds
                         */
    
                        /**
                         * Constructs a new UserInfo.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a UserInfo.
                         * @implements IUserInfo
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IUserInfo=} [properties] Properties to set
                         */
                        function UserInfo(properties) {
                            this.groupIds = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UserInfo id.
                         * @member {string} id
                         * @memberof google.cloud.contentwarehouse.v1.UserInfo
                         * @instance
                         */
                        UserInfo.prototype.id = "";
    
                        /**
                         * UserInfo groupIds.
                         * @member {Array.<string>} groupIds
                         * @memberof google.cloud.contentwarehouse.v1.UserInfo
                         * @instance
                         */
                        UserInfo.prototype.groupIds = $util.emptyArray;
    
                        /**
                         * Creates a new UserInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.UserInfo
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUserInfo=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.UserInfo} UserInfo instance
                         */
                        UserInfo.create = function create(properties) {
                            return new UserInfo(properties);
                        };
    
                        /**
                         * Encodes the specified UserInfo message. Does not implicitly {@link google.cloud.contentwarehouse.v1.UserInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.UserInfo
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUserInfo} message UserInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                            if (message.groupIds != null && message.groupIds.length)
                                for (var i = 0; i < message.groupIds.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.groupIds[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UserInfo message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.UserInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UserInfo
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUserInfo} message UserInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a UserInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.UserInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.UserInfo} UserInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.UserInfo();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.groupIds && message.groupIds.length))
                                            message.groupIds = [];
                                        message.groupIds.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a UserInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UserInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.UserInfo} UserInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a UserInfo message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.UserInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UserInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.groupIds != null && message.hasOwnProperty("groupIds")) {
                                if (!Array.isArray(message.groupIds))
                                    return "groupIds: array expected";
                                for (var i = 0; i < message.groupIds.length; ++i)
                                    if (!$util.isString(message.groupIds[i]))
                                        return "groupIds: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a UserInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.UserInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.UserInfo} UserInfo
                         */
                        UserInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.UserInfo)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.UserInfo();
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.groupIds) {
                                if (!Array.isArray(object.groupIds))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.UserInfo.groupIds: array expected");
                                message.groupIds = [];
                                for (var i = 0; i < object.groupIds.length; ++i)
                                    message.groupIds[i] = String(object.groupIds[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a UserInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.UserInfo
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.UserInfo} message UserInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UserInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.groupIds = [];
                            if (options.defaults)
                                object.id = "";
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.groupIds && message.groupIds.length) {
                                object.groupIds = [];
                                for (var j = 0; j < message.groupIds.length; ++j)
                                    object.groupIds[j] = message.groupIds[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this UserInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.UserInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UserInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UserInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.UserInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UserInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.UserInfo";
                        };
    
                        return UserInfo;
                    })();
    
                    v1.UpdateOptions = (function() {
    
                        /**
                         * Properties of an UpdateOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IUpdateOptions
                         * @property {google.cloud.contentwarehouse.v1.UpdateType|null} [updateType] UpdateOptions updateType
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateOptions updateMask
                         * @property {google.cloud.contentwarehouse.v1.IMergeFieldsOptions|null} [mergeFieldsOptions] UpdateOptions mergeFieldsOptions
                         */
    
                        /**
                         * Constructs a new UpdateOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an UpdateOptions.
                         * @implements IUpdateOptions
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IUpdateOptions=} [properties] Properties to set
                         */
                        function UpdateOptions(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateOptions updateType.
                         * @member {google.cloud.contentwarehouse.v1.UpdateType} updateType
                         * @memberof google.cloud.contentwarehouse.v1.UpdateOptions
                         * @instance
                         */
                        UpdateOptions.prototype.updateType = 0;
    
                        /**
                         * UpdateOptions updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.contentwarehouse.v1.UpdateOptions
                         * @instance
                         */
                        UpdateOptions.prototype.updateMask = null;
    
                        /**
                         * UpdateOptions mergeFieldsOptions.
                         * @member {google.cloud.contentwarehouse.v1.IMergeFieldsOptions|null|undefined} mergeFieldsOptions
                         * @memberof google.cloud.contentwarehouse.v1.UpdateOptions
                         * @instance
                         */
                        UpdateOptions.prototype.mergeFieldsOptions = null;
    
                        /**
                         * Creates a new UpdateOptions instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.UpdateOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateOptions=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.UpdateOptions} UpdateOptions instance
                         */
                        UpdateOptions.create = function create(properties) {
                            return new UpdateOptions(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateOptions message. Does not implicitly {@link google.cloud.contentwarehouse.v1.UpdateOptions.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.UpdateOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateOptions} message UpdateOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateOptions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateType != null && Object.hasOwnProperty.call(message, "updateType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.updateType);
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.mergeFieldsOptions != null && Object.hasOwnProperty.call(message, "mergeFieldsOptions"))
                                $root.google.cloud.contentwarehouse.v1.MergeFieldsOptions.encode(message.mergeFieldsOptions, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateOptions message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.UpdateOptions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UpdateOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateOptions} message UpdateOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateOptions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateOptions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.UpdateOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.UpdateOptions} UpdateOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateOptions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.UpdateOptions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateType = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.mergeFieldsOptions = $root.google.cloud.contentwarehouse.v1.MergeFieldsOptions.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateOptions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UpdateOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.UpdateOptions} UpdateOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateOptions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateOptions message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.UpdateOptions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateOptions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateType != null && message.hasOwnProperty("updateType"))
                                switch (message.updateType) {
                                default:
                                    return "updateType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.mergeFieldsOptions != null && message.hasOwnProperty("mergeFieldsOptions")) {
                                var error = $root.google.cloud.contentwarehouse.v1.MergeFieldsOptions.verify(message.mergeFieldsOptions);
                                if (error)
                                    return "mergeFieldsOptions." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateOptions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.UpdateOptions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.UpdateOptions} UpdateOptions
                         */
                        UpdateOptions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.UpdateOptions)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.UpdateOptions();
                            switch (object.updateType) {
                            default:
                                if (typeof object.updateType === "number") {
                                    message.updateType = object.updateType;
                                    break;
                                }
                                break;
                            case "UPDATE_TYPE_UNSPECIFIED":
                            case 0:
                                message.updateType = 0;
                                break;
                            case "UPDATE_TYPE_REPLACE":
                            case 1:
                                message.updateType = 1;
                                break;
                            case "UPDATE_TYPE_MERGE":
                            case 2:
                                message.updateType = 2;
                                break;
                            case "UPDATE_TYPE_INSERT_PROPERTIES_BY_NAMES":
                            case 3:
                                message.updateType = 3;
                                break;
                            case "UPDATE_TYPE_REPLACE_PROPERTIES_BY_NAMES":
                            case 4:
                                message.updateType = 4;
                                break;
                            case "UPDATE_TYPE_DELETE_PROPERTIES_BY_NAMES":
                            case 5:
                                message.updateType = 5;
                                break;
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.UpdateOptions.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.mergeFieldsOptions != null) {
                                if (typeof object.mergeFieldsOptions !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.UpdateOptions.mergeFieldsOptions: object expected");
                                message.mergeFieldsOptions = $root.google.cloud.contentwarehouse.v1.MergeFieldsOptions.fromObject(object.mergeFieldsOptions);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateOptions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.UpdateOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.UpdateOptions} message UpdateOptions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateOptions.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateType = options.enums === String ? "UPDATE_TYPE_UNSPECIFIED" : 0;
                                object.updateMask = null;
                                object.mergeFieldsOptions = null;
                            }
                            if (message.updateType != null && message.hasOwnProperty("updateType"))
                                object.updateType = options.enums === String ? $root.google.cloud.contentwarehouse.v1.UpdateType[message.updateType] === undefined ? message.updateType : $root.google.cloud.contentwarehouse.v1.UpdateType[message.updateType] : message.updateType;
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.mergeFieldsOptions != null && message.hasOwnProperty("mergeFieldsOptions"))
                                object.mergeFieldsOptions = $root.google.cloud.contentwarehouse.v1.MergeFieldsOptions.toObject(message.mergeFieldsOptions, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateOptions to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.UpdateOptions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateOptions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateOptions
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.UpdateOptions
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.UpdateOptions";
                        };
    
                        return UpdateOptions;
                    })();
    
                    v1.MergeFieldsOptions = (function() {
    
                        /**
                         * Properties of a MergeFieldsOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IMergeFieldsOptions
                         * @property {boolean|null} [replaceMessageFields] MergeFieldsOptions replaceMessageFields
                         * @property {boolean|null} [replaceRepeatedFields] MergeFieldsOptions replaceRepeatedFields
                         */
    
                        /**
                         * Constructs a new MergeFieldsOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a MergeFieldsOptions.
                         * @implements IMergeFieldsOptions
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IMergeFieldsOptions=} [properties] Properties to set
                         */
                        function MergeFieldsOptions(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MergeFieldsOptions replaceMessageFields.
                         * @member {boolean|null|undefined} replaceMessageFields
                         * @memberof google.cloud.contentwarehouse.v1.MergeFieldsOptions
                         * @instance
                         */
                        MergeFieldsOptions.prototype.replaceMessageFields = null;
    
                        /**
                         * MergeFieldsOptions replaceRepeatedFields.
                         * @member {boolean|null|undefined} replaceRepeatedFields
                         * @memberof google.cloud.contentwarehouse.v1.MergeFieldsOptions
                         * @instance
                         */
                        MergeFieldsOptions.prototype.replaceRepeatedFields = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MergeFieldsOptions _replaceMessageFields.
                         * @member {"replaceMessageFields"|undefined} _replaceMessageFields
                         * @memberof google.cloud.contentwarehouse.v1.MergeFieldsOptions
                         * @instance
                         */
                        Object.defineProperty(MergeFieldsOptions.prototype, "_replaceMessageFields", {
                            get: $util.oneOfGetter($oneOfFields = ["replaceMessageFields"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * MergeFieldsOptions _replaceRepeatedFields.
                         * @member {"replaceRepeatedFields"|undefined} _replaceRepeatedFields
                         * @memberof google.cloud.contentwarehouse.v1.MergeFieldsOptions
                         * @instance
                         */
                        Object.defineProperty(MergeFieldsOptions.prototype, "_replaceRepeatedFields", {
                            get: $util.oneOfGetter($oneOfFields = ["replaceRepeatedFields"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MergeFieldsOptions instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.MergeFieldsOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IMergeFieldsOptions=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.MergeFieldsOptions} MergeFieldsOptions instance
                         */
                        MergeFieldsOptions.create = function create(properties) {
                            return new MergeFieldsOptions(properties);
                        };
    
                        /**
                         * Encodes the specified MergeFieldsOptions message. Does not implicitly {@link google.cloud.contentwarehouse.v1.MergeFieldsOptions.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.MergeFieldsOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IMergeFieldsOptions} message MergeFieldsOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MergeFieldsOptions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.replaceMessageFields != null && Object.hasOwnProperty.call(message, "replaceMessageFields"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.replaceMessageFields);
                            if (message.replaceRepeatedFields != null && Object.hasOwnProperty.call(message, "replaceRepeatedFields"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.replaceRepeatedFields);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MergeFieldsOptions message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.MergeFieldsOptions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.MergeFieldsOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IMergeFieldsOptions} message MergeFieldsOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MergeFieldsOptions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MergeFieldsOptions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.MergeFieldsOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.MergeFieldsOptions} MergeFieldsOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MergeFieldsOptions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.MergeFieldsOptions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.replaceMessageFields = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.replaceRepeatedFields = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MergeFieldsOptions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.MergeFieldsOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.MergeFieldsOptions} MergeFieldsOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MergeFieldsOptions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MergeFieldsOptions message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.MergeFieldsOptions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MergeFieldsOptions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.replaceMessageFields != null && message.hasOwnProperty("replaceMessageFields")) {
                                properties._replaceMessageFields = 1;
                                if (typeof message.replaceMessageFields !== "boolean")
                                    return "replaceMessageFields: boolean expected";
                            }
                            if (message.replaceRepeatedFields != null && message.hasOwnProperty("replaceRepeatedFields")) {
                                properties._replaceRepeatedFields = 1;
                                if (typeof message.replaceRepeatedFields !== "boolean")
                                    return "replaceRepeatedFields: boolean expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MergeFieldsOptions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.MergeFieldsOptions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.MergeFieldsOptions} MergeFieldsOptions
                         */
                        MergeFieldsOptions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.MergeFieldsOptions)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.MergeFieldsOptions();
                            if (object.replaceMessageFields != null)
                                message.replaceMessageFields = Boolean(object.replaceMessageFields);
                            if (object.replaceRepeatedFields != null)
                                message.replaceRepeatedFields = Boolean(object.replaceRepeatedFields);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MergeFieldsOptions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.MergeFieldsOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.MergeFieldsOptions} message MergeFieldsOptions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MergeFieldsOptions.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.replaceMessageFields != null && message.hasOwnProperty("replaceMessageFields")) {
                                object.replaceMessageFields = message.replaceMessageFields;
                                if (options.oneofs)
                                    object._replaceMessageFields = "replaceMessageFields";
                            }
                            if (message.replaceRepeatedFields != null && message.hasOwnProperty("replaceRepeatedFields")) {
                                object.replaceRepeatedFields = message.replaceRepeatedFields;
                                if (options.oneofs)
                                    object._replaceRepeatedFields = "replaceRepeatedFields";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MergeFieldsOptions to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.MergeFieldsOptions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MergeFieldsOptions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MergeFieldsOptions
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.MergeFieldsOptions
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MergeFieldsOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.MergeFieldsOptions";
                        };
    
                        return MergeFieldsOptions;
                    })();
    
                    /**
                     * UpdateType enum.
                     * @name google.cloud.contentwarehouse.v1.UpdateType
                     * @enum {number}
                     * @property {number} UPDATE_TYPE_UNSPECIFIED=0 UPDATE_TYPE_UNSPECIFIED value
                     * @property {number} UPDATE_TYPE_REPLACE=1 UPDATE_TYPE_REPLACE value
                     * @property {number} UPDATE_TYPE_MERGE=2 UPDATE_TYPE_MERGE value
                     * @property {number} UPDATE_TYPE_INSERT_PROPERTIES_BY_NAMES=3 UPDATE_TYPE_INSERT_PROPERTIES_BY_NAMES value
                     * @property {number} UPDATE_TYPE_REPLACE_PROPERTIES_BY_NAMES=4 UPDATE_TYPE_REPLACE_PROPERTIES_BY_NAMES value
                     * @property {number} UPDATE_TYPE_DELETE_PROPERTIES_BY_NAMES=5 UPDATE_TYPE_DELETE_PROPERTIES_BY_NAMES value
                     */
                    v1.UpdateType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UPDATE_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "UPDATE_TYPE_REPLACE"] = 1;
                        values[valuesById[2] = "UPDATE_TYPE_MERGE"] = 2;
                        values[valuesById[3] = "UPDATE_TYPE_INSERT_PROPERTIES_BY_NAMES"] = 3;
                        values[valuesById[4] = "UPDATE_TYPE_REPLACE_PROPERTIES_BY_NAMES"] = 4;
                        values[valuesById[5] = "UPDATE_TYPE_DELETE_PROPERTIES_BY_NAMES"] = 5;
                        return values;
                    })();
    
                    /**
                     * DatabaseType enum.
                     * @name google.cloud.contentwarehouse.v1.DatabaseType
                     * @enum {number}
                     * @property {number} DB_UNKNOWN=0 DB_UNKNOWN value
                     * @property {number} DB_INFRA_SPANNER=1 DB_INFRA_SPANNER value
                     * @property {number} DB_CLOUD_SQL_POSTGRES=2 DB_CLOUD_SQL_POSTGRES value
                     */
                    v1.DatabaseType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "DB_UNKNOWN"] = 0;
                        values[valuesById[1] = "DB_INFRA_SPANNER"] = 1;
                        values[valuesById[2] = "DB_CLOUD_SQL_POSTGRES"] = 2;
                        return values;
                    })();
    
                    /**
                     * AccessControlMode enum.
                     * @name google.cloud.contentwarehouse.v1.AccessControlMode
                     * @enum {number}
                     * @property {number} ACL_MODE_UNKNOWN=0 ACL_MODE_UNKNOWN value
                     * @property {number} ACL_MODE_UNIVERSAL_ACCESS=1 ACL_MODE_UNIVERSAL_ACCESS value
                     * @property {number} ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID=2 ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID value
                     * @property {number} ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI=3 ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI value
                     */
                    v1.AccessControlMode = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ACL_MODE_UNKNOWN"] = 0;
                        values[valuesById[1] = "ACL_MODE_UNIVERSAL_ACCESS"] = 1;
                        values[valuesById[2] = "ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID"] = 2;
                        values[valuesById[3] = "ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI"] = 3;
                        return values;
                    })();
    
                    v1.Document = (function() {
    
                        /**
                         * Properties of a Document.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IDocument
                         * @property {string|null} [name] Document name
                         * @property {string|null} [referenceId] Document referenceId
                         * @property {string|null} [displayName] Document displayName
                         * @property {string|null} [title] Document title
                         * @property {string|null} [displayUri] Document displayUri
                         * @property {string|null} [documentSchemaName] Document documentSchemaName
                         * @property {string|null} [plainText] Document plainText
                         * @property {google.cloud.documentai.v1.IDocument|null} [cloudAiDocument] Document cloudAiDocument
                         * @property {string|null} [structuredContentUri] Document structuredContentUri
                         * @property {string|null} [rawDocumentPath] Document rawDocumentPath
                         * @property {Uint8Array|null} [inlineRawDocument] Document inlineRawDocument
                         * @property {Array.<google.cloud.contentwarehouse.v1.IProperty>|null} [properties] Document properties
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Document updateTime
                         * @property {google.protobuf.ITimestamp|null} [createTime] Document createTime
                         * @property {google.cloud.contentwarehouse.v1.RawDocumentFileType|null} [rawDocumentFileType] Document rawDocumentFileType
                         * @property {boolean|null} [asyncEnabled] Document asyncEnabled
                         * @property {boolean|null} [textExtractionDisabled] Document textExtractionDisabled
                         * @property {string|null} [creator] Document creator
                         * @property {string|null} [updater] Document updater
                         */
    
                        /**
                         * Constructs a new Document.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a Document.
                         * @implements IDocument
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IDocument=} [properties] Properties to set
                         */
                        function Document(properties) {
                            this.properties = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Document name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.name = "";
    
                        /**
                         * Document referenceId.
                         * @member {string} referenceId
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.referenceId = "";
    
                        /**
                         * Document displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.displayName = "";
    
                        /**
                         * Document title.
                         * @member {string} title
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.title = "";
    
                        /**
                         * Document displayUri.
                         * @member {string} displayUri
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.displayUri = "";
    
                        /**
                         * Document documentSchemaName.
                         * @member {string} documentSchemaName
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.documentSchemaName = "";
    
                        /**
                         * Document plainText.
                         * @member {string|null|undefined} plainText
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.plainText = null;
    
                        /**
                         * Document cloudAiDocument.
                         * @member {google.cloud.documentai.v1.IDocument|null|undefined} cloudAiDocument
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.cloudAiDocument = null;
    
                        /**
                         * Document structuredContentUri.
                         * @member {string} structuredContentUri
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.structuredContentUri = "";
    
                        /**
                         * Document rawDocumentPath.
                         * @member {string|null|undefined} rawDocumentPath
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.rawDocumentPath = null;
    
                        /**
                         * Document inlineRawDocument.
                         * @member {Uint8Array|null|undefined} inlineRawDocument
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.inlineRawDocument = null;
    
                        /**
                         * Document properties.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IProperty>} properties
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.properties = $util.emptyArray;
    
                        /**
                         * Document updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.updateTime = null;
    
                        /**
                         * Document createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.createTime = null;
    
                        /**
                         * Document rawDocumentFileType.
                         * @member {google.cloud.contentwarehouse.v1.RawDocumentFileType} rawDocumentFileType
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.rawDocumentFileType = 0;
    
                        /**
                         * Document asyncEnabled.
                         * @member {boolean} asyncEnabled
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.asyncEnabled = false;
    
                        /**
                         * Document textExtractionDisabled.
                         * @member {boolean} textExtractionDisabled
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.textExtractionDisabled = false;
    
                        /**
                         * Document creator.
                         * @member {string} creator
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.creator = "";
    
                        /**
                         * Document updater.
                         * @member {string} updater
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Document.prototype.updater = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Document structuredContent.
                         * @member {"plainText"|"cloudAiDocument"|undefined} structuredContent
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Object.defineProperty(Document.prototype, "structuredContent", {
                            get: $util.oneOfGetter($oneOfFields = ["plainText", "cloudAiDocument"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Document rawDocument.
                         * @member {"rawDocumentPath"|"inlineRawDocument"|undefined} rawDocument
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         */
                        Object.defineProperty(Document.prototype, "rawDocument", {
                            get: $util.oneOfGetter($oneOfFields = ["rawDocumentPath", "inlineRawDocument"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Document instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDocument=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.Document} Document instance
                         */
                        Document.create = function create(properties) {
                            return new Document(properties);
                        };
    
                        /**
                         * Encodes the specified Document message. Does not implicitly {@link google.cloud.contentwarehouse.v1.Document.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDocument} message Document message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Document.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                            if (message.documentSchemaName != null && Object.hasOwnProperty.call(message, "documentSchemaName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.documentSchemaName);
                            if (message.cloudAiDocument != null && Object.hasOwnProperty.call(message, "cloudAiDocument"))
                                $root.google.cloud.documentai.v1.Document.encode(message.cloudAiDocument, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.rawDocumentPath != null && Object.hasOwnProperty.call(message, "rawDocumentPath"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.rawDocumentPath);
                            if (message.inlineRawDocument != null && Object.hasOwnProperty.call(message, "inlineRawDocument"))
                                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.inlineRawDocument);
                            if (message.properties != null && message.properties.length)
                                for (var i = 0; i < message.properties.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.Property.encode(message.properties[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.rawDocumentFileType != null && Object.hasOwnProperty.call(message, "rawDocumentFileType"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.rawDocumentFileType);
                            if (message.referenceId != null && Object.hasOwnProperty.call(message, "referenceId"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.referenceId);
                            if (message.asyncEnabled != null && Object.hasOwnProperty.call(message, "asyncEnabled"))
                                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.asyncEnabled);
                            if (message.creator != null && Object.hasOwnProperty.call(message, "creator"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.creator);
                            if (message.updater != null && Object.hasOwnProperty.call(message, "updater"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.updater);
                            if (message.plainText != null && Object.hasOwnProperty.call(message, "plainText"))
                                writer.uint32(/* id 15, wireType 2 =*/122).string(message.plainText);
                            if (message.structuredContentUri != null && Object.hasOwnProperty.call(message, "structuredContentUri"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.structuredContentUri);
                            if (message.displayUri != null && Object.hasOwnProperty.call(message, "displayUri"))
                                writer.uint32(/* id 17, wireType 2 =*/138).string(message.displayUri);
                            if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                                writer.uint32(/* id 18, wireType 2 =*/146).string(message.title);
                            if (message.textExtractionDisabled != null && Object.hasOwnProperty.call(message, "textExtractionDisabled"))
                                writer.uint32(/* id 19, wireType 0 =*/152).bool(message.textExtractionDisabled);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Document message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.Document.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDocument} message Document message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Document.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Document message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.Document} Document
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Document.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.Document();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 11: {
                                        message.referenceId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 18: {
                                        message.title = reader.string();
                                        break;
                                    }
                                case 17: {
                                        message.displayUri = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.documentSchemaName = reader.string();
                                        break;
                                    }
                                case 15: {
                                        message.plainText = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.cloudAiDocument = $root.google.cloud.documentai.v1.Document.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.structuredContentUri = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.rawDocumentPath = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.inlineRawDocument = reader.bytes();
                                        break;
                                    }
                                case 7: {
                                        if (!(message.properties && message.properties.length))
                                            message.properties = [];
                                        message.properties.push($root.google.cloud.contentwarehouse.v1.Property.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 8: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.rawDocumentFileType = reader.int32();
                                        break;
                                    }
                                case 12: {
                                        message.asyncEnabled = reader.bool();
                                        break;
                                    }
                                case 19: {
                                        message.textExtractionDisabled = reader.bool();
                                        break;
                                    }
                                case 13: {
                                        message.creator = reader.string();
                                        break;
                                    }
                                case 14: {
                                        message.updater = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Document message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.Document} Document
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Document.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Document message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Document.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.referenceId != null && message.hasOwnProperty("referenceId"))
                                if (!$util.isString(message.referenceId))
                                    return "referenceId: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.title != null && message.hasOwnProperty("title"))
                                if (!$util.isString(message.title))
                                    return "title: string expected";
                            if (message.displayUri != null && message.hasOwnProperty("displayUri"))
                                if (!$util.isString(message.displayUri))
                                    return "displayUri: string expected";
                            if (message.documentSchemaName != null && message.hasOwnProperty("documentSchemaName"))
                                if (!$util.isString(message.documentSchemaName))
                                    return "documentSchemaName: string expected";
                            if (message.plainText != null && message.hasOwnProperty("plainText")) {
                                properties.structuredContent = 1;
                                if (!$util.isString(message.plainText))
                                    return "plainText: string expected";
                            }
                            if (message.cloudAiDocument != null && message.hasOwnProperty("cloudAiDocument")) {
                                if (properties.structuredContent === 1)
                                    return "structuredContent: multiple values";
                                properties.structuredContent = 1;
                                {
                                    var error = $root.google.cloud.documentai.v1.Document.verify(message.cloudAiDocument);
                                    if (error)
                                        return "cloudAiDocument." + error;
                                }
                            }
                            if (message.structuredContentUri != null && message.hasOwnProperty("structuredContentUri"))
                                if (!$util.isString(message.structuredContentUri))
                                    return "structuredContentUri: string expected";
                            if (message.rawDocumentPath != null && message.hasOwnProperty("rawDocumentPath")) {
                                properties.rawDocument = 1;
                                if (!$util.isString(message.rawDocumentPath))
                                    return "rawDocumentPath: string expected";
                            }
                            if (message.inlineRawDocument != null && message.hasOwnProperty("inlineRawDocument")) {
                                if (properties.rawDocument === 1)
                                    return "rawDocument: multiple values";
                                properties.rawDocument = 1;
                                if (!(message.inlineRawDocument && typeof message.inlineRawDocument.length === "number" || $util.isString(message.inlineRawDocument)))
                                    return "inlineRawDocument: buffer expected";
                            }
                            if (message.properties != null && message.hasOwnProperty("properties")) {
                                if (!Array.isArray(message.properties))
                                    return "properties: array expected";
                                for (var i = 0; i < message.properties.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.Property.verify(message.properties[i]);
                                    if (error)
                                        return "properties." + error;
                                }
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.rawDocumentFileType != null && message.hasOwnProperty("rawDocumentFileType"))
                                switch (message.rawDocumentFileType) {
                                default:
                                    return "rawDocumentFileType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.asyncEnabled != null && message.hasOwnProperty("asyncEnabled"))
                                if (typeof message.asyncEnabled !== "boolean")
                                    return "asyncEnabled: boolean expected";
                            if (message.textExtractionDisabled != null && message.hasOwnProperty("textExtractionDisabled"))
                                if (typeof message.textExtractionDisabled !== "boolean")
                                    return "textExtractionDisabled: boolean expected";
                            if (message.creator != null && message.hasOwnProperty("creator"))
                                if (!$util.isString(message.creator))
                                    return "creator: string expected";
                            if (message.updater != null && message.hasOwnProperty("updater"))
                                if (!$util.isString(message.updater))
                                    return "updater: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Document message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.Document} Document
                         */
                        Document.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.Document)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.Document();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.referenceId != null)
                                message.referenceId = String(object.referenceId);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.title != null)
                                message.title = String(object.title);
                            if (object.displayUri != null)
                                message.displayUri = String(object.displayUri);
                            if (object.documentSchemaName != null)
                                message.documentSchemaName = String(object.documentSchemaName);
                            if (object.plainText != null)
                                message.plainText = String(object.plainText);
                            if (object.cloudAiDocument != null) {
                                if (typeof object.cloudAiDocument !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Document.cloudAiDocument: object expected");
                                message.cloudAiDocument = $root.google.cloud.documentai.v1.Document.fromObject(object.cloudAiDocument);
                            }
                            if (object.structuredContentUri != null)
                                message.structuredContentUri = String(object.structuredContentUri);
                            if (object.rawDocumentPath != null)
                                message.rawDocumentPath = String(object.rawDocumentPath);
                            if (object.inlineRawDocument != null)
                                if (typeof object.inlineRawDocument === "string")
                                    $util.base64.decode(object.inlineRawDocument, message.inlineRawDocument = $util.newBuffer($util.base64.length(object.inlineRawDocument)), 0);
                                else if (object.inlineRawDocument.length >= 0)
                                    message.inlineRawDocument = object.inlineRawDocument;
                            if (object.properties) {
                                if (!Array.isArray(object.properties))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Document.properties: array expected");
                                message.properties = [];
                                for (var i = 0; i < object.properties.length; ++i) {
                                    if (typeof object.properties[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.Document.properties: object expected");
                                    message.properties[i] = $root.google.cloud.contentwarehouse.v1.Property.fromObject(object.properties[i]);
                                }
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Document.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Document.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            switch (object.rawDocumentFileType) {
                            default:
                                if (typeof object.rawDocumentFileType === "number") {
                                    message.rawDocumentFileType = object.rawDocumentFileType;
                                    break;
                                }
                                break;
                            case "RAW_DOCUMENT_FILE_TYPE_UNSPECIFIED":
                            case 0:
                                message.rawDocumentFileType = 0;
                                break;
                            case "RAW_DOCUMENT_FILE_TYPE_PDF":
                            case 1:
                                message.rawDocumentFileType = 1;
                                break;
                            case "RAW_DOCUMENT_FILE_TYPE_DOCX":
                            case 2:
                                message.rawDocumentFileType = 2;
                                break;
                            case "RAW_DOCUMENT_FILE_TYPE_XLSX":
                            case 3:
                                message.rawDocumentFileType = 3;
                                break;
                            case "RAW_DOCUMENT_FILE_TYPE_PPTX":
                            case 4:
                                message.rawDocumentFileType = 4;
                                break;
                            case "RAW_DOCUMENT_FILE_TYPE_TEXT":
                            case 5:
                                message.rawDocumentFileType = 5;
                                break;
                            }
                            if (object.asyncEnabled != null)
                                message.asyncEnabled = Boolean(object.asyncEnabled);
                            if (object.textExtractionDisabled != null)
                                message.textExtractionDisabled = Boolean(object.textExtractionDisabled);
                            if (object.creator != null)
                                message.creator = String(object.creator);
                            if (object.updater != null)
                                message.updater = String(object.updater);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Document message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.Document} message Document
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Document.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.properties = [];
                            if (options.defaults) {
                                object.name = "";
                                object.displayName = "";
                                object.documentSchemaName = "";
                                object.updateTime = null;
                                object.createTime = null;
                                object.rawDocumentFileType = options.enums === String ? "RAW_DOCUMENT_FILE_TYPE_UNSPECIFIED" : 0;
                                object.referenceId = "";
                                object.asyncEnabled = false;
                                object.creator = "";
                                object.updater = "";
                                object.structuredContentUri = "";
                                object.displayUri = "";
                                object.title = "";
                                object.textExtractionDisabled = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.documentSchemaName != null && message.hasOwnProperty("documentSchemaName"))
                                object.documentSchemaName = message.documentSchemaName;
                            if (message.cloudAiDocument != null && message.hasOwnProperty("cloudAiDocument")) {
                                object.cloudAiDocument = $root.google.cloud.documentai.v1.Document.toObject(message.cloudAiDocument, options);
                                if (options.oneofs)
                                    object.structuredContent = "cloudAiDocument";
                            }
                            if (message.rawDocumentPath != null && message.hasOwnProperty("rawDocumentPath")) {
                                object.rawDocumentPath = message.rawDocumentPath;
                                if (options.oneofs)
                                    object.rawDocument = "rawDocumentPath";
                            }
                            if (message.inlineRawDocument != null && message.hasOwnProperty("inlineRawDocument")) {
                                object.inlineRawDocument = options.bytes === String ? $util.base64.encode(message.inlineRawDocument, 0, message.inlineRawDocument.length) : options.bytes === Array ? Array.prototype.slice.call(message.inlineRawDocument) : message.inlineRawDocument;
                                if (options.oneofs)
                                    object.rawDocument = "inlineRawDocument";
                            }
                            if (message.properties && message.properties.length) {
                                object.properties = [];
                                for (var j = 0; j < message.properties.length; ++j)
                                    object.properties[j] = $root.google.cloud.contentwarehouse.v1.Property.toObject(message.properties[j], options);
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.rawDocumentFileType != null && message.hasOwnProperty("rawDocumentFileType"))
                                object.rawDocumentFileType = options.enums === String ? $root.google.cloud.contentwarehouse.v1.RawDocumentFileType[message.rawDocumentFileType] === undefined ? message.rawDocumentFileType : $root.google.cloud.contentwarehouse.v1.RawDocumentFileType[message.rawDocumentFileType] : message.rawDocumentFileType;
                            if (message.referenceId != null && message.hasOwnProperty("referenceId"))
                                object.referenceId = message.referenceId;
                            if (message.asyncEnabled != null && message.hasOwnProperty("asyncEnabled"))
                                object.asyncEnabled = message.asyncEnabled;
                            if (message.creator != null && message.hasOwnProperty("creator"))
                                object.creator = message.creator;
                            if (message.updater != null && message.hasOwnProperty("updater"))
                                object.updater = message.updater;
                            if (message.plainText != null && message.hasOwnProperty("plainText")) {
                                object.plainText = message.plainText;
                                if (options.oneofs)
                                    object.structuredContent = "plainText";
                            }
                            if (message.structuredContentUri != null && message.hasOwnProperty("structuredContentUri"))
                                object.structuredContentUri = message.structuredContentUri;
                            if (message.displayUri != null && message.hasOwnProperty("displayUri"))
                                object.displayUri = message.displayUri;
                            if (message.title != null && message.hasOwnProperty("title"))
                                object.title = message.title;
                            if (message.textExtractionDisabled != null && message.hasOwnProperty("textExtractionDisabled"))
                                object.textExtractionDisabled = message.textExtractionDisabled;
                            return object;
                        };
    
                        /**
                         * Converts this Document to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Document.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Document
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.Document
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Document.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.Document";
                        };
    
                        return Document;
                    })();
    
                    v1.DocumentReference = (function() {
    
                        /**
                         * Properties of a DocumentReference.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IDocumentReference
                         * @property {string|null} [documentName] DocumentReference documentName
                         * @property {string|null} [displayName] DocumentReference displayName
                         * @property {string|null} [snippet] DocumentReference snippet
                         * @property {boolean|null} [documentIsFolder] DocumentReference documentIsFolder
                         * @property {google.protobuf.ITimestamp|null} [updateTime] DocumentReference updateTime
                         * @property {google.protobuf.ITimestamp|null} [createTime] DocumentReference createTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] DocumentReference deleteTime
                         */
    
                        /**
                         * Constructs a new DocumentReference.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DocumentReference.
                         * @implements IDocumentReference
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IDocumentReference=} [properties] Properties to set
                         */
                        function DocumentReference(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DocumentReference documentName.
                         * @member {string} documentName
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @instance
                         */
                        DocumentReference.prototype.documentName = "";
    
                        /**
                         * DocumentReference displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @instance
                         */
                        DocumentReference.prototype.displayName = "";
    
                        /**
                         * DocumentReference snippet.
                         * @member {string} snippet
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @instance
                         */
                        DocumentReference.prototype.snippet = "";
    
                        /**
                         * DocumentReference documentIsFolder.
                         * @member {boolean} documentIsFolder
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @instance
                         */
                        DocumentReference.prototype.documentIsFolder = false;
    
                        /**
                         * DocumentReference updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @instance
                         */
                        DocumentReference.prototype.updateTime = null;
    
                        /**
                         * DocumentReference createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @instance
                         */
                        DocumentReference.prototype.createTime = null;
    
                        /**
                         * DocumentReference deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @instance
                         */
                        DocumentReference.prototype.deleteTime = null;
    
                        /**
                         * Creates a new DocumentReference instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDocumentReference=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.DocumentReference} DocumentReference instance
                         */
                        DocumentReference.create = function create(properties) {
                            return new DocumentReference(properties);
                        };
    
                        /**
                         * Encodes the specified DocumentReference message. Does not implicitly {@link google.cloud.contentwarehouse.v1.DocumentReference.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDocumentReference} message DocumentReference message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentReference.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.documentName != null && Object.hasOwnProperty.call(message, "documentName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.documentName);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                            if (message.snippet != null && Object.hasOwnProperty.call(message, "snippet"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.snippet);
                            if (message.documentIsFolder != null && Object.hasOwnProperty.call(message, "documentIsFolder"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.documentIsFolder);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DocumentReference message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.DocumentReference.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDocumentReference} message DocumentReference message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentReference.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DocumentReference message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.DocumentReference} DocumentReference
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentReference.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.DocumentReference();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.documentName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.snippet = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.documentIsFolder = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DocumentReference message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.DocumentReference} DocumentReference
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentReference.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DocumentReference message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DocumentReference.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.documentName != null && message.hasOwnProperty("documentName"))
                                if (!$util.isString(message.documentName))
                                    return "documentName: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.snippet != null && message.hasOwnProperty("snippet"))
                                if (!$util.isString(message.snippet))
                                    return "snippet: string expected";
                            if (message.documentIsFolder != null && message.hasOwnProperty("documentIsFolder"))
                                if (typeof message.documentIsFolder !== "boolean")
                                    return "documentIsFolder: boolean expected";
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DocumentReference message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.DocumentReference} DocumentReference
                         */
                        DocumentReference.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.DocumentReference)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.DocumentReference();
                            if (object.documentName != null)
                                message.documentName = String(object.documentName);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.snippet != null)
                                message.snippet = String(object.snippet);
                            if (object.documentIsFolder != null)
                                message.documentIsFolder = Boolean(object.documentIsFolder);
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentReference.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentReference.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentReference.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DocumentReference message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.DocumentReference} message DocumentReference
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DocumentReference.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.documentName = "";
                                object.displayName = "";
                                object.snippet = "";
                                object.documentIsFolder = false;
                                object.updateTime = null;
                                object.createTime = null;
                                object.deleteTime = null;
                            }
                            if (message.documentName != null && message.hasOwnProperty("documentName"))
                                object.documentName = message.documentName;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.snippet != null && message.hasOwnProperty("snippet"))
                                object.snippet = message.snippet;
                            if (message.documentIsFolder != null && message.hasOwnProperty("documentIsFolder"))
                                object.documentIsFolder = message.documentIsFolder;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this DocumentReference to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DocumentReference.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DocumentReference
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.DocumentReference
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DocumentReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.DocumentReference";
                        };
    
                        return DocumentReference;
                    })();
    
                    v1.Property = (function() {
    
                        /**
                         * Properties of a Property.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IProperty
                         * @property {string|null} [name] Property name
                         * @property {google.cloud.contentwarehouse.v1.IIntegerArray|null} [integerValues] Property integerValues
                         * @property {google.cloud.contentwarehouse.v1.IFloatArray|null} [floatValues] Property floatValues
                         * @property {google.cloud.contentwarehouse.v1.ITextArray|null} [textValues] Property textValues
                         * @property {google.cloud.contentwarehouse.v1.IEnumArray|null} [enumValues] Property enumValues
                         * @property {google.cloud.contentwarehouse.v1.IPropertyArray|null} [propertyValues] Property propertyValues
                         * @property {google.cloud.contentwarehouse.v1.IDateTimeArray|null} [dateTimeValues] Property dateTimeValues
                         * @property {google.cloud.contentwarehouse.v1.IMapProperty|null} [mapProperty] Property mapProperty
                         * @property {google.cloud.contentwarehouse.v1.ITimestampArray|null} [timestampValues] Property timestampValues
                         */
    
                        /**
                         * Constructs a new Property.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a Property.
                         * @implements IProperty
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IProperty=} [properties] Properties to set
                         */
                        function Property(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Property name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @instance
                         */
                        Property.prototype.name = "";
    
                        /**
                         * Property integerValues.
                         * @member {google.cloud.contentwarehouse.v1.IIntegerArray|null|undefined} integerValues
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @instance
                         */
                        Property.prototype.integerValues = null;
    
                        /**
                         * Property floatValues.
                         * @member {google.cloud.contentwarehouse.v1.IFloatArray|null|undefined} floatValues
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @instance
                         */
                        Property.prototype.floatValues = null;
    
                        /**
                         * Property textValues.
                         * @member {google.cloud.contentwarehouse.v1.ITextArray|null|undefined} textValues
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @instance
                         */
                        Property.prototype.textValues = null;
    
                        /**
                         * Property enumValues.
                         * @member {google.cloud.contentwarehouse.v1.IEnumArray|null|undefined} enumValues
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @instance
                         */
                        Property.prototype.enumValues = null;
    
                        /**
                         * Property propertyValues.
                         * @member {google.cloud.contentwarehouse.v1.IPropertyArray|null|undefined} propertyValues
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @instance
                         */
                        Property.prototype.propertyValues = null;
    
                        /**
                         * Property dateTimeValues.
                         * @member {google.cloud.contentwarehouse.v1.IDateTimeArray|null|undefined} dateTimeValues
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @instance
                         */
                        Property.prototype.dateTimeValues = null;
    
                        /**
                         * Property mapProperty.
                         * @member {google.cloud.contentwarehouse.v1.IMapProperty|null|undefined} mapProperty
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @instance
                         */
                        Property.prototype.mapProperty = null;
    
                        /**
                         * Property timestampValues.
                         * @member {google.cloud.contentwarehouse.v1.ITimestampArray|null|undefined} timestampValues
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @instance
                         */
                        Property.prototype.timestampValues = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Property values.
                         * @member {"integerValues"|"floatValues"|"textValues"|"enumValues"|"propertyValues"|"dateTimeValues"|"mapProperty"|"timestampValues"|undefined} values
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @instance
                         */
                        Object.defineProperty(Property.prototype, "values", {
                            get: $util.oneOfGetter($oneOfFields = ["integerValues", "floatValues", "textValues", "enumValues", "propertyValues", "dateTimeValues", "mapProperty", "timestampValues"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Property instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IProperty=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.Property} Property instance
                         */
                        Property.create = function create(properties) {
                            return new Property(properties);
                        };
    
                        /**
                         * Encodes the specified Property message. Does not implicitly {@link google.cloud.contentwarehouse.v1.Property.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IProperty} message Property message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Property.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.integerValues != null && Object.hasOwnProperty.call(message, "integerValues"))
                                $root.google.cloud.contentwarehouse.v1.IntegerArray.encode(message.integerValues, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.floatValues != null && Object.hasOwnProperty.call(message, "floatValues"))
                                $root.google.cloud.contentwarehouse.v1.FloatArray.encode(message.floatValues, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.textValues != null && Object.hasOwnProperty.call(message, "textValues"))
                                $root.google.cloud.contentwarehouse.v1.TextArray.encode(message.textValues, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.enumValues != null && Object.hasOwnProperty.call(message, "enumValues"))
                                $root.google.cloud.contentwarehouse.v1.EnumArray.encode(message.enumValues, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.propertyValues != null && Object.hasOwnProperty.call(message, "propertyValues"))
                                $root.google.cloud.contentwarehouse.v1.PropertyArray.encode(message.propertyValues, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.dateTimeValues != null && Object.hasOwnProperty.call(message, "dateTimeValues"))
                                $root.google.cloud.contentwarehouse.v1.DateTimeArray.encode(message.dateTimeValues, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.mapProperty != null && Object.hasOwnProperty.call(message, "mapProperty"))
                                $root.google.cloud.contentwarehouse.v1.MapProperty.encode(message.mapProperty, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.timestampValues != null && Object.hasOwnProperty.call(message, "timestampValues"))
                                $root.google.cloud.contentwarehouse.v1.TimestampArray.encode(message.timestampValues, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Property message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.Property.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IProperty} message Property message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Property.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Property message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.Property} Property
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Property.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.Property();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.integerValues = $root.google.cloud.contentwarehouse.v1.IntegerArray.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.floatValues = $root.google.cloud.contentwarehouse.v1.FloatArray.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.textValues = $root.google.cloud.contentwarehouse.v1.TextArray.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.enumValues = $root.google.cloud.contentwarehouse.v1.EnumArray.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.propertyValues = $root.google.cloud.contentwarehouse.v1.PropertyArray.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.dateTimeValues = $root.google.cloud.contentwarehouse.v1.DateTimeArray.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.mapProperty = $root.google.cloud.contentwarehouse.v1.MapProperty.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.timestampValues = $root.google.cloud.contentwarehouse.v1.TimestampArray.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Property message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.Property} Property
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Property.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Property message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Property.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.integerValues != null && message.hasOwnProperty("integerValues")) {
                                properties.values = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.IntegerArray.verify(message.integerValues);
                                    if (error)
                                        return "integerValues." + error;
                                }
                            }
                            if (message.floatValues != null && message.hasOwnProperty("floatValues")) {
                                if (properties.values === 1)
                                    return "values: multiple values";
                                properties.values = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.FloatArray.verify(message.floatValues);
                                    if (error)
                                        return "floatValues." + error;
                                }
                            }
                            if (message.textValues != null && message.hasOwnProperty("textValues")) {
                                if (properties.values === 1)
                                    return "values: multiple values";
                                properties.values = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.TextArray.verify(message.textValues);
                                    if (error)
                                        return "textValues." + error;
                                }
                            }
                            if (message.enumValues != null && message.hasOwnProperty("enumValues")) {
                                if (properties.values === 1)
                                    return "values: multiple values";
                                properties.values = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.EnumArray.verify(message.enumValues);
                                    if (error)
                                        return "enumValues." + error;
                                }
                            }
                            if (message.propertyValues != null && message.hasOwnProperty("propertyValues")) {
                                if (properties.values === 1)
                                    return "values: multiple values";
                                properties.values = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.PropertyArray.verify(message.propertyValues);
                                    if (error)
                                        return "propertyValues." + error;
                                }
                            }
                            if (message.dateTimeValues != null && message.hasOwnProperty("dateTimeValues")) {
                                if (properties.values === 1)
                                    return "values: multiple values";
                                properties.values = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.DateTimeArray.verify(message.dateTimeValues);
                                    if (error)
                                        return "dateTimeValues." + error;
                                }
                            }
                            if (message.mapProperty != null && message.hasOwnProperty("mapProperty")) {
                                if (properties.values === 1)
                                    return "values: multiple values";
                                properties.values = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.MapProperty.verify(message.mapProperty);
                                    if (error)
                                        return "mapProperty." + error;
                                }
                            }
                            if (message.timestampValues != null && message.hasOwnProperty("timestampValues")) {
                                if (properties.values === 1)
                                    return "values: multiple values";
                                properties.values = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.TimestampArray.verify(message.timestampValues);
                                    if (error)
                                        return "timestampValues." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Property message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.Property} Property
                         */
                        Property.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.Property)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.Property();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.integerValues != null) {
                                if (typeof object.integerValues !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Property.integerValues: object expected");
                                message.integerValues = $root.google.cloud.contentwarehouse.v1.IntegerArray.fromObject(object.integerValues);
                            }
                            if (object.floatValues != null) {
                                if (typeof object.floatValues !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Property.floatValues: object expected");
                                message.floatValues = $root.google.cloud.contentwarehouse.v1.FloatArray.fromObject(object.floatValues);
                            }
                            if (object.textValues != null) {
                                if (typeof object.textValues !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Property.textValues: object expected");
                                message.textValues = $root.google.cloud.contentwarehouse.v1.TextArray.fromObject(object.textValues);
                            }
                            if (object.enumValues != null) {
                                if (typeof object.enumValues !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Property.enumValues: object expected");
                                message.enumValues = $root.google.cloud.contentwarehouse.v1.EnumArray.fromObject(object.enumValues);
                            }
                            if (object.propertyValues != null) {
                                if (typeof object.propertyValues !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Property.propertyValues: object expected");
                                message.propertyValues = $root.google.cloud.contentwarehouse.v1.PropertyArray.fromObject(object.propertyValues);
                            }
                            if (object.dateTimeValues != null) {
                                if (typeof object.dateTimeValues !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Property.dateTimeValues: object expected");
                                message.dateTimeValues = $root.google.cloud.contentwarehouse.v1.DateTimeArray.fromObject(object.dateTimeValues);
                            }
                            if (object.mapProperty != null) {
                                if (typeof object.mapProperty !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Property.mapProperty: object expected");
                                message.mapProperty = $root.google.cloud.contentwarehouse.v1.MapProperty.fromObject(object.mapProperty);
                            }
                            if (object.timestampValues != null) {
                                if (typeof object.timestampValues !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Property.timestampValues: object expected");
                                message.timestampValues = $root.google.cloud.contentwarehouse.v1.TimestampArray.fromObject(object.timestampValues);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Property message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.Property} message Property
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Property.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.integerValues != null && message.hasOwnProperty("integerValues")) {
                                object.integerValues = $root.google.cloud.contentwarehouse.v1.IntegerArray.toObject(message.integerValues, options);
                                if (options.oneofs)
                                    object.values = "integerValues";
                            }
                            if (message.floatValues != null && message.hasOwnProperty("floatValues")) {
                                object.floatValues = $root.google.cloud.contentwarehouse.v1.FloatArray.toObject(message.floatValues, options);
                                if (options.oneofs)
                                    object.values = "floatValues";
                            }
                            if (message.textValues != null && message.hasOwnProperty("textValues")) {
                                object.textValues = $root.google.cloud.contentwarehouse.v1.TextArray.toObject(message.textValues, options);
                                if (options.oneofs)
                                    object.values = "textValues";
                            }
                            if (message.enumValues != null && message.hasOwnProperty("enumValues")) {
                                object.enumValues = $root.google.cloud.contentwarehouse.v1.EnumArray.toObject(message.enumValues, options);
                                if (options.oneofs)
                                    object.values = "enumValues";
                            }
                            if (message.propertyValues != null && message.hasOwnProperty("propertyValues")) {
                                object.propertyValues = $root.google.cloud.contentwarehouse.v1.PropertyArray.toObject(message.propertyValues, options);
                                if (options.oneofs)
                                    object.values = "propertyValues";
                            }
                            if (message.dateTimeValues != null && message.hasOwnProperty("dateTimeValues")) {
                                object.dateTimeValues = $root.google.cloud.contentwarehouse.v1.DateTimeArray.toObject(message.dateTimeValues, options);
                                if (options.oneofs)
                                    object.values = "dateTimeValues";
                            }
                            if (message.mapProperty != null && message.hasOwnProperty("mapProperty")) {
                                object.mapProperty = $root.google.cloud.contentwarehouse.v1.MapProperty.toObject(message.mapProperty, options);
                                if (options.oneofs)
                                    object.values = "mapProperty";
                            }
                            if (message.timestampValues != null && message.hasOwnProperty("timestampValues")) {
                                object.timestampValues = $root.google.cloud.contentwarehouse.v1.TimestampArray.toObject(message.timestampValues, options);
                                if (options.oneofs)
                                    object.values = "timestampValues";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Property to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Property.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Property
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.Property
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Property.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.Property";
                        };
    
                        return Property;
                    })();
    
                    v1.IntegerArray = (function() {
    
                        /**
                         * Properties of an IntegerArray.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IIntegerArray
                         * @property {Array.<number>|null} [values] IntegerArray values
                         */
    
                        /**
                         * Constructs a new IntegerArray.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an IntegerArray.
                         * @implements IIntegerArray
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IIntegerArray=} [properties] Properties to set
                         */
                        function IntegerArray(properties) {
                            this.values = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * IntegerArray values.
                         * @member {Array.<number>} values
                         * @memberof google.cloud.contentwarehouse.v1.IntegerArray
                         * @instance
                         */
                        IntegerArray.prototype.values = $util.emptyArray;
    
                        /**
                         * Creates a new IntegerArray instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.IntegerArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IIntegerArray=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.IntegerArray} IntegerArray instance
                         */
                        IntegerArray.create = function create(properties) {
                            return new IntegerArray(properties);
                        };
    
                        /**
                         * Encodes the specified IntegerArray message. Does not implicitly {@link google.cloud.contentwarehouse.v1.IntegerArray.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.IntegerArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IIntegerArray} message IntegerArray message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IntegerArray.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.values != null && message.values.length) {
                                writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                for (var i = 0; i < message.values.length; ++i)
                                    writer.int32(message.values[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified IntegerArray message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.IntegerArray.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.IntegerArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IIntegerArray} message IntegerArray message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IntegerArray.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an IntegerArray message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.IntegerArray
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.IntegerArray} IntegerArray
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IntegerArray.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.IntegerArray();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.values && message.values.length))
                                            message.values = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.values.push(reader.int32());
                                        } else
                                            message.values.push(reader.int32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an IntegerArray message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.IntegerArray
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.IntegerArray} IntegerArray
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IntegerArray.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an IntegerArray message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.IntegerArray
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        IntegerArray.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (!Array.isArray(message.values))
                                    return "values: array expected";
                                for (var i = 0; i < message.values.length; ++i)
                                    if (!$util.isInteger(message.values[i]))
                                        return "values: integer[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an IntegerArray message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.IntegerArray
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.IntegerArray} IntegerArray
                         */
                        IntegerArray.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.IntegerArray)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.IntegerArray();
                            if (object.values) {
                                if (!Array.isArray(object.values))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.IntegerArray.values: array expected");
                                message.values = [];
                                for (var i = 0; i < object.values.length; ++i)
                                    message.values[i] = object.values[i] | 0;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an IntegerArray message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.IntegerArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IntegerArray} message IntegerArray
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        IntegerArray.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.values = [];
                            if (message.values && message.values.length) {
                                object.values = [];
                                for (var j = 0; j < message.values.length; ++j)
                                    object.values[j] = message.values[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this IntegerArray to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.IntegerArray
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        IntegerArray.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for IntegerArray
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.IntegerArray
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        IntegerArray.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.IntegerArray";
                        };
    
                        return IntegerArray;
                    })();
    
                    v1.FloatArray = (function() {
    
                        /**
                         * Properties of a FloatArray.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IFloatArray
                         * @property {Array.<number>|null} [values] FloatArray values
                         */
    
                        /**
                         * Constructs a new FloatArray.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a FloatArray.
                         * @implements IFloatArray
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IFloatArray=} [properties] Properties to set
                         */
                        function FloatArray(properties) {
                            this.values = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FloatArray values.
                         * @member {Array.<number>} values
                         * @memberof google.cloud.contentwarehouse.v1.FloatArray
                         * @instance
                         */
                        FloatArray.prototype.values = $util.emptyArray;
    
                        /**
                         * Creates a new FloatArray instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.FloatArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IFloatArray=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.FloatArray} FloatArray instance
                         */
                        FloatArray.create = function create(properties) {
                            return new FloatArray(properties);
                        };
    
                        /**
                         * Encodes the specified FloatArray message. Does not implicitly {@link google.cloud.contentwarehouse.v1.FloatArray.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.FloatArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IFloatArray} message FloatArray message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FloatArray.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.values != null && message.values.length) {
                                writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                for (var i = 0; i < message.values.length; ++i)
                                    writer.float(message.values[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FloatArray message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.FloatArray.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.FloatArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IFloatArray} message FloatArray message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FloatArray.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FloatArray message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.FloatArray
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.FloatArray} FloatArray
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FloatArray.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.FloatArray();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.values && message.values.length))
                                            message.values = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.values.push(reader.float());
                                        } else
                                            message.values.push(reader.float());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FloatArray message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.FloatArray
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.FloatArray} FloatArray
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FloatArray.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FloatArray message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.FloatArray
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FloatArray.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (!Array.isArray(message.values))
                                    return "values: array expected";
                                for (var i = 0; i < message.values.length; ++i)
                                    if (typeof message.values[i] !== "number")
                                        return "values: number[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FloatArray message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.FloatArray
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.FloatArray} FloatArray
                         */
                        FloatArray.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.FloatArray)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.FloatArray();
                            if (object.values) {
                                if (!Array.isArray(object.values))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.FloatArray.values: array expected");
                                message.values = [];
                                for (var i = 0; i < object.values.length; ++i)
                                    message.values[i] = Number(object.values[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FloatArray message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.FloatArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.FloatArray} message FloatArray
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FloatArray.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.values = [];
                            if (message.values && message.values.length) {
                                object.values = [];
                                for (var j = 0; j < message.values.length; ++j)
                                    object.values[j] = options.json && !isFinite(message.values[j]) ? String(message.values[j]) : message.values[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FloatArray to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.FloatArray
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FloatArray.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FloatArray
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.FloatArray
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FloatArray.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.FloatArray";
                        };
    
                        return FloatArray;
                    })();
    
                    v1.TextArray = (function() {
    
                        /**
                         * Properties of a TextArray.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ITextArray
                         * @property {Array.<string>|null} [values] TextArray values
                         */
    
                        /**
                         * Constructs a new TextArray.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a TextArray.
                         * @implements ITextArray
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ITextArray=} [properties] Properties to set
                         */
                        function TextArray(properties) {
                            this.values = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TextArray values.
                         * @member {Array.<string>} values
                         * @memberof google.cloud.contentwarehouse.v1.TextArray
                         * @instance
                         */
                        TextArray.prototype.values = $util.emptyArray;
    
                        /**
                         * Creates a new TextArray instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.TextArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITextArray=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.TextArray} TextArray instance
                         */
                        TextArray.create = function create(properties) {
                            return new TextArray(properties);
                        };
    
                        /**
                         * Encodes the specified TextArray message. Does not implicitly {@link google.cloud.contentwarehouse.v1.TextArray.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.TextArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITextArray} message TextArray message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TextArray.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.values != null && message.values.length)
                                for (var i = 0; i < message.values.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.values[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TextArray message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.TextArray.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.TextArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITextArray} message TextArray message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TextArray.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TextArray message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.TextArray
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.TextArray} TextArray
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TextArray.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.TextArray();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.values && message.values.length))
                                            message.values = [];
                                        message.values.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TextArray message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.TextArray
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.TextArray} TextArray
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TextArray.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TextArray message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.TextArray
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TextArray.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (!Array.isArray(message.values))
                                    return "values: array expected";
                                for (var i = 0; i < message.values.length; ++i)
                                    if (!$util.isString(message.values[i]))
                                        return "values: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TextArray message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.TextArray
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.TextArray} TextArray
                         */
                        TextArray.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.TextArray)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.TextArray();
                            if (object.values) {
                                if (!Array.isArray(object.values))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.TextArray.values: array expected");
                                message.values = [];
                                for (var i = 0; i < object.values.length; ++i)
                                    message.values[i] = String(object.values[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TextArray message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.TextArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.TextArray} message TextArray
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TextArray.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.values = [];
                            if (message.values && message.values.length) {
                                object.values = [];
                                for (var j = 0; j < message.values.length; ++j)
                                    object.values[j] = message.values[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this TextArray to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.TextArray
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TextArray.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TextArray
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.TextArray
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TextArray.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.TextArray";
                        };
    
                        return TextArray;
                    })();
    
                    v1.EnumArray = (function() {
    
                        /**
                         * Properties of an EnumArray.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IEnumArray
                         * @property {Array.<string>|null} [values] EnumArray values
                         */
    
                        /**
                         * Constructs a new EnumArray.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an EnumArray.
                         * @implements IEnumArray
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IEnumArray=} [properties] Properties to set
                         */
                        function EnumArray(properties) {
                            this.values = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EnumArray values.
                         * @member {Array.<string>} values
                         * @memberof google.cloud.contentwarehouse.v1.EnumArray
                         * @instance
                         */
                        EnumArray.prototype.values = $util.emptyArray;
    
                        /**
                         * Creates a new EnumArray instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.EnumArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IEnumArray=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.EnumArray} EnumArray instance
                         */
                        EnumArray.create = function create(properties) {
                            return new EnumArray(properties);
                        };
    
                        /**
                         * Encodes the specified EnumArray message. Does not implicitly {@link google.cloud.contentwarehouse.v1.EnumArray.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.EnumArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IEnumArray} message EnumArray message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnumArray.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.values != null && message.values.length)
                                for (var i = 0; i < message.values.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.values[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EnumArray message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.EnumArray.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.EnumArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IEnumArray} message EnumArray message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnumArray.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EnumArray message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.EnumArray
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.EnumArray} EnumArray
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnumArray.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.EnumArray();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.values && message.values.length))
                                            message.values = [];
                                        message.values.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EnumArray message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.EnumArray
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.EnumArray} EnumArray
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnumArray.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EnumArray message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.EnumArray
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EnumArray.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (!Array.isArray(message.values))
                                    return "values: array expected";
                                for (var i = 0; i < message.values.length; ++i)
                                    if (!$util.isString(message.values[i]))
                                        return "values: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EnumArray message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.EnumArray
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.EnumArray} EnumArray
                         */
                        EnumArray.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.EnumArray)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.EnumArray();
                            if (object.values) {
                                if (!Array.isArray(object.values))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.EnumArray.values: array expected");
                                message.values = [];
                                for (var i = 0; i < object.values.length; ++i)
                                    message.values[i] = String(object.values[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EnumArray message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.EnumArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.EnumArray} message EnumArray
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EnumArray.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.values = [];
                            if (message.values && message.values.length) {
                                object.values = [];
                                for (var j = 0; j < message.values.length; ++j)
                                    object.values[j] = message.values[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this EnumArray to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.EnumArray
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EnumArray.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EnumArray
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.EnumArray
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EnumArray.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.EnumArray";
                        };
    
                        return EnumArray;
                    })();
    
                    v1.DateTimeArray = (function() {
    
                        /**
                         * Properties of a DateTimeArray.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IDateTimeArray
                         * @property {Array.<google.type.IDateTime>|null} [values] DateTimeArray values
                         */
    
                        /**
                         * Constructs a new DateTimeArray.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DateTimeArray.
                         * @implements IDateTimeArray
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IDateTimeArray=} [properties] Properties to set
                         */
                        function DateTimeArray(properties) {
                            this.values = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DateTimeArray values.
                         * @member {Array.<google.type.IDateTime>} values
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeArray
                         * @instance
                         */
                        DateTimeArray.prototype.values = $util.emptyArray;
    
                        /**
                         * Creates a new DateTimeArray instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDateTimeArray=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.DateTimeArray} DateTimeArray instance
                         */
                        DateTimeArray.create = function create(properties) {
                            return new DateTimeArray(properties);
                        };
    
                        /**
                         * Encodes the specified DateTimeArray message. Does not implicitly {@link google.cloud.contentwarehouse.v1.DateTimeArray.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDateTimeArray} message DateTimeArray message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DateTimeArray.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.values != null && message.values.length)
                                for (var i = 0; i < message.values.length; ++i)
                                    $root.google.type.DateTime.encode(message.values[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DateTimeArray message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.DateTimeArray.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDateTimeArray} message DateTimeArray message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DateTimeArray.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DateTimeArray message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeArray
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.DateTimeArray} DateTimeArray
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DateTimeArray.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.DateTimeArray();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.values && message.values.length))
                                            message.values = [];
                                        message.values.push($root.google.type.DateTime.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DateTimeArray message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeArray
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.DateTimeArray} DateTimeArray
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DateTimeArray.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DateTimeArray message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeArray
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DateTimeArray.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (!Array.isArray(message.values))
                                    return "values: array expected";
                                for (var i = 0; i < message.values.length; ++i) {
                                    var error = $root.google.type.DateTime.verify(message.values[i]);
                                    if (error)
                                        return "values." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DateTimeArray message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeArray
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.DateTimeArray} DateTimeArray
                         */
                        DateTimeArray.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.DateTimeArray)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.DateTimeArray();
                            if (object.values) {
                                if (!Array.isArray(object.values))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DateTimeArray.values: array expected");
                                message.values = [];
                                for (var i = 0; i < object.values.length; ++i) {
                                    if (typeof object.values[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.DateTimeArray.values: object expected");
                                    message.values[i] = $root.google.type.DateTime.fromObject(object.values[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DateTimeArray message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.DateTimeArray} message DateTimeArray
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DateTimeArray.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.values = [];
                            if (message.values && message.values.length) {
                                object.values = [];
                                for (var j = 0; j < message.values.length; ++j)
                                    object.values[j] = $root.google.type.DateTime.toObject(message.values[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DateTimeArray to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeArray
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DateTimeArray.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DateTimeArray
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeArray
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DateTimeArray.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.DateTimeArray";
                        };
    
                        return DateTimeArray;
                    })();
    
                    v1.TimestampArray = (function() {
    
                        /**
                         * Properties of a TimestampArray.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ITimestampArray
                         * @property {Array.<google.cloud.contentwarehouse.v1.ITimestampValue>|null} [values] TimestampArray values
                         */
    
                        /**
                         * Constructs a new TimestampArray.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a TimestampArray.
                         * @implements ITimestampArray
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ITimestampArray=} [properties] Properties to set
                         */
                        function TimestampArray(properties) {
                            this.values = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TimestampArray values.
                         * @member {Array.<google.cloud.contentwarehouse.v1.ITimestampValue>} values
                         * @memberof google.cloud.contentwarehouse.v1.TimestampArray
                         * @instance
                         */
                        TimestampArray.prototype.values = $util.emptyArray;
    
                        /**
                         * Creates a new TimestampArray instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.TimestampArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITimestampArray=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.TimestampArray} TimestampArray instance
                         */
                        TimestampArray.create = function create(properties) {
                            return new TimestampArray(properties);
                        };
    
                        /**
                         * Encodes the specified TimestampArray message. Does not implicitly {@link google.cloud.contentwarehouse.v1.TimestampArray.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.TimestampArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITimestampArray} message TimestampArray message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TimestampArray.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.values != null && message.values.length)
                                for (var i = 0; i < message.values.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.TimestampValue.encode(message.values[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TimestampArray message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.TimestampArray.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.TimestampArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITimestampArray} message TimestampArray message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TimestampArray.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TimestampArray message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.TimestampArray
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.TimestampArray} TimestampArray
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TimestampArray.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.TimestampArray();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.values && message.values.length))
                                            message.values = [];
                                        message.values.push($root.google.cloud.contentwarehouse.v1.TimestampValue.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TimestampArray message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.TimestampArray
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.TimestampArray} TimestampArray
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TimestampArray.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TimestampArray message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.TimestampArray
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TimestampArray.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (!Array.isArray(message.values))
                                    return "values: array expected";
                                for (var i = 0; i < message.values.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.TimestampValue.verify(message.values[i]);
                                    if (error)
                                        return "values." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TimestampArray message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.TimestampArray
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.TimestampArray} TimestampArray
                         */
                        TimestampArray.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.TimestampArray)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.TimestampArray();
                            if (object.values) {
                                if (!Array.isArray(object.values))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.TimestampArray.values: array expected");
                                message.values = [];
                                for (var i = 0; i < object.values.length; ++i) {
                                    if (typeof object.values[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.TimestampArray.values: object expected");
                                    message.values[i] = $root.google.cloud.contentwarehouse.v1.TimestampValue.fromObject(object.values[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TimestampArray message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.TimestampArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.TimestampArray} message TimestampArray
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TimestampArray.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.values = [];
                            if (message.values && message.values.length) {
                                object.values = [];
                                for (var j = 0; j < message.values.length; ++j)
                                    object.values[j] = $root.google.cloud.contentwarehouse.v1.TimestampValue.toObject(message.values[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this TimestampArray to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.TimestampArray
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TimestampArray.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TimestampArray
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.TimestampArray
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TimestampArray.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.TimestampArray";
                        };
    
                        return TimestampArray;
                    })();
    
                    v1.TimestampValue = (function() {
    
                        /**
                         * Properties of a TimestampValue.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ITimestampValue
                         * @property {google.protobuf.ITimestamp|null} [timestampValue] TimestampValue timestampValue
                         * @property {string|null} [textValue] TimestampValue textValue
                         */
    
                        /**
                         * Constructs a new TimestampValue.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a TimestampValue.
                         * @implements ITimestampValue
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ITimestampValue=} [properties] Properties to set
                         */
                        function TimestampValue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TimestampValue timestampValue.
                         * @member {google.protobuf.ITimestamp|null|undefined} timestampValue
                         * @memberof google.cloud.contentwarehouse.v1.TimestampValue
                         * @instance
                         */
                        TimestampValue.prototype.timestampValue = null;
    
                        /**
                         * TimestampValue textValue.
                         * @member {string|null|undefined} textValue
                         * @memberof google.cloud.contentwarehouse.v1.TimestampValue
                         * @instance
                         */
                        TimestampValue.prototype.textValue = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * TimestampValue value.
                         * @member {"timestampValue"|"textValue"|undefined} value
                         * @memberof google.cloud.contentwarehouse.v1.TimestampValue
                         * @instance
                         */
                        Object.defineProperty(TimestampValue.prototype, "value", {
                            get: $util.oneOfGetter($oneOfFields = ["timestampValue", "textValue"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new TimestampValue instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.TimestampValue
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITimestampValue=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.TimestampValue} TimestampValue instance
                         */
                        TimestampValue.create = function create(properties) {
                            return new TimestampValue(properties);
                        };
    
                        /**
                         * Encodes the specified TimestampValue message. Does not implicitly {@link google.cloud.contentwarehouse.v1.TimestampValue.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.TimestampValue
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITimestampValue} message TimestampValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TimestampValue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.timestampValue != null && Object.hasOwnProperty.call(message, "timestampValue"))
                                $root.google.protobuf.Timestamp.encode(message.timestampValue, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.textValue != null && Object.hasOwnProperty.call(message, "textValue"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.textValue);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TimestampValue message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.TimestampValue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.TimestampValue
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITimestampValue} message TimestampValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TimestampValue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TimestampValue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.TimestampValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.TimestampValue} TimestampValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TimestampValue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.TimestampValue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.timestampValue = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.textValue = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TimestampValue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.TimestampValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.TimestampValue} TimestampValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TimestampValue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TimestampValue message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.TimestampValue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TimestampValue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.timestampValue != null && message.hasOwnProperty("timestampValue")) {
                                properties.value = 1;
                                {
                                    var error = $root.google.protobuf.Timestamp.verify(message.timestampValue);
                                    if (error)
                                        return "timestampValue." + error;
                                }
                            }
                            if (message.textValue != null && message.hasOwnProperty("textValue")) {
                                if (properties.value === 1)
                                    return "value: multiple values";
                                properties.value = 1;
                                if (!$util.isString(message.textValue))
                                    return "textValue: string expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TimestampValue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.TimestampValue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.TimestampValue} TimestampValue
                         */
                        TimestampValue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.TimestampValue)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.TimestampValue();
                            if (object.timestampValue != null) {
                                if (typeof object.timestampValue !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.TimestampValue.timestampValue: object expected");
                                message.timestampValue = $root.google.protobuf.Timestamp.fromObject(object.timestampValue);
                            }
                            if (object.textValue != null)
                                message.textValue = String(object.textValue);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TimestampValue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.TimestampValue
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.TimestampValue} message TimestampValue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TimestampValue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.timestampValue != null && message.hasOwnProperty("timestampValue")) {
                                object.timestampValue = $root.google.protobuf.Timestamp.toObject(message.timestampValue, options);
                                if (options.oneofs)
                                    object.value = "timestampValue";
                            }
                            if (message.textValue != null && message.hasOwnProperty("textValue")) {
                                object.textValue = message.textValue;
                                if (options.oneofs)
                                    object.value = "textValue";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this TimestampValue to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.TimestampValue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TimestampValue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TimestampValue
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.TimestampValue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TimestampValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.TimestampValue";
                        };
    
                        return TimestampValue;
                    })();
    
                    v1.PropertyArray = (function() {
    
                        /**
                         * Properties of a PropertyArray.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IPropertyArray
                         * @property {Array.<google.cloud.contentwarehouse.v1.IProperty>|null} [properties] PropertyArray properties
                         */
    
                        /**
                         * Constructs a new PropertyArray.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a PropertyArray.
                         * @implements IPropertyArray
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IPropertyArray=} [properties] Properties to set
                         */
                        function PropertyArray(properties) {
                            this.properties = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PropertyArray properties.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IProperty>} properties
                         * @memberof google.cloud.contentwarehouse.v1.PropertyArray
                         * @instance
                         */
                        PropertyArray.prototype.properties = $util.emptyArray;
    
                        /**
                         * Creates a new PropertyArray instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.PropertyArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IPropertyArray=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.PropertyArray} PropertyArray instance
                         */
                        PropertyArray.create = function create(properties) {
                            return new PropertyArray(properties);
                        };
    
                        /**
                         * Encodes the specified PropertyArray message. Does not implicitly {@link google.cloud.contentwarehouse.v1.PropertyArray.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.PropertyArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IPropertyArray} message PropertyArray message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PropertyArray.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.properties != null && message.properties.length)
                                for (var i = 0; i < message.properties.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.Property.encode(message.properties[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PropertyArray message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.PropertyArray.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.PropertyArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IPropertyArray} message PropertyArray message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PropertyArray.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PropertyArray message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.PropertyArray
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.PropertyArray} PropertyArray
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PropertyArray.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.PropertyArray();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.properties && message.properties.length))
                                            message.properties = [];
                                        message.properties.push($root.google.cloud.contentwarehouse.v1.Property.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PropertyArray message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.PropertyArray
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.PropertyArray} PropertyArray
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PropertyArray.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PropertyArray message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.PropertyArray
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PropertyArray.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.properties != null && message.hasOwnProperty("properties")) {
                                if (!Array.isArray(message.properties))
                                    return "properties: array expected";
                                for (var i = 0; i < message.properties.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.Property.verify(message.properties[i]);
                                    if (error)
                                        return "properties." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PropertyArray message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.PropertyArray
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.PropertyArray} PropertyArray
                         */
                        PropertyArray.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.PropertyArray)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.PropertyArray();
                            if (object.properties) {
                                if (!Array.isArray(object.properties))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.PropertyArray.properties: array expected");
                                message.properties = [];
                                for (var i = 0; i < object.properties.length; ++i) {
                                    if (typeof object.properties[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.PropertyArray.properties: object expected");
                                    message.properties[i] = $root.google.cloud.contentwarehouse.v1.Property.fromObject(object.properties[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PropertyArray message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.PropertyArray
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.PropertyArray} message PropertyArray
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PropertyArray.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.properties = [];
                            if (message.properties && message.properties.length) {
                                object.properties = [];
                                for (var j = 0; j < message.properties.length; ++j)
                                    object.properties[j] = $root.google.cloud.contentwarehouse.v1.Property.toObject(message.properties[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PropertyArray to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.PropertyArray
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PropertyArray.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PropertyArray
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.PropertyArray
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PropertyArray.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.PropertyArray";
                        };
    
                        return PropertyArray;
                    })();
    
                    v1.MapProperty = (function() {
    
                        /**
                         * Properties of a MapProperty.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IMapProperty
                         * @property {Object.<string,google.cloud.contentwarehouse.v1.IValue>|null} [fields] MapProperty fields
                         */
    
                        /**
                         * Constructs a new MapProperty.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a MapProperty.
                         * @implements IMapProperty
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IMapProperty=} [properties] Properties to set
                         */
                        function MapProperty(properties) {
                            this.fields = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MapProperty fields.
                         * @member {Object.<string,google.cloud.contentwarehouse.v1.IValue>} fields
                         * @memberof google.cloud.contentwarehouse.v1.MapProperty
                         * @instance
                         */
                        MapProperty.prototype.fields = $util.emptyObject;
    
                        /**
                         * Creates a new MapProperty instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.MapProperty
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IMapProperty=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.MapProperty} MapProperty instance
                         */
                        MapProperty.create = function create(properties) {
                            return new MapProperty(properties);
                        };
    
                        /**
                         * Encodes the specified MapProperty message. Does not implicitly {@link google.cloud.contentwarehouse.v1.MapProperty.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.MapProperty
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IMapProperty} message MapProperty message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MapProperty.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.fields != null && Object.hasOwnProperty.call(message, "fields"))
                                for (var keys = Object.keys(message.fields), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.contentwarehouse.v1.Value.encode(message.fields[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MapProperty message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.MapProperty.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.MapProperty
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IMapProperty} message MapProperty message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MapProperty.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MapProperty message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.MapProperty
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.MapProperty} MapProperty
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MapProperty.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.MapProperty(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.fields === $util.emptyObject)
                                            message.fields = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.contentwarehouse.v1.Value.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.fields[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MapProperty message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.MapProperty
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.MapProperty} MapProperty
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MapProperty.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MapProperty message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.MapProperty
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MapProperty.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.fields != null && message.hasOwnProperty("fields")) {
                                if (!$util.isObject(message.fields))
                                    return "fields: object expected";
                                var key = Object.keys(message.fields);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.Value.verify(message.fields[key[i]]);
                                    if (error)
                                        return "fields." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MapProperty message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.MapProperty
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.MapProperty} MapProperty
                         */
                        MapProperty.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.MapProperty)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.MapProperty();
                            if (object.fields) {
                                if (typeof object.fields !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.MapProperty.fields: object expected");
                                message.fields = {};
                                for (var keys = Object.keys(object.fields), i = 0; i < keys.length; ++i) {
                                    if (typeof object.fields[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.MapProperty.fields: object expected");
                                    message.fields[keys[i]] = $root.google.cloud.contentwarehouse.v1.Value.fromObject(object.fields[keys[i]]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MapProperty message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.MapProperty
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.MapProperty} message MapProperty
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MapProperty.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.fields = {};
                            var keys2;
                            if (message.fields && (keys2 = Object.keys(message.fields)).length) {
                                object.fields = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.fields[keys2[j]] = $root.google.cloud.contentwarehouse.v1.Value.toObject(message.fields[keys2[j]], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MapProperty to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.MapProperty
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MapProperty.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MapProperty
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.MapProperty
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MapProperty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.MapProperty";
                        };
    
                        return MapProperty;
                    })();
    
                    v1.Value = (function() {
    
                        /**
                         * Properties of a Value.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IValue
                         * @property {number|null} [floatValue] Value floatValue
                         * @property {number|null} [intValue] Value intValue
                         * @property {string|null} [stringValue] Value stringValue
                         * @property {google.cloud.contentwarehouse.v1.IEnumValue|null} [enumValue] Value enumValue
                         * @property {google.type.IDateTime|null} [datetimeValue] Value datetimeValue
                         * @property {google.cloud.contentwarehouse.v1.ITimestampValue|null} [timestampValue] Value timestampValue
                         * @property {boolean|null} [booleanValue] Value booleanValue
                         */
    
                        /**
                         * Constructs a new Value.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a Value.
                         * @implements IValue
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IValue=} [properties] Properties to set
                         */
                        function Value(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Value floatValue.
                         * @member {number|null|undefined} floatValue
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @instance
                         */
                        Value.prototype.floatValue = null;
    
                        /**
                         * Value intValue.
                         * @member {number|null|undefined} intValue
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @instance
                         */
                        Value.prototype.intValue = null;
    
                        /**
                         * Value stringValue.
                         * @member {string|null|undefined} stringValue
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @instance
                         */
                        Value.prototype.stringValue = null;
    
                        /**
                         * Value enumValue.
                         * @member {google.cloud.contentwarehouse.v1.IEnumValue|null|undefined} enumValue
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @instance
                         */
                        Value.prototype.enumValue = null;
    
                        /**
                         * Value datetimeValue.
                         * @member {google.type.IDateTime|null|undefined} datetimeValue
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @instance
                         */
                        Value.prototype.datetimeValue = null;
    
                        /**
                         * Value timestampValue.
                         * @member {google.cloud.contentwarehouse.v1.ITimestampValue|null|undefined} timestampValue
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @instance
                         */
                        Value.prototype.timestampValue = null;
    
                        /**
                         * Value booleanValue.
                         * @member {boolean|null|undefined} booleanValue
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @instance
                         */
                        Value.prototype.booleanValue = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Value kind.
                         * @member {"floatValue"|"intValue"|"stringValue"|"enumValue"|"datetimeValue"|"timestampValue"|"booleanValue"|undefined} kind
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @instance
                         */
                        Object.defineProperty(Value.prototype, "kind", {
                            get: $util.oneOfGetter($oneOfFields = ["floatValue", "intValue", "stringValue", "enumValue", "datetimeValue", "timestampValue", "booleanValue"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Value instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IValue=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.Value} Value instance
                         */
                        Value.create = function create(properties) {
                            return new Value(properties);
                        };
    
                        /**
                         * Encodes the specified Value message. Does not implicitly {@link google.cloud.contentwarehouse.v1.Value.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IValue} message Value message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Value.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.floatValue != null && Object.hasOwnProperty.call(message, "floatValue"))
                                writer.uint32(/* id 1, wireType 5 =*/13).float(message.floatValue);
                            if (message.intValue != null && Object.hasOwnProperty.call(message, "intValue"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.intValue);
                            if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.stringValue);
                            if (message.enumValue != null && Object.hasOwnProperty.call(message, "enumValue"))
                                $root.google.cloud.contentwarehouse.v1.EnumValue.encode(message.enumValue, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.datetimeValue != null && Object.hasOwnProperty.call(message, "datetimeValue"))
                                $root.google.type.DateTime.encode(message.datetimeValue, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.timestampValue != null && Object.hasOwnProperty.call(message, "timestampValue"))
                                $root.google.cloud.contentwarehouse.v1.TimestampValue.encode(message.timestampValue, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.booleanValue != null && Object.hasOwnProperty.call(message, "booleanValue"))
                                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.booleanValue);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Value message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.Value.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IValue} message Value message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Value.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Value message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.Value} Value
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Value.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.Value();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.floatValue = reader.float();
                                        break;
                                    }
                                case 2: {
                                        message.intValue = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.stringValue = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.enumValue = $root.google.cloud.contentwarehouse.v1.EnumValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.datetimeValue = $root.google.type.DateTime.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.timestampValue = $root.google.cloud.contentwarehouse.v1.TimestampValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.booleanValue = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Value message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.Value} Value
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Value.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Value message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Value.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.floatValue != null && message.hasOwnProperty("floatValue")) {
                                properties.kind = 1;
                                if (typeof message.floatValue !== "number")
                                    return "floatValue: number expected";
                            }
                            if (message.intValue != null && message.hasOwnProperty("intValue")) {
                                if (properties.kind === 1)
                                    return "kind: multiple values";
                                properties.kind = 1;
                                if (!$util.isInteger(message.intValue))
                                    return "intValue: integer expected";
                            }
                            if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                                if (properties.kind === 1)
                                    return "kind: multiple values";
                                properties.kind = 1;
                                if (!$util.isString(message.stringValue))
                                    return "stringValue: string expected";
                            }
                            if (message.enumValue != null && message.hasOwnProperty("enumValue")) {
                                if (properties.kind === 1)
                                    return "kind: multiple values";
                                properties.kind = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.EnumValue.verify(message.enumValue);
                                    if (error)
                                        return "enumValue." + error;
                                }
                            }
                            if (message.datetimeValue != null && message.hasOwnProperty("datetimeValue")) {
                                if (properties.kind === 1)
                                    return "kind: multiple values";
                                properties.kind = 1;
                                {
                                    var error = $root.google.type.DateTime.verify(message.datetimeValue);
                                    if (error)
                                        return "datetimeValue." + error;
                                }
                            }
                            if (message.timestampValue != null && message.hasOwnProperty("timestampValue")) {
                                if (properties.kind === 1)
                                    return "kind: multiple values";
                                properties.kind = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.TimestampValue.verify(message.timestampValue);
                                    if (error)
                                        return "timestampValue." + error;
                                }
                            }
                            if (message.booleanValue != null && message.hasOwnProperty("booleanValue")) {
                                if (properties.kind === 1)
                                    return "kind: multiple values";
                                properties.kind = 1;
                                if (typeof message.booleanValue !== "boolean")
                                    return "booleanValue: boolean expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Value message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.Value} Value
                         */
                        Value.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.Value)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.Value();
                            if (object.floatValue != null)
                                message.floatValue = Number(object.floatValue);
                            if (object.intValue != null)
                                message.intValue = object.intValue | 0;
                            if (object.stringValue != null)
                                message.stringValue = String(object.stringValue);
                            if (object.enumValue != null) {
                                if (typeof object.enumValue !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Value.enumValue: object expected");
                                message.enumValue = $root.google.cloud.contentwarehouse.v1.EnumValue.fromObject(object.enumValue);
                            }
                            if (object.datetimeValue != null) {
                                if (typeof object.datetimeValue !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Value.datetimeValue: object expected");
                                message.datetimeValue = $root.google.type.DateTime.fromObject(object.datetimeValue);
                            }
                            if (object.timestampValue != null) {
                                if (typeof object.timestampValue !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Value.timestampValue: object expected");
                                message.timestampValue = $root.google.cloud.contentwarehouse.v1.TimestampValue.fromObject(object.timestampValue);
                            }
                            if (object.booleanValue != null)
                                message.booleanValue = Boolean(object.booleanValue);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Value message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.Value} message Value
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Value.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.floatValue != null && message.hasOwnProperty("floatValue")) {
                                object.floatValue = options.json && !isFinite(message.floatValue) ? String(message.floatValue) : message.floatValue;
                                if (options.oneofs)
                                    object.kind = "floatValue";
                            }
                            if (message.intValue != null && message.hasOwnProperty("intValue")) {
                                object.intValue = message.intValue;
                                if (options.oneofs)
                                    object.kind = "intValue";
                            }
                            if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                                object.stringValue = message.stringValue;
                                if (options.oneofs)
                                    object.kind = "stringValue";
                            }
                            if (message.enumValue != null && message.hasOwnProperty("enumValue")) {
                                object.enumValue = $root.google.cloud.contentwarehouse.v1.EnumValue.toObject(message.enumValue, options);
                                if (options.oneofs)
                                    object.kind = "enumValue";
                            }
                            if (message.datetimeValue != null && message.hasOwnProperty("datetimeValue")) {
                                object.datetimeValue = $root.google.type.DateTime.toObject(message.datetimeValue, options);
                                if (options.oneofs)
                                    object.kind = "datetimeValue";
                            }
                            if (message.timestampValue != null && message.hasOwnProperty("timestampValue")) {
                                object.timestampValue = $root.google.cloud.contentwarehouse.v1.TimestampValue.toObject(message.timestampValue, options);
                                if (options.oneofs)
                                    object.kind = "timestampValue";
                            }
                            if (message.booleanValue != null && message.hasOwnProperty("booleanValue")) {
                                object.booleanValue = message.booleanValue;
                                if (options.oneofs)
                                    object.kind = "booleanValue";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Value to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Value.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Value
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.Value
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.Value";
                        };
    
                        return Value;
                    })();
    
                    v1.EnumValue = (function() {
    
                        /**
                         * Properties of an EnumValue.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IEnumValue
                         * @property {string|null} [value] EnumValue value
                         */
    
                        /**
                         * Constructs a new EnumValue.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an EnumValue.
                         * @implements IEnumValue
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IEnumValue=} [properties] Properties to set
                         */
                        function EnumValue(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EnumValue value.
                         * @member {string} value
                         * @memberof google.cloud.contentwarehouse.v1.EnumValue
                         * @instance
                         */
                        EnumValue.prototype.value = "";
    
                        /**
                         * Creates a new EnumValue instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.EnumValue
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IEnumValue=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.EnumValue} EnumValue instance
                         */
                        EnumValue.create = function create(properties) {
                            return new EnumValue(properties);
                        };
    
                        /**
                         * Encodes the specified EnumValue message. Does not implicitly {@link google.cloud.contentwarehouse.v1.EnumValue.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.EnumValue
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IEnumValue} message EnumValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnumValue.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EnumValue message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.EnumValue.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.EnumValue
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IEnumValue} message EnumValue message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnumValue.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EnumValue message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.EnumValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.EnumValue} EnumValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnumValue.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.EnumValue();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.value = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EnumValue message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.EnumValue
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.EnumValue} EnumValue
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnumValue.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EnumValue message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.EnumValue
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EnumValue.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.value != null && message.hasOwnProperty("value"))
                                if (!$util.isString(message.value))
                                    return "value: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EnumValue message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.EnumValue
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.EnumValue} EnumValue
                         */
                        EnumValue.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.EnumValue)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.EnumValue();
                            if (object.value != null)
                                message.value = String(object.value);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EnumValue message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.EnumValue
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.EnumValue} message EnumValue
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EnumValue.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.value = "";
                            if (message.value != null && message.hasOwnProperty("value"))
                                object.value = message.value;
                            return object;
                        };
    
                        /**
                         * Converts this EnumValue to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.EnumValue
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EnumValue.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EnumValue
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.EnumValue
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EnumValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.EnumValue";
                        };
    
                        return EnumValue;
                    })();
    
                    /**
                     * RawDocumentFileType enum.
                     * @name google.cloud.contentwarehouse.v1.RawDocumentFileType
                     * @enum {number}
                     * @property {number} RAW_DOCUMENT_FILE_TYPE_UNSPECIFIED=0 RAW_DOCUMENT_FILE_TYPE_UNSPECIFIED value
                     * @property {number} RAW_DOCUMENT_FILE_TYPE_PDF=1 RAW_DOCUMENT_FILE_TYPE_PDF value
                     * @property {number} RAW_DOCUMENT_FILE_TYPE_DOCX=2 RAW_DOCUMENT_FILE_TYPE_DOCX value
                     * @property {number} RAW_DOCUMENT_FILE_TYPE_XLSX=3 RAW_DOCUMENT_FILE_TYPE_XLSX value
                     * @property {number} RAW_DOCUMENT_FILE_TYPE_PPTX=4 RAW_DOCUMENT_FILE_TYPE_PPTX value
                     * @property {number} RAW_DOCUMENT_FILE_TYPE_TEXT=5 RAW_DOCUMENT_FILE_TYPE_TEXT value
                     */
                    v1.RawDocumentFileType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "RAW_DOCUMENT_FILE_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "RAW_DOCUMENT_FILE_TYPE_PDF"] = 1;
                        values[valuesById[2] = "RAW_DOCUMENT_FILE_TYPE_DOCX"] = 2;
                        values[valuesById[3] = "RAW_DOCUMENT_FILE_TYPE_XLSX"] = 3;
                        values[valuesById[4] = "RAW_DOCUMENT_FILE_TYPE_PPTX"] = 4;
                        values[valuesById[5] = "RAW_DOCUMENT_FILE_TYPE_TEXT"] = 5;
                        return values;
                    })();
    
                    v1.DocumentLinkService = (function() {
    
                        /**
                         * Constructs a new DocumentLinkService service.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DocumentLinkService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function DocumentLinkService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (DocumentLinkService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = DocumentLinkService;
    
                        /**
                         * Creates new DocumentLinkService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLinkService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {DocumentLinkService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        DocumentLinkService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentLinkService|listLinkedTargets}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLinkService
                         * @typedef ListLinkedTargetsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse} [response] ListLinkedTargetsResponse
                         */
    
                        /**
                         * Calls ListLinkedTargets.
                         * @function listLinkedTargets
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLinkService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedTargetsRequest} request ListLinkedTargetsRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentLinkService.ListLinkedTargetsCallback} callback Node-style callback called with the error, if any, and ListLinkedTargetsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentLinkService.prototype.listLinkedTargets = function listLinkedTargets(request, callback) {
                            return this.rpcCall(listLinkedTargets, $root.google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest, $root.google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse, request, callback);
                        }, "name", { value: "ListLinkedTargets" });
    
                        /**
                         * Calls ListLinkedTargets.
                         * @function listLinkedTargets
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLinkService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedTargetsRequest} request ListLinkedTargetsRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentLinkService|listLinkedSources}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLinkService
                         * @typedef ListLinkedSourcesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse} [response] ListLinkedSourcesResponse
                         */
    
                        /**
                         * Calls ListLinkedSources.
                         * @function listLinkedSources
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLinkService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedSourcesRequest} request ListLinkedSourcesRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentLinkService.ListLinkedSourcesCallback} callback Node-style callback called with the error, if any, and ListLinkedSourcesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentLinkService.prototype.listLinkedSources = function listLinkedSources(request, callback) {
                            return this.rpcCall(listLinkedSources, $root.google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest, $root.google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse, request, callback);
                        }, "name", { value: "ListLinkedSources" });
    
                        /**
                         * Calls ListLinkedSources.
                         * @function listLinkedSources
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLinkService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedSourcesRequest} request ListLinkedSourcesRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentLinkService|createDocumentLink}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLinkService
                         * @typedef CreateDocumentLinkCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.DocumentLink} [response] DocumentLink
                         */
    
                        /**
                         * Calls CreateDocumentLink.
                         * @function createDocumentLink
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLinkService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentLinkRequest} request CreateDocumentLinkRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentLinkService.CreateDocumentLinkCallback} callback Node-style callback called with the error, if any, and DocumentLink
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentLinkService.prototype.createDocumentLink = function createDocumentLink(request, callback) {
                            return this.rpcCall(createDocumentLink, $root.google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest, $root.google.cloud.contentwarehouse.v1.DocumentLink, request, callback);
                        }, "name", { value: "CreateDocumentLink" });
    
                        /**
                         * Calls CreateDocumentLink.
                         * @function createDocumentLink
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLinkService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentLinkRequest} request CreateDocumentLinkRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.DocumentLink>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentLinkService|deleteDocumentLink}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLinkService
                         * @typedef DeleteDocumentLinkCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteDocumentLink.
                         * @function deleteDocumentLink
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLinkService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentLinkRequest} request DeleteDocumentLinkRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentLinkService.DeleteDocumentLinkCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentLinkService.prototype.deleteDocumentLink = function deleteDocumentLink(request, callback) {
                            return this.rpcCall(deleteDocumentLink, $root.google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteDocumentLink" });
    
                        /**
                         * Calls DeleteDocumentLink.
                         * @function deleteDocumentLink
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLinkService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentLinkRequest} request DeleteDocumentLinkRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        return DocumentLinkService;
                    })();
    
                    v1.ListLinkedTargetsResponse = (function() {
    
                        /**
                         * Properties of a ListLinkedTargetsResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IListLinkedTargetsResponse
                         * @property {Array.<google.cloud.contentwarehouse.v1.IDocumentLink>|null} [documentLinks] ListLinkedTargetsResponse documentLinks
                         * @property {string|null} [nextPageToken] ListLinkedTargetsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListLinkedTargetsResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a ListLinkedTargetsResponse.
                         * @implements IListLinkedTargetsResponse
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedTargetsResponse=} [properties] Properties to set
                         */
                        function ListLinkedTargetsResponse(properties) {
                            this.documentLinks = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListLinkedTargetsResponse documentLinks.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IDocumentLink>} documentLinks
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse
                         * @instance
                         */
                        ListLinkedTargetsResponse.prototype.documentLinks = $util.emptyArray;
    
                        /**
                         * ListLinkedTargetsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse
                         * @instance
                         */
                        ListLinkedTargetsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListLinkedTargetsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedTargetsResponse=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse} ListLinkedTargetsResponse instance
                         */
                        ListLinkedTargetsResponse.create = function create(properties) {
                            return new ListLinkedTargetsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListLinkedTargetsResponse message. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedTargetsResponse} message ListLinkedTargetsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListLinkedTargetsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.documentLinks != null && message.documentLinks.length)
                                for (var i = 0; i < message.documentLinks.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.DocumentLink.encode(message.documentLinks[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListLinkedTargetsResponse message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedTargetsResponse} message ListLinkedTargetsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListLinkedTargetsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListLinkedTargetsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse} ListLinkedTargetsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListLinkedTargetsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.documentLinks && message.documentLinks.length))
                                            message.documentLinks = [];
                                        message.documentLinks.push($root.google.cloud.contentwarehouse.v1.DocumentLink.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListLinkedTargetsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse} ListLinkedTargetsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListLinkedTargetsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListLinkedTargetsResponse message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListLinkedTargetsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.documentLinks != null && message.hasOwnProperty("documentLinks")) {
                                if (!Array.isArray(message.documentLinks))
                                    return "documentLinks: array expected";
                                for (var i = 0; i < message.documentLinks.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.DocumentLink.verify(message.documentLinks[i]);
                                    if (error)
                                        return "documentLinks." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListLinkedTargetsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse} ListLinkedTargetsResponse
                         */
                        ListLinkedTargetsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse();
                            if (object.documentLinks) {
                                if (!Array.isArray(object.documentLinks))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse.documentLinks: array expected");
                                message.documentLinks = [];
                                for (var i = 0; i < object.documentLinks.length; ++i) {
                                    if (typeof object.documentLinks[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse.documentLinks: object expected");
                                    message.documentLinks[i] = $root.google.cloud.contentwarehouse.v1.DocumentLink.fromObject(object.documentLinks[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListLinkedTargetsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse} message ListLinkedTargetsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListLinkedTargetsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.documentLinks = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.documentLinks && message.documentLinks.length) {
                                object.documentLinks = [];
                                for (var j = 0; j < message.documentLinks.length; ++j)
                                    object.documentLinks[j] = $root.google.cloud.contentwarehouse.v1.DocumentLink.toObject(message.documentLinks[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListLinkedTargetsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListLinkedTargetsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListLinkedTargetsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListLinkedTargetsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.ListLinkedTargetsResponse";
                        };
    
                        return ListLinkedTargetsResponse;
                    })();
    
                    v1.ListLinkedTargetsRequest = (function() {
    
                        /**
                         * Properties of a ListLinkedTargetsRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IListLinkedTargetsRequest
                         * @property {string|null} [parent] ListLinkedTargetsRequest parent
                         * @property {google.cloud.contentwarehouse.v1.IRequestMetadata|null} [requestMetadata] ListLinkedTargetsRequest requestMetadata
                         */
    
                        /**
                         * Constructs a new ListLinkedTargetsRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a ListLinkedTargetsRequest.
                         * @implements IListLinkedTargetsRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedTargetsRequest=} [properties] Properties to set
                         */
                        function ListLinkedTargetsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListLinkedTargetsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest
                         * @instance
                         */
                        ListLinkedTargetsRequest.prototype.parent = "";
    
                        /**
                         * ListLinkedTargetsRequest requestMetadata.
                         * @member {google.cloud.contentwarehouse.v1.IRequestMetadata|null|undefined} requestMetadata
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest
                         * @instance
                         */
                        ListLinkedTargetsRequest.prototype.requestMetadata = null;
    
                        /**
                         * Creates a new ListLinkedTargetsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedTargetsRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest} ListLinkedTargetsRequest instance
                         */
                        ListLinkedTargetsRequest.create = function create(properties) {
                            return new ListLinkedTargetsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListLinkedTargetsRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedTargetsRequest} message ListLinkedTargetsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListLinkedTargetsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.requestMetadata != null && Object.hasOwnProperty.call(message, "requestMetadata"))
                                $root.google.cloud.contentwarehouse.v1.RequestMetadata.encode(message.requestMetadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListLinkedTargetsRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedTargetsRequest} message ListLinkedTargetsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListLinkedTargetsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListLinkedTargetsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest} ListLinkedTargetsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListLinkedTargetsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListLinkedTargetsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest} ListLinkedTargetsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListLinkedTargetsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListLinkedTargetsRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListLinkedTargetsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RequestMetadata.verify(message.requestMetadata);
                                if (error)
                                    return "requestMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListLinkedTargetsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest} ListLinkedTargetsRequest
                         */
                        ListLinkedTargetsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.requestMetadata != null) {
                                if (typeof object.requestMetadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest.requestMetadata: object expected");
                                message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.fromObject(object.requestMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListLinkedTargetsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest} message ListLinkedTargetsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListLinkedTargetsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.requestMetadata = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata"))
                                object.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.toObject(message.requestMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this ListLinkedTargetsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListLinkedTargetsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListLinkedTargetsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListLinkedTargetsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.ListLinkedTargetsRequest";
                        };
    
                        return ListLinkedTargetsRequest;
                    })();
    
                    v1.ListLinkedSourcesResponse = (function() {
    
                        /**
                         * Properties of a ListLinkedSourcesResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IListLinkedSourcesResponse
                         * @property {Array.<google.cloud.contentwarehouse.v1.IDocumentLink>|null} [documentLinks] ListLinkedSourcesResponse documentLinks
                         * @property {string|null} [nextPageToken] ListLinkedSourcesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListLinkedSourcesResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a ListLinkedSourcesResponse.
                         * @implements IListLinkedSourcesResponse
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedSourcesResponse=} [properties] Properties to set
                         */
                        function ListLinkedSourcesResponse(properties) {
                            this.documentLinks = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListLinkedSourcesResponse documentLinks.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IDocumentLink>} documentLinks
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse
                         * @instance
                         */
                        ListLinkedSourcesResponse.prototype.documentLinks = $util.emptyArray;
    
                        /**
                         * ListLinkedSourcesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse
                         * @instance
                         */
                        ListLinkedSourcesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListLinkedSourcesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedSourcesResponse=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse} ListLinkedSourcesResponse instance
                         */
                        ListLinkedSourcesResponse.create = function create(properties) {
                            return new ListLinkedSourcesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListLinkedSourcesResponse message. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedSourcesResponse} message ListLinkedSourcesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListLinkedSourcesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.documentLinks != null && message.documentLinks.length)
                                for (var i = 0; i < message.documentLinks.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.DocumentLink.encode(message.documentLinks[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListLinkedSourcesResponse message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedSourcesResponse} message ListLinkedSourcesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListLinkedSourcesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListLinkedSourcesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse} ListLinkedSourcesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListLinkedSourcesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.documentLinks && message.documentLinks.length))
                                            message.documentLinks = [];
                                        message.documentLinks.push($root.google.cloud.contentwarehouse.v1.DocumentLink.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListLinkedSourcesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse} ListLinkedSourcesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListLinkedSourcesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListLinkedSourcesResponse message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListLinkedSourcesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.documentLinks != null && message.hasOwnProperty("documentLinks")) {
                                if (!Array.isArray(message.documentLinks))
                                    return "documentLinks: array expected";
                                for (var i = 0; i < message.documentLinks.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.DocumentLink.verify(message.documentLinks[i]);
                                    if (error)
                                        return "documentLinks." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListLinkedSourcesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse} ListLinkedSourcesResponse
                         */
                        ListLinkedSourcesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse();
                            if (object.documentLinks) {
                                if (!Array.isArray(object.documentLinks))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse.documentLinks: array expected");
                                message.documentLinks = [];
                                for (var i = 0; i < object.documentLinks.length; ++i) {
                                    if (typeof object.documentLinks[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse.documentLinks: object expected");
                                    message.documentLinks[i] = $root.google.cloud.contentwarehouse.v1.DocumentLink.fromObject(object.documentLinks[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListLinkedSourcesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse} message ListLinkedSourcesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListLinkedSourcesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.documentLinks = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.documentLinks && message.documentLinks.length) {
                                object.documentLinks = [];
                                for (var j = 0; j < message.documentLinks.length; ++j)
                                    object.documentLinks[j] = $root.google.cloud.contentwarehouse.v1.DocumentLink.toObject(message.documentLinks[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListLinkedSourcesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListLinkedSourcesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListLinkedSourcesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListLinkedSourcesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.ListLinkedSourcesResponse";
                        };
    
                        return ListLinkedSourcesResponse;
                    })();
    
                    v1.ListLinkedSourcesRequest = (function() {
    
                        /**
                         * Properties of a ListLinkedSourcesRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IListLinkedSourcesRequest
                         * @property {string|null} [parent] ListLinkedSourcesRequest parent
                         * @property {number|null} [pageSize] ListLinkedSourcesRequest pageSize
                         * @property {string|null} [pageToken] ListLinkedSourcesRequest pageToken
                         * @property {google.cloud.contentwarehouse.v1.IRequestMetadata|null} [requestMetadata] ListLinkedSourcesRequest requestMetadata
                         */
    
                        /**
                         * Constructs a new ListLinkedSourcesRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a ListLinkedSourcesRequest.
                         * @implements IListLinkedSourcesRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedSourcesRequest=} [properties] Properties to set
                         */
                        function ListLinkedSourcesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListLinkedSourcesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest
                         * @instance
                         */
                        ListLinkedSourcesRequest.prototype.parent = "";
    
                        /**
                         * ListLinkedSourcesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest
                         * @instance
                         */
                        ListLinkedSourcesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListLinkedSourcesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest
                         * @instance
                         */
                        ListLinkedSourcesRequest.prototype.pageToken = "";
    
                        /**
                         * ListLinkedSourcesRequest requestMetadata.
                         * @member {google.cloud.contentwarehouse.v1.IRequestMetadata|null|undefined} requestMetadata
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest
                         * @instance
                         */
                        ListLinkedSourcesRequest.prototype.requestMetadata = null;
    
                        /**
                         * Creates a new ListLinkedSourcesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedSourcesRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest} ListLinkedSourcesRequest instance
                         */
                        ListLinkedSourcesRequest.create = function create(properties) {
                            return new ListLinkedSourcesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListLinkedSourcesRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedSourcesRequest} message ListLinkedSourcesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListLinkedSourcesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.requestMetadata != null && Object.hasOwnProperty.call(message, "requestMetadata"))
                                $root.google.cloud.contentwarehouse.v1.RequestMetadata.encode(message.requestMetadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListLinkedSourcesRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListLinkedSourcesRequest} message ListLinkedSourcesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListLinkedSourcesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListLinkedSourcesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest} ListLinkedSourcesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListLinkedSourcesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListLinkedSourcesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest} ListLinkedSourcesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListLinkedSourcesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListLinkedSourcesRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListLinkedSourcesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RequestMetadata.verify(message.requestMetadata);
                                if (error)
                                    return "requestMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListLinkedSourcesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest} ListLinkedSourcesRequest
                         */
                        ListLinkedSourcesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.requestMetadata != null) {
                                if (typeof object.requestMetadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest.requestMetadata: object expected");
                                message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.fromObject(object.requestMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListLinkedSourcesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest} message ListLinkedSourcesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListLinkedSourcesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.requestMetadata = null;
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata"))
                                object.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.toObject(message.requestMetadata, options);
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListLinkedSourcesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListLinkedSourcesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListLinkedSourcesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListLinkedSourcesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.ListLinkedSourcesRequest";
                        };
    
                        return ListLinkedSourcesRequest;
                    })();
    
                    v1.DocumentLink = (function() {
    
                        /**
                         * Properties of a DocumentLink.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IDocumentLink
                         * @property {string|null} [name] DocumentLink name
                         * @property {google.cloud.contentwarehouse.v1.IDocumentReference|null} [sourceDocumentReference] DocumentLink sourceDocumentReference
                         * @property {google.cloud.contentwarehouse.v1.IDocumentReference|null} [targetDocumentReference] DocumentLink targetDocumentReference
                         * @property {string|null} [description] DocumentLink description
                         * @property {google.protobuf.ITimestamp|null} [updateTime] DocumentLink updateTime
                         * @property {google.protobuf.ITimestamp|null} [createTime] DocumentLink createTime
                         * @property {google.cloud.contentwarehouse.v1.DocumentLink.State|null} [state] DocumentLink state
                         */
    
                        /**
                         * Constructs a new DocumentLink.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DocumentLink.
                         * @implements IDocumentLink
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IDocumentLink=} [properties] Properties to set
                         */
                        function DocumentLink(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DocumentLink name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @instance
                         */
                        DocumentLink.prototype.name = "";
    
                        /**
                         * DocumentLink sourceDocumentReference.
                         * @member {google.cloud.contentwarehouse.v1.IDocumentReference|null|undefined} sourceDocumentReference
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @instance
                         */
                        DocumentLink.prototype.sourceDocumentReference = null;
    
                        /**
                         * DocumentLink targetDocumentReference.
                         * @member {google.cloud.contentwarehouse.v1.IDocumentReference|null|undefined} targetDocumentReference
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @instance
                         */
                        DocumentLink.prototype.targetDocumentReference = null;
    
                        /**
                         * DocumentLink description.
                         * @member {string} description
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @instance
                         */
                        DocumentLink.prototype.description = "";
    
                        /**
                         * DocumentLink updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @instance
                         */
                        DocumentLink.prototype.updateTime = null;
    
                        /**
                         * DocumentLink createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @instance
                         */
                        DocumentLink.prototype.createTime = null;
    
                        /**
                         * DocumentLink state.
                         * @member {google.cloud.contentwarehouse.v1.DocumentLink.State} state
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @instance
                         */
                        DocumentLink.prototype.state = 0;
    
                        /**
                         * Creates a new DocumentLink instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDocumentLink=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.DocumentLink} DocumentLink instance
                         */
                        DocumentLink.create = function create(properties) {
                            return new DocumentLink(properties);
                        };
    
                        /**
                         * Encodes the specified DocumentLink message. Does not implicitly {@link google.cloud.contentwarehouse.v1.DocumentLink.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDocumentLink} message DocumentLink message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentLink.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.sourceDocumentReference != null && Object.hasOwnProperty.call(message, "sourceDocumentReference"))
                                $root.google.cloud.contentwarehouse.v1.DocumentReference.encode(message.sourceDocumentReference, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.targetDocumentReference != null && Object.hasOwnProperty.call(message, "targetDocumentReference"))
                                $root.google.cloud.contentwarehouse.v1.DocumentReference.encode(message.targetDocumentReference, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.description);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.state);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DocumentLink message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.DocumentLink.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDocumentLink} message DocumentLink message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentLink.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DocumentLink message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.DocumentLink} DocumentLink
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentLink.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.DocumentLink();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.sourceDocumentReference = $root.google.cloud.contentwarehouse.v1.DocumentReference.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.targetDocumentReference = $root.google.cloud.contentwarehouse.v1.DocumentReference.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DocumentLink message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.DocumentLink} DocumentLink
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentLink.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DocumentLink message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DocumentLink.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.sourceDocumentReference != null && message.hasOwnProperty("sourceDocumentReference")) {
                                var error = $root.google.cloud.contentwarehouse.v1.DocumentReference.verify(message.sourceDocumentReference);
                                if (error)
                                    return "sourceDocumentReference." + error;
                            }
                            if (message.targetDocumentReference != null && message.hasOwnProperty("targetDocumentReference")) {
                                var error = $root.google.cloud.contentwarehouse.v1.DocumentReference.verify(message.targetDocumentReference);
                                if (error)
                                    return "targetDocumentReference." + error;
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a DocumentLink message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.DocumentLink} DocumentLink
                         */
                        DocumentLink.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.DocumentLink)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.DocumentLink();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.sourceDocumentReference != null) {
                                if (typeof object.sourceDocumentReference !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentLink.sourceDocumentReference: object expected");
                                message.sourceDocumentReference = $root.google.cloud.contentwarehouse.v1.DocumentReference.fromObject(object.sourceDocumentReference);
                            }
                            if (object.targetDocumentReference != null) {
                                if (typeof object.targetDocumentReference !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentLink.targetDocumentReference: object expected");
                                message.targetDocumentReference = $root.google.cloud.contentwarehouse.v1.DocumentReference.fromObject(object.targetDocumentReference);
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentLink.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentLink.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ACTIVE":
                            case 1:
                                message.state = 1;
                                break;
                            case "SOFT_DELETED":
                            case 2:
                                message.state = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DocumentLink message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.DocumentLink} message DocumentLink
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DocumentLink.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.sourceDocumentReference = null;
                                object.targetDocumentReference = null;
                                object.description = "";
                                object.updateTime = null;
                                object.createTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.sourceDocumentReference != null && message.hasOwnProperty("sourceDocumentReference"))
                                object.sourceDocumentReference = $root.google.cloud.contentwarehouse.v1.DocumentReference.toObject(message.sourceDocumentReference, options);
                            if (message.targetDocumentReference != null && message.hasOwnProperty("targetDocumentReference"))
                                object.targetDocumentReference = $root.google.cloud.contentwarehouse.v1.DocumentReference.toObject(message.targetDocumentReference, options);
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.contentwarehouse.v1.DocumentLink.State[message.state] === undefined ? message.state : $root.google.cloud.contentwarehouse.v1.DocumentLink.State[message.state] : message.state;
                            return object;
                        };
    
                        /**
                         * Converts this DocumentLink to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DocumentLink.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DocumentLink
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.DocumentLink
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DocumentLink.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.DocumentLink";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.contentwarehouse.v1.DocumentLink.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ACTIVE=1 ACTIVE value
                         * @property {number} SOFT_DELETED=2 SOFT_DELETED value
                         */
                        DocumentLink.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ACTIVE"] = 1;
                            values[valuesById[2] = "SOFT_DELETED"] = 2;
                            return values;
                        })();
    
                        return DocumentLink;
                    })();
    
                    v1.CreateDocumentLinkRequest = (function() {
    
                        /**
                         * Properties of a CreateDocumentLinkRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ICreateDocumentLinkRequest
                         * @property {string|null} [parent] CreateDocumentLinkRequest parent
                         * @property {google.cloud.contentwarehouse.v1.IDocumentLink|null} [documentLink] CreateDocumentLinkRequest documentLink
                         * @property {google.cloud.contentwarehouse.v1.IRequestMetadata|null} [requestMetadata] CreateDocumentLinkRequest requestMetadata
                         */
    
                        /**
                         * Constructs a new CreateDocumentLinkRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a CreateDocumentLinkRequest.
                         * @implements ICreateDocumentLinkRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentLinkRequest=} [properties] Properties to set
                         */
                        function CreateDocumentLinkRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateDocumentLinkRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest
                         * @instance
                         */
                        CreateDocumentLinkRequest.prototype.parent = "";
    
                        /**
                         * CreateDocumentLinkRequest documentLink.
                         * @member {google.cloud.contentwarehouse.v1.IDocumentLink|null|undefined} documentLink
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest
                         * @instance
                         */
                        CreateDocumentLinkRequest.prototype.documentLink = null;
    
                        /**
                         * CreateDocumentLinkRequest requestMetadata.
                         * @member {google.cloud.contentwarehouse.v1.IRequestMetadata|null|undefined} requestMetadata
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest
                         * @instance
                         */
                        CreateDocumentLinkRequest.prototype.requestMetadata = null;
    
                        /**
                         * Creates a new CreateDocumentLinkRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentLinkRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest} CreateDocumentLinkRequest instance
                         */
                        CreateDocumentLinkRequest.create = function create(properties) {
                            return new CreateDocumentLinkRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateDocumentLinkRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentLinkRequest} message CreateDocumentLinkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDocumentLinkRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.documentLink != null && Object.hasOwnProperty.call(message, "documentLink"))
                                $root.google.cloud.contentwarehouse.v1.DocumentLink.encode(message.documentLink, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestMetadata != null && Object.hasOwnProperty.call(message, "requestMetadata"))
                                $root.google.cloud.contentwarehouse.v1.RequestMetadata.encode(message.requestMetadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateDocumentLinkRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentLinkRequest} message CreateDocumentLinkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDocumentLinkRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateDocumentLinkRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest} CreateDocumentLinkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDocumentLinkRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.documentLink = $root.google.cloud.contentwarehouse.v1.DocumentLink.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateDocumentLinkRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest} CreateDocumentLinkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDocumentLinkRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateDocumentLinkRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateDocumentLinkRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.documentLink != null && message.hasOwnProperty("documentLink")) {
                                var error = $root.google.cloud.contentwarehouse.v1.DocumentLink.verify(message.documentLink);
                                if (error)
                                    return "documentLink." + error;
                            }
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RequestMetadata.verify(message.requestMetadata);
                                if (error)
                                    return "requestMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateDocumentLinkRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest} CreateDocumentLinkRequest
                         */
                        CreateDocumentLinkRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.documentLink != null) {
                                if (typeof object.documentLink !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest.documentLink: object expected");
                                message.documentLink = $root.google.cloud.contentwarehouse.v1.DocumentLink.fromObject(object.documentLink);
                            }
                            if (object.requestMetadata != null) {
                                if (typeof object.requestMetadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest.requestMetadata: object expected");
                                message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.fromObject(object.requestMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateDocumentLinkRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest} message CreateDocumentLinkRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateDocumentLinkRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.documentLink = null;
                                object.requestMetadata = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.documentLink != null && message.hasOwnProperty("documentLink"))
                                object.documentLink = $root.google.cloud.contentwarehouse.v1.DocumentLink.toObject(message.documentLink, options);
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata"))
                                object.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.toObject(message.requestMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateDocumentLinkRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateDocumentLinkRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateDocumentLinkRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateDocumentLinkRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.CreateDocumentLinkRequest";
                        };
    
                        return CreateDocumentLinkRequest;
                    })();
    
                    v1.DeleteDocumentLinkRequest = (function() {
    
                        /**
                         * Properties of a DeleteDocumentLinkRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IDeleteDocumentLinkRequest
                         * @property {string|null} [name] DeleteDocumentLinkRequest name
                         * @property {google.cloud.contentwarehouse.v1.IRequestMetadata|null} [requestMetadata] DeleteDocumentLinkRequest requestMetadata
                         */
    
                        /**
                         * Constructs a new DeleteDocumentLinkRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DeleteDocumentLinkRequest.
                         * @implements IDeleteDocumentLinkRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentLinkRequest=} [properties] Properties to set
                         */
                        function DeleteDocumentLinkRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteDocumentLinkRequest name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest
                         * @instance
                         */
                        DeleteDocumentLinkRequest.prototype.name = "";
    
                        /**
                         * DeleteDocumentLinkRequest requestMetadata.
                         * @member {google.cloud.contentwarehouse.v1.IRequestMetadata|null|undefined} requestMetadata
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest
                         * @instance
                         */
                        DeleteDocumentLinkRequest.prototype.requestMetadata = null;
    
                        /**
                         * Creates a new DeleteDocumentLinkRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentLinkRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest} DeleteDocumentLinkRequest instance
                         */
                        DeleteDocumentLinkRequest.create = function create(properties) {
                            return new DeleteDocumentLinkRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteDocumentLinkRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentLinkRequest} message DeleteDocumentLinkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteDocumentLinkRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestMetadata != null && Object.hasOwnProperty.call(message, "requestMetadata"))
                                $root.google.cloud.contentwarehouse.v1.RequestMetadata.encode(message.requestMetadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteDocumentLinkRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentLinkRequest} message DeleteDocumentLinkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteDocumentLinkRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteDocumentLinkRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest} DeleteDocumentLinkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteDocumentLinkRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteDocumentLinkRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest} DeleteDocumentLinkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteDocumentLinkRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteDocumentLinkRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteDocumentLinkRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RequestMetadata.verify(message.requestMetadata);
                                if (error)
                                    return "requestMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DeleteDocumentLinkRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest} DeleteDocumentLinkRequest
                         */
                        DeleteDocumentLinkRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestMetadata != null) {
                                if (typeof object.requestMetadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest.requestMetadata: object expected");
                                message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.fromObject(object.requestMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteDocumentLinkRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest} message DeleteDocumentLinkRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteDocumentLinkRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestMetadata = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata"))
                                object.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.toObject(message.requestMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this DeleteDocumentLinkRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteDocumentLinkRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteDocumentLinkRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteDocumentLinkRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.DeleteDocumentLinkRequest";
                        };
    
                        return DeleteDocumentLinkRequest;
                    })();
    
                    v1.DocumentSchema = (function() {
    
                        /**
                         * Properties of a DocumentSchema.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IDocumentSchema
                         * @property {string|null} [name] DocumentSchema name
                         * @property {string|null} [displayName] DocumentSchema displayName
                         * @property {Array.<google.cloud.contentwarehouse.v1.IPropertyDefinition>|null} [propertyDefinitions] DocumentSchema propertyDefinitions
                         * @property {boolean|null} [documentIsFolder] DocumentSchema documentIsFolder
                         * @property {google.protobuf.ITimestamp|null} [updateTime] DocumentSchema updateTime
                         * @property {google.protobuf.ITimestamp|null} [createTime] DocumentSchema createTime
                         * @property {string|null} [description] DocumentSchema description
                         */
    
                        /**
                         * Constructs a new DocumentSchema.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DocumentSchema.
                         * @implements IDocumentSchema
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IDocumentSchema=} [properties] Properties to set
                         */
                        function DocumentSchema(properties) {
                            this.propertyDefinitions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DocumentSchema name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @instance
                         */
                        DocumentSchema.prototype.name = "";
    
                        /**
                         * DocumentSchema displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @instance
                         */
                        DocumentSchema.prototype.displayName = "";
    
                        /**
                         * DocumentSchema propertyDefinitions.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IPropertyDefinition>} propertyDefinitions
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @instance
                         */
                        DocumentSchema.prototype.propertyDefinitions = $util.emptyArray;
    
                        /**
                         * DocumentSchema documentIsFolder.
                         * @member {boolean} documentIsFolder
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @instance
                         */
                        DocumentSchema.prototype.documentIsFolder = false;
    
                        /**
                         * DocumentSchema updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @instance
                         */
                        DocumentSchema.prototype.updateTime = null;
    
                        /**
                         * DocumentSchema createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @instance
                         */
                        DocumentSchema.prototype.createTime = null;
    
                        /**
                         * DocumentSchema description.
                         * @member {string} description
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @instance
                         */
                        DocumentSchema.prototype.description = "";
    
                        /**
                         * Creates a new DocumentSchema instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDocumentSchema=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.DocumentSchema} DocumentSchema instance
                         */
                        DocumentSchema.create = function create(properties) {
                            return new DocumentSchema(properties);
                        };
    
                        /**
                         * Encodes the specified DocumentSchema message. Does not implicitly {@link google.cloud.contentwarehouse.v1.DocumentSchema.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDocumentSchema} message DocumentSchema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentSchema.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.displayName);
                            if (message.propertyDefinitions != null && message.propertyDefinitions.length)
                                for (var i = 0; i < message.propertyDefinitions.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.PropertyDefinition.encode(message.propertyDefinitions[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.documentIsFolder != null && Object.hasOwnProperty.call(message, "documentIsFolder"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.documentIsFolder);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.description);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DocumentSchema message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.DocumentSchema.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDocumentSchema} message DocumentSchema message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentSchema.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DocumentSchema message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.DocumentSchema} DocumentSchema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentSchema.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.DocumentSchema();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.propertyDefinitions && message.propertyDefinitions.length))
                                            message.propertyDefinitions = [];
                                        message.propertyDefinitions.push($root.google.cloud.contentwarehouse.v1.PropertyDefinition.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 4: {
                                        message.documentIsFolder = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.description = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DocumentSchema message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.DocumentSchema} DocumentSchema
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentSchema.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DocumentSchema message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DocumentSchema.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.propertyDefinitions != null && message.hasOwnProperty("propertyDefinitions")) {
                                if (!Array.isArray(message.propertyDefinitions))
                                    return "propertyDefinitions: array expected";
                                for (var i = 0; i < message.propertyDefinitions.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.PropertyDefinition.verify(message.propertyDefinitions[i]);
                                    if (error)
                                        return "propertyDefinitions." + error;
                                }
                            }
                            if (message.documentIsFolder != null && message.hasOwnProperty("documentIsFolder"))
                                if (typeof message.documentIsFolder !== "boolean")
                                    return "documentIsFolder: boolean expected";
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DocumentSchema message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.DocumentSchema} DocumentSchema
                         */
                        DocumentSchema.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.DocumentSchema)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.DocumentSchema();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.propertyDefinitions) {
                                if (!Array.isArray(object.propertyDefinitions))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentSchema.propertyDefinitions: array expected");
                                message.propertyDefinitions = [];
                                for (var i = 0; i < object.propertyDefinitions.length; ++i) {
                                    if (typeof object.propertyDefinitions[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.DocumentSchema.propertyDefinitions: object expected");
                                    message.propertyDefinitions[i] = $root.google.cloud.contentwarehouse.v1.PropertyDefinition.fromObject(object.propertyDefinitions[i]);
                                }
                            }
                            if (object.documentIsFolder != null)
                                message.documentIsFolder = Boolean(object.documentIsFolder);
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentSchema.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentSchema.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DocumentSchema message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.DocumentSchema} message DocumentSchema
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DocumentSchema.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.propertyDefinitions = [];
                            if (options.defaults) {
                                object.name = "";
                                object.displayName = "";
                                object.documentIsFolder = false;
                                object.updateTime = null;
                                object.createTime = null;
                                object.description = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.propertyDefinitions && message.propertyDefinitions.length) {
                                object.propertyDefinitions = [];
                                for (var j = 0; j < message.propertyDefinitions.length; ++j)
                                    object.propertyDefinitions[j] = $root.google.cloud.contentwarehouse.v1.PropertyDefinition.toObject(message.propertyDefinitions[j], options);
                            }
                            if (message.documentIsFolder != null && message.hasOwnProperty("documentIsFolder"))
                                object.documentIsFolder = message.documentIsFolder;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            return object;
                        };
    
                        /**
                         * Converts this DocumentSchema to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DocumentSchema.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DocumentSchema
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchema
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DocumentSchema.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.DocumentSchema";
                        };
    
                        return DocumentSchema;
                    })();
    
                    v1.PropertyDefinition = (function() {
    
                        /**
                         * Properties of a PropertyDefinition.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IPropertyDefinition
                         * @property {string|null} [name] PropertyDefinition name
                         * @property {string|null} [displayName] PropertyDefinition displayName
                         * @property {boolean|null} [isRepeatable] PropertyDefinition isRepeatable
                         * @property {boolean|null} [isFilterable] PropertyDefinition isFilterable
                         * @property {boolean|null} [isSearchable] PropertyDefinition isSearchable
                         * @property {boolean|null} [isMetadata] PropertyDefinition isMetadata
                         * @property {boolean|null} [isRequired] PropertyDefinition isRequired
                         * @property {google.cloud.contentwarehouse.v1.IIntegerTypeOptions|null} [integerTypeOptions] PropertyDefinition integerTypeOptions
                         * @property {google.cloud.contentwarehouse.v1.IFloatTypeOptions|null} [floatTypeOptions] PropertyDefinition floatTypeOptions
                         * @property {google.cloud.contentwarehouse.v1.ITextTypeOptions|null} [textTypeOptions] PropertyDefinition textTypeOptions
                         * @property {google.cloud.contentwarehouse.v1.IPropertyTypeOptions|null} [propertyTypeOptions] PropertyDefinition propertyTypeOptions
                         * @property {google.cloud.contentwarehouse.v1.IEnumTypeOptions|null} [enumTypeOptions] PropertyDefinition enumTypeOptions
                         * @property {google.cloud.contentwarehouse.v1.IDateTimeTypeOptions|null} [dateTimeTypeOptions] PropertyDefinition dateTimeTypeOptions
                         * @property {google.cloud.contentwarehouse.v1.IMapTypeOptions|null} [mapTypeOptions] PropertyDefinition mapTypeOptions
                         * @property {google.cloud.contentwarehouse.v1.ITimestampTypeOptions|null} [timestampTypeOptions] PropertyDefinition timestampTypeOptions
                         */
    
                        /**
                         * Constructs a new PropertyDefinition.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a PropertyDefinition.
                         * @implements IPropertyDefinition
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IPropertyDefinition=} [properties] Properties to set
                         */
                        function PropertyDefinition(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PropertyDefinition name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        PropertyDefinition.prototype.name = "";
    
                        /**
                         * PropertyDefinition displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        PropertyDefinition.prototype.displayName = "";
    
                        /**
                         * PropertyDefinition isRepeatable.
                         * @member {boolean} isRepeatable
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        PropertyDefinition.prototype.isRepeatable = false;
    
                        /**
                         * PropertyDefinition isFilterable.
                         * @member {boolean} isFilterable
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        PropertyDefinition.prototype.isFilterable = false;
    
                        /**
                         * PropertyDefinition isSearchable.
                         * @member {boolean} isSearchable
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        PropertyDefinition.prototype.isSearchable = false;
    
                        /**
                         * PropertyDefinition isMetadata.
                         * @member {boolean} isMetadata
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        PropertyDefinition.prototype.isMetadata = false;
    
                        /**
                         * PropertyDefinition isRequired.
                         * @member {boolean} isRequired
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        PropertyDefinition.prototype.isRequired = false;
    
                        /**
                         * PropertyDefinition integerTypeOptions.
                         * @member {google.cloud.contentwarehouse.v1.IIntegerTypeOptions|null|undefined} integerTypeOptions
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        PropertyDefinition.prototype.integerTypeOptions = null;
    
                        /**
                         * PropertyDefinition floatTypeOptions.
                         * @member {google.cloud.contentwarehouse.v1.IFloatTypeOptions|null|undefined} floatTypeOptions
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        PropertyDefinition.prototype.floatTypeOptions = null;
    
                        /**
                         * PropertyDefinition textTypeOptions.
                         * @member {google.cloud.contentwarehouse.v1.ITextTypeOptions|null|undefined} textTypeOptions
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        PropertyDefinition.prototype.textTypeOptions = null;
    
                        /**
                         * PropertyDefinition propertyTypeOptions.
                         * @member {google.cloud.contentwarehouse.v1.IPropertyTypeOptions|null|undefined} propertyTypeOptions
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        PropertyDefinition.prototype.propertyTypeOptions = null;
    
                        /**
                         * PropertyDefinition enumTypeOptions.
                         * @member {google.cloud.contentwarehouse.v1.IEnumTypeOptions|null|undefined} enumTypeOptions
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        PropertyDefinition.prototype.enumTypeOptions = null;
    
                        /**
                         * PropertyDefinition dateTimeTypeOptions.
                         * @member {google.cloud.contentwarehouse.v1.IDateTimeTypeOptions|null|undefined} dateTimeTypeOptions
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        PropertyDefinition.prototype.dateTimeTypeOptions = null;
    
                        /**
                         * PropertyDefinition mapTypeOptions.
                         * @member {google.cloud.contentwarehouse.v1.IMapTypeOptions|null|undefined} mapTypeOptions
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        PropertyDefinition.prototype.mapTypeOptions = null;
    
                        /**
                         * PropertyDefinition timestampTypeOptions.
                         * @member {google.cloud.contentwarehouse.v1.ITimestampTypeOptions|null|undefined} timestampTypeOptions
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        PropertyDefinition.prototype.timestampTypeOptions = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * PropertyDefinition valueTypeOptions.
                         * @member {"integerTypeOptions"|"floatTypeOptions"|"textTypeOptions"|"propertyTypeOptions"|"enumTypeOptions"|"dateTimeTypeOptions"|"mapTypeOptions"|"timestampTypeOptions"|undefined} valueTypeOptions
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         */
                        Object.defineProperty(PropertyDefinition.prototype, "valueTypeOptions", {
                            get: $util.oneOfGetter($oneOfFields = ["integerTypeOptions", "floatTypeOptions", "textTypeOptions", "propertyTypeOptions", "enumTypeOptions", "dateTimeTypeOptions", "mapTypeOptions", "timestampTypeOptions"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new PropertyDefinition instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IPropertyDefinition=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.PropertyDefinition} PropertyDefinition instance
                         */
                        PropertyDefinition.create = function create(properties) {
                            return new PropertyDefinition(properties);
                        };
    
                        /**
                         * Encodes the specified PropertyDefinition message. Does not implicitly {@link google.cloud.contentwarehouse.v1.PropertyDefinition.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IPropertyDefinition} message PropertyDefinition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PropertyDefinition.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.isRepeatable != null && Object.hasOwnProperty.call(message, "isRepeatable"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isRepeatable);
                            if (message.isFilterable != null && Object.hasOwnProperty.call(message, "isFilterable"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.isFilterable);
                            if (message.isSearchable != null && Object.hasOwnProperty.call(message, "isSearchable"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.isSearchable);
                            if (message.isMetadata != null && Object.hasOwnProperty.call(message, "isMetadata"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.isMetadata);
                            if (message.integerTypeOptions != null && Object.hasOwnProperty.call(message, "integerTypeOptions"))
                                $root.google.cloud.contentwarehouse.v1.IntegerTypeOptions.encode(message.integerTypeOptions, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.floatTypeOptions != null && Object.hasOwnProperty.call(message, "floatTypeOptions"))
                                $root.google.cloud.contentwarehouse.v1.FloatTypeOptions.encode(message.floatTypeOptions, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.textTypeOptions != null && Object.hasOwnProperty.call(message, "textTypeOptions"))
                                $root.google.cloud.contentwarehouse.v1.TextTypeOptions.encode(message.textTypeOptions, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.propertyTypeOptions != null && Object.hasOwnProperty.call(message, "propertyTypeOptions"))
                                $root.google.cloud.contentwarehouse.v1.PropertyTypeOptions.encode(message.propertyTypeOptions, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.enumTypeOptions != null && Object.hasOwnProperty.call(message, "enumTypeOptions"))
                                $root.google.cloud.contentwarehouse.v1.EnumTypeOptions.encode(message.enumTypeOptions, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.displayName);
                            if (message.dateTimeTypeOptions != null && Object.hasOwnProperty.call(message, "dateTimeTypeOptions"))
                                $root.google.cloud.contentwarehouse.v1.DateTimeTypeOptions.encode(message.dateTimeTypeOptions, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.isRequired != null && Object.hasOwnProperty.call(message, "isRequired"))
                                writer.uint32(/* id 14, wireType 0 =*/112).bool(message.isRequired);
                            if (message.mapTypeOptions != null && Object.hasOwnProperty.call(message, "mapTypeOptions"))
                                $root.google.cloud.contentwarehouse.v1.MapTypeOptions.encode(message.mapTypeOptions, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.timestampTypeOptions != null && Object.hasOwnProperty.call(message, "timestampTypeOptions"))
                                $root.google.cloud.contentwarehouse.v1.TimestampTypeOptions.encode(message.timestampTypeOptions, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PropertyDefinition message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.PropertyDefinition.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IPropertyDefinition} message PropertyDefinition message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PropertyDefinition.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PropertyDefinition message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.PropertyDefinition} PropertyDefinition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PropertyDefinition.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.PropertyDefinition();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.isRepeatable = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.isFilterable = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.isSearchable = reader.bool();
                                        break;
                                    }
                                case 5: {
                                        message.isMetadata = reader.bool();
                                        break;
                                    }
                                case 14: {
                                        message.isRequired = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.integerTypeOptions = $root.google.cloud.contentwarehouse.v1.IntegerTypeOptions.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.floatTypeOptions = $root.google.cloud.contentwarehouse.v1.FloatTypeOptions.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.textTypeOptions = $root.google.cloud.contentwarehouse.v1.TextTypeOptions.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.propertyTypeOptions = $root.google.cloud.contentwarehouse.v1.PropertyTypeOptions.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.enumTypeOptions = $root.google.cloud.contentwarehouse.v1.EnumTypeOptions.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.dateTimeTypeOptions = $root.google.cloud.contentwarehouse.v1.DateTimeTypeOptions.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        message.mapTypeOptions = $root.google.cloud.contentwarehouse.v1.MapTypeOptions.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.timestampTypeOptions = $root.google.cloud.contentwarehouse.v1.TimestampTypeOptions.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PropertyDefinition message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.PropertyDefinition} PropertyDefinition
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PropertyDefinition.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PropertyDefinition message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PropertyDefinition.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.isRepeatable != null && message.hasOwnProperty("isRepeatable"))
                                if (typeof message.isRepeatable !== "boolean")
                                    return "isRepeatable: boolean expected";
                            if (message.isFilterable != null && message.hasOwnProperty("isFilterable"))
                                if (typeof message.isFilterable !== "boolean")
                                    return "isFilterable: boolean expected";
                            if (message.isSearchable != null && message.hasOwnProperty("isSearchable"))
                                if (typeof message.isSearchable !== "boolean")
                                    return "isSearchable: boolean expected";
                            if (message.isMetadata != null && message.hasOwnProperty("isMetadata"))
                                if (typeof message.isMetadata !== "boolean")
                                    return "isMetadata: boolean expected";
                            if (message.isRequired != null && message.hasOwnProperty("isRequired"))
                                if (typeof message.isRequired !== "boolean")
                                    return "isRequired: boolean expected";
                            if (message.integerTypeOptions != null && message.hasOwnProperty("integerTypeOptions")) {
                                properties.valueTypeOptions = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.IntegerTypeOptions.verify(message.integerTypeOptions);
                                    if (error)
                                        return "integerTypeOptions." + error;
                                }
                            }
                            if (message.floatTypeOptions != null && message.hasOwnProperty("floatTypeOptions")) {
                                if (properties.valueTypeOptions === 1)
                                    return "valueTypeOptions: multiple values";
                                properties.valueTypeOptions = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.FloatTypeOptions.verify(message.floatTypeOptions);
                                    if (error)
                                        return "floatTypeOptions." + error;
                                }
                            }
                            if (message.textTypeOptions != null && message.hasOwnProperty("textTypeOptions")) {
                                if (properties.valueTypeOptions === 1)
                                    return "valueTypeOptions: multiple values";
                                properties.valueTypeOptions = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.TextTypeOptions.verify(message.textTypeOptions);
                                    if (error)
                                        return "textTypeOptions." + error;
                                }
                            }
                            if (message.propertyTypeOptions != null && message.hasOwnProperty("propertyTypeOptions")) {
                                if (properties.valueTypeOptions === 1)
                                    return "valueTypeOptions: multiple values";
                                properties.valueTypeOptions = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.PropertyTypeOptions.verify(message.propertyTypeOptions);
                                    if (error)
                                        return "propertyTypeOptions." + error;
                                }
                            }
                            if (message.enumTypeOptions != null && message.hasOwnProperty("enumTypeOptions")) {
                                if (properties.valueTypeOptions === 1)
                                    return "valueTypeOptions: multiple values";
                                properties.valueTypeOptions = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.EnumTypeOptions.verify(message.enumTypeOptions);
                                    if (error)
                                        return "enumTypeOptions." + error;
                                }
                            }
                            if (message.dateTimeTypeOptions != null && message.hasOwnProperty("dateTimeTypeOptions")) {
                                if (properties.valueTypeOptions === 1)
                                    return "valueTypeOptions: multiple values";
                                properties.valueTypeOptions = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.DateTimeTypeOptions.verify(message.dateTimeTypeOptions);
                                    if (error)
                                        return "dateTimeTypeOptions." + error;
                                }
                            }
                            if (message.mapTypeOptions != null && message.hasOwnProperty("mapTypeOptions")) {
                                if (properties.valueTypeOptions === 1)
                                    return "valueTypeOptions: multiple values";
                                properties.valueTypeOptions = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.MapTypeOptions.verify(message.mapTypeOptions);
                                    if (error)
                                        return "mapTypeOptions." + error;
                                }
                            }
                            if (message.timestampTypeOptions != null && message.hasOwnProperty("timestampTypeOptions")) {
                                if (properties.valueTypeOptions === 1)
                                    return "valueTypeOptions: multiple values";
                                properties.valueTypeOptions = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.TimestampTypeOptions.verify(message.timestampTypeOptions);
                                    if (error)
                                        return "timestampTypeOptions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PropertyDefinition message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.PropertyDefinition} PropertyDefinition
                         */
                        PropertyDefinition.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.PropertyDefinition)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.PropertyDefinition();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.isRepeatable != null)
                                message.isRepeatable = Boolean(object.isRepeatable);
                            if (object.isFilterable != null)
                                message.isFilterable = Boolean(object.isFilterable);
                            if (object.isSearchable != null)
                                message.isSearchable = Boolean(object.isSearchable);
                            if (object.isMetadata != null)
                                message.isMetadata = Boolean(object.isMetadata);
                            if (object.isRequired != null)
                                message.isRequired = Boolean(object.isRequired);
                            if (object.integerTypeOptions != null) {
                                if (typeof object.integerTypeOptions !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.PropertyDefinition.integerTypeOptions: object expected");
                                message.integerTypeOptions = $root.google.cloud.contentwarehouse.v1.IntegerTypeOptions.fromObject(object.integerTypeOptions);
                            }
                            if (object.floatTypeOptions != null) {
                                if (typeof object.floatTypeOptions !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.PropertyDefinition.floatTypeOptions: object expected");
                                message.floatTypeOptions = $root.google.cloud.contentwarehouse.v1.FloatTypeOptions.fromObject(object.floatTypeOptions);
                            }
                            if (object.textTypeOptions != null) {
                                if (typeof object.textTypeOptions !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.PropertyDefinition.textTypeOptions: object expected");
                                message.textTypeOptions = $root.google.cloud.contentwarehouse.v1.TextTypeOptions.fromObject(object.textTypeOptions);
                            }
                            if (object.propertyTypeOptions != null) {
                                if (typeof object.propertyTypeOptions !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.PropertyDefinition.propertyTypeOptions: object expected");
                                message.propertyTypeOptions = $root.google.cloud.contentwarehouse.v1.PropertyTypeOptions.fromObject(object.propertyTypeOptions);
                            }
                            if (object.enumTypeOptions != null) {
                                if (typeof object.enumTypeOptions !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.PropertyDefinition.enumTypeOptions: object expected");
                                message.enumTypeOptions = $root.google.cloud.contentwarehouse.v1.EnumTypeOptions.fromObject(object.enumTypeOptions);
                            }
                            if (object.dateTimeTypeOptions != null) {
                                if (typeof object.dateTimeTypeOptions !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.PropertyDefinition.dateTimeTypeOptions: object expected");
                                message.dateTimeTypeOptions = $root.google.cloud.contentwarehouse.v1.DateTimeTypeOptions.fromObject(object.dateTimeTypeOptions);
                            }
                            if (object.mapTypeOptions != null) {
                                if (typeof object.mapTypeOptions !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.PropertyDefinition.mapTypeOptions: object expected");
                                message.mapTypeOptions = $root.google.cloud.contentwarehouse.v1.MapTypeOptions.fromObject(object.mapTypeOptions);
                            }
                            if (object.timestampTypeOptions != null) {
                                if (typeof object.timestampTypeOptions !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.PropertyDefinition.timestampTypeOptions: object expected");
                                message.timestampTypeOptions = $root.google.cloud.contentwarehouse.v1.TimestampTypeOptions.fromObject(object.timestampTypeOptions);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PropertyDefinition message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.PropertyDefinition} message PropertyDefinition
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PropertyDefinition.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.isRepeatable = false;
                                object.isFilterable = false;
                                object.isSearchable = false;
                                object.isMetadata = false;
                                object.displayName = "";
                                object.isRequired = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.isRepeatable != null && message.hasOwnProperty("isRepeatable"))
                                object.isRepeatable = message.isRepeatable;
                            if (message.isFilterable != null && message.hasOwnProperty("isFilterable"))
                                object.isFilterable = message.isFilterable;
                            if (message.isSearchable != null && message.hasOwnProperty("isSearchable"))
                                object.isSearchable = message.isSearchable;
                            if (message.isMetadata != null && message.hasOwnProperty("isMetadata"))
                                object.isMetadata = message.isMetadata;
                            if (message.integerTypeOptions != null && message.hasOwnProperty("integerTypeOptions")) {
                                object.integerTypeOptions = $root.google.cloud.contentwarehouse.v1.IntegerTypeOptions.toObject(message.integerTypeOptions, options);
                                if (options.oneofs)
                                    object.valueTypeOptions = "integerTypeOptions";
                            }
                            if (message.floatTypeOptions != null && message.hasOwnProperty("floatTypeOptions")) {
                                object.floatTypeOptions = $root.google.cloud.contentwarehouse.v1.FloatTypeOptions.toObject(message.floatTypeOptions, options);
                                if (options.oneofs)
                                    object.valueTypeOptions = "floatTypeOptions";
                            }
                            if (message.textTypeOptions != null && message.hasOwnProperty("textTypeOptions")) {
                                object.textTypeOptions = $root.google.cloud.contentwarehouse.v1.TextTypeOptions.toObject(message.textTypeOptions, options);
                                if (options.oneofs)
                                    object.valueTypeOptions = "textTypeOptions";
                            }
                            if (message.propertyTypeOptions != null && message.hasOwnProperty("propertyTypeOptions")) {
                                object.propertyTypeOptions = $root.google.cloud.contentwarehouse.v1.PropertyTypeOptions.toObject(message.propertyTypeOptions, options);
                                if (options.oneofs)
                                    object.valueTypeOptions = "propertyTypeOptions";
                            }
                            if (message.enumTypeOptions != null && message.hasOwnProperty("enumTypeOptions")) {
                                object.enumTypeOptions = $root.google.cloud.contentwarehouse.v1.EnumTypeOptions.toObject(message.enumTypeOptions, options);
                                if (options.oneofs)
                                    object.valueTypeOptions = "enumTypeOptions";
                            }
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.dateTimeTypeOptions != null && message.hasOwnProperty("dateTimeTypeOptions")) {
                                object.dateTimeTypeOptions = $root.google.cloud.contentwarehouse.v1.DateTimeTypeOptions.toObject(message.dateTimeTypeOptions, options);
                                if (options.oneofs)
                                    object.valueTypeOptions = "dateTimeTypeOptions";
                            }
                            if (message.isRequired != null && message.hasOwnProperty("isRequired"))
                                object.isRequired = message.isRequired;
                            if (message.mapTypeOptions != null && message.hasOwnProperty("mapTypeOptions")) {
                                object.mapTypeOptions = $root.google.cloud.contentwarehouse.v1.MapTypeOptions.toObject(message.mapTypeOptions, options);
                                if (options.oneofs)
                                    object.valueTypeOptions = "mapTypeOptions";
                            }
                            if (message.timestampTypeOptions != null && message.hasOwnProperty("timestampTypeOptions")) {
                                object.timestampTypeOptions = $root.google.cloud.contentwarehouse.v1.TimestampTypeOptions.toObject(message.timestampTypeOptions, options);
                                if (options.oneofs)
                                    object.valueTypeOptions = "timestampTypeOptions";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PropertyDefinition to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PropertyDefinition.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PropertyDefinition
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.PropertyDefinition
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PropertyDefinition.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.PropertyDefinition";
                        };
    
                        return PropertyDefinition;
                    })();
    
                    v1.IntegerTypeOptions = (function() {
    
                        /**
                         * Properties of an IntegerTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IIntegerTypeOptions
                         */
    
                        /**
                         * Constructs a new IntegerTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an IntegerTypeOptions.
                         * @implements IIntegerTypeOptions
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IIntegerTypeOptions=} [properties] Properties to set
                         */
                        function IntegerTypeOptions(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new IntegerTypeOptions instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.IntegerTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IIntegerTypeOptions=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.IntegerTypeOptions} IntegerTypeOptions instance
                         */
                        IntegerTypeOptions.create = function create(properties) {
                            return new IntegerTypeOptions(properties);
                        };
    
                        /**
                         * Encodes the specified IntegerTypeOptions message. Does not implicitly {@link google.cloud.contentwarehouse.v1.IntegerTypeOptions.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.IntegerTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IIntegerTypeOptions} message IntegerTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IntegerTypeOptions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified IntegerTypeOptions message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.IntegerTypeOptions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.IntegerTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IIntegerTypeOptions} message IntegerTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IntegerTypeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an IntegerTypeOptions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.IntegerTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.IntegerTypeOptions} IntegerTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IntegerTypeOptions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.IntegerTypeOptions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an IntegerTypeOptions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.IntegerTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.IntegerTypeOptions} IntegerTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IntegerTypeOptions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an IntegerTypeOptions message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.IntegerTypeOptions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        IntegerTypeOptions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates an IntegerTypeOptions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.IntegerTypeOptions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.IntegerTypeOptions} IntegerTypeOptions
                         */
                        IntegerTypeOptions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.IntegerTypeOptions)
                                return object;
                            return new $root.google.cloud.contentwarehouse.v1.IntegerTypeOptions();
                        };
    
                        /**
                         * Creates a plain object from an IntegerTypeOptions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.IntegerTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IntegerTypeOptions} message IntegerTypeOptions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        IntegerTypeOptions.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this IntegerTypeOptions to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.IntegerTypeOptions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        IntegerTypeOptions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for IntegerTypeOptions
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.IntegerTypeOptions
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        IntegerTypeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.IntegerTypeOptions";
                        };
    
                        return IntegerTypeOptions;
                    })();
    
                    v1.FloatTypeOptions = (function() {
    
                        /**
                         * Properties of a FloatTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IFloatTypeOptions
                         */
    
                        /**
                         * Constructs a new FloatTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a FloatTypeOptions.
                         * @implements IFloatTypeOptions
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IFloatTypeOptions=} [properties] Properties to set
                         */
                        function FloatTypeOptions(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new FloatTypeOptions instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.FloatTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IFloatTypeOptions=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.FloatTypeOptions} FloatTypeOptions instance
                         */
                        FloatTypeOptions.create = function create(properties) {
                            return new FloatTypeOptions(properties);
                        };
    
                        /**
                         * Encodes the specified FloatTypeOptions message. Does not implicitly {@link google.cloud.contentwarehouse.v1.FloatTypeOptions.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.FloatTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IFloatTypeOptions} message FloatTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FloatTypeOptions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FloatTypeOptions message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.FloatTypeOptions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.FloatTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IFloatTypeOptions} message FloatTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FloatTypeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FloatTypeOptions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.FloatTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.FloatTypeOptions} FloatTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FloatTypeOptions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.FloatTypeOptions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FloatTypeOptions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.FloatTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.FloatTypeOptions} FloatTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FloatTypeOptions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FloatTypeOptions message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.FloatTypeOptions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FloatTypeOptions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a FloatTypeOptions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.FloatTypeOptions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.FloatTypeOptions} FloatTypeOptions
                         */
                        FloatTypeOptions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.FloatTypeOptions)
                                return object;
                            return new $root.google.cloud.contentwarehouse.v1.FloatTypeOptions();
                        };
    
                        /**
                         * Creates a plain object from a FloatTypeOptions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.FloatTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.FloatTypeOptions} message FloatTypeOptions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FloatTypeOptions.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this FloatTypeOptions to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.FloatTypeOptions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FloatTypeOptions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FloatTypeOptions
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.FloatTypeOptions
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FloatTypeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.FloatTypeOptions";
                        };
    
                        return FloatTypeOptions;
                    })();
    
                    v1.TextTypeOptions = (function() {
    
                        /**
                         * Properties of a TextTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ITextTypeOptions
                         */
    
                        /**
                         * Constructs a new TextTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a TextTypeOptions.
                         * @implements ITextTypeOptions
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ITextTypeOptions=} [properties] Properties to set
                         */
                        function TextTypeOptions(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new TextTypeOptions instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.TextTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITextTypeOptions=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.TextTypeOptions} TextTypeOptions instance
                         */
                        TextTypeOptions.create = function create(properties) {
                            return new TextTypeOptions(properties);
                        };
    
                        /**
                         * Encodes the specified TextTypeOptions message. Does not implicitly {@link google.cloud.contentwarehouse.v1.TextTypeOptions.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.TextTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITextTypeOptions} message TextTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TextTypeOptions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TextTypeOptions message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.TextTypeOptions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.TextTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITextTypeOptions} message TextTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TextTypeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TextTypeOptions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.TextTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.TextTypeOptions} TextTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TextTypeOptions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.TextTypeOptions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TextTypeOptions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.TextTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.TextTypeOptions} TextTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TextTypeOptions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TextTypeOptions message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.TextTypeOptions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TextTypeOptions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a TextTypeOptions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.TextTypeOptions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.TextTypeOptions} TextTypeOptions
                         */
                        TextTypeOptions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.TextTypeOptions)
                                return object;
                            return new $root.google.cloud.contentwarehouse.v1.TextTypeOptions();
                        };
    
                        /**
                         * Creates a plain object from a TextTypeOptions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.TextTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.TextTypeOptions} message TextTypeOptions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TextTypeOptions.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this TextTypeOptions to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.TextTypeOptions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TextTypeOptions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TextTypeOptions
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.TextTypeOptions
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TextTypeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.TextTypeOptions";
                        };
    
                        return TextTypeOptions;
                    })();
    
                    v1.DateTimeTypeOptions = (function() {
    
                        /**
                         * Properties of a DateTimeTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IDateTimeTypeOptions
                         */
    
                        /**
                         * Constructs a new DateTimeTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DateTimeTypeOptions.
                         * @implements IDateTimeTypeOptions
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IDateTimeTypeOptions=} [properties] Properties to set
                         */
                        function DateTimeTypeOptions(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new DateTimeTypeOptions instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDateTimeTypeOptions=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.DateTimeTypeOptions} DateTimeTypeOptions instance
                         */
                        DateTimeTypeOptions.create = function create(properties) {
                            return new DateTimeTypeOptions(properties);
                        };
    
                        /**
                         * Encodes the specified DateTimeTypeOptions message. Does not implicitly {@link google.cloud.contentwarehouse.v1.DateTimeTypeOptions.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDateTimeTypeOptions} message DateTimeTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DateTimeTypeOptions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DateTimeTypeOptions message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.DateTimeTypeOptions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDateTimeTypeOptions} message DateTimeTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DateTimeTypeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DateTimeTypeOptions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.DateTimeTypeOptions} DateTimeTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DateTimeTypeOptions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.DateTimeTypeOptions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DateTimeTypeOptions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.DateTimeTypeOptions} DateTimeTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DateTimeTypeOptions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DateTimeTypeOptions message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeTypeOptions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DateTimeTypeOptions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a DateTimeTypeOptions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeTypeOptions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.DateTimeTypeOptions} DateTimeTypeOptions
                         */
                        DateTimeTypeOptions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.DateTimeTypeOptions)
                                return object;
                            return new $root.google.cloud.contentwarehouse.v1.DateTimeTypeOptions();
                        };
    
                        /**
                         * Creates a plain object from a DateTimeTypeOptions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.DateTimeTypeOptions} message DateTimeTypeOptions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DateTimeTypeOptions.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this DateTimeTypeOptions to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeTypeOptions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DateTimeTypeOptions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DateTimeTypeOptions
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.DateTimeTypeOptions
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DateTimeTypeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.DateTimeTypeOptions";
                        };
    
                        return DateTimeTypeOptions;
                    })();
    
                    v1.MapTypeOptions = (function() {
    
                        /**
                         * Properties of a MapTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IMapTypeOptions
                         */
    
                        /**
                         * Constructs a new MapTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a MapTypeOptions.
                         * @implements IMapTypeOptions
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IMapTypeOptions=} [properties] Properties to set
                         */
                        function MapTypeOptions(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new MapTypeOptions instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.MapTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IMapTypeOptions=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.MapTypeOptions} MapTypeOptions instance
                         */
                        MapTypeOptions.create = function create(properties) {
                            return new MapTypeOptions(properties);
                        };
    
                        /**
                         * Encodes the specified MapTypeOptions message. Does not implicitly {@link google.cloud.contentwarehouse.v1.MapTypeOptions.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.MapTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IMapTypeOptions} message MapTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MapTypeOptions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MapTypeOptions message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.MapTypeOptions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.MapTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IMapTypeOptions} message MapTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MapTypeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MapTypeOptions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.MapTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.MapTypeOptions} MapTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MapTypeOptions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.MapTypeOptions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MapTypeOptions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.MapTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.MapTypeOptions} MapTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MapTypeOptions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MapTypeOptions message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.MapTypeOptions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MapTypeOptions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a MapTypeOptions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.MapTypeOptions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.MapTypeOptions} MapTypeOptions
                         */
                        MapTypeOptions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.MapTypeOptions)
                                return object;
                            return new $root.google.cloud.contentwarehouse.v1.MapTypeOptions();
                        };
    
                        /**
                         * Creates a plain object from a MapTypeOptions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.MapTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.MapTypeOptions} message MapTypeOptions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MapTypeOptions.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this MapTypeOptions to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.MapTypeOptions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MapTypeOptions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MapTypeOptions
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.MapTypeOptions
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MapTypeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.MapTypeOptions";
                        };
    
                        return MapTypeOptions;
                    })();
    
                    v1.TimestampTypeOptions = (function() {
    
                        /**
                         * Properties of a TimestampTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ITimestampTypeOptions
                         */
    
                        /**
                         * Constructs a new TimestampTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a TimestampTypeOptions.
                         * @implements ITimestampTypeOptions
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ITimestampTypeOptions=} [properties] Properties to set
                         */
                        function TimestampTypeOptions(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Creates a new TimestampTypeOptions instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.TimestampTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITimestampTypeOptions=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.TimestampTypeOptions} TimestampTypeOptions instance
                         */
                        TimestampTypeOptions.create = function create(properties) {
                            return new TimestampTypeOptions(properties);
                        };
    
                        /**
                         * Encodes the specified TimestampTypeOptions message. Does not implicitly {@link google.cloud.contentwarehouse.v1.TimestampTypeOptions.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.TimestampTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITimestampTypeOptions} message TimestampTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TimestampTypeOptions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TimestampTypeOptions message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.TimestampTypeOptions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.TimestampTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITimestampTypeOptions} message TimestampTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TimestampTypeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TimestampTypeOptions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.TimestampTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.TimestampTypeOptions} TimestampTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TimestampTypeOptions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.TimestampTypeOptions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TimestampTypeOptions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.TimestampTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.TimestampTypeOptions} TimestampTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TimestampTypeOptions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TimestampTypeOptions message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.TimestampTypeOptions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TimestampTypeOptions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            return null;
                        };
    
                        /**
                         * Creates a TimestampTypeOptions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.TimestampTypeOptions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.TimestampTypeOptions} TimestampTypeOptions
                         */
                        TimestampTypeOptions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.TimestampTypeOptions)
                                return object;
                            return new $root.google.cloud.contentwarehouse.v1.TimestampTypeOptions();
                        };
    
                        /**
                         * Creates a plain object from a TimestampTypeOptions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.TimestampTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.TimestampTypeOptions} message TimestampTypeOptions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TimestampTypeOptions.toObject = function toObject() {
                            return {};
                        };
    
                        /**
                         * Converts this TimestampTypeOptions to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.TimestampTypeOptions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TimestampTypeOptions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TimestampTypeOptions
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.TimestampTypeOptions
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TimestampTypeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.TimestampTypeOptions";
                        };
    
                        return TimestampTypeOptions;
                    })();
    
                    v1.PropertyTypeOptions = (function() {
    
                        /**
                         * Properties of a PropertyTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IPropertyTypeOptions
                         * @property {Array.<google.cloud.contentwarehouse.v1.IPropertyDefinition>|null} [propertyDefinitions] PropertyTypeOptions propertyDefinitions
                         */
    
                        /**
                         * Constructs a new PropertyTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a PropertyTypeOptions.
                         * @implements IPropertyTypeOptions
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IPropertyTypeOptions=} [properties] Properties to set
                         */
                        function PropertyTypeOptions(properties) {
                            this.propertyDefinitions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PropertyTypeOptions propertyDefinitions.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IPropertyDefinition>} propertyDefinitions
                         * @memberof google.cloud.contentwarehouse.v1.PropertyTypeOptions
                         * @instance
                         */
                        PropertyTypeOptions.prototype.propertyDefinitions = $util.emptyArray;
    
                        /**
                         * Creates a new PropertyTypeOptions instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.PropertyTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IPropertyTypeOptions=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.PropertyTypeOptions} PropertyTypeOptions instance
                         */
                        PropertyTypeOptions.create = function create(properties) {
                            return new PropertyTypeOptions(properties);
                        };
    
                        /**
                         * Encodes the specified PropertyTypeOptions message. Does not implicitly {@link google.cloud.contentwarehouse.v1.PropertyTypeOptions.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.PropertyTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IPropertyTypeOptions} message PropertyTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PropertyTypeOptions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.propertyDefinitions != null && message.propertyDefinitions.length)
                                for (var i = 0; i < message.propertyDefinitions.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.PropertyDefinition.encode(message.propertyDefinitions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PropertyTypeOptions message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.PropertyTypeOptions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.PropertyTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IPropertyTypeOptions} message PropertyTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PropertyTypeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PropertyTypeOptions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.PropertyTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.PropertyTypeOptions} PropertyTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PropertyTypeOptions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.PropertyTypeOptions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.propertyDefinitions && message.propertyDefinitions.length))
                                            message.propertyDefinitions = [];
                                        message.propertyDefinitions.push($root.google.cloud.contentwarehouse.v1.PropertyDefinition.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PropertyTypeOptions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.PropertyTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.PropertyTypeOptions} PropertyTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PropertyTypeOptions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PropertyTypeOptions message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.PropertyTypeOptions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PropertyTypeOptions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.propertyDefinitions != null && message.hasOwnProperty("propertyDefinitions")) {
                                if (!Array.isArray(message.propertyDefinitions))
                                    return "propertyDefinitions: array expected";
                                for (var i = 0; i < message.propertyDefinitions.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.PropertyDefinition.verify(message.propertyDefinitions[i]);
                                    if (error)
                                        return "propertyDefinitions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PropertyTypeOptions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.PropertyTypeOptions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.PropertyTypeOptions} PropertyTypeOptions
                         */
                        PropertyTypeOptions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.PropertyTypeOptions)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.PropertyTypeOptions();
                            if (object.propertyDefinitions) {
                                if (!Array.isArray(object.propertyDefinitions))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.PropertyTypeOptions.propertyDefinitions: array expected");
                                message.propertyDefinitions = [];
                                for (var i = 0; i < object.propertyDefinitions.length; ++i) {
                                    if (typeof object.propertyDefinitions[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.PropertyTypeOptions.propertyDefinitions: object expected");
                                    message.propertyDefinitions[i] = $root.google.cloud.contentwarehouse.v1.PropertyDefinition.fromObject(object.propertyDefinitions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PropertyTypeOptions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.PropertyTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.PropertyTypeOptions} message PropertyTypeOptions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PropertyTypeOptions.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.propertyDefinitions = [];
                            if (message.propertyDefinitions && message.propertyDefinitions.length) {
                                object.propertyDefinitions = [];
                                for (var j = 0; j < message.propertyDefinitions.length; ++j)
                                    object.propertyDefinitions[j] = $root.google.cloud.contentwarehouse.v1.PropertyDefinition.toObject(message.propertyDefinitions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PropertyTypeOptions to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.PropertyTypeOptions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PropertyTypeOptions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PropertyTypeOptions
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.PropertyTypeOptions
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PropertyTypeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.PropertyTypeOptions";
                        };
    
                        return PropertyTypeOptions;
                    })();
    
                    v1.EnumTypeOptions = (function() {
    
                        /**
                         * Properties of an EnumTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IEnumTypeOptions
                         * @property {Array.<string>|null} [possibleValues] EnumTypeOptions possibleValues
                         * @property {boolean|null} [validationCheckDisabled] EnumTypeOptions validationCheckDisabled
                         */
    
                        /**
                         * Constructs a new EnumTypeOptions.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an EnumTypeOptions.
                         * @implements IEnumTypeOptions
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IEnumTypeOptions=} [properties] Properties to set
                         */
                        function EnumTypeOptions(properties) {
                            this.possibleValues = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EnumTypeOptions possibleValues.
                         * @member {Array.<string>} possibleValues
                         * @memberof google.cloud.contentwarehouse.v1.EnumTypeOptions
                         * @instance
                         */
                        EnumTypeOptions.prototype.possibleValues = $util.emptyArray;
    
                        /**
                         * EnumTypeOptions validationCheckDisabled.
                         * @member {boolean} validationCheckDisabled
                         * @memberof google.cloud.contentwarehouse.v1.EnumTypeOptions
                         * @instance
                         */
                        EnumTypeOptions.prototype.validationCheckDisabled = false;
    
                        /**
                         * Creates a new EnumTypeOptions instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.EnumTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IEnumTypeOptions=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.EnumTypeOptions} EnumTypeOptions instance
                         */
                        EnumTypeOptions.create = function create(properties) {
                            return new EnumTypeOptions(properties);
                        };
    
                        /**
                         * Encodes the specified EnumTypeOptions message. Does not implicitly {@link google.cloud.contentwarehouse.v1.EnumTypeOptions.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.EnumTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IEnumTypeOptions} message EnumTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnumTypeOptions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.possibleValues != null && message.possibleValues.length)
                                for (var i = 0; i < message.possibleValues.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.possibleValues[i]);
                            if (message.validationCheckDisabled != null && Object.hasOwnProperty.call(message, "validationCheckDisabled"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.validationCheckDisabled);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EnumTypeOptions message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.EnumTypeOptions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.EnumTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IEnumTypeOptions} message EnumTypeOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnumTypeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EnumTypeOptions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.EnumTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.EnumTypeOptions} EnumTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnumTypeOptions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.EnumTypeOptions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.possibleValues && message.possibleValues.length))
                                            message.possibleValues = [];
                                        message.possibleValues.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        message.validationCheckDisabled = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EnumTypeOptions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.EnumTypeOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.EnumTypeOptions} EnumTypeOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnumTypeOptions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EnumTypeOptions message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.EnumTypeOptions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EnumTypeOptions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.possibleValues != null && message.hasOwnProperty("possibleValues")) {
                                if (!Array.isArray(message.possibleValues))
                                    return "possibleValues: array expected";
                                for (var i = 0; i < message.possibleValues.length; ++i)
                                    if (!$util.isString(message.possibleValues[i]))
                                        return "possibleValues: string[] expected";
                            }
                            if (message.validationCheckDisabled != null && message.hasOwnProperty("validationCheckDisabled"))
                                if (typeof message.validationCheckDisabled !== "boolean")
                                    return "validationCheckDisabled: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an EnumTypeOptions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.EnumTypeOptions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.EnumTypeOptions} EnumTypeOptions
                         */
                        EnumTypeOptions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.EnumTypeOptions)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.EnumTypeOptions();
                            if (object.possibleValues) {
                                if (!Array.isArray(object.possibleValues))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.EnumTypeOptions.possibleValues: array expected");
                                message.possibleValues = [];
                                for (var i = 0; i < object.possibleValues.length; ++i)
                                    message.possibleValues[i] = String(object.possibleValues[i]);
                            }
                            if (object.validationCheckDisabled != null)
                                message.validationCheckDisabled = Boolean(object.validationCheckDisabled);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EnumTypeOptions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.EnumTypeOptions
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.EnumTypeOptions} message EnumTypeOptions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EnumTypeOptions.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.possibleValues = [];
                            if (options.defaults)
                                object.validationCheckDisabled = false;
                            if (message.possibleValues && message.possibleValues.length) {
                                object.possibleValues = [];
                                for (var j = 0; j < message.possibleValues.length; ++j)
                                    object.possibleValues[j] = message.possibleValues[j];
                            }
                            if (message.validationCheckDisabled != null && message.hasOwnProperty("validationCheckDisabled"))
                                object.validationCheckDisabled = message.validationCheckDisabled;
                            return object;
                        };
    
                        /**
                         * Converts this EnumTypeOptions to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.EnumTypeOptions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EnumTypeOptions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EnumTypeOptions
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.EnumTypeOptions
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EnumTypeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.EnumTypeOptions";
                        };
    
                        return EnumTypeOptions;
                    })();
    
                    v1.DocumentSchemaService = (function() {
    
                        /**
                         * Constructs a new DocumentSchemaService service.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DocumentSchemaService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function DocumentSchemaService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (DocumentSchemaService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = DocumentSchemaService;
    
                        /**
                         * Creates new DocumentSchemaService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {DocumentSchemaService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        DocumentSchemaService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentSchemaService|createDocumentSchema}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @typedef CreateDocumentSchemaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.DocumentSchema} [response] DocumentSchema
                         */
    
                        /**
                         * Calls CreateDocumentSchema.
                         * @function createDocumentSchema
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentSchemaRequest} request CreateDocumentSchemaRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentSchemaService.CreateDocumentSchemaCallback} callback Node-style callback called with the error, if any, and DocumentSchema
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentSchemaService.prototype.createDocumentSchema = function createDocumentSchema(request, callback) {
                            return this.rpcCall(createDocumentSchema, $root.google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest, $root.google.cloud.contentwarehouse.v1.DocumentSchema, request, callback);
                        }, "name", { value: "CreateDocumentSchema" });
    
                        /**
                         * Calls CreateDocumentSchema.
                         * @function createDocumentSchema
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentSchemaRequest} request CreateDocumentSchemaRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.DocumentSchema>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentSchemaService|updateDocumentSchema}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @typedef UpdateDocumentSchemaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.DocumentSchema} [response] DocumentSchema
                         */
    
                        /**
                         * Calls UpdateDocumentSchema.
                         * @function updateDocumentSchema
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentSchemaRequest} request UpdateDocumentSchemaRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentSchemaService.UpdateDocumentSchemaCallback} callback Node-style callback called with the error, if any, and DocumentSchema
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentSchemaService.prototype.updateDocumentSchema = function updateDocumentSchema(request, callback) {
                            return this.rpcCall(updateDocumentSchema, $root.google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest, $root.google.cloud.contentwarehouse.v1.DocumentSchema, request, callback);
                        }, "name", { value: "UpdateDocumentSchema" });
    
                        /**
                         * Calls UpdateDocumentSchema.
                         * @function updateDocumentSchema
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentSchemaRequest} request UpdateDocumentSchemaRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.DocumentSchema>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentSchemaService|getDocumentSchema}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @typedef GetDocumentSchemaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.DocumentSchema} [response] DocumentSchema
                         */
    
                        /**
                         * Calls GetDocumentSchema.
                         * @function getDocumentSchema
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IGetDocumentSchemaRequest} request GetDocumentSchemaRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentSchemaService.GetDocumentSchemaCallback} callback Node-style callback called with the error, if any, and DocumentSchema
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentSchemaService.prototype.getDocumentSchema = function getDocumentSchema(request, callback) {
                            return this.rpcCall(getDocumentSchema, $root.google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest, $root.google.cloud.contentwarehouse.v1.DocumentSchema, request, callback);
                        }, "name", { value: "GetDocumentSchema" });
    
                        /**
                         * Calls GetDocumentSchema.
                         * @function getDocumentSchema
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IGetDocumentSchemaRequest} request GetDocumentSchemaRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.DocumentSchema>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentSchemaService|deleteDocumentSchema}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @typedef DeleteDocumentSchemaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteDocumentSchema.
                         * @function deleteDocumentSchema
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentSchemaRequest} request DeleteDocumentSchemaRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentSchemaService.DeleteDocumentSchemaCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentSchemaService.prototype.deleteDocumentSchema = function deleteDocumentSchema(request, callback) {
                            return this.rpcCall(deleteDocumentSchema, $root.google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteDocumentSchema" });
    
                        /**
                         * Calls DeleteDocumentSchema.
                         * @function deleteDocumentSchema
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentSchemaRequest} request DeleteDocumentSchemaRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentSchemaService|listDocumentSchemas}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @typedef ListDocumentSchemasCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse} [response] ListDocumentSchemasResponse
                         */
    
                        /**
                         * Calls ListDocumentSchemas.
                         * @function listDocumentSchemas
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IListDocumentSchemasRequest} request ListDocumentSchemasRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentSchemaService.ListDocumentSchemasCallback} callback Node-style callback called with the error, if any, and ListDocumentSchemasResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentSchemaService.prototype.listDocumentSchemas = function listDocumentSchemas(request, callback) {
                            return this.rpcCall(listDocumentSchemas, $root.google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest, $root.google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse, request, callback);
                        }, "name", { value: "ListDocumentSchemas" });
    
                        /**
                         * Calls ListDocumentSchemas.
                         * @function listDocumentSchemas
                         * @memberof google.cloud.contentwarehouse.v1.DocumentSchemaService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IListDocumentSchemasRequest} request ListDocumentSchemasRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse>} Promise
                         * @variation 2
                         */
    
                        return DocumentSchemaService;
                    })();
    
                    v1.CreateDocumentSchemaRequest = (function() {
    
                        /**
                         * Properties of a CreateDocumentSchemaRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ICreateDocumentSchemaRequest
                         * @property {string|null} [parent] CreateDocumentSchemaRequest parent
                         * @property {google.cloud.contentwarehouse.v1.IDocumentSchema|null} [documentSchema] CreateDocumentSchemaRequest documentSchema
                         */
    
                        /**
                         * Constructs a new CreateDocumentSchemaRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a CreateDocumentSchemaRequest.
                         * @implements ICreateDocumentSchemaRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentSchemaRequest=} [properties] Properties to set
                         */
                        function CreateDocumentSchemaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateDocumentSchemaRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest
                         * @instance
                         */
                        CreateDocumentSchemaRequest.prototype.parent = "";
    
                        /**
                         * CreateDocumentSchemaRequest documentSchema.
                         * @member {google.cloud.contentwarehouse.v1.IDocumentSchema|null|undefined} documentSchema
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest
                         * @instance
                         */
                        CreateDocumentSchemaRequest.prototype.documentSchema = null;
    
                        /**
                         * Creates a new CreateDocumentSchemaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentSchemaRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest} CreateDocumentSchemaRequest instance
                         */
                        CreateDocumentSchemaRequest.create = function create(properties) {
                            return new CreateDocumentSchemaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateDocumentSchemaRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentSchemaRequest} message CreateDocumentSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDocumentSchemaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.documentSchema != null && Object.hasOwnProperty.call(message, "documentSchema"))
                                $root.google.cloud.contentwarehouse.v1.DocumentSchema.encode(message.documentSchema, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateDocumentSchemaRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentSchemaRequest} message CreateDocumentSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDocumentSchemaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateDocumentSchemaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest} CreateDocumentSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDocumentSchemaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.documentSchema = $root.google.cloud.contentwarehouse.v1.DocumentSchema.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateDocumentSchemaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest} CreateDocumentSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDocumentSchemaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateDocumentSchemaRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateDocumentSchemaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.documentSchema != null && message.hasOwnProperty("documentSchema")) {
                                var error = $root.google.cloud.contentwarehouse.v1.DocumentSchema.verify(message.documentSchema);
                                if (error)
                                    return "documentSchema." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateDocumentSchemaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest} CreateDocumentSchemaRequest
                         */
                        CreateDocumentSchemaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.documentSchema != null) {
                                if (typeof object.documentSchema !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest.documentSchema: object expected");
                                message.documentSchema = $root.google.cloud.contentwarehouse.v1.DocumentSchema.fromObject(object.documentSchema);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateDocumentSchemaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest} message CreateDocumentSchemaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateDocumentSchemaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.documentSchema = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.documentSchema != null && message.hasOwnProperty("documentSchema"))
                                object.documentSchema = $root.google.cloud.contentwarehouse.v1.DocumentSchema.toObject(message.documentSchema, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateDocumentSchemaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateDocumentSchemaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateDocumentSchemaRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateDocumentSchemaRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.CreateDocumentSchemaRequest";
                        };
    
                        return CreateDocumentSchemaRequest;
                    })();
    
                    v1.GetDocumentSchemaRequest = (function() {
    
                        /**
                         * Properties of a GetDocumentSchemaRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IGetDocumentSchemaRequest
                         * @property {string|null} [name] GetDocumentSchemaRequest name
                         */
    
                        /**
                         * Constructs a new GetDocumentSchemaRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a GetDocumentSchemaRequest.
                         * @implements IGetDocumentSchemaRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IGetDocumentSchemaRequest=} [properties] Properties to set
                         */
                        function GetDocumentSchemaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetDocumentSchemaRequest name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest
                         * @instance
                         */
                        GetDocumentSchemaRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetDocumentSchemaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IGetDocumentSchemaRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest} GetDocumentSchemaRequest instance
                         */
                        GetDocumentSchemaRequest.create = function create(properties) {
                            return new GetDocumentSchemaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetDocumentSchemaRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IGetDocumentSchemaRequest} message GetDocumentSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetDocumentSchemaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetDocumentSchemaRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IGetDocumentSchemaRequest} message GetDocumentSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetDocumentSchemaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetDocumentSchemaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest} GetDocumentSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetDocumentSchemaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetDocumentSchemaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest} GetDocumentSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetDocumentSchemaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetDocumentSchemaRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetDocumentSchemaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetDocumentSchemaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest} GetDocumentSchemaRequest
                         */
                        GetDocumentSchemaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetDocumentSchemaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest} message GetDocumentSchemaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetDocumentSchemaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetDocumentSchemaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetDocumentSchemaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetDocumentSchemaRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetDocumentSchemaRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.GetDocumentSchemaRequest";
                        };
    
                        return GetDocumentSchemaRequest;
                    })();
    
                    v1.UpdateDocumentSchemaRequest = (function() {
    
                        /**
                         * Properties of an UpdateDocumentSchemaRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IUpdateDocumentSchemaRequest
                         * @property {string|null} [name] UpdateDocumentSchemaRequest name
                         * @property {google.cloud.contentwarehouse.v1.IDocumentSchema|null} [documentSchema] UpdateDocumentSchemaRequest documentSchema
                         */
    
                        /**
                         * Constructs a new UpdateDocumentSchemaRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an UpdateDocumentSchemaRequest.
                         * @implements IUpdateDocumentSchemaRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentSchemaRequest=} [properties] Properties to set
                         */
                        function UpdateDocumentSchemaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateDocumentSchemaRequest name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest
                         * @instance
                         */
                        UpdateDocumentSchemaRequest.prototype.name = "";
    
                        /**
                         * UpdateDocumentSchemaRequest documentSchema.
                         * @member {google.cloud.contentwarehouse.v1.IDocumentSchema|null|undefined} documentSchema
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest
                         * @instance
                         */
                        UpdateDocumentSchemaRequest.prototype.documentSchema = null;
    
                        /**
                         * Creates a new UpdateDocumentSchemaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentSchemaRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest} UpdateDocumentSchemaRequest instance
                         */
                        UpdateDocumentSchemaRequest.create = function create(properties) {
                            return new UpdateDocumentSchemaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateDocumentSchemaRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentSchemaRequest} message UpdateDocumentSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateDocumentSchemaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.documentSchema != null && Object.hasOwnProperty.call(message, "documentSchema"))
                                $root.google.cloud.contentwarehouse.v1.DocumentSchema.encode(message.documentSchema, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateDocumentSchemaRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentSchemaRequest} message UpdateDocumentSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateDocumentSchemaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateDocumentSchemaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest} UpdateDocumentSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateDocumentSchemaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.documentSchema = $root.google.cloud.contentwarehouse.v1.DocumentSchema.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateDocumentSchemaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest} UpdateDocumentSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateDocumentSchemaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateDocumentSchemaRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateDocumentSchemaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.documentSchema != null && message.hasOwnProperty("documentSchema")) {
                                var error = $root.google.cloud.contentwarehouse.v1.DocumentSchema.verify(message.documentSchema);
                                if (error)
                                    return "documentSchema." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateDocumentSchemaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest} UpdateDocumentSchemaRequest
                         */
                        UpdateDocumentSchemaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.documentSchema != null) {
                                if (typeof object.documentSchema !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest.documentSchema: object expected");
                                message.documentSchema = $root.google.cloud.contentwarehouse.v1.DocumentSchema.fromObject(object.documentSchema);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateDocumentSchemaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest} message UpdateDocumentSchemaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateDocumentSchemaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.documentSchema = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.documentSchema != null && message.hasOwnProperty("documentSchema"))
                                object.documentSchema = $root.google.cloud.contentwarehouse.v1.DocumentSchema.toObject(message.documentSchema, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateDocumentSchemaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateDocumentSchemaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateDocumentSchemaRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateDocumentSchemaRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.UpdateDocumentSchemaRequest";
                        };
    
                        return UpdateDocumentSchemaRequest;
                    })();
    
                    v1.DeleteDocumentSchemaRequest = (function() {
    
                        /**
                         * Properties of a DeleteDocumentSchemaRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IDeleteDocumentSchemaRequest
                         * @property {string|null} [name] DeleteDocumentSchemaRequest name
                         */
    
                        /**
                         * Constructs a new DeleteDocumentSchemaRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DeleteDocumentSchemaRequest.
                         * @implements IDeleteDocumentSchemaRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentSchemaRequest=} [properties] Properties to set
                         */
                        function DeleteDocumentSchemaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteDocumentSchemaRequest name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest
                         * @instance
                         */
                        DeleteDocumentSchemaRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteDocumentSchemaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentSchemaRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest} DeleteDocumentSchemaRequest instance
                         */
                        DeleteDocumentSchemaRequest.create = function create(properties) {
                            return new DeleteDocumentSchemaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteDocumentSchemaRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentSchemaRequest} message DeleteDocumentSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteDocumentSchemaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteDocumentSchemaRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentSchemaRequest} message DeleteDocumentSchemaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteDocumentSchemaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteDocumentSchemaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest} DeleteDocumentSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteDocumentSchemaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteDocumentSchemaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest} DeleteDocumentSchemaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteDocumentSchemaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteDocumentSchemaRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteDocumentSchemaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteDocumentSchemaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest} DeleteDocumentSchemaRequest
                         */
                        DeleteDocumentSchemaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteDocumentSchemaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest} message DeleteDocumentSchemaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteDocumentSchemaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteDocumentSchemaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteDocumentSchemaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteDocumentSchemaRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteDocumentSchemaRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.DeleteDocumentSchemaRequest";
                        };
    
                        return DeleteDocumentSchemaRequest;
                    })();
    
                    v1.ListDocumentSchemasRequest = (function() {
    
                        /**
                         * Properties of a ListDocumentSchemasRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IListDocumentSchemasRequest
                         * @property {string|null} [parent] ListDocumentSchemasRequest parent
                         * @property {number|null} [pageSize] ListDocumentSchemasRequest pageSize
                         * @property {string|null} [pageToken] ListDocumentSchemasRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListDocumentSchemasRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a ListDocumentSchemasRequest.
                         * @implements IListDocumentSchemasRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IListDocumentSchemasRequest=} [properties] Properties to set
                         */
                        function ListDocumentSchemasRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListDocumentSchemasRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest
                         * @instance
                         */
                        ListDocumentSchemasRequest.prototype.parent = "";
    
                        /**
                         * ListDocumentSchemasRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest
                         * @instance
                         */
                        ListDocumentSchemasRequest.prototype.pageSize = 0;
    
                        /**
                         * ListDocumentSchemasRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest
                         * @instance
                         */
                        ListDocumentSchemasRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListDocumentSchemasRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListDocumentSchemasRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest} ListDocumentSchemasRequest instance
                         */
                        ListDocumentSchemasRequest.create = function create(properties) {
                            return new ListDocumentSchemasRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListDocumentSchemasRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListDocumentSchemasRequest} message ListDocumentSchemasRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDocumentSchemasRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListDocumentSchemasRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListDocumentSchemasRequest} message ListDocumentSchemasRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDocumentSchemasRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListDocumentSchemasRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest} ListDocumentSchemasRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDocumentSchemasRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListDocumentSchemasRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest} ListDocumentSchemasRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDocumentSchemasRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListDocumentSchemasRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListDocumentSchemasRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListDocumentSchemasRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest} ListDocumentSchemasRequest
                         */
                        ListDocumentSchemasRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListDocumentSchemasRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest} message ListDocumentSchemasRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListDocumentSchemasRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListDocumentSchemasRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListDocumentSchemasRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListDocumentSchemasRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListDocumentSchemasRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.ListDocumentSchemasRequest";
                        };
    
                        return ListDocumentSchemasRequest;
                    })();
    
                    v1.ListDocumentSchemasResponse = (function() {
    
                        /**
                         * Properties of a ListDocumentSchemasResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IListDocumentSchemasResponse
                         * @property {Array.<google.cloud.contentwarehouse.v1.IDocumentSchema>|null} [documentSchemas] ListDocumentSchemasResponse documentSchemas
                         * @property {string|null} [nextPageToken] ListDocumentSchemasResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListDocumentSchemasResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a ListDocumentSchemasResponse.
                         * @implements IListDocumentSchemasResponse
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IListDocumentSchemasResponse=} [properties] Properties to set
                         */
                        function ListDocumentSchemasResponse(properties) {
                            this.documentSchemas = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListDocumentSchemasResponse documentSchemas.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IDocumentSchema>} documentSchemas
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse
                         * @instance
                         */
                        ListDocumentSchemasResponse.prototype.documentSchemas = $util.emptyArray;
    
                        /**
                         * ListDocumentSchemasResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse
                         * @instance
                         */
                        ListDocumentSchemasResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListDocumentSchemasResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListDocumentSchemasResponse=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse} ListDocumentSchemasResponse instance
                         */
                        ListDocumentSchemasResponse.create = function create(properties) {
                            return new ListDocumentSchemasResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListDocumentSchemasResponse message. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListDocumentSchemasResponse} message ListDocumentSchemasResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDocumentSchemasResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.documentSchemas != null && message.documentSchemas.length)
                                for (var i = 0; i < message.documentSchemas.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.DocumentSchema.encode(message.documentSchemas[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListDocumentSchemasResponse message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListDocumentSchemasResponse} message ListDocumentSchemasResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListDocumentSchemasResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListDocumentSchemasResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse} ListDocumentSchemasResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDocumentSchemasResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.documentSchemas && message.documentSchemas.length))
                                            message.documentSchemas = [];
                                        message.documentSchemas.push($root.google.cloud.contentwarehouse.v1.DocumentSchema.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListDocumentSchemasResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse} ListDocumentSchemasResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListDocumentSchemasResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListDocumentSchemasResponse message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListDocumentSchemasResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.documentSchemas != null && message.hasOwnProperty("documentSchemas")) {
                                if (!Array.isArray(message.documentSchemas))
                                    return "documentSchemas: array expected";
                                for (var i = 0; i < message.documentSchemas.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.DocumentSchema.verify(message.documentSchemas[i]);
                                    if (error)
                                        return "documentSchemas." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListDocumentSchemasResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse} ListDocumentSchemasResponse
                         */
                        ListDocumentSchemasResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse();
                            if (object.documentSchemas) {
                                if (!Array.isArray(object.documentSchemas))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse.documentSchemas: array expected");
                                message.documentSchemas = [];
                                for (var i = 0; i < object.documentSchemas.length; ++i) {
                                    if (typeof object.documentSchemas[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse.documentSchemas: object expected");
                                    message.documentSchemas[i] = $root.google.cloud.contentwarehouse.v1.DocumentSchema.fromObject(object.documentSchemas[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListDocumentSchemasResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse} message ListDocumentSchemasResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListDocumentSchemasResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.documentSchemas = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.documentSchemas && message.documentSchemas.length) {
                                object.documentSchemas = [];
                                for (var j = 0; j < message.documentSchemas.length; ++j)
                                    object.documentSchemas[j] = $root.google.cloud.contentwarehouse.v1.DocumentSchema.toObject(message.documentSchemas[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListDocumentSchemasResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListDocumentSchemasResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListDocumentSchemasResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListDocumentSchemasResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.ListDocumentSchemasResponse";
                        };
    
                        return ListDocumentSchemasResponse;
                    })();
    
                    v1.DocumentService = (function() {
    
                        /**
                         * Constructs a new DocumentService service.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DocumentService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function DocumentService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (DocumentService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = DocumentService;
    
                        /**
                         * Creates new DocumentService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {DocumentService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        DocumentService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentService|createDocument}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @typedef CreateDocumentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.CreateDocumentResponse} [response] CreateDocumentResponse
                         */
    
                        /**
                         * Calls CreateDocument.
                         * @function createDocument
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentRequest} request CreateDocumentRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentService.CreateDocumentCallback} callback Node-style callback called with the error, if any, and CreateDocumentResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.createDocument = function createDocument(request, callback) {
                            return this.rpcCall(createDocument, $root.google.cloud.contentwarehouse.v1.CreateDocumentRequest, $root.google.cloud.contentwarehouse.v1.CreateDocumentResponse, request, callback);
                        }, "name", { value: "CreateDocument" });
    
                        /**
                         * Calls CreateDocument.
                         * @function createDocument
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentRequest} request CreateDocumentRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.CreateDocumentResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentService|getDocument}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @typedef GetDocumentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.Document} [response] Document
                         */
    
                        /**
                         * Calls GetDocument.
                         * @function getDocument
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IGetDocumentRequest} request GetDocumentRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentService.GetDocumentCallback} callback Node-style callback called with the error, if any, and Document
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.getDocument = function getDocument(request, callback) {
                            return this.rpcCall(getDocument, $root.google.cloud.contentwarehouse.v1.GetDocumentRequest, $root.google.cloud.contentwarehouse.v1.Document, request, callback);
                        }, "name", { value: "GetDocument" });
    
                        /**
                         * Calls GetDocument.
                         * @function getDocument
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IGetDocumentRequest} request GetDocumentRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.Document>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentService|updateDocument}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @typedef UpdateDocumentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.UpdateDocumentResponse} [response] UpdateDocumentResponse
                         */
    
                        /**
                         * Calls UpdateDocument.
                         * @function updateDocument
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentRequest} request UpdateDocumentRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentService.UpdateDocumentCallback} callback Node-style callback called with the error, if any, and UpdateDocumentResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.updateDocument = function updateDocument(request, callback) {
                            return this.rpcCall(updateDocument, $root.google.cloud.contentwarehouse.v1.UpdateDocumentRequest, $root.google.cloud.contentwarehouse.v1.UpdateDocumentResponse, request, callback);
                        }, "name", { value: "UpdateDocument" });
    
                        /**
                         * Calls UpdateDocument.
                         * @function updateDocument
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentRequest} request UpdateDocumentRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.UpdateDocumentResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentService|deleteDocument}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @typedef DeleteDocumentCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteDocument.
                         * @function deleteDocument
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentRequest} request DeleteDocumentRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentService.DeleteDocumentCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.deleteDocument = function deleteDocument(request, callback) {
                            return this.rpcCall(deleteDocument, $root.google.cloud.contentwarehouse.v1.DeleteDocumentRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteDocument" });
    
                        /**
                         * Calls DeleteDocument.
                         * @function deleteDocument
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentRequest} request DeleteDocumentRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentService|searchDocuments}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @typedef SearchDocumentsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.SearchDocumentsResponse} [response] SearchDocumentsResponse
                         */
    
                        /**
                         * Calls SearchDocuments.
                         * @function searchDocuments
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.ISearchDocumentsRequest} request SearchDocumentsRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentService.SearchDocumentsCallback} callback Node-style callback called with the error, if any, and SearchDocumentsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.searchDocuments = function searchDocuments(request, callback) {
                            return this.rpcCall(searchDocuments, $root.google.cloud.contentwarehouse.v1.SearchDocumentsRequest, $root.google.cloud.contentwarehouse.v1.SearchDocumentsResponse, request, callback);
                        }, "name", { value: "SearchDocuments" });
    
                        /**
                         * Calls SearchDocuments.
                         * @function searchDocuments
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.ISearchDocumentsRequest} request SearchDocumentsRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.SearchDocumentsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentService|fetchAcl}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @typedef FetchAclCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.FetchAclResponse} [response] FetchAclResponse
                         */
    
                        /**
                         * Calls FetchAcl.
                         * @function fetchAcl
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IFetchAclRequest} request FetchAclRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentService.FetchAclCallback} callback Node-style callback called with the error, if any, and FetchAclResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.fetchAcl = function fetchAcl(request, callback) {
                            return this.rpcCall(fetchAcl, $root.google.cloud.contentwarehouse.v1.FetchAclRequest, $root.google.cloud.contentwarehouse.v1.FetchAclResponse, request, callback);
                        }, "name", { value: "FetchAcl" });
    
                        /**
                         * Calls FetchAcl.
                         * @function fetchAcl
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IFetchAclRequest} request FetchAclRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.FetchAclResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.DocumentService|setAcl}.
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @typedef SetAclCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.SetAclResponse} [response] SetAclResponse
                         */
    
                        /**
                         * Calls SetAcl.
                         * @function setAcl
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.ISetAclRequest} request SetAclRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.DocumentService.SetAclCallback} callback Node-style callback called with the error, if any, and SetAclResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(DocumentService.prototype.setAcl = function setAcl(request, callback) {
                            return this.rpcCall(setAcl, $root.google.cloud.contentwarehouse.v1.SetAclRequest, $root.google.cloud.contentwarehouse.v1.SetAclResponse, request, callback);
                        }, "name", { value: "SetAcl" });
    
                        /**
                         * Calls SetAcl.
                         * @function setAcl
                         * @memberof google.cloud.contentwarehouse.v1.DocumentService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.ISetAclRequest} request SetAclRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.SetAclResponse>} Promise
                         * @variation 2
                         */
    
                        return DocumentService;
                    })();
    
                    v1.CreateDocumentResponse = (function() {
    
                        /**
                         * Properties of a CreateDocumentResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ICreateDocumentResponse
                         * @property {google.cloud.contentwarehouse.v1.IDocument|null} [document] CreateDocumentResponse document
                         * @property {google.cloud.contentwarehouse.v1.IRuleEngineOutput|null} [ruleEngineOutput] CreateDocumentResponse ruleEngineOutput
                         * @property {google.cloud.contentwarehouse.v1.IResponseMetadata|null} [metadata] CreateDocumentResponse metadata
                         */
    
                        /**
                         * Constructs a new CreateDocumentResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a CreateDocumentResponse.
                         * @implements ICreateDocumentResponse
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentResponse=} [properties] Properties to set
                         */
                        function CreateDocumentResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateDocumentResponse document.
                         * @member {google.cloud.contentwarehouse.v1.IDocument|null|undefined} document
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentResponse
                         * @instance
                         */
                        CreateDocumentResponse.prototype.document = null;
    
                        /**
                         * CreateDocumentResponse ruleEngineOutput.
                         * @member {google.cloud.contentwarehouse.v1.IRuleEngineOutput|null|undefined} ruleEngineOutput
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentResponse
                         * @instance
                         */
                        CreateDocumentResponse.prototype.ruleEngineOutput = null;
    
                        /**
                         * CreateDocumentResponse metadata.
                         * @member {google.cloud.contentwarehouse.v1.IResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentResponse
                         * @instance
                         */
                        CreateDocumentResponse.prototype.metadata = null;
    
                        /**
                         * Creates a new CreateDocumentResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentResponse=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentResponse} CreateDocumentResponse instance
                         */
                        CreateDocumentResponse.create = function create(properties) {
                            return new CreateDocumentResponse(properties);
                        };
    
                        /**
                         * Encodes the specified CreateDocumentResponse message. Does not implicitly {@link google.cloud.contentwarehouse.v1.CreateDocumentResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentResponse} message CreateDocumentResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDocumentResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.document != null && Object.hasOwnProperty.call(message, "document"))
                                $root.google.cloud.contentwarehouse.v1.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.ruleEngineOutput != null && Object.hasOwnProperty.call(message, "ruleEngineOutput"))
                                $root.google.cloud.contentwarehouse.v1.RuleEngineOutput.encode(message.ruleEngineOutput, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.cloud.contentwarehouse.v1.ResponseMetadata.encode(message.metadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateDocumentResponse message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.CreateDocumentResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentResponse} message CreateDocumentResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDocumentResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateDocumentResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentResponse} CreateDocumentResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDocumentResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.CreateDocumentResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.document = $root.google.cloud.contentwarehouse.v1.Document.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.ruleEngineOutput = $root.google.cloud.contentwarehouse.v1.RuleEngineOutput.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.metadata = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateDocumentResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentResponse} CreateDocumentResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDocumentResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateDocumentResponse message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateDocumentResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.document != null && message.hasOwnProperty("document")) {
                                var error = $root.google.cloud.contentwarehouse.v1.Document.verify(message.document);
                                if (error)
                                    return "document." + error;
                            }
                            if (message.ruleEngineOutput != null && message.hasOwnProperty("ruleEngineOutput")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RuleEngineOutput.verify(message.ruleEngineOutput);
                                if (error)
                                    return "ruleEngineOutput." + error;
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateDocumentResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentResponse} CreateDocumentResponse
                         */
                        CreateDocumentResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.CreateDocumentResponse)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.CreateDocumentResponse();
                            if (object.document != null) {
                                if (typeof object.document !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.CreateDocumentResponse.document: object expected");
                                message.document = $root.google.cloud.contentwarehouse.v1.Document.fromObject(object.document);
                            }
                            if (object.ruleEngineOutput != null) {
                                if (typeof object.ruleEngineOutput !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.CreateDocumentResponse.ruleEngineOutput: object expected");
                                message.ruleEngineOutput = $root.google.cloud.contentwarehouse.v1.RuleEngineOutput.fromObject(object.ruleEngineOutput);
                            }
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.CreateDocumentResponse.metadata: object expected");
                                message.metadata = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.fromObject(object.metadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateDocumentResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.CreateDocumentResponse} message CreateDocumentResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateDocumentResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.document = null;
                                object.ruleEngineOutput = null;
                                object.metadata = null;
                            }
                            if (message.document != null && message.hasOwnProperty("document"))
                                object.document = $root.google.cloud.contentwarehouse.v1.Document.toObject(message.document, options);
                            if (message.ruleEngineOutput != null && message.hasOwnProperty("ruleEngineOutput"))
                                object.ruleEngineOutput = $root.google.cloud.contentwarehouse.v1.RuleEngineOutput.toObject(message.ruleEngineOutput, options);
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.toObject(message.metadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateDocumentResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateDocumentResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateDocumentResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateDocumentResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.CreateDocumentResponse";
                        };
    
                        return CreateDocumentResponse;
                    })();
    
                    v1.UpdateDocumentResponse = (function() {
    
                        /**
                         * Properties of an UpdateDocumentResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IUpdateDocumentResponse
                         * @property {google.cloud.contentwarehouse.v1.IDocument|null} [document] UpdateDocumentResponse document
                         * @property {google.cloud.contentwarehouse.v1.IRuleEngineOutput|null} [ruleEngineOutput] UpdateDocumentResponse ruleEngineOutput
                         * @property {google.cloud.contentwarehouse.v1.IResponseMetadata|null} [metadata] UpdateDocumentResponse metadata
                         */
    
                        /**
                         * Constructs a new UpdateDocumentResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an UpdateDocumentResponse.
                         * @implements IUpdateDocumentResponse
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentResponse=} [properties] Properties to set
                         */
                        function UpdateDocumentResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateDocumentResponse document.
                         * @member {google.cloud.contentwarehouse.v1.IDocument|null|undefined} document
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentResponse
                         * @instance
                         */
                        UpdateDocumentResponse.prototype.document = null;
    
                        /**
                         * UpdateDocumentResponse ruleEngineOutput.
                         * @member {google.cloud.contentwarehouse.v1.IRuleEngineOutput|null|undefined} ruleEngineOutput
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentResponse
                         * @instance
                         */
                        UpdateDocumentResponse.prototype.ruleEngineOutput = null;
    
                        /**
                         * UpdateDocumentResponse metadata.
                         * @member {google.cloud.contentwarehouse.v1.IResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentResponse
                         * @instance
                         */
                        UpdateDocumentResponse.prototype.metadata = null;
    
                        /**
                         * Creates a new UpdateDocumentResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentResponse=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentResponse} UpdateDocumentResponse instance
                         */
                        UpdateDocumentResponse.create = function create(properties) {
                            return new UpdateDocumentResponse(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateDocumentResponse message. Does not implicitly {@link google.cloud.contentwarehouse.v1.UpdateDocumentResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentResponse} message UpdateDocumentResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateDocumentResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.document != null && Object.hasOwnProperty.call(message, "document"))
                                $root.google.cloud.contentwarehouse.v1.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.ruleEngineOutput != null && Object.hasOwnProperty.call(message, "ruleEngineOutput"))
                                $root.google.cloud.contentwarehouse.v1.RuleEngineOutput.encode(message.ruleEngineOutput, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.cloud.contentwarehouse.v1.ResponseMetadata.encode(message.metadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateDocumentResponse message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.UpdateDocumentResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentResponse} message UpdateDocumentResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateDocumentResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateDocumentResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentResponse} UpdateDocumentResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateDocumentResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.UpdateDocumentResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.document = $root.google.cloud.contentwarehouse.v1.Document.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.ruleEngineOutput = $root.google.cloud.contentwarehouse.v1.RuleEngineOutput.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.metadata = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateDocumentResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentResponse} UpdateDocumentResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateDocumentResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateDocumentResponse message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateDocumentResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.document != null && message.hasOwnProperty("document")) {
                                var error = $root.google.cloud.contentwarehouse.v1.Document.verify(message.document);
                                if (error)
                                    return "document." + error;
                            }
                            if (message.ruleEngineOutput != null && message.hasOwnProperty("ruleEngineOutput")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RuleEngineOutput.verify(message.ruleEngineOutput);
                                if (error)
                                    return "ruleEngineOutput." + error;
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateDocumentResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentResponse} UpdateDocumentResponse
                         */
                        UpdateDocumentResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.UpdateDocumentResponse)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.UpdateDocumentResponse();
                            if (object.document != null) {
                                if (typeof object.document !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.UpdateDocumentResponse.document: object expected");
                                message.document = $root.google.cloud.contentwarehouse.v1.Document.fromObject(object.document);
                            }
                            if (object.ruleEngineOutput != null) {
                                if (typeof object.ruleEngineOutput !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.UpdateDocumentResponse.ruleEngineOutput: object expected");
                                message.ruleEngineOutput = $root.google.cloud.contentwarehouse.v1.RuleEngineOutput.fromObject(object.ruleEngineOutput);
                            }
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.UpdateDocumentResponse.metadata: object expected");
                                message.metadata = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.fromObject(object.metadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateDocumentResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.UpdateDocumentResponse} message UpdateDocumentResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateDocumentResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.document = null;
                                object.ruleEngineOutput = null;
                                object.metadata = null;
                            }
                            if (message.document != null && message.hasOwnProperty("document"))
                                object.document = $root.google.cloud.contentwarehouse.v1.Document.toObject(message.document, options);
                            if (message.ruleEngineOutput != null && message.hasOwnProperty("ruleEngineOutput"))
                                object.ruleEngineOutput = $root.google.cloud.contentwarehouse.v1.RuleEngineOutput.toObject(message.ruleEngineOutput, options);
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.toObject(message.metadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateDocumentResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateDocumentResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateDocumentResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateDocumentResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.UpdateDocumentResponse";
                        };
    
                        return UpdateDocumentResponse;
                    })();
    
                    v1.QAResult = (function() {
    
                        /**
                         * Properties of a QAResult.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IQAResult
                         * @property {Array.<google.cloud.contentwarehouse.v1.QAResult.IHighlight>|null} [highlights] QAResult highlights
                         * @property {number|null} [confidenceScore] QAResult confidenceScore
                         */
    
                        /**
                         * Constructs a new QAResult.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a QAResult.
                         * @implements IQAResult
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IQAResult=} [properties] Properties to set
                         */
                        function QAResult(properties) {
                            this.highlights = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QAResult highlights.
                         * @member {Array.<google.cloud.contentwarehouse.v1.QAResult.IHighlight>} highlights
                         * @memberof google.cloud.contentwarehouse.v1.QAResult
                         * @instance
                         */
                        QAResult.prototype.highlights = $util.emptyArray;
    
                        /**
                         * QAResult confidenceScore.
                         * @member {number} confidenceScore
                         * @memberof google.cloud.contentwarehouse.v1.QAResult
                         * @instance
                         */
                        QAResult.prototype.confidenceScore = 0;
    
                        /**
                         * Creates a new QAResult instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.QAResult
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IQAResult=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.QAResult} QAResult instance
                         */
                        QAResult.create = function create(properties) {
                            return new QAResult(properties);
                        };
    
                        /**
                         * Encodes the specified QAResult message. Does not implicitly {@link google.cloud.contentwarehouse.v1.QAResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.QAResult
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IQAResult} message QAResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QAResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.highlights != null && message.highlights.length)
                                for (var i = 0; i < message.highlights.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.QAResult.Highlight.encode(message.highlights[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.confidenceScore != null && Object.hasOwnProperty.call(message, "confidenceScore"))
                                writer.uint32(/* id 2, wireType 5 =*/21).float(message.confidenceScore);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QAResult message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.QAResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.QAResult
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IQAResult} message QAResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QAResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QAResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.QAResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.QAResult} QAResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QAResult.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.QAResult();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.highlights && message.highlights.length))
                                            message.highlights = [];
                                        message.highlights.push($root.google.cloud.contentwarehouse.v1.QAResult.Highlight.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.confidenceScore = reader.float();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QAResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.QAResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.QAResult} QAResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QAResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QAResult message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.QAResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QAResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.highlights != null && message.hasOwnProperty("highlights")) {
                                if (!Array.isArray(message.highlights))
                                    return "highlights: array expected";
                                for (var i = 0; i < message.highlights.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.QAResult.Highlight.verify(message.highlights[i]);
                                    if (error)
                                        return "highlights." + error;
                                }
                            }
                            if (message.confidenceScore != null && message.hasOwnProperty("confidenceScore"))
                                if (typeof message.confidenceScore !== "number")
                                    return "confidenceScore: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a QAResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.QAResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.QAResult} QAResult
                         */
                        QAResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.QAResult)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.QAResult();
                            if (object.highlights) {
                                if (!Array.isArray(object.highlights))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.QAResult.highlights: array expected");
                                message.highlights = [];
                                for (var i = 0; i < object.highlights.length; ++i) {
                                    if (typeof object.highlights[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.QAResult.highlights: object expected");
                                    message.highlights[i] = $root.google.cloud.contentwarehouse.v1.QAResult.Highlight.fromObject(object.highlights[i]);
                                }
                            }
                            if (object.confidenceScore != null)
                                message.confidenceScore = Number(object.confidenceScore);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QAResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.QAResult
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.QAResult} message QAResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QAResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.highlights = [];
                            if (options.defaults)
                                object.confidenceScore = 0;
                            if (message.highlights && message.highlights.length) {
                                object.highlights = [];
                                for (var j = 0; j < message.highlights.length; ++j)
                                    object.highlights[j] = $root.google.cloud.contentwarehouse.v1.QAResult.Highlight.toObject(message.highlights[j], options);
                            }
                            if (message.confidenceScore != null && message.hasOwnProperty("confidenceScore"))
                                object.confidenceScore = options.json && !isFinite(message.confidenceScore) ? String(message.confidenceScore) : message.confidenceScore;
                            return object;
                        };
    
                        /**
                         * Converts this QAResult to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.QAResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QAResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QAResult
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.QAResult
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QAResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.QAResult";
                        };
    
                        QAResult.Highlight = (function() {
    
                            /**
                             * Properties of a Highlight.
                             * @memberof google.cloud.contentwarehouse.v1.QAResult
                             * @interface IHighlight
                             * @property {number|null} [startIndex] Highlight startIndex
                             * @property {number|null} [endIndex] Highlight endIndex
                             */
    
                            /**
                             * Constructs a new Highlight.
                             * @memberof google.cloud.contentwarehouse.v1.QAResult
                             * @classdesc Represents a Highlight.
                             * @implements IHighlight
                             * @constructor
                             * @param {google.cloud.contentwarehouse.v1.QAResult.IHighlight=} [properties] Properties to set
                             */
                            function Highlight(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Highlight startIndex.
                             * @member {number} startIndex
                             * @memberof google.cloud.contentwarehouse.v1.QAResult.Highlight
                             * @instance
                             */
                            Highlight.prototype.startIndex = 0;
    
                            /**
                             * Highlight endIndex.
                             * @member {number} endIndex
                             * @memberof google.cloud.contentwarehouse.v1.QAResult.Highlight
                             * @instance
                             */
                            Highlight.prototype.endIndex = 0;
    
                            /**
                             * Creates a new Highlight instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.contentwarehouse.v1.QAResult.Highlight
                             * @static
                             * @param {google.cloud.contentwarehouse.v1.QAResult.IHighlight=} [properties] Properties to set
                             * @returns {google.cloud.contentwarehouse.v1.QAResult.Highlight} Highlight instance
                             */
                            Highlight.create = function create(properties) {
                                return new Highlight(properties);
                            };
    
                            /**
                             * Encodes the specified Highlight message. Does not implicitly {@link google.cloud.contentwarehouse.v1.QAResult.Highlight.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.contentwarehouse.v1.QAResult.Highlight
                             * @static
                             * @param {google.cloud.contentwarehouse.v1.QAResult.IHighlight} message Highlight message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Highlight.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.startIndex != null && Object.hasOwnProperty.call(message, "startIndex"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.startIndex);
                                if (message.endIndex != null && Object.hasOwnProperty.call(message, "endIndex"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.endIndex);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Highlight message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.QAResult.Highlight.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.contentwarehouse.v1.QAResult.Highlight
                             * @static
                             * @param {google.cloud.contentwarehouse.v1.QAResult.IHighlight} message Highlight message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Highlight.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Highlight message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.contentwarehouse.v1.QAResult.Highlight
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.contentwarehouse.v1.QAResult.Highlight} Highlight
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Highlight.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.QAResult.Highlight();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.startIndex = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.endIndex = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Highlight message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.contentwarehouse.v1.QAResult.Highlight
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.contentwarehouse.v1.QAResult.Highlight} Highlight
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Highlight.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Highlight message.
                             * @function verify
                             * @memberof google.cloud.contentwarehouse.v1.QAResult.Highlight
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Highlight.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.startIndex != null && message.hasOwnProperty("startIndex"))
                                    if (!$util.isInteger(message.startIndex))
                                        return "startIndex: integer expected";
                                if (message.endIndex != null && message.hasOwnProperty("endIndex"))
                                    if (!$util.isInteger(message.endIndex))
                                        return "endIndex: integer expected";
                                return null;
                            };
    
                            /**
                             * Creates a Highlight message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.contentwarehouse.v1.QAResult.Highlight
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.contentwarehouse.v1.QAResult.Highlight} Highlight
                             */
                            Highlight.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.contentwarehouse.v1.QAResult.Highlight)
                                    return object;
                                var message = new $root.google.cloud.contentwarehouse.v1.QAResult.Highlight();
                                if (object.startIndex != null)
                                    message.startIndex = object.startIndex | 0;
                                if (object.endIndex != null)
                                    message.endIndex = object.endIndex | 0;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Highlight message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.contentwarehouse.v1.QAResult.Highlight
                             * @static
                             * @param {google.cloud.contentwarehouse.v1.QAResult.Highlight} message Highlight
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Highlight.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.startIndex = 0;
                                    object.endIndex = 0;
                                }
                                if (message.startIndex != null && message.hasOwnProperty("startIndex"))
                                    object.startIndex = message.startIndex;
                                if (message.endIndex != null && message.hasOwnProperty("endIndex"))
                                    object.endIndex = message.endIndex;
                                return object;
                            };
    
                            /**
                             * Converts this Highlight to JSON.
                             * @function toJSON
                             * @memberof google.cloud.contentwarehouse.v1.QAResult.Highlight
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Highlight.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Highlight
                             * @function getTypeUrl
                             * @memberof google.cloud.contentwarehouse.v1.QAResult.Highlight
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Highlight.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.QAResult.Highlight";
                            };
    
                            return Highlight;
                        })();
    
                        return QAResult;
                    })();
    
                    v1.SearchDocumentsResponse = (function() {
    
                        /**
                         * Properties of a SearchDocumentsResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ISearchDocumentsResponse
                         * @property {Array.<google.cloud.contentwarehouse.v1.SearchDocumentsResponse.IMatchingDocument>|null} [matchingDocuments] SearchDocumentsResponse matchingDocuments
                         * @property {string|null} [nextPageToken] SearchDocumentsResponse nextPageToken
                         * @property {number|null} [totalSize] SearchDocumentsResponse totalSize
                         * @property {google.cloud.contentwarehouse.v1.IResponseMetadata|null} [metadata] SearchDocumentsResponse metadata
                         * @property {Array.<google.cloud.contentwarehouse.v1.IHistogramQueryResult>|null} [histogramQueryResults] SearchDocumentsResponse histogramQueryResults
                         */
    
                        /**
                         * Constructs a new SearchDocumentsResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a SearchDocumentsResponse.
                         * @implements ISearchDocumentsResponse
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ISearchDocumentsResponse=} [properties] Properties to set
                         */
                        function SearchDocumentsResponse(properties) {
                            this.matchingDocuments = [];
                            this.histogramQueryResults = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchDocumentsResponse matchingDocuments.
                         * @member {Array.<google.cloud.contentwarehouse.v1.SearchDocumentsResponse.IMatchingDocument>} matchingDocuments
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                         * @instance
                         */
                        SearchDocumentsResponse.prototype.matchingDocuments = $util.emptyArray;
    
                        /**
                         * SearchDocumentsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                         * @instance
                         */
                        SearchDocumentsResponse.prototype.nextPageToken = "";
    
                        /**
                         * SearchDocumentsResponse totalSize.
                         * @member {number} totalSize
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                         * @instance
                         */
                        SearchDocumentsResponse.prototype.totalSize = 0;
    
                        /**
                         * SearchDocumentsResponse metadata.
                         * @member {google.cloud.contentwarehouse.v1.IResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                         * @instance
                         */
                        SearchDocumentsResponse.prototype.metadata = null;
    
                        /**
                         * SearchDocumentsResponse histogramQueryResults.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IHistogramQueryResult>} histogramQueryResults
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                         * @instance
                         */
                        SearchDocumentsResponse.prototype.histogramQueryResults = $util.emptyArray;
    
                        /**
                         * Creates a new SearchDocumentsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ISearchDocumentsResponse=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.SearchDocumentsResponse} SearchDocumentsResponse instance
                         */
                        SearchDocumentsResponse.create = function create(properties) {
                            return new SearchDocumentsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SearchDocumentsResponse message. Does not implicitly {@link google.cloud.contentwarehouse.v1.SearchDocumentsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ISearchDocumentsResponse} message SearchDocumentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDocumentsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.matchingDocuments != null && message.matchingDocuments.length)
                                for (var i = 0; i < message.matchingDocuments.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument.encode(message.matchingDocuments[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.totalSize != null && Object.hasOwnProperty.call(message, "totalSize"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.totalSize);
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.cloud.contentwarehouse.v1.ResponseMetadata.encode(message.metadata, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.histogramQueryResults != null && message.histogramQueryResults.length)
                                for (var i = 0; i < message.histogramQueryResults.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.HistogramQueryResult.encode(message.histogramQueryResults[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchDocumentsResponse message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.SearchDocumentsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ISearchDocumentsResponse} message SearchDocumentsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDocumentsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchDocumentsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.SearchDocumentsResponse} SearchDocumentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDocumentsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.SearchDocumentsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.matchingDocuments && message.matchingDocuments.length))
                                            message.matchingDocuments = [];
                                        message.matchingDocuments.push($root.google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.totalSize = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.metadata = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        if (!(message.histogramQueryResults && message.histogramQueryResults.length))
                                            message.histogramQueryResults = [];
                                        message.histogramQueryResults.push($root.google.cloud.contentwarehouse.v1.HistogramQueryResult.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchDocumentsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.SearchDocumentsResponse} SearchDocumentsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDocumentsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchDocumentsResponse message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchDocumentsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.matchingDocuments != null && message.hasOwnProperty("matchingDocuments")) {
                                if (!Array.isArray(message.matchingDocuments))
                                    return "matchingDocuments: array expected";
                                for (var i = 0; i < message.matchingDocuments.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument.verify(message.matchingDocuments[i]);
                                    if (error)
                                        return "matchingDocuments." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                                if (!$util.isInteger(message.totalSize))
                                    return "totalSize: integer expected";
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            if (message.histogramQueryResults != null && message.hasOwnProperty("histogramQueryResults")) {
                                if (!Array.isArray(message.histogramQueryResults))
                                    return "histogramQueryResults: array expected";
                                for (var i = 0; i < message.histogramQueryResults.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.HistogramQueryResult.verify(message.histogramQueryResults[i]);
                                    if (error)
                                        return "histogramQueryResults." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SearchDocumentsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.SearchDocumentsResponse} SearchDocumentsResponse
                         */
                        SearchDocumentsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.SearchDocumentsResponse)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.SearchDocumentsResponse();
                            if (object.matchingDocuments) {
                                if (!Array.isArray(object.matchingDocuments))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.SearchDocumentsResponse.matchingDocuments: array expected");
                                message.matchingDocuments = [];
                                for (var i = 0; i < object.matchingDocuments.length; ++i) {
                                    if (typeof object.matchingDocuments[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.SearchDocumentsResponse.matchingDocuments: object expected");
                                    message.matchingDocuments[i] = $root.google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument.fromObject(object.matchingDocuments[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.totalSize != null)
                                message.totalSize = object.totalSize | 0;
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.SearchDocumentsResponse.metadata: object expected");
                                message.metadata = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.fromObject(object.metadata);
                            }
                            if (object.histogramQueryResults) {
                                if (!Array.isArray(object.histogramQueryResults))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.SearchDocumentsResponse.histogramQueryResults: array expected");
                                message.histogramQueryResults = [];
                                for (var i = 0; i < object.histogramQueryResults.length; ++i) {
                                    if (typeof object.histogramQueryResults[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.SearchDocumentsResponse.histogramQueryResults: object expected");
                                    message.histogramQueryResults[i] = $root.google.cloud.contentwarehouse.v1.HistogramQueryResult.fromObject(object.histogramQueryResults[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchDocumentsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.SearchDocumentsResponse} message SearchDocumentsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchDocumentsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.matchingDocuments = [];
                                object.histogramQueryResults = [];
                            }
                            if (options.defaults) {
                                object.nextPageToken = "";
                                object.totalSize = 0;
                                object.metadata = null;
                            }
                            if (message.matchingDocuments && message.matchingDocuments.length) {
                                object.matchingDocuments = [];
                                for (var j = 0; j < message.matchingDocuments.length; ++j)
                                    object.matchingDocuments[j] = $root.google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument.toObject(message.matchingDocuments[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.totalSize != null && message.hasOwnProperty("totalSize"))
                                object.totalSize = message.totalSize;
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.toObject(message.metadata, options);
                            if (message.histogramQueryResults && message.histogramQueryResults.length) {
                                object.histogramQueryResults = [];
                                for (var j = 0; j < message.histogramQueryResults.length; ++j)
                                    object.histogramQueryResults[j] = $root.google.cloud.contentwarehouse.v1.HistogramQueryResult.toObject(message.histogramQueryResults[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SearchDocumentsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchDocumentsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SearchDocumentsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SearchDocumentsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.SearchDocumentsResponse";
                        };
    
                        SearchDocumentsResponse.MatchingDocument = (function() {
    
                            /**
                             * Properties of a MatchingDocument.
                             * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                             * @interface IMatchingDocument
                             * @property {google.cloud.contentwarehouse.v1.IDocument|null} [document] MatchingDocument document
                             * @property {string|null} [searchTextSnippet] MatchingDocument searchTextSnippet
                             * @property {google.cloud.contentwarehouse.v1.IQAResult|null} [qaResult] MatchingDocument qaResult
                             */
    
                            /**
                             * Constructs a new MatchingDocument.
                             * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse
                             * @classdesc Represents a MatchingDocument.
                             * @implements IMatchingDocument
                             * @constructor
                             * @param {google.cloud.contentwarehouse.v1.SearchDocumentsResponse.IMatchingDocument=} [properties] Properties to set
                             */
                            function MatchingDocument(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MatchingDocument document.
                             * @member {google.cloud.contentwarehouse.v1.IDocument|null|undefined} document
                             * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument
                             * @instance
                             */
                            MatchingDocument.prototype.document = null;
    
                            /**
                             * MatchingDocument searchTextSnippet.
                             * @member {string} searchTextSnippet
                             * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument
                             * @instance
                             */
                            MatchingDocument.prototype.searchTextSnippet = "";
    
                            /**
                             * MatchingDocument qaResult.
                             * @member {google.cloud.contentwarehouse.v1.IQAResult|null|undefined} qaResult
                             * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument
                             * @instance
                             */
                            MatchingDocument.prototype.qaResult = null;
    
                            /**
                             * Creates a new MatchingDocument instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument
                             * @static
                             * @param {google.cloud.contentwarehouse.v1.SearchDocumentsResponse.IMatchingDocument=} [properties] Properties to set
                             * @returns {google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument} MatchingDocument instance
                             */
                            MatchingDocument.create = function create(properties) {
                                return new MatchingDocument(properties);
                            };
    
                            /**
                             * Encodes the specified MatchingDocument message. Does not implicitly {@link google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument
                             * @static
                             * @param {google.cloud.contentwarehouse.v1.SearchDocumentsResponse.IMatchingDocument} message MatchingDocument message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MatchingDocument.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.document != null && Object.hasOwnProperty.call(message, "document"))
                                    $root.google.cloud.contentwarehouse.v1.Document.encode(message.document, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.searchTextSnippet != null && Object.hasOwnProperty.call(message, "searchTextSnippet"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.searchTextSnippet);
                                if (message.qaResult != null && Object.hasOwnProperty.call(message, "qaResult"))
                                    $root.google.cloud.contentwarehouse.v1.QAResult.encode(message.qaResult, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MatchingDocument message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument
                             * @static
                             * @param {google.cloud.contentwarehouse.v1.SearchDocumentsResponse.IMatchingDocument} message MatchingDocument message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MatchingDocument.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MatchingDocument message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument} MatchingDocument
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MatchingDocument.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.document = $root.google.cloud.contentwarehouse.v1.Document.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.searchTextSnippet = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.qaResult = $root.google.cloud.contentwarehouse.v1.QAResult.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MatchingDocument message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument} MatchingDocument
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MatchingDocument.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MatchingDocument message.
                             * @function verify
                             * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MatchingDocument.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.document != null && message.hasOwnProperty("document")) {
                                    var error = $root.google.cloud.contentwarehouse.v1.Document.verify(message.document);
                                    if (error)
                                        return "document." + error;
                                }
                                if (message.searchTextSnippet != null && message.hasOwnProperty("searchTextSnippet"))
                                    if (!$util.isString(message.searchTextSnippet))
                                        return "searchTextSnippet: string expected";
                                if (message.qaResult != null && message.hasOwnProperty("qaResult")) {
                                    var error = $root.google.cloud.contentwarehouse.v1.QAResult.verify(message.qaResult);
                                    if (error)
                                        return "qaResult." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a MatchingDocument message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument} MatchingDocument
                             */
                            MatchingDocument.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument)
                                    return object;
                                var message = new $root.google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument();
                                if (object.document != null) {
                                    if (typeof object.document !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument.document: object expected");
                                    message.document = $root.google.cloud.contentwarehouse.v1.Document.fromObject(object.document);
                                }
                                if (object.searchTextSnippet != null)
                                    message.searchTextSnippet = String(object.searchTextSnippet);
                                if (object.qaResult != null) {
                                    if (typeof object.qaResult !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument.qaResult: object expected");
                                    message.qaResult = $root.google.cloud.contentwarehouse.v1.QAResult.fromObject(object.qaResult);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MatchingDocument message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument
                             * @static
                             * @param {google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument} message MatchingDocument
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MatchingDocument.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.document = null;
                                    object.searchTextSnippet = "";
                                    object.qaResult = null;
                                }
                                if (message.document != null && message.hasOwnProperty("document"))
                                    object.document = $root.google.cloud.contentwarehouse.v1.Document.toObject(message.document, options);
                                if (message.searchTextSnippet != null && message.hasOwnProperty("searchTextSnippet"))
                                    object.searchTextSnippet = message.searchTextSnippet;
                                if (message.qaResult != null && message.hasOwnProperty("qaResult"))
                                    object.qaResult = $root.google.cloud.contentwarehouse.v1.QAResult.toObject(message.qaResult, options);
                                return object;
                            };
    
                            /**
                             * Converts this MatchingDocument to JSON.
                             * @function toJSON
                             * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MatchingDocument.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for MatchingDocument
                             * @function getTypeUrl
                             * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            MatchingDocument.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.SearchDocumentsResponse.MatchingDocument";
                            };
    
                            return MatchingDocument;
                        })();
    
                        return SearchDocumentsResponse;
                    })();
    
                    v1.FetchAclResponse = (function() {
    
                        /**
                         * Properties of a FetchAclResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IFetchAclResponse
                         * @property {google.iam.v1.IPolicy|null} [policy] FetchAclResponse policy
                         * @property {google.cloud.contentwarehouse.v1.IResponseMetadata|null} [metadata] FetchAclResponse metadata
                         */
    
                        /**
                         * Constructs a new FetchAclResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a FetchAclResponse.
                         * @implements IFetchAclResponse
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IFetchAclResponse=} [properties] Properties to set
                         */
                        function FetchAclResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FetchAclResponse policy.
                         * @member {google.iam.v1.IPolicy|null|undefined} policy
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclResponse
                         * @instance
                         */
                        FetchAclResponse.prototype.policy = null;
    
                        /**
                         * FetchAclResponse metadata.
                         * @member {google.cloud.contentwarehouse.v1.IResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclResponse
                         * @instance
                         */
                        FetchAclResponse.prototype.metadata = null;
    
                        /**
                         * Creates a new FetchAclResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IFetchAclResponse=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.FetchAclResponse} FetchAclResponse instance
                         */
                        FetchAclResponse.create = function create(properties) {
                            return new FetchAclResponse(properties);
                        };
    
                        /**
                         * Encodes the specified FetchAclResponse message. Does not implicitly {@link google.cloud.contentwarehouse.v1.FetchAclResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IFetchAclResponse} message FetchAclResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchAclResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.policy != null && Object.hasOwnProperty.call(message, "policy"))
                                $root.google.iam.v1.Policy.encode(message.policy, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.cloud.contentwarehouse.v1.ResponseMetadata.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FetchAclResponse message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.FetchAclResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IFetchAclResponse} message FetchAclResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchAclResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FetchAclResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.FetchAclResponse} FetchAclResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchAclResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.FetchAclResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.policy = $root.google.iam.v1.Policy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.metadata = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FetchAclResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.FetchAclResponse} FetchAclResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchAclResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FetchAclResponse message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FetchAclResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.policy != null && message.hasOwnProperty("policy")) {
                                var error = $root.google.iam.v1.Policy.verify(message.policy);
                                if (error)
                                    return "policy." + error;
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FetchAclResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.FetchAclResponse} FetchAclResponse
                         */
                        FetchAclResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.FetchAclResponse)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.FetchAclResponse();
                            if (object.policy != null) {
                                if (typeof object.policy !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.FetchAclResponse.policy: object expected");
                                message.policy = $root.google.iam.v1.Policy.fromObject(object.policy);
                            }
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.FetchAclResponse.metadata: object expected");
                                message.metadata = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.fromObject(object.metadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FetchAclResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.FetchAclResponse} message FetchAclResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FetchAclResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.policy = null;
                                object.metadata = null;
                            }
                            if (message.policy != null && message.hasOwnProperty("policy"))
                                object.policy = $root.google.iam.v1.Policy.toObject(message.policy, options);
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.toObject(message.metadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this FetchAclResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FetchAclResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FetchAclResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FetchAclResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.FetchAclResponse";
                        };
    
                        return FetchAclResponse;
                    })();
    
                    v1.SetAclResponse = (function() {
    
                        /**
                         * Properties of a SetAclResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ISetAclResponse
                         * @property {google.iam.v1.IPolicy|null} [policy] SetAclResponse policy
                         * @property {google.cloud.contentwarehouse.v1.IResponseMetadata|null} [metadata] SetAclResponse metadata
                         */
    
                        /**
                         * Constructs a new SetAclResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a SetAclResponse.
                         * @implements ISetAclResponse
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ISetAclResponse=} [properties] Properties to set
                         */
                        function SetAclResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SetAclResponse policy.
                         * @member {google.iam.v1.IPolicy|null|undefined} policy
                         * @memberof google.cloud.contentwarehouse.v1.SetAclResponse
                         * @instance
                         */
                        SetAclResponse.prototype.policy = null;
    
                        /**
                         * SetAclResponse metadata.
                         * @member {google.cloud.contentwarehouse.v1.IResponseMetadata|null|undefined} metadata
                         * @memberof google.cloud.contentwarehouse.v1.SetAclResponse
                         * @instance
                         */
                        SetAclResponse.prototype.metadata = null;
    
                        /**
                         * Creates a new SetAclResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.SetAclResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ISetAclResponse=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.SetAclResponse} SetAclResponse instance
                         */
                        SetAclResponse.create = function create(properties) {
                            return new SetAclResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SetAclResponse message. Does not implicitly {@link google.cloud.contentwarehouse.v1.SetAclResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.SetAclResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ISetAclResponse} message SetAclResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetAclResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.policy != null && Object.hasOwnProperty.call(message, "policy"))
                                $root.google.iam.v1.Policy.encode(message.policy, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                $root.google.cloud.contentwarehouse.v1.ResponseMetadata.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SetAclResponse message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.SetAclResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.SetAclResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ISetAclResponse} message SetAclResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetAclResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SetAclResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.SetAclResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.SetAclResponse} SetAclResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetAclResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.SetAclResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.policy = $root.google.iam.v1.Policy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.metadata = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SetAclResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.SetAclResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.SetAclResponse} SetAclResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetAclResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SetAclResponse message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.SetAclResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SetAclResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.policy != null && message.hasOwnProperty("policy")) {
                                var error = $root.google.iam.v1.Policy.verify(message.policy);
                                if (error)
                                    return "policy." + error;
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.verify(message.metadata);
                                if (error)
                                    return "metadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SetAclResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.SetAclResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.SetAclResponse} SetAclResponse
                         */
                        SetAclResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.SetAclResponse)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.SetAclResponse();
                            if (object.policy != null) {
                                if (typeof object.policy !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.SetAclResponse.policy: object expected");
                                message.policy = $root.google.iam.v1.Policy.fromObject(object.policy);
                            }
                            if (object.metadata != null) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.SetAclResponse.metadata: object expected");
                                message.metadata = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.fromObject(object.metadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SetAclResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.SetAclResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.SetAclResponse} message SetAclResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SetAclResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.policy = null;
                                object.metadata = null;
                            }
                            if (message.policy != null && message.hasOwnProperty("policy"))
                                object.policy = $root.google.iam.v1.Policy.toObject(message.policy, options);
                            if (message.metadata != null && message.hasOwnProperty("metadata"))
                                object.metadata = $root.google.cloud.contentwarehouse.v1.ResponseMetadata.toObject(message.metadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this SetAclResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.SetAclResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SetAclResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SetAclResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.SetAclResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SetAclResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.SetAclResponse";
                        };
    
                        return SetAclResponse;
                    })();
    
                    v1.CloudAIDocumentOption = (function() {
    
                        /**
                         * Properties of a CloudAIDocumentOption.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ICloudAIDocumentOption
                         * @property {boolean|null} [enableEntitiesConversions] CloudAIDocumentOption enableEntitiesConversions
                         * @property {Object.<string,string>|null} [customizedEntitiesPropertiesConversions] CloudAIDocumentOption customizedEntitiesPropertiesConversions
                         */
    
                        /**
                         * Constructs a new CloudAIDocumentOption.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a CloudAIDocumentOption.
                         * @implements ICloudAIDocumentOption
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ICloudAIDocumentOption=} [properties] Properties to set
                         */
                        function CloudAIDocumentOption(properties) {
                            this.customizedEntitiesPropertiesConversions = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CloudAIDocumentOption enableEntitiesConversions.
                         * @member {boolean} enableEntitiesConversions
                         * @memberof google.cloud.contentwarehouse.v1.CloudAIDocumentOption
                         * @instance
                         */
                        CloudAIDocumentOption.prototype.enableEntitiesConversions = false;
    
                        /**
                         * CloudAIDocumentOption customizedEntitiesPropertiesConversions.
                         * @member {Object.<string,string>} customizedEntitiesPropertiesConversions
                         * @memberof google.cloud.contentwarehouse.v1.CloudAIDocumentOption
                         * @instance
                         */
                        CloudAIDocumentOption.prototype.customizedEntitiesPropertiesConversions = $util.emptyObject;
    
                        /**
                         * Creates a new CloudAIDocumentOption instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.CloudAIDocumentOption
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICloudAIDocumentOption=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.CloudAIDocumentOption} CloudAIDocumentOption instance
                         */
                        CloudAIDocumentOption.create = function create(properties) {
                            return new CloudAIDocumentOption(properties);
                        };
    
                        /**
                         * Encodes the specified CloudAIDocumentOption message. Does not implicitly {@link google.cloud.contentwarehouse.v1.CloudAIDocumentOption.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.CloudAIDocumentOption
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICloudAIDocumentOption} message CloudAIDocumentOption message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudAIDocumentOption.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.enableEntitiesConversions != null && Object.hasOwnProperty.call(message, "enableEntitiesConversions"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enableEntitiesConversions);
                            if (message.customizedEntitiesPropertiesConversions != null && Object.hasOwnProperty.call(message, "customizedEntitiesPropertiesConversions"))
                                for (var keys = Object.keys(message.customizedEntitiesPropertiesConversions), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.customizedEntitiesPropertiesConversions[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CloudAIDocumentOption message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.CloudAIDocumentOption.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CloudAIDocumentOption
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICloudAIDocumentOption} message CloudAIDocumentOption message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudAIDocumentOption.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CloudAIDocumentOption message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.CloudAIDocumentOption
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.CloudAIDocumentOption} CloudAIDocumentOption
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudAIDocumentOption.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.CloudAIDocumentOption(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.enableEntitiesConversions = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        if (message.customizedEntitiesPropertiesConversions === $util.emptyObject)
                                            message.customizedEntitiesPropertiesConversions = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.customizedEntitiesPropertiesConversions[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CloudAIDocumentOption message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CloudAIDocumentOption
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.CloudAIDocumentOption} CloudAIDocumentOption
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudAIDocumentOption.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CloudAIDocumentOption message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.CloudAIDocumentOption
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CloudAIDocumentOption.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.enableEntitiesConversions != null && message.hasOwnProperty("enableEntitiesConversions"))
                                if (typeof message.enableEntitiesConversions !== "boolean")
                                    return "enableEntitiesConversions: boolean expected";
                            if (message.customizedEntitiesPropertiesConversions != null && message.hasOwnProperty("customizedEntitiesPropertiesConversions")) {
                                if (!$util.isObject(message.customizedEntitiesPropertiesConversions))
                                    return "customizedEntitiesPropertiesConversions: object expected";
                                var key = Object.keys(message.customizedEntitiesPropertiesConversions);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.customizedEntitiesPropertiesConversions[key[i]]))
                                        return "customizedEntitiesPropertiesConversions: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CloudAIDocumentOption message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.CloudAIDocumentOption
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.CloudAIDocumentOption} CloudAIDocumentOption
                         */
                        CloudAIDocumentOption.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.CloudAIDocumentOption)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.CloudAIDocumentOption();
                            if (object.enableEntitiesConversions != null)
                                message.enableEntitiesConversions = Boolean(object.enableEntitiesConversions);
                            if (object.customizedEntitiesPropertiesConversions) {
                                if (typeof object.customizedEntitiesPropertiesConversions !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.CloudAIDocumentOption.customizedEntitiesPropertiesConversions: object expected");
                                message.customizedEntitiesPropertiesConversions = {};
                                for (var keys = Object.keys(object.customizedEntitiesPropertiesConversions), i = 0; i < keys.length; ++i)
                                    message.customizedEntitiesPropertiesConversions[keys[i]] = String(object.customizedEntitiesPropertiesConversions[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CloudAIDocumentOption message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.CloudAIDocumentOption
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.CloudAIDocumentOption} message CloudAIDocumentOption
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CloudAIDocumentOption.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.customizedEntitiesPropertiesConversions = {};
                            if (options.defaults)
                                object.enableEntitiesConversions = false;
                            if (message.enableEntitiesConversions != null && message.hasOwnProperty("enableEntitiesConversions"))
                                object.enableEntitiesConversions = message.enableEntitiesConversions;
                            var keys2;
                            if (message.customizedEntitiesPropertiesConversions && (keys2 = Object.keys(message.customizedEntitiesPropertiesConversions)).length) {
                                object.customizedEntitiesPropertiesConversions = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.customizedEntitiesPropertiesConversions[keys2[j]] = message.customizedEntitiesPropertiesConversions[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CloudAIDocumentOption to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.CloudAIDocumentOption
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CloudAIDocumentOption.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CloudAIDocumentOption
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.CloudAIDocumentOption
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CloudAIDocumentOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.CloudAIDocumentOption";
                        };
    
                        return CloudAIDocumentOption;
                    })();
    
                    v1.CreateDocumentRequest = (function() {
    
                        /**
                         * Properties of a CreateDocumentRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ICreateDocumentRequest
                         * @property {string|null} [parent] CreateDocumentRequest parent
                         * @property {google.cloud.contentwarehouse.v1.IDocument|null} [document] CreateDocumentRequest document
                         * @property {google.cloud.contentwarehouse.v1.IRequestMetadata|null} [requestMetadata] CreateDocumentRequest requestMetadata
                         * @property {google.iam.v1.IPolicy|null} [policy] CreateDocumentRequest policy
                         * @property {google.cloud.contentwarehouse.v1.ICloudAIDocumentOption|null} [cloudAiDocumentOption] CreateDocumentRequest cloudAiDocumentOption
                         * @property {google.protobuf.IFieldMask|null} [createMask] CreateDocumentRequest createMask
                         */
    
                        /**
                         * Constructs a new CreateDocumentRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a CreateDocumentRequest.
                         * @implements ICreateDocumentRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentRequest=} [properties] Properties to set
                         */
                        function CreateDocumentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateDocumentRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @instance
                         */
                        CreateDocumentRequest.prototype.parent = "";
    
                        /**
                         * CreateDocumentRequest document.
                         * @member {google.cloud.contentwarehouse.v1.IDocument|null|undefined} document
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @instance
                         */
                        CreateDocumentRequest.prototype.document = null;
    
                        /**
                         * CreateDocumentRequest requestMetadata.
                         * @member {google.cloud.contentwarehouse.v1.IRequestMetadata|null|undefined} requestMetadata
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @instance
                         */
                        CreateDocumentRequest.prototype.requestMetadata = null;
    
                        /**
                         * CreateDocumentRequest policy.
                         * @member {google.iam.v1.IPolicy|null|undefined} policy
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @instance
                         */
                        CreateDocumentRequest.prototype.policy = null;
    
                        /**
                         * CreateDocumentRequest cloudAiDocumentOption.
                         * @member {google.cloud.contentwarehouse.v1.ICloudAIDocumentOption|null|undefined} cloudAiDocumentOption
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @instance
                         */
                        CreateDocumentRequest.prototype.cloudAiDocumentOption = null;
    
                        /**
                         * CreateDocumentRequest createMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} createMask
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @instance
                         */
                        CreateDocumentRequest.prototype.createMask = null;
    
                        /**
                         * Creates a new CreateDocumentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentRequest} CreateDocumentRequest instance
                         */
                        CreateDocumentRequest.create = function create(properties) {
                            return new CreateDocumentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateDocumentRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.CreateDocumentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentRequest} message CreateDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDocumentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.document != null && Object.hasOwnProperty.call(message, "document"))
                                $root.google.cloud.contentwarehouse.v1.Document.encode(message.document, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestMetadata != null && Object.hasOwnProperty.call(message, "requestMetadata"))
                                $root.google.cloud.contentwarehouse.v1.RequestMetadata.encode(message.requestMetadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.policy != null && Object.hasOwnProperty.call(message, "policy"))
                                $root.google.iam.v1.Policy.encode(message.policy, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.cloudAiDocumentOption != null && Object.hasOwnProperty.call(message, "cloudAiDocumentOption"))
                                $root.google.cloud.contentwarehouse.v1.CloudAIDocumentOption.encode(message.cloudAiDocumentOption, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.createMask != null && Object.hasOwnProperty.call(message, "createMask"))
                                $root.google.protobuf.FieldMask.encode(message.createMask, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateDocumentRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.CreateDocumentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateDocumentRequest} message CreateDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateDocumentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateDocumentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentRequest} CreateDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDocumentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.CreateDocumentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.document = $root.google.cloud.contentwarehouse.v1.Document.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.policy = $root.google.iam.v1.Policy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.cloudAiDocumentOption = $root.google.cloud.contentwarehouse.v1.CloudAIDocumentOption.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.createMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateDocumentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentRequest} CreateDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateDocumentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateDocumentRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateDocumentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.document != null && message.hasOwnProperty("document")) {
                                var error = $root.google.cloud.contentwarehouse.v1.Document.verify(message.document);
                                if (error)
                                    return "document." + error;
                            }
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RequestMetadata.verify(message.requestMetadata);
                                if (error)
                                    return "requestMetadata." + error;
                            }
                            if (message.policy != null && message.hasOwnProperty("policy")) {
                                var error = $root.google.iam.v1.Policy.verify(message.policy);
                                if (error)
                                    return "policy." + error;
                            }
                            if (message.cloudAiDocumentOption != null && message.hasOwnProperty("cloudAiDocumentOption")) {
                                var error = $root.google.cloud.contentwarehouse.v1.CloudAIDocumentOption.verify(message.cloudAiDocumentOption);
                                if (error)
                                    return "cloudAiDocumentOption." + error;
                            }
                            if (message.createMask != null && message.hasOwnProperty("createMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.createMask);
                                if (error)
                                    return "createMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateDocumentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.CreateDocumentRequest} CreateDocumentRequest
                         */
                        CreateDocumentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.CreateDocumentRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.CreateDocumentRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.document != null) {
                                if (typeof object.document !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.CreateDocumentRequest.document: object expected");
                                message.document = $root.google.cloud.contentwarehouse.v1.Document.fromObject(object.document);
                            }
                            if (object.requestMetadata != null) {
                                if (typeof object.requestMetadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.CreateDocumentRequest.requestMetadata: object expected");
                                message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.fromObject(object.requestMetadata);
                            }
                            if (object.policy != null) {
                                if (typeof object.policy !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.CreateDocumentRequest.policy: object expected");
                                message.policy = $root.google.iam.v1.Policy.fromObject(object.policy);
                            }
                            if (object.cloudAiDocumentOption != null) {
                                if (typeof object.cloudAiDocumentOption !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.CreateDocumentRequest.cloudAiDocumentOption: object expected");
                                message.cloudAiDocumentOption = $root.google.cloud.contentwarehouse.v1.CloudAIDocumentOption.fromObject(object.cloudAiDocumentOption);
                            }
                            if (object.createMask != null) {
                                if (typeof object.createMask !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.CreateDocumentRequest.createMask: object expected");
                                message.createMask = $root.google.protobuf.FieldMask.fromObject(object.createMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateDocumentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.CreateDocumentRequest} message CreateDocumentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateDocumentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.document = null;
                                object.requestMetadata = null;
                                object.policy = null;
                                object.cloudAiDocumentOption = null;
                                object.createMask = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.document != null && message.hasOwnProperty("document"))
                                object.document = $root.google.cloud.contentwarehouse.v1.Document.toObject(message.document, options);
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata"))
                                object.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.toObject(message.requestMetadata, options);
                            if (message.policy != null && message.hasOwnProperty("policy"))
                                object.policy = $root.google.iam.v1.Policy.toObject(message.policy, options);
                            if (message.cloudAiDocumentOption != null && message.hasOwnProperty("cloudAiDocumentOption"))
                                object.cloudAiDocumentOption = $root.google.cloud.contentwarehouse.v1.CloudAIDocumentOption.toObject(message.cloudAiDocumentOption, options);
                            if (message.createMask != null && message.hasOwnProperty("createMask"))
                                object.createMask = $root.google.protobuf.FieldMask.toObject(message.createMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateDocumentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateDocumentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateDocumentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.CreateDocumentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateDocumentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.CreateDocumentRequest";
                        };
    
                        return CreateDocumentRequest;
                    })();
    
                    v1.GetDocumentRequest = (function() {
    
                        /**
                         * Properties of a GetDocumentRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IGetDocumentRequest
                         * @property {string|null} [name] GetDocumentRequest name
                         * @property {google.cloud.contentwarehouse.v1.IRequestMetadata|null} [requestMetadata] GetDocumentRequest requestMetadata
                         */
    
                        /**
                         * Constructs a new GetDocumentRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a GetDocumentRequest.
                         * @implements IGetDocumentRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IGetDocumentRequest=} [properties] Properties to set
                         */
                        function GetDocumentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetDocumentRequest name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentRequest
                         * @instance
                         */
                        GetDocumentRequest.prototype.name = "";
    
                        /**
                         * GetDocumentRequest requestMetadata.
                         * @member {google.cloud.contentwarehouse.v1.IRequestMetadata|null|undefined} requestMetadata
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentRequest
                         * @instance
                         */
                        GetDocumentRequest.prototype.requestMetadata = null;
    
                        /**
                         * Creates a new GetDocumentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IGetDocumentRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.GetDocumentRequest} GetDocumentRequest instance
                         */
                        GetDocumentRequest.create = function create(properties) {
                            return new GetDocumentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetDocumentRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.GetDocumentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IGetDocumentRequest} message GetDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetDocumentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestMetadata != null && Object.hasOwnProperty.call(message, "requestMetadata"))
                                $root.google.cloud.contentwarehouse.v1.RequestMetadata.encode(message.requestMetadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetDocumentRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.GetDocumentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IGetDocumentRequest} message GetDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetDocumentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetDocumentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.GetDocumentRequest} GetDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetDocumentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.GetDocumentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetDocumentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.GetDocumentRequest} GetDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetDocumentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetDocumentRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetDocumentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RequestMetadata.verify(message.requestMetadata);
                                if (error)
                                    return "requestMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GetDocumentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.GetDocumentRequest} GetDocumentRequest
                         */
                        GetDocumentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.GetDocumentRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.GetDocumentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestMetadata != null) {
                                if (typeof object.requestMetadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.GetDocumentRequest.requestMetadata: object expected");
                                message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.fromObject(object.requestMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetDocumentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.GetDocumentRequest} message GetDocumentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetDocumentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestMetadata = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata"))
                                object.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.toObject(message.requestMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this GetDocumentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetDocumentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetDocumentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.GetDocumentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetDocumentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.GetDocumentRequest";
                        };
    
                        return GetDocumentRequest;
                    })();
    
                    v1.UpdateDocumentRequest = (function() {
    
                        /**
                         * Properties of an UpdateDocumentRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IUpdateDocumentRequest
                         * @property {string|null} [name] UpdateDocumentRequest name
                         * @property {google.cloud.contentwarehouse.v1.IDocument|null} [document] UpdateDocumentRequest document
                         * @property {google.cloud.contentwarehouse.v1.IRequestMetadata|null} [requestMetadata] UpdateDocumentRequest requestMetadata
                         * @property {google.cloud.contentwarehouse.v1.ICloudAIDocumentOption|null} [cloudAiDocumentOption] UpdateDocumentRequest cloudAiDocumentOption
                         * @property {google.cloud.contentwarehouse.v1.IUpdateOptions|null} [updateOptions] UpdateDocumentRequest updateOptions
                         */
    
                        /**
                         * Constructs a new UpdateDocumentRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an UpdateDocumentRequest.
                         * @implements IUpdateDocumentRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentRequest=} [properties] Properties to set
                         */
                        function UpdateDocumentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateDocumentRequest name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentRequest
                         * @instance
                         */
                        UpdateDocumentRequest.prototype.name = "";
    
                        /**
                         * UpdateDocumentRequest document.
                         * @member {google.cloud.contentwarehouse.v1.IDocument|null|undefined} document
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentRequest
                         * @instance
                         */
                        UpdateDocumentRequest.prototype.document = null;
    
                        /**
                         * UpdateDocumentRequest requestMetadata.
                         * @member {google.cloud.contentwarehouse.v1.IRequestMetadata|null|undefined} requestMetadata
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentRequest
                         * @instance
                         */
                        UpdateDocumentRequest.prototype.requestMetadata = null;
    
                        /**
                         * UpdateDocumentRequest cloudAiDocumentOption.
                         * @member {google.cloud.contentwarehouse.v1.ICloudAIDocumentOption|null|undefined} cloudAiDocumentOption
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentRequest
                         * @instance
                         */
                        UpdateDocumentRequest.prototype.cloudAiDocumentOption = null;
    
                        /**
                         * UpdateDocumentRequest updateOptions.
                         * @member {google.cloud.contentwarehouse.v1.IUpdateOptions|null|undefined} updateOptions
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentRequest
                         * @instance
                         */
                        UpdateDocumentRequest.prototype.updateOptions = null;
    
                        /**
                         * Creates a new UpdateDocumentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentRequest} UpdateDocumentRequest instance
                         */
                        UpdateDocumentRequest.create = function create(properties) {
                            return new UpdateDocumentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateDocumentRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.UpdateDocumentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentRequest} message UpdateDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateDocumentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.document != null && Object.hasOwnProperty.call(message, "document"))
                                $root.google.cloud.contentwarehouse.v1.Document.encode(message.document, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestMetadata != null && Object.hasOwnProperty.call(message, "requestMetadata"))
                                $root.google.cloud.contentwarehouse.v1.RequestMetadata.encode(message.requestMetadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.cloudAiDocumentOption != null && Object.hasOwnProperty.call(message, "cloudAiDocumentOption"))
                                $root.google.cloud.contentwarehouse.v1.CloudAIDocumentOption.encode(message.cloudAiDocumentOption, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.updateOptions != null && Object.hasOwnProperty.call(message, "updateOptions"))
                                $root.google.cloud.contentwarehouse.v1.UpdateOptions.encode(message.updateOptions, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateDocumentRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.UpdateDocumentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateDocumentRequest} message UpdateDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateDocumentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateDocumentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentRequest} UpdateDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateDocumentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.UpdateDocumentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.document = $root.google.cloud.contentwarehouse.v1.Document.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.cloudAiDocumentOption = $root.google.cloud.contentwarehouse.v1.CloudAIDocumentOption.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.updateOptions = $root.google.cloud.contentwarehouse.v1.UpdateOptions.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateDocumentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentRequest} UpdateDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateDocumentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateDocumentRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateDocumentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.document != null && message.hasOwnProperty("document")) {
                                var error = $root.google.cloud.contentwarehouse.v1.Document.verify(message.document);
                                if (error)
                                    return "document." + error;
                            }
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RequestMetadata.verify(message.requestMetadata);
                                if (error)
                                    return "requestMetadata." + error;
                            }
                            if (message.cloudAiDocumentOption != null && message.hasOwnProperty("cloudAiDocumentOption")) {
                                var error = $root.google.cloud.contentwarehouse.v1.CloudAIDocumentOption.verify(message.cloudAiDocumentOption);
                                if (error)
                                    return "cloudAiDocumentOption." + error;
                            }
                            if (message.updateOptions != null && message.hasOwnProperty("updateOptions")) {
                                var error = $root.google.cloud.contentwarehouse.v1.UpdateOptions.verify(message.updateOptions);
                                if (error)
                                    return "updateOptions." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateDocumentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.UpdateDocumentRequest} UpdateDocumentRequest
                         */
                        UpdateDocumentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.UpdateDocumentRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.UpdateDocumentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.document != null) {
                                if (typeof object.document !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.UpdateDocumentRequest.document: object expected");
                                message.document = $root.google.cloud.contentwarehouse.v1.Document.fromObject(object.document);
                            }
                            if (object.requestMetadata != null) {
                                if (typeof object.requestMetadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.UpdateDocumentRequest.requestMetadata: object expected");
                                message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.fromObject(object.requestMetadata);
                            }
                            if (object.cloudAiDocumentOption != null) {
                                if (typeof object.cloudAiDocumentOption !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.UpdateDocumentRequest.cloudAiDocumentOption: object expected");
                                message.cloudAiDocumentOption = $root.google.cloud.contentwarehouse.v1.CloudAIDocumentOption.fromObject(object.cloudAiDocumentOption);
                            }
                            if (object.updateOptions != null) {
                                if (typeof object.updateOptions !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.UpdateDocumentRequest.updateOptions: object expected");
                                message.updateOptions = $root.google.cloud.contentwarehouse.v1.UpdateOptions.fromObject(object.updateOptions);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateDocumentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.UpdateDocumentRequest} message UpdateDocumentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateDocumentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.document = null;
                                object.requestMetadata = null;
                                object.cloudAiDocumentOption = null;
                                object.updateOptions = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.document != null && message.hasOwnProperty("document"))
                                object.document = $root.google.cloud.contentwarehouse.v1.Document.toObject(message.document, options);
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata"))
                                object.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.toObject(message.requestMetadata, options);
                            if (message.cloudAiDocumentOption != null && message.hasOwnProperty("cloudAiDocumentOption"))
                                object.cloudAiDocumentOption = $root.google.cloud.contentwarehouse.v1.CloudAIDocumentOption.toObject(message.cloudAiDocumentOption, options);
                            if (message.updateOptions != null && message.hasOwnProperty("updateOptions"))
                                object.updateOptions = $root.google.cloud.contentwarehouse.v1.UpdateOptions.toObject(message.updateOptions, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateDocumentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateDocumentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateDocumentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.UpdateDocumentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateDocumentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.UpdateDocumentRequest";
                        };
    
                        return UpdateDocumentRequest;
                    })();
    
                    v1.DeleteDocumentRequest = (function() {
    
                        /**
                         * Properties of a DeleteDocumentRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IDeleteDocumentRequest
                         * @property {string|null} [name] DeleteDocumentRequest name
                         * @property {google.cloud.contentwarehouse.v1.IRequestMetadata|null} [requestMetadata] DeleteDocumentRequest requestMetadata
                         */
    
                        /**
                         * Constructs a new DeleteDocumentRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DeleteDocumentRequest.
                         * @implements IDeleteDocumentRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentRequest=} [properties] Properties to set
                         */
                        function DeleteDocumentRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteDocumentRequest name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentRequest
                         * @instance
                         */
                        DeleteDocumentRequest.prototype.name = "";
    
                        /**
                         * DeleteDocumentRequest requestMetadata.
                         * @member {google.cloud.contentwarehouse.v1.IRequestMetadata|null|undefined} requestMetadata
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentRequest
                         * @instance
                         */
                        DeleteDocumentRequest.prototype.requestMetadata = null;
    
                        /**
                         * Creates a new DeleteDocumentRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentRequest} DeleteDocumentRequest instance
                         */
                        DeleteDocumentRequest.create = function create(properties) {
                            return new DeleteDocumentRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteDocumentRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.DeleteDocumentRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentRequest} message DeleteDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteDocumentRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestMetadata != null && Object.hasOwnProperty.call(message, "requestMetadata"))
                                $root.google.cloud.contentwarehouse.v1.RequestMetadata.encode(message.requestMetadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteDocumentRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.DeleteDocumentRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentRequest} message DeleteDocumentRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteDocumentRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteDocumentRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentRequest} DeleteDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteDocumentRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.DeleteDocumentRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteDocumentRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentRequest} DeleteDocumentRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteDocumentRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteDocumentRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteDocumentRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RequestMetadata.verify(message.requestMetadata);
                                if (error)
                                    return "requestMetadata." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DeleteDocumentRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentRequest} DeleteDocumentRequest
                         */
                        DeleteDocumentRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.DeleteDocumentRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.DeleteDocumentRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestMetadata != null) {
                                if (typeof object.requestMetadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DeleteDocumentRequest.requestMetadata: object expected");
                                message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.fromObject(object.requestMetadata);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteDocumentRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.DeleteDocumentRequest} message DeleteDocumentRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteDocumentRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestMetadata = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata"))
                                object.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.toObject(message.requestMetadata, options);
                            return object;
                        };
    
                        /**
                         * Converts this DeleteDocumentRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteDocumentRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteDocumentRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteDocumentRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.DeleteDocumentRequest";
                        };
    
                        return DeleteDocumentRequest;
                    })();
    
                    v1.SearchDocumentsRequest = (function() {
    
                        /**
                         * Properties of a SearchDocumentsRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ISearchDocumentsRequest
                         * @property {string|null} [parent] SearchDocumentsRequest parent
                         * @property {google.cloud.contentwarehouse.v1.IRequestMetadata|null} [requestMetadata] SearchDocumentsRequest requestMetadata
                         * @property {google.cloud.contentwarehouse.v1.IDocumentQuery|null} [documentQuery] SearchDocumentsRequest documentQuery
                         * @property {number|null} [offset] SearchDocumentsRequest offset
                         * @property {number|null} [pageSize] SearchDocumentsRequest pageSize
                         * @property {string|null} [pageToken] SearchDocumentsRequest pageToken
                         * @property {string|null} [orderBy] SearchDocumentsRequest orderBy
                         * @property {Array.<google.cloud.contentwarehouse.v1.IHistogramQuery>|null} [histogramQueries] SearchDocumentsRequest histogramQueries
                         * @property {boolean|null} [requireTotalSize] SearchDocumentsRequest requireTotalSize
                         * @property {number|null} [qaSizeLimit] SearchDocumentsRequest qaSizeLimit
                         */
    
                        /**
                         * Constructs a new SearchDocumentsRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a SearchDocumentsRequest.
                         * @implements ISearchDocumentsRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ISearchDocumentsRequest=} [properties] Properties to set
                         */
                        function SearchDocumentsRequest(properties) {
                            this.histogramQueries = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SearchDocumentsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @instance
                         */
                        SearchDocumentsRequest.prototype.parent = "";
    
                        /**
                         * SearchDocumentsRequest requestMetadata.
                         * @member {google.cloud.contentwarehouse.v1.IRequestMetadata|null|undefined} requestMetadata
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @instance
                         */
                        SearchDocumentsRequest.prototype.requestMetadata = null;
    
                        /**
                         * SearchDocumentsRequest documentQuery.
                         * @member {google.cloud.contentwarehouse.v1.IDocumentQuery|null|undefined} documentQuery
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @instance
                         */
                        SearchDocumentsRequest.prototype.documentQuery = null;
    
                        /**
                         * SearchDocumentsRequest offset.
                         * @member {number} offset
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @instance
                         */
                        SearchDocumentsRequest.prototype.offset = 0;
    
                        /**
                         * SearchDocumentsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @instance
                         */
                        SearchDocumentsRequest.prototype.pageSize = 0;
    
                        /**
                         * SearchDocumentsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @instance
                         */
                        SearchDocumentsRequest.prototype.pageToken = "";
    
                        /**
                         * SearchDocumentsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @instance
                         */
                        SearchDocumentsRequest.prototype.orderBy = "";
    
                        /**
                         * SearchDocumentsRequest histogramQueries.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IHistogramQuery>} histogramQueries
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @instance
                         */
                        SearchDocumentsRequest.prototype.histogramQueries = $util.emptyArray;
    
                        /**
                         * SearchDocumentsRequest requireTotalSize.
                         * @member {boolean} requireTotalSize
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @instance
                         */
                        SearchDocumentsRequest.prototype.requireTotalSize = false;
    
                        /**
                         * SearchDocumentsRequest qaSizeLimit.
                         * @member {number} qaSizeLimit
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @instance
                         */
                        SearchDocumentsRequest.prototype.qaSizeLimit = 0;
    
                        /**
                         * Creates a new SearchDocumentsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ISearchDocumentsRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.SearchDocumentsRequest} SearchDocumentsRequest instance
                         */
                        SearchDocumentsRequest.create = function create(properties) {
                            return new SearchDocumentsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SearchDocumentsRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.SearchDocumentsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ISearchDocumentsRequest} message SearchDocumentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDocumentsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.requestMetadata != null && Object.hasOwnProperty.call(message, "requestMetadata"))
                                $root.google.cloud.contentwarehouse.v1.RequestMetadata.encode(message.requestMetadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.documentQuery != null && Object.hasOwnProperty.call(message, "documentQuery"))
                                $root.google.cloud.contentwarehouse.v1.DocumentQuery.encode(message.documentQuery, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.offset != null && Object.hasOwnProperty.call(message, "offset"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.offset);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.pageToken);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.orderBy);
                            if (message.histogramQueries != null && message.histogramQueries.length)
                                for (var i = 0; i < message.histogramQueries.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.HistogramQuery.encode(message.histogramQueries[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.requireTotalSize != null && Object.hasOwnProperty.call(message, "requireTotalSize"))
                                writer.uint32(/* id 10, wireType 0 =*/80).bool(message.requireTotalSize);
                            if (message.qaSizeLimit != null && Object.hasOwnProperty.call(message, "qaSizeLimit"))
                                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.qaSizeLimit);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SearchDocumentsRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.SearchDocumentsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ISearchDocumentsRequest} message SearchDocumentsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SearchDocumentsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SearchDocumentsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.SearchDocumentsRequest} SearchDocumentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDocumentsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.SearchDocumentsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.documentQuery = $root.google.cloud.contentwarehouse.v1.DocumentQuery.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.offset = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                case 9: {
                                        if (!(message.histogramQueries && message.histogramQueries.length))
                                            message.histogramQueries = [];
                                        message.histogramQueries.push($root.google.cloud.contentwarehouse.v1.HistogramQuery.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 10: {
                                        message.requireTotalSize = reader.bool();
                                        break;
                                    }
                                case 11: {
                                        message.qaSizeLimit = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SearchDocumentsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.SearchDocumentsRequest} SearchDocumentsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SearchDocumentsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SearchDocumentsRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SearchDocumentsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RequestMetadata.verify(message.requestMetadata);
                                if (error)
                                    return "requestMetadata." + error;
                            }
                            if (message.documentQuery != null && message.hasOwnProperty("documentQuery")) {
                                var error = $root.google.cloud.contentwarehouse.v1.DocumentQuery.verify(message.documentQuery);
                                if (error)
                                    return "documentQuery." + error;
                            }
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                if (!$util.isInteger(message.offset))
                                    return "offset: integer expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            if (message.histogramQueries != null && message.hasOwnProperty("histogramQueries")) {
                                if (!Array.isArray(message.histogramQueries))
                                    return "histogramQueries: array expected";
                                for (var i = 0; i < message.histogramQueries.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.HistogramQuery.verify(message.histogramQueries[i]);
                                    if (error)
                                        return "histogramQueries." + error;
                                }
                            }
                            if (message.requireTotalSize != null && message.hasOwnProperty("requireTotalSize"))
                                if (typeof message.requireTotalSize !== "boolean")
                                    return "requireTotalSize: boolean expected";
                            if (message.qaSizeLimit != null && message.hasOwnProperty("qaSizeLimit"))
                                if (!$util.isInteger(message.qaSizeLimit))
                                    return "qaSizeLimit: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a SearchDocumentsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.SearchDocumentsRequest} SearchDocumentsRequest
                         */
                        SearchDocumentsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.SearchDocumentsRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.SearchDocumentsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.requestMetadata != null) {
                                if (typeof object.requestMetadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.SearchDocumentsRequest.requestMetadata: object expected");
                                message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.fromObject(object.requestMetadata);
                            }
                            if (object.documentQuery != null) {
                                if (typeof object.documentQuery !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.SearchDocumentsRequest.documentQuery: object expected");
                                message.documentQuery = $root.google.cloud.contentwarehouse.v1.DocumentQuery.fromObject(object.documentQuery);
                            }
                            if (object.offset != null)
                                message.offset = object.offset | 0;
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            if (object.histogramQueries) {
                                if (!Array.isArray(object.histogramQueries))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.SearchDocumentsRequest.histogramQueries: array expected");
                                message.histogramQueries = [];
                                for (var i = 0; i < object.histogramQueries.length; ++i) {
                                    if (typeof object.histogramQueries[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.SearchDocumentsRequest.histogramQueries: object expected");
                                    message.histogramQueries[i] = $root.google.cloud.contentwarehouse.v1.HistogramQuery.fromObject(object.histogramQueries[i]);
                                }
                            }
                            if (object.requireTotalSize != null)
                                message.requireTotalSize = Boolean(object.requireTotalSize);
                            if (object.qaSizeLimit != null)
                                message.qaSizeLimit = object.qaSizeLimit | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SearchDocumentsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.SearchDocumentsRequest} message SearchDocumentsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SearchDocumentsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.histogramQueries = [];
                            if (options.defaults) {
                                object.parent = "";
                                object.requestMetadata = null;
                                object.documentQuery = null;
                                object.offset = 0;
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.orderBy = "";
                                object.requireTotalSize = false;
                                object.qaSizeLimit = 0;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata"))
                                object.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.toObject(message.requestMetadata, options);
                            if (message.documentQuery != null && message.hasOwnProperty("documentQuery"))
                                object.documentQuery = $root.google.cloud.contentwarehouse.v1.DocumentQuery.toObject(message.documentQuery, options);
                            if (message.offset != null && message.hasOwnProperty("offset"))
                                object.offset = message.offset;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            if (message.histogramQueries && message.histogramQueries.length) {
                                object.histogramQueries = [];
                                for (var j = 0; j < message.histogramQueries.length; ++j)
                                    object.histogramQueries[j] = $root.google.cloud.contentwarehouse.v1.HistogramQuery.toObject(message.histogramQueries[j], options);
                            }
                            if (message.requireTotalSize != null && message.hasOwnProperty("requireTotalSize"))
                                object.requireTotalSize = message.requireTotalSize;
                            if (message.qaSizeLimit != null && message.hasOwnProperty("qaSizeLimit"))
                                object.qaSizeLimit = message.qaSizeLimit;
                            return object;
                        };
    
                        /**
                         * Converts this SearchDocumentsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SearchDocumentsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SearchDocumentsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.SearchDocumentsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SearchDocumentsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.SearchDocumentsRequest";
                        };
    
                        return SearchDocumentsRequest;
                    })();
    
                    v1.FetchAclRequest = (function() {
    
                        /**
                         * Properties of a FetchAclRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IFetchAclRequest
                         * @property {string|null} [resource] FetchAclRequest resource
                         * @property {google.cloud.contentwarehouse.v1.IRequestMetadata|null} [requestMetadata] FetchAclRequest requestMetadata
                         * @property {boolean|null} [projectOwner] FetchAclRequest projectOwner
                         */
    
                        /**
                         * Constructs a new FetchAclRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a FetchAclRequest.
                         * @implements IFetchAclRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IFetchAclRequest=} [properties] Properties to set
                         */
                        function FetchAclRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FetchAclRequest resource.
                         * @member {string} resource
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclRequest
                         * @instance
                         */
                        FetchAclRequest.prototype.resource = "";
    
                        /**
                         * FetchAclRequest requestMetadata.
                         * @member {google.cloud.contentwarehouse.v1.IRequestMetadata|null|undefined} requestMetadata
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclRequest
                         * @instance
                         */
                        FetchAclRequest.prototype.requestMetadata = null;
    
                        /**
                         * FetchAclRequest projectOwner.
                         * @member {boolean} projectOwner
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclRequest
                         * @instance
                         */
                        FetchAclRequest.prototype.projectOwner = false;
    
                        /**
                         * Creates a new FetchAclRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IFetchAclRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.FetchAclRequest} FetchAclRequest instance
                         */
                        FetchAclRequest.create = function create(properties) {
                            return new FetchAclRequest(properties);
                        };
    
                        /**
                         * Encodes the specified FetchAclRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.FetchAclRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IFetchAclRequest} message FetchAclRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchAclRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.resource);
                            if (message.requestMetadata != null && Object.hasOwnProperty.call(message, "requestMetadata"))
                                $root.google.cloud.contentwarehouse.v1.RequestMetadata.encode(message.requestMetadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.projectOwner != null && Object.hasOwnProperty.call(message, "projectOwner"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.projectOwner);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FetchAclRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.FetchAclRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IFetchAclRequest} message FetchAclRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FetchAclRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FetchAclRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.FetchAclRequest} FetchAclRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchAclRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.FetchAclRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.resource = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.projectOwner = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FetchAclRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.FetchAclRequest} FetchAclRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FetchAclRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FetchAclRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FetchAclRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                if (!$util.isString(message.resource))
                                    return "resource: string expected";
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RequestMetadata.verify(message.requestMetadata);
                                if (error)
                                    return "requestMetadata." + error;
                            }
                            if (message.projectOwner != null && message.hasOwnProperty("projectOwner"))
                                if (typeof message.projectOwner !== "boolean")
                                    return "projectOwner: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a FetchAclRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.FetchAclRequest} FetchAclRequest
                         */
                        FetchAclRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.FetchAclRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.FetchAclRequest();
                            if (object.resource != null)
                                message.resource = String(object.resource);
                            if (object.requestMetadata != null) {
                                if (typeof object.requestMetadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.FetchAclRequest.requestMetadata: object expected");
                                message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.fromObject(object.requestMetadata);
                            }
                            if (object.projectOwner != null)
                                message.projectOwner = Boolean(object.projectOwner);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FetchAclRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.FetchAclRequest} message FetchAclRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FetchAclRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.resource = "";
                                object.requestMetadata = null;
                                object.projectOwner = false;
                            }
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = message.resource;
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata"))
                                object.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.toObject(message.requestMetadata, options);
                            if (message.projectOwner != null && message.hasOwnProperty("projectOwner"))
                                object.projectOwner = message.projectOwner;
                            return object;
                        };
    
                        /**
                         * Converts this FetchAclRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FetchAclRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FetchAclRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.FetchAclRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FetchAclRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.FetchAclRequest";
                        };
    
                        return FetchAclRequest;
                    })();
    
                    v1.SetAclRequest = (function() {
    
                        /**
                         * Properties of a SetAclRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ISetAclRequest
                         * @property {string|null} [resource] SetAclRequest resource
                         * @property {google.iam.v1.IPolicy|null} [policy] SetAclRequest policy
                         * @property {google.cloud.contentwarehouse.v1.IRequestMetadata|null} [requestMetadata] SetAclRequest requestMetadata
                         * @property {boolean|null} [projectOwner] SetAclRequest projectOwner
                         */
    
                        /**
                         * Constructs a new SetAclRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a SetAclRequest.
                         * @implements ISetAclRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ISetAclRequest=} [properties] Properties to set
                         */
                        function SetAclRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SetAclRequest resource.
                         * @member {string} resource
                         * @memberof google.cloud.contentwarehouse.v1.SetAclRequest
                         * @instance
                         */
                        SetAclRequest.prototype.resource = "";
    
                        /**
                         * SetAclRequest policy.
                         * @member {google.iam.v1.IPolicy|null|undefined} policy
                         * @memberof google.cloud.contentwarehouse.v1.SetAclRequest
                         * @instance
                         */
                        SetAclRequest.prototype.policy = null;
    
                        /**
                         * SetAclRequest requestMetadata.
                         * @member {google.cloud.contentwarehouse.v1.IRequestMetadata|null|undefined} requestMetadata
                         * @memberof google.cloud.contentwarehouse.v1.SetAclRequest
                         * @instance
                         */
                        SetAclRequest.prototype.requestMetadata = null;
    
                        /**
                         * SetAclRequest projectOwner.
                         * @member {boolean} projectOwner
                         * @memberof google.cloud.contentwarehouse.v1.SetAclRequest
                         * @instance
                         */
                        SetAclRequest.prototype.projectOwner = false;
    
                        /**
                         * Creates a new SetAclRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.SetAclRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ISetAclRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.SetAclRequest} SetAclRequest instance
                         */
                        SetAclRequest.create = function create(properties) {
                            return new SetAclRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SetAclRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.SetAclRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.SetAclRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ISetAclRequest} message SetAclRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetAclRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.resource);
                            if (message.policy != null && Object.hasOwnProperty.call(message, "policy"))
                                $root.google.iam.v1.Policy.encode(message.policy, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestMetadata != null && Object.hasOwnProperty.call(message, "requestMetadata"))
                                $root.google.cloud.contentwarehouse.v1.RequestMetadata.encode(message.requestMetadata, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.projectOwner != null && Object.hasOwnProperty.call(message, "projectOwner"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.projectOwner);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SetAclRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.SetAclRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.SetAclRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ISetAclRequest} message SetAclRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SetAclRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SetAclRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.SetAclRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.SetAclRequest} SetAclRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetAclRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.SetAclRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.resource = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.policy = $root.google.iam.v1.Policy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.projectOwner = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SetAclRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.SetAclRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.SetAclRequest} SetAclRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SetAclRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SetAclRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.SetAclRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SetAclRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                if (!$util.isString(message.resource))
                                    return "resource: string expected";
                            if (message.policy != null && message.hasOwnProperty("policy")) {
                                var error = $root.google.iam.v1.Policy.verify(message.policy);
                                if (error)
                                    return "policy." + error;
                            }
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RequestMetadata.verify(message.requestMetadata);
                                if (error)
                                    return "requestMetadata." + error;
                            }
                            if (message.projectOwner != null && message.hasOwnProperty("projectOwner"))
                                if (typeof message.projectOwner !== "boolean")
                                    return "projectOwner: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a SetAclRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.SetAclRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.SetAclRequest} SetAclRequest
                         */
                        SetAclRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.SetAclRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.SetAclRequest();
                            if (object.resource != null)
                                message.resource = String(object.resource);
                            if (object.policy != null) {
                                if (typeof object.policy !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.SetAclRequest.policy: object expected");
                                message.policy = $root.google.iam.v1.Policy.fromObject(object.policy);
                            }
                            if (object.requestMetadata != null) {
                                if (typeof object.requestMetadata !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.SetAclRequest.requestMetadata: object expected");
                                message.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.fromObject(object.requestMetadata);
                            }
                            if (object.projectOwner != null)
                                message.projectOwner = Boolean(object.projectOwner);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SetAclRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.SetAclRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.SetAclRequest} message SetAclRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SetAclRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.resource = "";
                                object.policy = null;
                                object.requestMetadata = null;
                                object.projectOwner = false;
                            }
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = message.resource;
                            if (message.policy != null && message.hasOwnProperty("policy"))
                                object.policy = $root.google.iam.v1.Policy.toObject(message.policy, options);
                            if (message.requestMetadata != null && message.hasOwnProperty("requestMetadata"))
                                object.requestMetadata = $root.google.cloud.contentwarehouse.v1.RequestMetadata.toObject(message.requestMetadata, options);
                            if (message.projectOwner != null && message.hasOwnProperty("projectOwner"))
                                object.projectOwner = message.projectOwner;
                            return object;
                        };
    
                        /**
                         * Converts this SetAclRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.SetAclRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SetAclRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SetAclRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.SetAclRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SetAclRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.SetAclRequest";
                        };
    
                        return SetAclRequest;
                    })();
    
                    v1.DocumentQuery = (function() {
    
                        /**
                         * Properties of a DocumentQuery.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IDocumentQuery
                         * @property {string|null} [query] DocumentQuery query
                         * @property {boolean|null} [isNlQuery] DocumentQuery isNlQuery
                         * @property {string|null} [customPropertyFilter] DocumentQuery customPropertyFilter
                         * @property {Array.<google.cloud.contentwarehouse.v1.ITimeFilter>|null} [timeFilters] DocumentQuery timeFilters
                         * @property {Array.<string>|null} [documentSchemaNames] DocumentQuery documentSchemaNames
                         * @property {Array.<google.cloud.contentwarehouse.v1.IPropertyFilter>|null} [propertyFilter] DocumentQuery propertyFilter
                         * @property {google.cloud.contentwarehouse.v1.IFileTypeFilter|null} [fileTypeFilter] DocumentQuery fileTypeFilter
                         * @property {string|null} [folderNameFilter] DocumentQuery folderNameFilter
                         * @property {Array.<string>|null} [queryContext] DocumentQuery queryContext
                         * @property {Array.<string>|null} [documentCreatorFilter] DocumentQuery documentCreatorFilter
                         */
    
                        /**
                         * Constructs a new DocumentQuery.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DocumentQuery.
                         * @implements IDocumentQuery
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IDocumentQuery=} [properties] Properties to set
                         */
                        function DocumentQuery(properties) {
                            this.timeFilters = [];
                            this.documentSchemaNames = [];
                            this.propertyFilter = [];
                            this.queryContext = [];
                            this.documentCreatorFilter = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DocumentQuery query.
                         * @member {string} query
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @instance
                         */
                        DocumentQuery.prototype.query = "";
    
                        /**
                         * DocumentQuery isNlQuery.
                         * @member {boolean} isNlQuery
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @instance
                         */
                        DocumentQuery.prototype.isNlQuery = false;
    
                        /**
                         * DocumentQuery customPropertyFilter.
                         * @member {string} customPropertyFilter
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @instance
                         */
                        DocumentQuery.prototype.customPropertyFilter = "";
    
                        /**
                         * DocumentQuery timeFilters.
                         * @member {Array.<google.cloud.contentwarehouse.v1.ITimeFilter>} timeFilters
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @instance
                         */
                        DocumentQuery.prototype.timeFilters = $util.emptyArray;
    
                        /**
                         * DocumentQuery documentSchemaNames.
                         * @member {Array.<string>} documentSchemaNames
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @instance
                         */
                        DocumentQuery.prototype.documentSchemaNames = $util.emptyArray;
    
                        /**
                         * DocumentQuery propertyFilter.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IPropertyFilter>} propertyFilter
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @instance
                         */
                        DocumentQuery.prototype.propertyFilter = $util.emptyArray;
    
                        /**
                         * DocumentQuery fileTypeFilter.
                         * @member {google.cloud.contentwarehouse.v1.IFileTypeFilter|null|undefined} fileTypeFilter
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @instance
                         */
                        DocumentQuery.prototype.fileTypeFilter = null;
    
                        /**
                         * DocumentQuery folderNameFilter.
                         * @member {string} folderNameFilter
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @instance
                         */
                        DocumentQuery.prototype.folderNameFilter = "";
    
                        /**
                         * DocumentQuery queryContext.
                         * @member {Array.<string>} queryContext
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @instance
                         */
                        DocumentQuery.prototype.queryContext = $util.emptyArray;
    
                        /**
                         * DocumentQuery documentCreatorFilter.
                         * @member {Array.<string>} documentCreatorFilter
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @instance
                         */
                        DocumentQuery.prototype.documentCreatorFilter = $util.emptyArray;
    
                        /**
                         * Creates a new DocumentQuery instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDocumentQuery=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.DocumentQuery} DocumentQuery instance
                         */
                        DocumentQuery.create = function create(properties) {
                            return new DocumentQuery(properties);
                        };
    
                        /**
                         * Encodes the specified DocumentQuery message. Does not implicitly {@link google.cloud.contentwarehouse.v1.DocumentQuery.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDocumentQuery} message DocumentQuery message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentQuery.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.query != null && Object.hasOwnProperty.call(message, "query"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.query);
                            if (message.customPropertyFilter != null && Object.hasOwnProperty.call(message, "customPropertyFilter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.customPropertyFilter);
                            if (message.timeFilters != null && message.timeFilters.length)
                                for (var i = 0; i < message.timeFilters.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.TimeFilter.encode(message.timeFilters[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.documentSchemaNames != null && message.documentSchemaNames.length)
                                for (var i = 0; i < message.documentSchemaNames.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.documentSchemaNames[i]);
                            if (message.propertyFilter != null && message.propertyFilter.length)
                                for (var i = 0; i < message.propertyFilter.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.PropertyFilter.encode(message.propertyFilter[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.fileTypeFilter != null && Object.hasOwnProperty.call(message, "fileTypeFilter"))
                                $root.google.cloud.contentwarehouse.v1.FileTypeFilter.encode(message.fileTypeFilter, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.folderNameFilter != null && Object.hasOwnProperty.call(message, "folderNameFilter"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.folderNameFilter);
                            if (message.queryContext != null && message.queryContext.length)
                                for (var i = 0; i < message.queryContext.length; ++i)
                                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.queryContext[i]);
                            if (message.documentCreatorFilter != null && message.documentCreatorFilter.length)
                                for (var i = 0; i < message.documentCreatorFilter.length; ++i)
                                    writer.uint32(/* id 11, wireType 2 =*/90).string(message.documentCreatorFilter[i]);
                            if (message.isNlQuery != null && Object.hasOwnProperty.call(message, "isNlQuery"))
                                writer.uint32(/* id 12, wireType 0 =*/96).bool(message.isNlQuery);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DocumentQuery message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.DocumentQuery.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDocumentQuery} message DocumentQuery message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DocumentQuery.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DocumentQuery message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.DocumentQuery} DocumentQuery
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentQuery.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.DocumentQuery();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.query = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.isNlQuery = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.customPropertyFilter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        if (!(message.timeFilters && message.timeFilters.length))
                                            message.timeFilters = [];
                                        message.timeFilters.push($root.google.cloud.contentwarehouse.v1.TimeFilter.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        if (!(message.documentSchemaNames && message.documentSchemaNames.length))
                                            message.documentSchemaNames = [];
                                        message.documentSchemaNames.push(reader.string());
                                        break;
                                    }
                                case 7: {
                                        if (!(message.propertyFilter && message.propertyFilter.length))
                                            message.propertyFilter = [];
                                        message.propertyFilter.push($root.google.cloud.contentwarehouse.v1.PropertyFilter.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 8: {
                                        message.fileTypeFilter = $root.google.cloud.contentwarehouse.v1.FileTypeFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.folderNameFilter = reader.string();
                                        break;
                                    }
                                case 10: {
                                        if (!(message.queryContext && message.queryContext.length))
                                            message.queryContext = [];
                                        message.queryContext.push(reader.string());
                                        break;
                                    }
                                case 11: {
                                        if (!(message.documentCreatorFilter && message.documentCreatorFilter.length))
                                            message.documentCreatorFilter = [];
                                        message.documentCreatorFilter.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DocumentQuery message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.DocumentQuery} DocumentQuery
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DocumentQuery.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DocumentQuery message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DocumentQuery.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.query != null && message.hasOwnProperty("query"))
                                if (!$util.isString(message.query))
                                    return "query: string expected";
                            if (message.isNlQuery != null && message.hasOwnProperty("isNlQuery"))
                                if (typeof message.isNlQuery !== "boolean")
                                    return "isNlQuery: boolean expected";
                            if (message.customPropertyFilter != null && message.hasOwnProperty("customPropertyFilter"))
                                if (!$util.isString(message.customPropertyFilter))
                                    return "customPropertyFilter: string expected";
                            if (message.timeFilters != null && message.hasOwnProperty("timeFilters")) {
                                if (!Array.isArray(message.timeFilters))
                                    return "timeFilters: array expected";
                                for (var i = 0; i < message.timeFilters.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.TimeFilter.verify(message.timeFilters[i]);
                                    if (error)
                                        return "timeFilters." + error;
                                }
                            }
                            if (message.documentSchemaNames != null && message.hasOwnProperty("documentSchemaNames")) {
                                if (!Array.isArray(message.documentSchemaNames))
                                    return "documentSchemaNames: array expected";
                                for (var i = 0; i < message.documentSchemaNames.length; ++i)
                                    if (!$util.isString(message.documentSchemaNames[i]))
                                        return "documentSchemaNames: string[] expected";
                            }
                            if (message.propertyFilter != null && message.hasOwnProperty("propertyFilter")) {
                                if (!Array.isArray(message.propertyFilter))
                                    return "propertyFilter: array expected";
                                for (var i = 0; i < message.propertyFilter.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.PropertyFilter.verify(message.propertyFilter[i]);
                                    if (error)
                                        return "propertyFilter." + error;
                                }
                            }
                            if (message.fileTypeFilter != null && message.hasOwnProperty("fileTypeFilter")) {
                                var error = $root.google.cloud.contentwarehouse.v1.FileTypeFilter.verify(message.fileTypeFilter);
                                if (error)
                                    return "fileTypeFilter." + error;
                            }
                            if (message.folderNameFilter != null && message.hasOwnProperty("folderNameFilter"))
                                if (!$util.isString(message.folderNameFilter))
                                    return "folderNameFilter: string expected";
                            if (message.queryContext != null && message.hasOwnProperty("queryContext")) {
                                if (!Array.isArray(message.queryContext))
                                    return "queryContext: array expected";
                                for (var i = 0; i < message.queryContext.length; ++i)
                                    if (!$util.isString(message.queryContext[i]))
                                        return "queryContext: string[] expected";
                            }
                            if (message.documentCreatorFilter != null && message.hasOwnProperty("documentCreatorFilter")) {
                                if (!Array.isArray(message.documentCreatorFilter))
                                    return "documentCreatorFilter: array expected";
                                for (var i = 0; i < message.documentCreatorFilter.length; ++i)
                                    if (!$util.isString(message.documentCreatorFilter[i]))
                                        return "documentCreatorFilter: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DocumentQuery message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.DocumentQuery} DocumentQuery
                         */
                        DocumentQuery.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.DocumentQuery)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.DocumentQuery();
                            if (object.query != null)
                                message.query = String(object.query);
                            if (object.isNlQuery != null)
                                message.isNlQuery = Boolean(object.isNlQuery);
                            if (object.customPropertyFilter != null)
                                message.customPropertyFilter = String(object.customPropertyFilter);
                            if (object.timeFilters) {
                                if (!Array.isArray(object.timeFilters))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentQuery.timeFilters: array expected");
                                message.timeFilters = [];
                                for (var i = 0; i < object.timeFilters.length; ++i) {
                                    if (typeof object.timeFilters[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.DocumentQuery.timeFilters: object expected");
                                    message.timeFilters[i] = $root.google.cloud.contentwarehouse.v1.TimeFilter.fromObject(object.timeFilters[i]);
                                }
                            }
                            if (object.documentSchemaNames) {
                                if (!Array.isArray(object.documentSchemaNames))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentQuery.documentSchemaNames: array expected");
                                message.documentSchemaNames = [];
                                for (var i = 0; i < object.documentSchemaNames.length; ++i)
                                    message.documentSchemaNames[i] = String(object.documentSchemaNames[i]);
                            }
                            if (object.propertyFilter) {
                                if (!Array.isArray(object.propertyFilter))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentQuery.propertyFilter: array expected");
                                message.propertyFilter = [];
                                for (var i = 0; i < object.propertyFilter.length; ++i) {
                                    if (typeof object.propertyFilter[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.DocumentQuery.propertyFilter: object expected");
                                    message.propertyFilter[i] = $root.google.cloud.contentwarehouse.v1.PropertyFilter.fromObject(object.propertyFilter[i]);
                                }
                            }
                            if (object.fileTypeFilter != null) {
                                if (typeof object.fileTypeFilter !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentQuery.fileTypeFilter: object expected");
                                message.fileTypeFilter = $root.google.cloud.contentwarehouse.v1.FileTypeFilter.fromObject(object.fileTypeFilter);
                            }
                            if (object.folderNameFilter != null)
                                message.folderNameFilter = String(object.folderNameFilter);
                            if (object.queryContext) {
                                if (!Array.isArray(object.queryContext))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentQuery.queryContext: array expected");
                                message.queryContext = [];
                                for (var i = 0; i < object.queryContext.length; ++i)
                                    message.queryContext[i] = String(object.queryContext[i]);
                            }
                            if (object.documentCreatorFilter) {
                                if (!Array.isArray(object.documentCreatorFilter))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DocumentQuery.documentCreatorFilter: array expected");
                                message.documentCreatorFilter = [];
                                for (var i = 0; i < object.documentCreatorFilter.length; ++i)
                                    message.documentCreatorFilter[i] = String(object.documentCreatorFilter[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DocumentQuery message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.DocumentQuery} message DocumentQuery
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DocumentQuery.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.timeFilters = [];
                                object.documentSchemaNames = [];
                                object.propertyFilter = [];
                                object.queryContext = [];
                                object.documentCreatorFilter = [];
                            }
                            if (options.defaults) {
                                object.query = "";
                                object.customPropertyFilter = "";
                                object.fileTypeFilter = null;
                                object.folderNameFilter = "";
                                object.isNlQuery = false;
                            }
                            if (message.query != null && message.hasOwnProperty("query"))
                                object.query = message.query;
                            if (message.customPropertyFilter != null && message.hasOwnProperty("customPropertyFilter"))
                                object.customPropertyFilter = message.customPropertyFilter;
                            if (message.timeFilters && message.timeFilters.length) {
                                object.timeFilters = [];
                                for (var j = 0; j < message.timeFilters.length; ++j)
                                    object.timeFilters[j] = $root.google.cloud.contentwarehouse.v1.TimeFilter.toObject(message.timeFilters[j], options);
                            }
                            if (message.documentSchemaNames && message.documentSchemaNames.length) {
                                object.documentSchemaNames = [];
                                for (var j = 0; j < message.documentSchemaNames.length; ++j)
                                    object.documentSchemaNames[j] = message.documentSchemaNames[j];
                            }
                            if (message.propertyFilter && message.propertyFilter.length) {
                                object.propertyFilter = [];
                                for (var j = 0; j < message.propertyFilter.length; ++j)
                                    object.propertyFilter[j] = $root.google.cloud.contentwarehouse.v1.PropertyFilter.toObject(message.propertyFilter[j], options);
                            }
                            if (message.fileTypeFilter != null && message.hasOwnProperty("fileTypeFilter"))
                                object.fileTypeFilter = $root.google.cloud.contentwarehouse.v1.FileTypeFilter.toObject(message.fileTypeFilter, options);
                            if (message.folderNameFilter != null && message.hasOwnProperty("folderNameFilter"))
                                object.folderNameFilter = message.folderNameFilter;
                            if (message.queryContext && message.queryContext.length) {
                                object.queryContext = [];
                                for (var j = 0; j < message.queryContext.length; ++j)
                                    object.queryContext[j] = message.queryContext[j];
                            }
                            if (message.documentCreatorFilter && message.documentCreatorFilter.length) {
                                object.documentCreatorFilter = [];
                                for (var j = 0; j < message.documentCreatorFilter.length; ++j)
                                    object.documentCreatorFilter[j] = message.documentCreatorFilter[j];
                            }
                            if (message.isNlQuery != null && message.hasOwnProperty("isNlQuery"))
                                object.isNlQuery = message.isNlQuery;
                            return object;
                        };
    
                        /**
                         * Converts this DocumentQuery to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DocumentQuery.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DocumentQuery
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.DocumentQuery
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DocumentQuery.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.DocumentQuery";
                        };
    
                        return DocumentQuery;
                    })();
    
                    v1.TimeFilter = (function() {
    
                        /**
                         * Properties of a TimeFilter.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ITimeFilter
                         * @property {google.type.IInterval|null} [timeRange] TimeFilter timeRange
                         * @property {google.cloud.contentwarehouse.v1.TimeFilter.TimeField|null} [timeField] TimeFilter timeField
                         */
    
                        /**
                         * Constructs a new TimeFilter.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a TimeFilter.
                         * @implements ITimeFilter
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ITimeFilter=} [properties] Properties to set
                         */
                        function TimeFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TimeFilter timeRange.
                         * @member {google.type.IInterval|null|undefined} timeRange
                         * @memberof google.cloud.contentwarehouse.v1.TimeFilter
                         * @instance
                         */
                        TimeFilter.prototype.timeRange = null;
    
                        /**
                         * TimeFilter timeField.
                         * @member {google.cloud.contentwarehouse.v1.TimeFilter.TimeField} timeField
                         * @memberof google.cloud.contentwarehouse.v1.TimeFilter
                         * @instance
                         */
                        TimeFilter.prototype.timeField = 0;
    
                        /**
                         * Creates a new TimeFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.TimeFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITimeFilter=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.TimeFilter} TimeFilter instance
                         */
                        TimeFilter.create = function create(properties) {
                            return new TimeFilter(properties);
                        };
    
                        /**
                         * Encodes the specified TimeFilter message. Does not implicitly {@link google.cloud.contentwarehouse.v1.TimeFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.TimeFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITimeFilter} message TimeFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TimeFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.timeRange != null && Object.hasOwnProperty.call(message, "timeRange"))
                                $root.google.type.Interval.encode(message.timeRange, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.timeField != null && Object.hasOwnProperty.call(message, "timeField"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.timeField);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TimeFilter message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.TimeFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.TimeFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ITimeFilter} message TimeFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TimeFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TimeFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.TimeFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.TimeFilter} TimeFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TimeFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.TimeFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.timeRange = $root.google.type.Interval.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.timeField = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TimeFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.TimeFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.TimeFilter} TimeFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TimeFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TimeFilter message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.TimeFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TimeFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.timeRange != null && message.hasOwnProperty("timeRange")) {
                                var error = $root.google.type.Interval.verify(message.timeRange);
                                if (error)
                                    return "timeRange." + error;
                            }
                            if (message.timeField != null && message.hasOwnProperty("timeField"))
                                switch (message.timeField) {
                                default:
                                    return "timeField: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a TimeFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.TimeFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.TimeFilter} TimeFilter
                         */
                        TimeFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.TimeFilter)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.TimeFilter();
                            if (object.timeRange != null) {
                                if (typeof object.timeRange !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.TimeFilter.timeRange: object expected");
                                message.timeRange = $root.google.type.Interval.fromObject(object.timeRange);
                            }
                            switch (object.timeField) {
                            default:
                                if (typeof object.timeField === "number") {
                                    message.timeField = object.timeField;
                                    break;
                                }
                                break;
                            case "TIME_FIELD_UNSPECIFIED":
                            case 0:
                                message.timeField = 0;
                                break;
                            case "CREATE_TIME":
                            case 1:
                                message.timeField = 1;
                                break;
                            case "UPDATE_TIME":
                            case 2:
                                message.timeField = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TimeFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.TimeFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.TimeFilter} message TimeFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TimeFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.timeRange = null;
                                object.timeField = options.enums === String ? "TIME_FIELD_UNSPECIFIED" : 0;
                            }
                            if (message.timeRange != null && message.hasOwnProperty("timeRange"))
                                object.timeRange = $root.google.type.Interval.toObject(message.timeRange, options);
                            if (message.timeField != null && message.hasOwnProperty("timeField"))
                                object.timeField = options.enums === String ? $root.google.cloud.contentwarehouse.v1.TimeFilter.TimeField[message.timeField] === undefined ? message.timeField : $root.google.cloud.contentwarehouse.v1.TimeFilter.TimeField[message.timeField] : message.timeField;
                            return object;
                        };
    
                        /**
                         * Converts this TimeFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.TimeFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TimeFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TimeFilter
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.TimeFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TimeFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.TimeFilter";
                        };
    
                        /**
                         * TimeField enum.
                         * @name google.cloud.contentwarehouse.v1.TimeFilter.TimeField
                         * @enum {number}
                         * @property {number} TIME_FIELD_UNSPECIFIED=0 TIME_FIELD_UNSPECIFIED value
                         * @property {number} CREATE_TIME=1 CREATE_TIME value
                         * @property {number} UPDATE_TIME=2 UPDATE_TIME value
                         */
                        TimeFilter.TimeField = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TIME_FIELD_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATE_TIME"] = 1;
                            values[valuesById[2] = "UPDATE_TIME"] = 2;
                            return values;
                        })();
    
                        return TimeFilter;
                    })();
    
                    v1.PropertyFilter = (function() {
    
                        /**
                         * Properties of a PropertyFilter.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IPropertyFilter
                         * @property {string|null} [documentSchemaName] PropertyFilter documentSchemaName
                         * @property {string|null} [condition] PropertyFilter condition
                         */
    
                        /**
                         * Constructs a new PropertyFilter.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a PropertyFilter.
                         * @implements IPropertyFilter
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IPropertyFilter=} [properties] Properties to set
                         */
                        function PropertyFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PropertyFilter documentSchemaName.
                         * @member {string} documentSchemaName
                         * @memberof google.cloud.contentwarehouse.v1.PropertyFilter
                         * @instance
                         */
                        PropertyFilter.prototype.documentSchemaName = "";
    
                        /**
                         * PropertyFilter condition.
                         * @member {string} condition
                         * @memberof google.cloud.contentwarehouse.v1.PropertyFilter
                         * @instance
                         */
                        PropertyFilter.prototype.condition = "";
    
                        /**
                         * Creates a new PropertyFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.PropertyFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IPropertyFilter=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.PropertyFilter} PropertyFilter instance
                         */
                        PropertyFilter.create = function create(properties) {
                            return new PropertyFilter(properties);
                        };
    
                        /**
                         * Encodes the specified PropertyFilter message. Does not implicitly {@link google.cloud.contentwarehouse.v1.PropertyFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.PropertyFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IPropertyFilter} message PropertyFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PropertyFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.documentSchemaName != null && Object.hasOwnProperty.call(message, "documentSchemaName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.documentSchemaName);
                            if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.condition);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PropertyFilter message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.PropertyFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.PropertyFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IPropertyFilter} message PropertyFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PropertyFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PropertyFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.PropertyFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.PropertyFilter} PropertyFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PropertyFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.PropertyFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.documentSchemaName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.condition = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PropertyFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.PropertyFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.PropertyFilter} PropertyFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PropertyFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PropertyFilter message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.PropertyFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PropertyFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.documentSchemaName != null && message.hasOwnProperty("documentSchemaName"))
                                if (!$util.isString(message.documentSchemaName))
                                    return "documentSchemaName: string expected";
                            if (message.condition != null && message.hasOwnProperty("condition"))
                                if (!$util.isString(message.condition))
                                    return "condition: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a PropertyFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.PropertyFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.PropertyFilter} PropertyFilter
                         */
                        PropertyFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.PropertyFilter)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.PropertyFilter();
                            if (object.documentSchemaName != null)
                                message.documentSchemaName = String(object.documentSchemaName);
                            if (object.condition != null)
                                message.condition = String(object.condition);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PropertyFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.PropertyFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.PropertyFilter} message PropertyFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PropertyFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.documentSchemaName = "";
                                object.condition = "";
                            }
                            if (message.documentSchemaName != null && message.hasOwnProperty("documentSchemaName"))
                                object.documentSchemaName = message.documentSchemaName;
                            if (message.condition != null && message.hasOwnProperty("condition"))
                                object.condition = message.condition;
                            return object;
                        };
    
                        /**
                         * Converts this PropertyFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.PropertyFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PropertyFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PropertyFilter
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.PropertyFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PropertyFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.PropertyFilter";
                        };
    
                        return PropertyFilter;
                    })();
    
                    v1.FileTypeFilter = (function() {
    
                        /**
                         * Properties of a FileTypeFilter.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IFileTypeFilter
                         * @property {google.cloud.contentwarehouse.v1.FileTypeFilter.FileType|null} [fileType] FileTypeFilter fileType
                         */
    
                        /**
                         * Constructs a new FileTypeFilter.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a FileTypeFilter.
                         * @implements IFileTypeFilter
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IFileTypeFilter=} [properties] Properties to set
                         */
                        function FileTypeFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FileTypeFilter fileType.
                         * @member {google.cloud.contentwarehouse.v1.FileTypeFilter.FileType} fileType
                         * @memberof google.cloud.contentwarehouse.v1.FileTypeFilter
                         * @instance
                         */
                        FileTypeFilter.prototype.fileType = 0;
    
                        /**
                         * Creates a new FileTypeFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.FileTypeFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IFileTypeFilter=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.FileTypeFilter} FileTypeFilter instance
                         */
                        FileTypeFilter.create = function create(properties) {
                            return new FileTypeFilter(properties);
                        };
    
                        /**
                         * Encodes the specified FileTypeFilter message. Does not implicitly {@link google.cloud.contentwarehouse.v1.FileTypeFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.FileTypeFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IFileTypeFilter} message FileTypeFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FileTypeFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.fileType != null && Object.hasOwnProperty.call(message, "fileType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.fileType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FileTypeFilter message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.FileTypeFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.FileTypeFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IFileTypeFilter} message FileTypeFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FileTypeFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FileTypeFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.FileTypeFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.FileTypeFilter} FileTypeFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FileTypeFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.FileTypeFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.fileType = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FileTypeFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.FileTypeFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.FileTypeFilter} FileTypeFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FileTypeFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FileTypeFilter message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.FileTypeFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FileTypeFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.fileType != null && message.hasOwnProperty("fileType"))
                                switch (message.fileType) {
                                default:
                                    return "fileType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a FileTypeFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.FileTypeFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.FileTypeFilter} FileTypeFilter
                         */
                        FileTypeFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.FileTypeFilter)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.FileTypeFilter();
                            switch (object.fileType) {
                            default:
                                if (typeof object.fileType === "number") {
                                    message.fileType = object.fileType;
                                    break;
                                }
                                break;
                            case "FILE_TYPE_UNSPECIFIED":
                            case 0:
                                message.fileType = 0;
                                break;
                            case "ALL":
                            case 1:
                                message.fileType = 1;
                                break;
                            case "FOLDER":
                            case 2:
                                message.fileType = 2;
                                break;
                            case "DOCUMENT":
                            case 3:
                                message.fileType = 3;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FileTypeFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.FileTypeFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.FileTypeFilter} message FileTypeFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FileTypeFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.fileType = options.enums === String ? "FILE_TYPE_UNSPECIFIED" : 0;
                            if (message.fileType != null && message.hasOwnProperty("fileType"))
                                object.fileType = options.enums === String ? $root.google.cloud.contentwarehouse.v1.FileTypeFilter.FileType[message.fileType] === undefined ? message.fileType : $root.google.cloud.contentwarehouse.v1.FileTypeFilter.FileType[message.fileType] : message.fileType;
                            return object;
                        };
    
                        /**
                         * Converts this FileTypeFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.FileTypeFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FileTypeFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FileTypeFilter
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.FileTypeFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FileTypeFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.FileTypeFilter";
                        };
    
                        /**
                         * FileType enum.
                         * @name google.cloud.contentwarehouse.v1.FileTypeFilter.FileType
                         * @enum {number}
                         * @property {number} FILE_TYPE_UNSPECIFIED=0 FILE_TYPE_UNSPECIFIED value
                         * @property {number} ALL=1 ALL value
                         * @property {number} FOLDER=2 FOLDER value
                         * @property {number} DOCUMENT=3 DOCUMENT value
                         */
                        FileTypeFilter.FileType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "FILE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ALL"] = 1;
                            values[valuesById[2] = "FOLDER"] = 2;
                            values[valuesById[3] = "DOCUMENT"] = 3;
                            return values;
                        })();
    
                        return FileTypeFilter;
                    })();
    
                    v1.HistogramQuery = (function() {
    
                        /**
                         * Properties of a HistogramQuery.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IHistogramQuery
                         * @property {string|null} [histogramQuery] HistogramQuery histogramQuery
                         * @property {boolean|null} [requirePreciseResultSize] HistogramQuery requirePreciseResultSize
                         * @property {google.cloud.contentwarehouse.v1.IHistogramQueryPropertyNameFilter|null} [filters] HistogramQuery filters
                         */
    
                        /**
                         * Constructs a new HistogramQuery.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a HistogramQuery.
                         * @implements IHistogramQuery
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IHistogramQuery=} [properties] Properties to set
                         */
                        function HistogramQuery(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HistogramQuery histogramQuery.
                         * @member {string} histogramQuery
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQuery
                         * @instance
                         */
                        HistogramQuery.prototype.histogramQuery = "";
    
                        /**
                         * HistogramQuery requirePreciseResultSize.
                         * @member {boolean} requirePreciseResultSize
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQuery
                         * @instance
                         */
                        HistogramQuery.prototype.requirePreciseResultSize = false;
    
                        /**
                         * HistogramQuery filters.
                         * @member {google.cloud.contentwarehouse.v1.IHistogramQueryPropertyNameFilter|null|undefined} filters
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQuery
                         * @instance
                         */
                        HistogramQuery.prototype.filters = null;
    
                        /**
                         * Creates a new HistogramQuery instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQuery
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IHistogramQuery=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.HistogramQuery} HistogramQuery instance
                         */
                        HistogramQuery.create = function create(properties) {
                            return new HistogramQuery(properties);
                        };
    
                        /**
                         * Encodes the specified HistogramQuery message. Does not implicitly {@link google.cloud.contentwarehouse.v1.HistogramQuery.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQuery
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IHistogramQuery} message HistogramQuery message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HistogramQuery.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.histogramQuery != null && Object.hasOwnProperty.call(message, "histogramQuery"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.histogramQuery);
                            if (message.requirePreciseResultSize != null && Object.hasOwnProperty.call(message, "requirePreciseResultSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.requirePreciseResultSize);
                            if (message.filters != null && Object.hasOwnProperty.call(message, "filters"))
                                $root.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.encode(message.filters, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HistogramQuery message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.HistogramQuery.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQuery
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IHistogramQuery} message HistogramQuery message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HistogramQuery.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HistogramQuery message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQuery
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.HistogramQuery} HistogramQuery
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HistogramQuery.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.HistogramQuery();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.histogramQuery = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requirePreciseResultSize = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.filters = $root.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HistogramQuery message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQuery
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.HistogramQuery} HistogramQuery
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HistogramQuery.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HistogramQuery message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQuery
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HistogramQuery.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.histogramQuery != null && message.hasOwnProperty("histogramQuery"))
                                if (!$util.isString(message.histogramQuery))
                                    return "histogramQuery: string expected";
                            if (message.requirePreciseResultSize != null && message.hasOwnProperty("requirePreciseResultSize"))
                                if (typeof message.requirePreciseResultSize !== "boolean")
                                    return "requirePreciseResultSize: boolean expected";
                            if (message.filters != null && message.hasOwnProperty("filters")) {
                                var error = $root.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.verify(message.filters);
                                if (error)
                                    return "filters." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HistogramQuery message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQuery
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.HistogramQuery} HistogramQuery
                         */
                        HistogramQuery.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.HistogramQuery)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.HistogramQuery();
                            if (object.histogramQuery != null)
                                message.histogramQuery = String(object.histogramQuery);
                            if (object.requirePreciseResultSize != null)
                                message.requirePreciseResultSize = Boolean(object.requirePreciseResultSize);
                            if (object.filters != null) {
                                if (typeof object.filters !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.HistogramQuery.filters: object expected");
                                message.filters = $root.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.fromObject(object.filters);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HistogramQuery message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQuery
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.HistogramQuery} message HistogramQuery
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HistogramQuery.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.histogramQuery = "";
                                object.requirePreciseResultSize = false;
                                object.filters = null;
                            }
                            if (message.histogramQuery != null && message.hasOwnProperty("histogramQuery"))
                                object.histogramQuery = message.histogramQuery;
                            if (message.requirePreciseResultSize != null && message.hasOwnProperty("requirePreciseResultSize"))
                                object.requirePreciseResultSize = message.requirePreciseResultSize;
                            if (message.filters != null && message.hasOwnProperty("filters"))
                                object.filters = $root.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.toObject(message.filters, options);
                            return object;
                        };
    
                        /**
                         * Converts this HistogramQuery to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQuery
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HistogramQuery.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HistogramQuery
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQuery
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HistogramQuery.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.HistogramQuery";
                        };
    
                        return HistogramQuery;
                    })();
    
                    v1.HistogramQueryPropertyNameFilter = (function() {
    
                        /**
                         * Properties of a HistogramQueryPropertyNameFilter.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IHistogramQueryPropertyNameFilter
                         * @property {Array.<string>|null} [documentSchemas] HistogramQueryPropertyNameFilter documentSchemas
                         * @property {Array.<string>|null} [propertyNames] HistogramQueryPropertyNameFilter propertyNames
                         * @property {google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis|null} [yAxis] HistogramQueryPropertyNameFilter yAxis
                         */
    
                        /**
                         * Constructs a new HistogramQueryPropertyNameFilter.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a HistogramQueryPropertyNameFilter.
                         * @implements IHistogramQueryPropertyNameFilter
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IHistogramQueryPropertyNameFilter=} [properties] Properties to set
                         */
                        function HistogramQueryPropertyNameFilter(properties) {
                            this.documentSchemas = [];
                            this.propertyNames = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HistogramQueryPropertyNameFilter documentSchemas.
                         * @member {Array.<string>} documentSchemas
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
                         * @instance
                         */
                        HistogramQueryPropertyNameFilter.prototype.documentSchemas = $util.emptyArray;
    
                        /**
                         * HistogramQueryPropertyNameFilter propertyNames.
                         * @member {Array.<string>} propertyNames
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
                         * @instance
                         */
                        HistogramQueryPropertyNameFilter.prototype.propertyNames = $util.emptyArray;
    
                        /**
                         * HistogramQueryPropertyNameFilter yAxis.
                         * @member {google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis} yAxis
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
                         * @instance
                         */
                        HistogramQueryPropertyNameFilter.prototype.yAxis = 0;
    
                        /**
                         * Creates a new HistogramQueryPropertyNameFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IHistogramQueryPropertyNameFilter=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter} HistogramQueryPropertyNameFilter instance
                         */
                        HistogramQueryPropertyNameFilter.create = function create(properties) {
                            return new HistogramQueryPropertyNameFilter(properties);
                        };
    
                        /**
                         * Encodes the specified HistogramQueryPropertyNameFilter message. Does not implicitly {@link google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IHistogramQueryPropertyNameFilter} message HistogramQueryPropertyNameFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HistogramQueryPropertyNameFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.documentSchemas != null && message.documentSchemas.length)
                                for (var i = 0; i < message.documentSchemas.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.documentSchemas[i]);
                            if (message.propertyNames != null && message.propertyNames.length)
                                for (var i = 0; i < message.propertyNames.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.propertyNames[i]);
                            if (message.yAxis != null && Object.hasOwnProperty.call(message, "yAxis"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.yAxis);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HistogramQueryPropertyNameFilter message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IHistogramQueryPropertyNameFilter} message HistogramQueryPropertyNameFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HistogramQueryPropertyNameFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HistogramQueryPropertyNameFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter} HistogramQueryPropertyNameFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HistogramQueryPropertyNameFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.documentSchemas && message.documentSchemas.length))
                                            message.documentSchemas = [];
                                        message.documentSchemas.push(reader.string());
                                        break;
                                    }
                                case 2: {
                                        if (!(message.propertyNames && message.propertyNames.length))
                                            message.propertyNames = [];
                                        message.propertyNames.push(reader.string());
                                        break;
                                    }
                                case 3: {
                                        message.yAxis = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HistogramQueryPropertyNameFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter} HistogramQueryPropertyNameFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HistogramQueryPropertyNameFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HistogramQueryPropertyNameFilter message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HistogramQueryPropertyNameFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.documentSchemas != null && message.hasOwnProperty("documentSchemas")) {
                                if (!Array.isArray(message.documentSchemas))
                                    return "documentSchemas: array expected";
                                for (var i = 0; i < message.documentSchemas.length; ++i)
                                    if (!$util.isString(message.documentSchemas[i]))
                                        return "documentSchemas: string[] expected";
                            }
                            if (message.propertyNames != null && message.hasOwnProperty("propertyNames")) {
                                if (!Array.isArray(message.propertyNames))
                                    return "propertyNames: array expected";
                                for (var i = 0; i < message.propertyNames.length; ++i)
                                    if (!$util.isString(message.propertyNames[i]))
                                        return "propertyNames: string[] expected";
                            }
                            if (message.yAxis != null && message.hasOwnProperty("yAxis"))
                                switch (message.yAxis) {
                                default:
                                    return "yAxis: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a HistogramQueryPropertyNameFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter} HistogramQueryPropertyNameFilter
                         */
                        HistogramQueryPropertyNameFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter();
                            if (object.documentSchemas) {
                                if (!Array.isArray(object.documentSchemas))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.documentSchemas: array expected");
                                message.documentSchemas = [];
                                for (var i = 0; i < object.documentSchemas.length; ++i)
                                    message.documentSchemas[i] = String(object.documentSchemas[i]);
                            }
                            if (object.propertyNames) {
                                if (!Array.isArray(object.propertyNames))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.propertyNames: array expected");
                                message.propertyNames = [];
                                for (var i = 0; i < object.propertyNames.length; ++i)
                                    message.propertyNames[i] = String(object.propertyNames[i]);
                            }
                            switch (object.yAxis) {
                            default:
                                if (typeof object.yAxis === "number") {
                                    message.yAxis = object.yAxis;
                                    break;
                                }
                                break;
                            case "HISTOGRAM_YAXIS_DOCUMENT":
                            case 0:
                                message.yAxis = 0;
                                break;
                            case "HISTOGRAM_YAXIS_PROPERTY":
                            case 1:
                                message.yAxis = 1;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HistogramQueryPropertyNameFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter} message HistogramQueryPropertyNameFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HistogramQueryPropertyNameFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.documentSchemas = [];
                                object.propertyNames = [];
                            }
                            if (options.defaults)
                                object.yAxis = options.enums === String ? "HISTOGRAM_YAXIS_DOCUMENT" : 0;
                            if (message.documentSchemas && message.documentSchemas.length) {
                                object.documentSchemas = [];
                                for (var j = 0; j < message.documentSchemas.length; ++j)
                                    object.documentSchemas[j] = message.documentSchemas[j];
                            }
                            if (message.propertyNames && message.propertyNames.length) {
                                object.propertyNames = [];
                                for (var j = 0; j < message.propertyNames.length; ++j)
                                    object.propertyNames[j] = message.propertyNames[j];
                            }
                            if (message.yAxis != null && message.hasOwnProperty("yAxis"))
                                object.yAxis = options.enums === String ? $root.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis[message.yAxis] === undefined ? message.yAxis : $root.google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis[message.yAxis] : message.yAxis;
                            return object;
                        };
    
                        /**
                         * Converts this HistogramQueryPropertyNameFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HistogramQueryPropertyNameFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HistogramQueryPropertyNameFilter
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HistogramQueryPropertyNameFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter";
                        };
    
                        /**
                         * HistogramYAxis enum.
                         * @name google.cloud.contentwarehouse.v1.HistogramQueryPropertyNameFilter.HistogramYAxis
                         * @enum {number}
                         * @property {number} HISTOGRAM_YAXIS_DOCUMENT=0 HISTOGRAM_YAXIS_DOCUMENT value
                         * @property {number} HISTOGRAM_YAXIS_PROPERTY=1 HISTOGRAM_YAXIS_PROPERTY value
                         */
                        HistogramQueryPropertyNameFilter.HistogramYAxis = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "HISTOGRAM_YAXIS_DOCUMENT"] = 0;
                            values[valuesById[1] = "HISTOGRAM_YAXIS_PROPERTY"] = 1;
                            return values;
                        })();
    
                        return HistogramQueryPropertyNameFilter;
                    })();
    
                    v1.HistogramQueryResult = (function() {
    
                        /**
                         * Properties of a HistogramQueryResult.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IHistogramQueryResult
                         * @property {string|null} [histogramQuery] HistogramQueryResult histogramQuery
                         * @property {Object.<string,number|Long>|null} [histogram] HistogramQueryResult histogram
                         */
    
                        /**
                         * Constructs a new HistogramQueryResult.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a HistogramQueryResult.
                         * @implements IHistogramQueryResult
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IHistogramQueryResult=} [properties] Properties to set
                         */
                        function HistogramQueryResult(properties) {
                            this.histogram = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HistogramQueryResult histogramQuery.
                         * @member {string} histogramQuery
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryResult
                         * @instance
                         */
                        HistogramQueryResult.prototype.histogramQuery = "";
    
                        /**
                         * HistogramQueryResult histogram.
                         * @member {Object.<string,number|Long>} histogram
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryResult
                         * @instance
                         */
                        HistogramQueryResult.prototype.histogram = $util.emptyObject;
    
                        /**
                         * Creates a new HistogramQueryResult instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryResult
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IHistogramQueryResult=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.HistogramQueryResult} HistogramQueryResult instance
                         */
                        HistogramQueryResult.create = function create(properties) {
                            return new HistogramQueryResult(properties);
                        };
    
                        /**
                         * Encodes the specified HistogramQueryResult message. Does not implicitly {@link google.cloud.contentwarehouse.v1.HistogramQueryResult.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryResult
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IHistogramQueryResult} message HistogramQueryResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HistogramQueryResult.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.histogramQuery != null && Object.hasOwnProperty.call(message, "histogramQuery"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.histogramQuery);
                            if (message.histogram != null && Object.hasOwnProperty.call(message, "histogram"))
                                for (var keys = Object.keys(message.histogram), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 0 =*/16).int64(message.histogram[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HistogramQueryResult message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.HistogramQueryResult.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryResult
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IHistogramQueryResult} message HistogramQueryResult message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HistogramQueryResult.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HistogramQueryResult message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.HistogramQueryResult} HistogramQueryResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HistogramQueryResult.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.HistogramQueryResult(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.histogramQuery = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (message.histogram === $util.emptyObject)
                                            message.histogram = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = 0;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.int64();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.histogram[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HistogramQueryResult message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryResult
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.HistogramQueryResult} HistogramQueryResult
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HistogramQueryResult.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HistogramQueryResult message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryResult
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HistogramQueryResult.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.histogramQuery != null && message.hasOwnProperty("histogramQuery"))
                                if (!$util.isString(message.histogramQuery))
                                    return "histogramQuery: string expected";
                            if (message.histogram != null && message.hasOwnProperty("histogram")) {
                                if (!$util.isObject(message.histogram))
                                    return "histogram: object expected";
                                var key = Object.keys(message.histogram);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isInteger(message.histogram[key[i]]) && !(message.histogram[key[i]] && $util.isInteger(message.histogram[key[i]].low) && $util.isInteger(message.histogram[key[i]].high)))
                                        return "histogram: integer|Long{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HistogramQueryResult message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryResult
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.HistogramQueryResult} HistogramQueryResult
                         */
                        HistogramQueryResult.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.HistogramQueryResult)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.HistogramQueryResult();
                            if (object.histogramQuery != null)
                                message.histogramQuery = String(object.histogramQuery);
                            if (object.histogram) {
                                if (typeof object.histogram !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.HistogramQueryResult.histogram: object expected");
                                message.histogram = {};
                                for (var keys = Object.keys(object.histogram), i = 0; i < keys.length; ++i)
                                    if ($util.Long)
                                        (message.histogram[keys[i]] = $util.Long.fromValue(object.histogram[keys[i]])).unsigned = false;
                                    else if (typeof object.histogram[keys[i]] === "string")
                                        message.histogram[keys[i]] = parseInt(object.histogram[keys[i]], 10);
                                    else if (typeof object.histogram[keys[i]] === "number")
                                        message.histogram[keys[i]] = object.histogram[keys[i]];
                                    else if (typeof object.histogram[keys[i]] === "object")
                                        message.histogram[keys[i]] = new $util.LongBits(object.histogram[keys[i]].low >>> 0, object.histogram[keys[i]].high >>> 0).toNumber();
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HistogramQueryResult message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryResult
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.HistogramQueryResult} message HistogramQueryResult
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HistogramQueryResult.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.histogram = {};
                            if (options.defaults)
                                object.histogramQuery = "";
                            if (message.histogramQuery != null && message.hasOwnProperty("histogramQuery"))
                                object.histogramQuery = message.histogramQuery;
                            var keys2;
                            if (message.histogram && (keys2 = Object.keys(message.histogram)).length) {
                                object.histogram = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    if (typeof message.histogram[keys2[j]] === "number")
                                        object.histogram[keys2[j]] = options.longs === String ? String(message.histogram[keys2[j]]) : message.histogram[keys2[j]];
                                    else
                                        object.histogram[keys2[j]] = options.longs === String ? $util.Long.prototype.toString.call(message.histogram[keys2[j]]) : options.longs === Number ? new $util.LongBits(message.histogram[keys2[j]].low >>> 0, message.histogram[keys2[j]].high >>> 0).toNumber() : message.histogram[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this HistogramQueryResult to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryResult
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HistogramQueryResult.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HistogramQueryResult
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.HistogramQueryResult
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HistogramQueryResult.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.HistogramQueryResult";
                        };
    
                        return HistogramQueryResult;
                    })();
    
                    v1.RuleSet = (function() {
    
                        /**
                         * Properties of a RuleSet.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IRuleSet
                         * @property {string|null} [name] RuleSet name
                         * @property {string|null} [description] RuleSet description
                         * @property {string|null} [source] RuleSet source
                         * @property {Array.<google.cloud.contentwarehouse.v1.IRule>|null} [rules] RuleSet rules
                         */
    
                        /**
                         * Constructs a new RuleSet.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a RuleSet.
                         * @implements IRuleSet
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IRuleSet=} [properties] Properties to set
                         */
                        function RuleSet(properties) {
                            this.rules = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RuleSet name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.RuleSet
                         * @instance
                         */
                        RuleSet.prototype.name = "";
    
                        /**
                         * RuleSet description.
                         * @member {string} description
                         * @memberof google.cloud.contentwarehouse.v1.RuleSet
                         * @instance
                         */
                        RuleSet.prototype.description = "";
    
                        /**
                         * RuleSet source.
                         * @member {string} source
                         * @memberof google.cloud.contentwarehouse.v1.RuleSet
                         * @instance
                         */
                        RuleSet.prototype.source = "";
    
                        /**
                         * RuleSet rules.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IRule>} rules
                         * @memberof google.cloud.contentwarehouse.v1.RuleSet
                         * @instance
                         */
                        RuleSet.prototype.rules = $util.emptyArray;
    
                        /**
                         * Creates a new RuleSet instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.RuleSet
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRuleSet=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.RuleSet} RuleSet instance
                         */
                        RuleSet.create = function create(properties) {
                            return new RuleSet(properties);
                        };
    
                        /**
                         * Encodes the specified RuleSet message. Does not implicitly {@link google.cloud.contentwarehouse.v1.RuleSet.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.RuleSet
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRuleSet} message RuleSet message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuleSet.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.description);
                            if (message.source != null && Object.hasOwnProperty.call(message, "source"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.source);
                            if (message.rules != null && message.rules.length)
                                for (var i = 0; i < message.rules.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.Rule.encode(message.rules[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RuleSet message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.RuleSet.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.RuleSet
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRuleSet} message RuleSet message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuleSet.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RuleSet message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.RuleSet
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.RuleSet} RuleSet
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuleSet.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.RuleSet();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 6: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.source = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.rules && message.rules.length))
                                            message.rules = [];
                                        message.rules.push($root.google.cloud.contentwarehouse.v1.Rule.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RuleSet message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.RuleSet
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.RuleSet} RuleSet
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuleSet.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RuleSet message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.RuleSet
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RuleSet.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.source != null && message.hasOwnProperty("source"))
                                if (!$util.isString(message.source))
                                    return "source: string expected";
                            if (message.rules != null && message.hasOwnProperty("rules")) {
                                if (!Array.isArray(message.rules))
                                    return "rules: array expected";
                                for (var i = 0; i < message.rules.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.Rule.verify(message.rules[i]);
                                    if (error)
                                        return "rules." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RuleSet message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.RuleSet
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.RuleSet} RuleSet
                         */
                        RuleSet.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.RuleSet)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.RuleSet();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.source != null)
                                message.source = String(object.source);
                            if (object.rules) {
                                if (!Array.isArray(object.rules))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.RuleSet.rules: array expected");
                                message.rules = [];
                                for (var i = 0; i < object.rules.length; ++i) {
                                    if (typeof object.rules[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.RuleSet.rules: object expected");
                                    message.rules[i] = $root.google.cloud.contentwarehouse.v1.Rule.fromObject(object.rules[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RuleSet message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.RuleSet
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.RuleSet} message RuleSet
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RuleSet.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.rules = [];
                            if (options.defaults) {
                                object.description = "";
                                object.source = "";
                                object.name = "";
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.source != null && message.hasOwnProperty("source"))
                                object.source = message.source;
                            if (message.rules && message.rules.length) {
                                object.rules = [];
                                for (var j = 0; j < message.rules.length; ++j)
                                    object.rules[j] = $root.google.cloud.contentwarehouse.v1.Rule.toObject(message.rules[j], options);
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this RuleSet to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.RuleSet
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RuleSet.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RuleSet
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.RuleSet
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RuleSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.RuleSet";
                        };
    
                        return RuleSet;
                    })();
    
                    v1.Rule = (function() {
    
                        /**
                         * Properties of a Rule.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IRule
                         * @property {string|null} [description] Rule description
                         * @property {string|null} [ruleId] Rule ruleId
                         * @property {google.cloud.contentwarehouse.v1.Rule.TriggerType|null} [triggerType] Rule triggerType
                         * @property {string|null} [condition] Rule condition
                         * @property {Array.<google.cloud.contentwarehouse.v1.IAction>|null} [actions] Rule actions
                         */
    
                        /**
                         * Constructs a new Rule.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a Rule.
                         * @implements IRule
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IRule=} [properties] Properties to set
                         */
                        function Rule(properties) {
                            this.actions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Rule description.
                         * @member {string} description
                         * @memberof google.cloud.contentwarehouse.v1.Rule
                         * @instance
                         */
                        Rule.prototype.description = "";
    
                        /**
                         * Rule ruleId.
                         * @member {string} ruleId
                         * @memberof google.cloud.contentwarehouse.v1.Rule
                         * @instance
                         */
                        Rule.prototype.ruleId = "";
    
                        /**
                         * Rule triggerType.
                         * @member {google.cloud.contentwarehouse.v1.Rule.TriggerType} triggerType
                         * @memberof google.cloud.contentwarehouse.v1.Rule
                         * @instance
                         */
                        Rule.prototype.triggerType = 0;
    
                        /**
                         * Rule condition.
                         * @member {string} condition
                         * @memberof google.cloud.contentwarehouse.v1.Rule
                         * @instance
                         */
                        Rule.prototype.condition = "";
    
                        /**
                         * Rule actions.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IAction>} actions
                         * @memberof google.cloud.contentwarehouse.v1.Rule
                         * @instance
                         */
                        Rule.prototype.actions = $util.emptyArray;
    
                        /**
                         * Creates a new Rule instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.Rule
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRule=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.Rule} Rule instance
                         */
                        Rule.create = function create(properties) {
                            return new Rule(properties);
                        };
    
                        /**
                         * Encodes the specified Rule message. Does not implicitly {@link google.cloud.contentwarehouse.v1.Rule.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.Rule
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRule} message Rule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Rule.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.description);
                            if (message.ruleId != null && Object.hasOwnProperty.call(message, "ruleId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.ruleId);
                            if (message.triggerType != null && Object.hasOwnProperty.call(message, "triggerType"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.triggerType);
                            if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.condition);
                            if (message.actions != null && message.actions.length)
                                for (var i = 0; i < message.actions.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.Action.encode(message.actions[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Rule message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.Rule.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.Rule
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRule} message Rule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Rule.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Rule message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.Rule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.Rule} Rule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Rule.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.Rule();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.ruleId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.triggerType = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.condition = reader.string();
                                        break;
                                    }
                                case 5: {
                                        if (!(message.actions && message.actions.length))
                                            message.actions = [];
                                        message.actions.push($root.google.cloud.contentwarehouse.v1.Action.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Rule message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.Rule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.Rule} Rule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Rule.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Rule message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.Rule
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Rule.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.ruleId != null && message.hasOwnProperty("ruleId"))
                                if (!$util.isString(message.ruleId))
                                    return "ruleId: string expected";
                            if (message.triggerType != null && message.hasOwnProperty("triggerType"))
                                switch (message.triggerType) {
                                default:
                                    return "triggerType: enum value expected";
                                case 0:
                                case 1:
                                case 4:
                                    break;
                                }
                            if (message.condition != null && message.hasOwnProperty("condition"))
                                if (!$util.isString(message.condition))
                                    return "condition: string expected";
                            if (message.actions != null && message.hasOwnProperty("actions")) {
                                if (!Array.isArray(message.actions))
                                    return "actions: array expected";
                                for (var i = 0; i < message.actions.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.Action.verify(message.actions[i]);
                                    if (error)
                                        return "actions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Rule message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.Rule
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.Rule} Rule
                         */
                        Rule.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.Rule)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.Rule();
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.ruleId != null)
                                message.ruleId = String(object.ruleId);
                            switch (object.triggerType) {
                            default:
                                if (typeof object.triggerType === "number") {
                                    message.triggerType = object.triggerType;
                                    break;
                                }
                                break;
                            case "UNKNOWN":
                            case 0:
                                message.triggerType = 0;
                                break;
                            case "ON_CREATE":
                            case 1:
                                message.triggerType = 1;
                                break;
                            case "ON_UPDATE":
                            case 4:
                                message.triggerType = 4;
                                break;
                            }
                            if (object.condition != null)
                                message.condition = String(object.condition);
                            if (object.actions) {
                                if (!Array.isArray(object.actions))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Rule.actions: array expected");
                                message.actions = [];
                                for (var i = 0; i < object.actions.length; ++i) {
                                    if (typeof object.actions[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.Rule.actions: object expected");
                                    message.actions[i] = $root.google.cloud.contentwarehouse.v1.Action.fromObject(object.actions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Rule message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.Rule
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.Rule} message Rule
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Rule.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.actions = [];
                            if (options.defaults) {
                                object.description = "";
                                object.ruleId = "";
                                object.triggerType = options.enums === String ? "UNKNOWN" : 0;
                                object.condition = "";
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.ruleId != null && message.hasOwnProperty("ruleId"))
                                object.ruleId = message.ruleId;
                            if (message.triggerType != null && message.hasOwnProperty("triggerType"))
                                object.triggerType = options.enums === String ? $root.google.cloud.contentwarehouse.v1.Rule.TriggerType[message.triggerType] === undefined ? message.triggerType : $root.google.cloud.contentwarehouse.v1.Rule.TriggerType[message.triggerType] : message.triggerType;
                            if (message.condition != null && message.hasOwnProperty("condition"))
                                object.condition = message.condition;
                            if (message.actions && message.actions.length) {
                                object.actions = [];
                                for (var j = 0; j < message.actions.length; ++j)
                                    object.actions[j] = $root.google.cloud.contentwarehouse.v1.Action.toObject(message.actions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Rule to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.Rule
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Rule.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Rule
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.Rule
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Rule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.Rule";
                        };
    
                        /**
                         * TriggerType enum.
                         * @name google.cloud.contentwarehouse.v1.Rule.TriggerType
                         * @enum {number}
                         * @property {number} UNKNOWN=0 UNKNOWN value
                         * @property {number} ON_CREATE=1 ON_CREATE value
                         * @property {number} ON_UPDATE=4 ON_UPDATE value
                         */
                        Rule.TriggerType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "UNKNOWN"] = 0;
                            values[valuesById[1] = "ON_CREATE"] = 1;
                            values[valuesById[4] = "ON_UPDATE"] = 4;
                            return values;
                        })();
    
                        return Rule;
                    })();
    
                    v1.Action = (function() {
    
                        /**
                         * Properties of an Action.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IAction
                         * @property {string|null} [actionId] Action actionId
                         * @property {google.cloud.contentwarehouse.v1.IAccessControlAction|null} [accessControl] Action accessControl
                         * @property {google.cloud.contentwarehouse.v1.IDataValidationAction|null} [dataValidation] Action dataValidation
                         * @property {google.cloud.contentwarehouse.v1.IDataUpdateAction|null} [dataUpdate] Action dataUpdate
                         * @property {google.cloud.contentwarehouse.v1.IAddToFolderAction|null} [addToFolder] Action addToFolder
                         * @property {google.cloud.contentwarehouse.v1.IPublishAction|null} [publishToPubSub] Action publishToPubSub
                         * @property {google.cloud.contentwarehouse.v1.IRemoveFromFolderAction|null} [removeFromFolderAction] Action removeFromFolderAction
                         * @property {google.cloud.contentwarehouse.v1.IDeleteDocumentAction|null} [deleteDocumentAction] Action deleteDocumentAction
                         */
    
                        /**
                         * Constructs a new Action.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an Action.
                         * @implements IAction
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IAction=} [properties] Properties to set
                         */
                        function Action(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Action actionId.
                         * @member {string} actionId
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @instance
                         */
                        Action.prototype.actionId = "";
    
                        /**
                         * Action accessControl.
                         * @member {google.cloud.contentwarehouse.v1.IAccessControlAction|null|undefined} accessControl
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @instance
                         */
                        Action.prototype.accessControl = null;
    
                        /**
                         * Action dataValidation.
                         * @member {google.cloud.contentwarehouse.v1.IDataValidationAction|null|undefined} dataValidation
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @instance
                         */
                        Action.prototype.dataValidation = null;
    
                        /**
                         * Action dataUpdate.
                         * @member {google.cloud.contentwarehouse.v1.IDataUpdateAction|null|undefined} dataUpdate
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @instance
                         */
                        Action.prototype.dataUpdate = null;
    
                        /**
                         * Action addToFolder.
                         * @member {google.cloud.contentwarehouse.v1.IAddToFolderAction|null|undefined} addToFolder
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @instance
                         */
                        Action.prototype.addToFolder = null;
    
                        /**
                         * Action publishToPubSub.
                         * @member {google.cloud.contentwarehouse.v1.IPublishAction|null|undefined} publishToPubSub
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @instance
                         */
                        Action.prototype.publishToPubSub = null;
    
                        /**
                         * Action removeFromFolderAction.
                         * @member {google.cloud.contentwarehouse.v1.IRemoveFromFolderAction|null|undefined} removeFromFolderAction
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @instance
                         */
                        Action.prototype.removeFromFolderAction = null;
    
                        /**
                         * Action deleteDocumentAction.
                         * @member {google.cloud.contentwarehouse.v1.IDeleteDocumentAction|null|undefined} deleteDocumentAction
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @instance
                         */
                        Action.prototype.deleteDocumentAction = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Action action.
                         * @member {"accessControl"|"dataValidation"|"dataUpdate"|"addToFolder"|"publishToPubSub"|"removeFromFolderAction"|"deleteDocumentAction"|undefined} action
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @instance
                         */
                        Object.defineProperty(Action.prototype, "action", {
                            get: $util.oneOfGetter($oneOfFields = ["accessControl", "dataValidation", "dataUpdate", "addToFolder", "publishToPubSub", "removeFromFolderAction", "deleteDocumentAction"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Action instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IAction=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.Action} Action instance
                         */
                        Action.create = function create(properties) {
                            return new Action(properties);
                        };
    
                        /**
                         * Encodes the specified Action message. Does not implicitly {@link google.cloud.contentwarehouse.v1.Action.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IAction} message Action message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Action.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.actionId != null && Object.hasOwnProperty.call(message, "actionId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.actionId);
                            if (message.accessControl != null && Object.hasOwnProperty.call(message, "accessControl"))
                                $root.google.cloud.contentwarehouse.v1.AccessControlAction.encode(message.accessControl, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.dataValidation != null && Object.hasOwnProperty.call(message, "dataValidation"))
                                $root.google.cloud.contentwarehouse.v1.DataValidationAction.encode(message.dataValidation, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.dataUpdate != null && Object.hasOwnProperty.call(message, "dataUpdate"))
                                $root.google.cloud.contentwarehouse.v1.DataUpdateAction.encode(message.dataUpdate, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.addToFolder != null && Object.hasOwnProperty.call(message, "addToFolder"))
                                $root.google.cloud.contentwarehouse.v1.AddToFolderAction.encode(message.addToFolder, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.publishToPubSub != null && Object.hasOwnProperty.call(message, "publishToPubSub"))
                                $root.google.cloud.contentwarehouse.v1.PublishAction.encode(message.publishToPubSub, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.removeFromFolderAction != null && Object.hasOwnProperty.call(message, "removeFromFolderAction"))
                                $root.google.cloud.contentwarehouse.v1.RemoveFromFolderAction.encode(message.removeFromFolderAction, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.deleteDocumentAction != null && Object.hasOwnProperty.call(message, "deleteDocumentAction"))
                                $root.google.cloud.contentwarehouse.v1.DeleteDocumentAction.encode(message.deleteDocumentAction, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Action message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.Action.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IAction} message Action message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Action.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Action message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.Action} Action
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Action.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.Action();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.actionId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.accessControl = $root.google.cloud.contentwarehouse.v1.AccessControlAction.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.dataValidation = $root.google.cloud.contentwarehouse.v1.DataValidationAction.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.dataUpdate = $root.google.cloud.contentwarehouse.v1.DataUpdateAction.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.addToFolder = $root.google.cloud.contentwarehouse.v1.AddToFolderAction.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.publishToPubSub = $root.google.cloud.contentwarehouse.v1.PublishAction.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.removeFromFolderAction = $root.google.cloud.contentwarehouse.v1.RemoveFromFolderAction.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.deleteDocumentAction = $root.google.cloud.contentwarehouse.v1.DeleteDocumentAction.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Action message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.Action} Action
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Action.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Action message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Action.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.actionId != null && message.hasOwnProperty("actionId"))
                                if (!$util.isString(message.actionId))
                                    return "actionId: string expected";
                            if (message.accessControl != null && message.hasOwnProperty("accessControl")) {
                                properties.action = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.AccessControlAction.verify(message.accessControl);
                                    if (error)
                                        return "accessControl." + error;
                                }
                            }
                            if (message.dataValidation != null && message.hasOwnProperty("dataValidation")) {
                                if (properties.action === 1)
                                    return "action: multiple values";
                                properties.action = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.DataValidationAction.verify(message.dataValidation);
                                    if (error)
                                        return "dataValidation." + error;
                                }
                            }
                            if (message.dataUpdate != null && message.hasOwnProperty("dataUpdate")) {
                                if (properties.action === 1)
                                    return "action: multiple values";
                                properties.action = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.DataUpdateAction.verify(message.dataUpdate);
                                    if (error)
                                        return "dataUpdate." + error;
                                }
                            }
                            if (message.addToFolder != null && message.hasOwnProperty("addToFolder")) {
                                if (properties.action === 1)
                                    return "action: multiple values";
                                properties.action = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.AddToFolderAction.verify(message.addToFolder);
                                    if (error)
                                        return "addToFolder." + error;
                                }
                            }
                            if (message.publishToPubSub != null && message.hasOwnProperty("publishToPubSub")) {
                                if (properties.action === 1)
                                    return "action: multiple values";
                                properties.action = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.PublishAction.verify(message.publishToPubSub);
                                    if (error)
                                        return "publishToPubSub." + error;
                                }
                            }
                            if (message.removeFromFolderAction != null && message.hasOwnProperty("removeFromFolderAction")) {
                                if (properties.action === 1)
                                    return "action: multiple values";
                                properties.action = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.RemoveFromFolderAction.verify(message.removeFromFolderAction);
                                    if (error)
                                        return "removeFromFolderAction." + error;
                                }
                            }
                            if (message.deleteDocumentAction != null && message.hasOwnProperty("deleteDocumentAction")) {
                                if (properties.action === 1)
                                    return "action: multiple values";
                                properties.action = 1;
                                {
                                    var error = $root.google.cloud.contentwarehouse.v1.DeleteDocumentAction.verify(message.deleteDocumentAction);
                                    if (error)
                                        return "deleteDocumentAction." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an Action message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.Action} Action
                         */
                        Action.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.Action)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.Action();
                            if (object.actionId != null)
                                message.actionId = String(object.actionId);
                            if (object.accessControl != null) {
                                if (typeof object.accessControl !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Action.accessControl: object expected");
                                message.accessControl = $root.google.cloud.contentwarehouse.v1.AccessControlAction.fromObject(object.accessControl);
                            }
                            if (object.dataValidation != null) {
                                if (typeof object.dataValidation !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Action.dataValidation: object expected");
                                message.dataValidation = $root.google.cloud.contentwarehouse.v1.DataValidationAction.fromObject(object.dataValidation);
                            }
                            if (object.dataUpdate != null) {
                                if (typeof object.dataUpdate !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Action.dataUpdate: object expected");
                                message.dataUpdate = $root.google.cloud.contentwarehouse.v1.DataUpdateAction.fromObject(object.dataUpdate);
                            }
                            if (object.addToFolder != null) {
                                if (typeof object.addToFolder !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Action.addToFolder: object expected");
                                message.addToFolder = $root.google.cloud.contentwarehouse.v1.AddToFolderAction.fromObject(object.addToFolder);
                            }
                            if (object.publishToPubSub != null) {
                                if (typeof object.publishToPubSub !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Action.publishToPubSub: object expected");
                                message.publishToPubSub = $root.google.cloud.contentwarehouse.v1.PublishAction.fromObject(object.publishToPubSub);
                            }
                            if (object.removeFromFolderAction != null) {
                                if (typeof object.removeFromFolderAction !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Action.removeFromFolderAction: object expected");
                                message.removeFromFolderAction = $root.google.cloud.contentwarehouse.v1.RemoveFromFolderAction.fromObject(object.removeFromFolderAction);
                            }
                            if (object.deleteDocumentAction != null) {
                                if (typeof object.deleteDocumentAction !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.Action.deleteDocumentAction: object expected");
                                message.deleteDocumentAction = $root.google.cloud.contentwarehouse.v1.DeleteDocumentAction.fromObject(object.deleteDocumentAction);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Action message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.Action} message Action
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Action.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.actionId = "";
                            if (message.actionId != null && message.hasOwnProperty("actionId"))
                                object.actionId = message.actionId;
                            if (message.accessControl != null && message.hasOwnProperty("accessControl")) {
                                object.accessControl = $root.google.cloud.contentwarehouse.v1.AccessControlAction.toObject(message.accessControl, options);
                                if (options.oneofs)
                                    object.action = "accessControl";
                            }
                            if (message.dataValidation != null && message.hasOwnProperty("dataValidation")) {
                                object.dataValidation = $root.google.cloud.contentwarehouse.v1.DataValidationAction.toObject(message.dataValidation, options);
                                if (options.oneofs)
                                    object.action = "dataValidation";
                            }
                            if (message.dataUpdate != null && message.hasOwnProperty("dataUpdate")) {
                                object.dataUpdate = $root.google.cloud.contentwarehouse.v1.DataUpdateAction.toObject(message.dataUpdate, options);
                                if (options.oneofs)
                                    object.action = "dataUpdate";
                            }
                            if (message.addToFolder != null && message.hasOwnProperty("addToFolder")) {
                                object.addToFolder = $root.google.cloud.contentwarehouse.v1.AddToFolderAction.toObject(message.addToFolder, options);
                                if (options.oneofs)
                                    object.action = "addToFolder";
                            }
                            if (message.publishToPubSub != null && message.hasOwnProperty("publishToPubSub")) {
                                object.publishToPubSub = $root.google.cloud.contentwarehouse.v1.PublishAction.toObject(message.publishToPubSub, options);
                                if (options.oneofs)
                                    object.action = "publishToPubSub";
                            }
                            if (message.removeFromFolderAction != null && message.hasOwnProperty("removeFromFolderAction")) {
                                object.removeFromFolderAction = $root.google.cloud.contentwarehouse.v1.RemoveFromFolderAction.toObject(message.removeFromFolderAction, options);
                                if (options.oneofs)
                                    object.action = "removeFromFolderAction";
                            }
                            if (message.deleteDocumentAction != null && message.hasOwnProperty("deleteDocumentAction")) {
                                object.deleteDocumentAction = $root.google.cloud.contentwarehouse.v1.DeleteDocumentAction.toObject(message.deleteDocumentAction, options);
                                if (options.oneofs)
                                    object.action = "deleteDocumentAction";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Action to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Action.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Action
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.Action
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Action.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.Action";
                        };
    
                        return Action;
                    })();
    
                    v1.AccessControlAction = (function() {
    
                        /**
                         * Properties of an AccessControlAction.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IAccessControlAction
                         * @property {google.cloud.contentwarehouse.v1.AccessControlAction.OperationType|null} [operationType] AccessControlAction operationType
                         * @property {google.iam.v1.IPolicy|null} [policy] AccessControlAction policy
                         */
    
                        /**
                         * Constructs a new AccessControlAction.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an AccessControlAction.
                         * @implements IAccessControlAction
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IAccessControlAction=} [properties] Properties to set
                         */
                        function AccessControlAction(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AccessControlAction operationType.
                         * @member {google.cloud.contentwarehouse.v1.AccessControlAction.OperationType} operationType
                         * @memberof google.cloud.contentwarehouse.v1.AccessControlAction
                         * @instance
                         */
                        AccessControlAction.prototype.operationType = 0;
    
                        /**
                         * AccessControlAction policy.
                         * @member {google.iam.v1.IPolicy|null|undefined} policy
                         * @memberof google.cloud.contentwarehouse.v1.AccessControlAction
                         * @instance
                         */
                        AccessControlAction.prototype.policy = null;
    
                        /**
                         * Creates a new AccessControlAction instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.AccessControlAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IAccessControlAction=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.AccessControlAction} AccessControlAction instance
                         */
                        AccessControlAction.create = function create(properties) {
                            return new AccessControlAction(properties);
                        };
    
                        /**
                         * Encodes the specified AccessControlAction message. Does not implicitly {@link google.cloud.contentwarehouse.v1.AccessControlAction.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.AccessControlAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IAccessControlAction} message AccessControlAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AccessControlAction.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.operationType != null && Object.hasOwnProperty.call(message, "operationType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.operationType);
                            if (message.policy != null && Object.hasOwnProperty.call(message, "policy"))
                                $root.google.iam.v1.Policy.encode(message.policy, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AccessControlAction message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.AccessControlAction.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.AccessControlAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IAccessControlAction} message AccessControlAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AccessControlAction.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AccessControlAction message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.AccessControlAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.AccessControlAction} AccessControlAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AccessControlAction.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.AccessControlAction();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.operationType = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.policy = $root.google.iam.v1.Policy.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AccessControlAction message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.AccessControlAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.AccessControlAction} AccessControlAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AccessControlAction.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AccessControlAction message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.AccessControlAction
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AccessControlAction.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.operationType != null && message.hasOwnProperty("operationType"))
                                switch (message.operationType) {
                                default:
                                    return "operationType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.policy != null && message.hasOwnProperty("policy")) {
                                var error = $root.google.iam.v1.Policy.verify(message.policy);
                                if (error)
                                    return "policy." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AccessControlAction message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.AccessControlAction
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.AccessControlAction} AccessControlAction
                         */
                        AccessControlAction.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.AccessControlAction)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.AccessControlAction();
                            switch (object.operationType) {
                            default:
                                if (typeof object.operationType === "number") {
                                    message.operationType = object.operationType;
                                    break;
                                }
                                break;
                            case "UNKNOWN":
                            case 0:
                                message.operationType = 0;
                                break;
                            case "ADD_POLICY_BINDING":
                            case 1:
                                message.operationType = 1;
                                break;
                            case "REMOVE_POLICY_BINDING":
                            case 2:
                                message.operationType = 2;
                                break;
                            case "REPLACE_POLICY_BINDING":
                            case 3:
                                message.operationType = 3;
                                break;
                            }
                            if (object.policy != null) {
                                if (typeof object.policy !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.AccessControlAction.policy: object expected");
                                message.policy = $root.google.iam.v1.Policy.fromObject(object.policy);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AccessControlAction message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.AccessControlAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.AccessControlAction} message AccessControlAction
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AccessControlAction.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.operationType = options.enums === String ? "UNKNOWN" : 0;
                                object.policy = null;
                            }
                            if (message.operationType != null && message.hasOwnProperty("operationType"))
                                object.operationType = options.enums === String ? $root.google.cloud.contentwarehouse.v1.AccessControlAction.OperationType[message.operationType] === undefined ? message.operationType : $root.google.cloud.contentwarehouse.v1.AccessControlAction.OperationType[message.operationType] : message.operationType;
                            if (message.policy != null && message.hasOwnProperty("policy"))
                                object.policy = $root.google.iam.v1.Policy.toObject(message.policy, options);
                            return object;
                        };
    
                        /**
                         * Converts this AccessControlAction to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.AccessControlAction
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AccessControlAction.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AccessControlAction
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.AccessControlAction
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AccessControlAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.AccessControlAction";
                        };
    
                        /**
                         * OperationType enum.
                         * @name google.cloud.contentwarehouse.v1.AccessControlAction.OperationType
                         * @enum {number}
                         * @property {number} UNKNOWN=0 UNKNOWN value
                         * @property {number} ADD_POLICY_BINDING=1 ADD_POLICY_BINDING value
                         * @property {number} REMOVE_POLICY_BINDING=2 REMOVE_POLICY_BINDING value
                         * @property {number} REPLACE_POLICY_BINDING=3 REPLACE_POLICY_BINDING value
                         */
                        AccessControlAction.OperationType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "UNKNOWN"] = 0;
                            values[valuesById[1] = "ADD_POLICY_BINDING"] = 1;
                            values[valuesById[2] = "REMOVE_POLICY_BINDING"] = 2;
                            values[valuesById[3] = "REPLACE_POLICY_BINDING"] = 3;
                            return values;
                        })();
    
                        return AccessControlAction;
                    })();
    
                    v1.DataValidationAction = (function() {
    
                        /**
                         * Properties of a DataValidationAction.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IDataValidationAction
                         * @property {Object.<string,string>|null} [conditions] DataValidationAction conditions
                         */
    
                        /**
                         * Constructs a new DataValidationAction.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DataValidationAction.
                         * @implements IDataValidationAction
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IDataValidationAction=} [properties] Properties to set
                         */
                        function DataValidationAction(properties) {
                            this.conditions = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DataValidationAction conditions.
                         * @member {Object.<string,string>} conditions
                         * @memberof google.cloud.contentwarehouse.v1.DataValidationAction
                         * @instance
                         */
                        DataValidationAction.prototype.conditions = $util.emptyObject;
    
                        /**
                         * Creates a new DataValidationAction instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DataValidationAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDataValidationAction=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.DataValidationAction} DataValidationAction instance
                         */
                        DataValidationAction.create = function create(properties) {
                            return new DataValidationAction(properties);
                        };
    
                        /**
                         * Encodes the specified DataValidationAction message. Does not implicitly {@link google.cloud.contentwarehouse.v1.DataValidationAction.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.DataValidationAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDataValidationAction} message DataValidationAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataValidationAction.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.conditions != null && Object.hasOwnProperty.call(message, "conditions"))
                                for (var keys = Object.keys(message.conditions), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.conditions[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DataValidationAction message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.DataValidationAction.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DataValidationAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDataValidationAction} message DataValidationAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataValidationAction.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DataValidationAction message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.DataValidationAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.DataValidationAction} DataValidationAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataValidationAction.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.DataValidationAction(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.conditions === $util.emptyObject)
                                            message.conditions = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.conditions[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DataValidationAction message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DataValidationAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.DataValidationAction} DataValidationAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataValidationAction.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DataValidationAction message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.DataValidationAction
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DataValidationAction.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.conditions != null && message.hasOwnProperty("conditions")) {
                                if (!$util.isObject(message.conditions))
                                    return "conditions: object expected";
                                var key = Object.keys(message.conditions);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.conditions[key[i]]))
                                        return "conditions: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DataValidationAction message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.DataValidationAction
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.DataValidationAction} DataValidationAction
                         */
                        DataValidationAction.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.DataValidationAction)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.DataValidationAction();
                            if (object.conditions) {
                                if (typeof object.conditions !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DataValidationAction.conditions: object expected");
                                message.conditions = {};
                                for (var keys = Object.keys(object.conditions), i = 0; i < keys.length; ++i)
                                    message.conditions[keys[i]] = String(object.conditions[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DataValidationAction message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.DataValidationAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.DataValidationAction} message DataValidationAction
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DataValidationAction.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.conditions = {};
                            var keys2;
                            if (message.conditions && (keys2 = Object.keys(message.conditions)).length) {
                                object.conditions = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.conditions[keys2[j]] = message.conditions[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DataValidationAction to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.DataValidationAction
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DataValidationAction.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DataValidationAction
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.DataValidationAction
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DataValidationAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.DataValidationAction";
                        };
    
                        return DataValidationAction;
                    })();
    
                    v1.DataUpdateAction = (function() {
    
                        /**
                         * Properties of a DataUpdateAction.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IDataUpdateAction
                         * @property {Object.<string,string>|null} [entries] DataUpdateAction entries
                         */
    
                        /**
                         * Constructs a new DataUpdateAction.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DataUpdateAction.
                         * @implements IDataUpdateAction
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IDataUpdateAction=} [properties] Properties to set
                         */
                        function DataUpdateAction(properties) {
                            this.entries = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DataUpdateAction entries.
                         * @member {Object.<string,string>} entries
                         * @memberof google.cloud.contentwarehouse.v1.DataUpdateAction
                         * @instance
                         */
                        DataUpdateAction.prototype.entries = $util.emptyObject;
    
                        /**
                         * Creates a new DataUpdateAction instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DataUpdateAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDataUpdateAction=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.DataUpdateAction} DataUpdateAction instance
                         */
                        DataUpdateAction.create = function create(properties) {
                            return new DataUpdateAction(properties);
                        };
    
                        /**
                         * Encodes the specified DataUpdateAction message. Does not implicitly {@link google.cloud.contentwarehouse.v1.DataUpdateAction.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.DataUpdateAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDataUpdateAction} message DataUpdateAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataUpdateAction.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.entries != null && Object.hasOwnProperty.call(message, "entries"))
                                for (var keys = Object.keys(message.entries), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.entries[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DataUpdateAction message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.DataUpdateAction.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DataUpdateAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDataUpdateAction} message DataUpdateAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataUpdateAction.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DataUpdateAction message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.DataUpdateAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.DataUpdateAction} DataUpdateAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataUpdateAction.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.DataUpdateAction(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.entries === $util.emptyObject)
                                            message.entries = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.entries[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DataUpdateAction message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DataUpdateAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.DataUpdateAction} DataUpdateAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataUpdateAction.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DataUpdateAction message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.DataUpdateAction
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DataUpdateAction.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.entries != null && message.hasOwnProperty("entries")) {
                                if (!$util.isObject(message.entries))
                                    return "entries: object expected";
                                var key = Object.keys(message.entries);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.entries[key[i]]))
                                        return "entries: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DataUpdateAction message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.DataUpdateAction
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.DataUpdateAction} DataUpdateAction
                         */
                        DataUpdateAction.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.DataUpdateAction)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.DataUpdateAction();
                            if (object.entries) {
                                if (typeof object.entries !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.DataUpdateAction.entries: object expected");
                                message.entries = {};
                                for (var keys = Object.keys(object.entries), i = 0; i < keys.length; ++i)
                                    message.entries[keys[i]] = String(object.entries[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DataUpdateAction message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.DataUpdateAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.DataUpdateAction} message DataUpdateAction
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DataUpdateAction.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.entries = {};
                            var keys2;
                            if (message.entries && (keys2 = Object.keys(message.entries)).length) {
                                object.entries = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.entries[keys2[j]] = message.entries[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DataUpdateAction to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.DataUpdateAction
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DataUpdateAction.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DataUpdateAction
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.DataUpdateAction
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DataUpdateAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.DataUpdateAction";
                        };
    
                        return DataUpdateAction;
                    })();
    
                    v1.AddToFolderAction = (function() {
    
                        /**
                         * Properties of an AddToFolderAction.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IAddToFolderAction
                         * @property {Array.<string>|null} [folders] AddToFolderAction folders
                         */
    
                        /**
                         * Constructs a new AddToFolderAction.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an AddToFolderAction.
                         * @implements IAddToFolderAction
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IAddToFolderAction=} [properties] Properties to set
                         */
                        function AddToFolderAction(properties) {
                            this.folders = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AddToFolderAction folders.
                         * @member {Array.<string>} folders
                         * @memberof google.cloud.contentwarehouse.v1.AddToFolderAction
                         * @instance
                         */
                        AddToFolderAction.prototype.folders = $util.emptyArray;
    
                        /**
                         * Creates a new AddToFolderAction instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.AddToFolderAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IAddToFolderAction=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.AddToFolderAction} AddToFolderAction instance
                         */
                        AddToFolderAction.create = function create(properties) {
                            return new AddToFolderAction(properties);
                        };
    
                        /**
                         * Encodes the specified AddToFolderAction message. Does not implicitly {@link google.cloud.contentwarehouse.v1.AddToFolderAction.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.AddToFolderAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IAddToFolderAction} message AddToFolderAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AddToFolderAction.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.folders != null && message.folders.length)
                                for (var i = 0; i < message.folders.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.folders[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AddToFolderAction message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.AddToFolderAction.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.AddToFolderAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IAddToFolderAction} message AddToFolderAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AddToFolderAction.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AddToFolderAction message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.AddToFolderAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.AddToFolderAction} AddToFolderAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AddToFolderAction.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.AddToFolderAction();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.folders && message.folders.length))
                                            message.folders = [];
                                        message.folders.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AddToFolderAction message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.AddToFolderAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.AddToFolderAction} AddToFolderAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AddToFolderAction.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AddToFolderAction message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.AddToFolderAction
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AddToFolderAction.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.folders != null && message.hasOwnProperty("folders")) {
                                if (!Array.isArray(message.folders))
                                    return "folders: array expected";
                                for (var i = 0; i < message.folders.length; ++i)
                                    if (!$util.isString(message.folders[i]))
                                        return "folders: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AddToFolderAction message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.AddToFolderAction
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.AddToFolderAction} AddToFolderAction
                         */
                        AddToFolderAction.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.AddToFolderAction)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.AddToFolderAction();
                            if (object.folders) {
                                if (!Array.isArray(object.folders))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.AddToFolderAction.folders: array expected");
                                message.folders = [];
                                for (var i = 0; i < object.folders.length; ++i)
                                    message.folders[i] = String(object.folders[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AddToFolderAction message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.AddToFolderAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.AddToFolderAction} message AddToFolderAction
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AddToFolderAction.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.folders = [];
                            if (message.folders && message.folders.length) {
                                object.folders = [];
                                for (var j = 0; j < message.folders.length; ++j)
                                    object.folders[j] = message.folders[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this AddToFolderAction to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.AddToFolderAction
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AddToFolderAction.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AddToFolderAction
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.AddToFolderAction
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AddToFolderAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.AddToFolderAction";
                        };
    
                        return AddToFolderAction;
                    })();
    
                    v1.RemoveFromFolderAction = (function() {
    
                        /**
                         * Properties of a RemoveFromFolderAction.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IRemoveFromFolderAction
                         * @property {string|null} [condition] RemoveFromFolderAction condition
                         * @property {string|null} [folder] RemoveFromFolderAction folder
                         */
    
                        /**
                         * Constructs a new RemoveFromFolderAction.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a RemoveFromFolderAction.
                         * @implements IRemoveFromFolderAction
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IRemoveFromFolderAction=} [properties] Properties to set
                         */
                        function RemoveFromFolderAction(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RemoveFromFolderAction condition.
                         * @member {string} condition
                         * @memberof google.cloud.contentwarehouse.v1.RemoveFromFolderAction
                         * @instance
                         */
                        RemoveFromFolderAction.prototype.condition = "";
    
                        /**
                         * RemoveFromFolderAction folder.
                         * @member {string} folder
                         * @memberof google.cloud.contentwarehouse.v1.RemoveFromFolderAction
                         * @instance
                         */
                        RemoveFromFolderAction.prototype.folder = "";
    
                        /**
                         * Creates a new RemoveFromFolderAction instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.RemoveFromFolderAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRemoveFromFolderAction=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.RemoveFromFolderAction} RemoveFromFolderAction instance
                         */
                        RemoveFromFolderAction.create = function create(properties) {
                            return new RemoveFromFolderAction(properties);
                        };
    
                        /**
                         * Encodes the specified RemoveFromFolderAction message. Does not implicitly {@link google.cloud.contentwarehouse.v1.RemoveFromFolderAction.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.RemoveFromFolderAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRemoveFromFolderAction} message RemoveFromFolderAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RemoveFromFolderAction.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.condition);
                            if (message.folder != null && Object.hasOwnProperty.call(message, "folder"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.folder);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RemoveFromFolderAction message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.RemoveFromFolderAction.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.RemoveFromFolderAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRemoveFromFolderAction} message RemoveFromFolderAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RemoveFromFolderAction.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RemoveFromFolderAction message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.RemoveFromFolderAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.RemoveFromFolderAction} RemoveFromFolderAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RemoveFromFolderAction.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.RemoveFromFolderAction();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.condition = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.folder = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RemoveFromFolderAction message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.RemoveFromFolderAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.RemoveFromFolderAction} RemoveFromFolderAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RemoveFromFolderAction.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RemoveFromFolderAction message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.RemoveFromFolderAction
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RemoveFromFolderAction.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.condition != null && message.hasOwnProperty("condition"))
                                if (!$util.isString(message.condition))
                                    return "condition: string expected";
                            if (message.folder != null && message.hasOwnProperty("folder"))
                                if (!$util.isString(message.folder))
                                    return "folder: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RemoveFromFolderAction message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.RemoveFromFolderAction
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.RemoveFromFolderAction} RemoveFromFolderAction
                         */
                        RemoveFromFolderAction.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.RemoveFromFolderAction)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.RemoveFromFolderAction();
                            if (object.condition != null)
                                message.condition = String(object.condition);
                            if (object.folder != null)
                                message.folder = String(object.folder);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RemoveFromFolderAction message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.RemoveFromFolderAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.RemoveFromFolderAction} message RemoveFromFolderAction
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RemoveFromFolderAction.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.condition = "";
                                object.folder = "";
                            }
                            if (message.condition != null && message.hasOwnProperty("condition"))
                                object.condition = message.condition;
                            if (message.folder != null && message.hasOwnProperty("folder"))
                                object.folder = message.folder;
                            return object;
                        };
    
                        /**
                         * Converts this RemoveFromFolderAction to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.RemoveFromFolderAction
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RemoveFromFolderAction.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RemoveFromFolderAction
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.RemoveFromFolderAction
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RemoveFromFolderAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.RemoveFromFolderAction";
                        };
    
                        return RemoveFromFolderAction;
                    })();
    
                    v1.PublishAction = (function() {
    
                        /**
                         * Properties of a PublishAction.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IPublishAction
                         * @property {string|null} [topicId] PublishAction topicId
                         * @property {Array.<string>|null} [messages] PublishAction messages
                         */
    
                        /**
                         * Constructs a new PublishAction.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a PublishAction.
                         * @implements IPublishAction
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IPublishAction=} [properties] Properties to set
                         */
                        function PublishAction(properties) {
                            this.messages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PublishAction topicId.
                         * @member {string} topicId
                         * @memberof google.cloud.contentwarehouse.v1.PublishAction
                         * @instance
                         */
                        PublishAction.prototype.topicId = "";
    
                        /**
                         * PublishAction messages.
                         * @member {Array.<string>} messages
                         * @memberof google.cloud.contentwarehouse.v1.PublishAction
                         * @instance
                         */
                        PublishAction.prototype.messages = $util.emptyArray;
    
                        /**
                         * Creates a new PublishAction instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.PublishAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IPublishAction=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.PublishAction} PublishAction instance
                         */
                        PublishAction.create = function create(properties) {
                            return new PublishAction(properties);
                        };
    
                        /**
                         * Encodes the specified PublishAction message. Does not implicitly {@link google.cloud.contentwarehouse.v1.PublishAction.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.PublishAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IPublishAction} message PublishAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PublishAction.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.topicId != null && Object.hasOwnProperty.call(message, "topicId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.topicId);
                            if (message.messages != null && message.messages.length)
                                for (var i = 0; i < message.messages.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.messages[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PublishAction message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.PublishAction.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.PublishAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IPublishAction} message PublishAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PublishAction.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PublishAction message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.PublishAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.PublishAction} PublishAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PublishAction.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.PublishAction();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.topicId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.messages && message.messages.length))
                                            message.messages = [];
                                        message.messages.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PublishAction message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.PublishAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.PublishAction} PublishAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PublishAction.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PublishAction message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.PublishAction
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PublishAction.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.topicId != null && message.hasOwnProperty("topicId"))
                                if (!$util.isString(message.topicId))
                                    return "topicId: string expected";
                            if (message.messages != null && message.hasOwnProperty("messages")) {
                                if (!Array.isArray(message.messages))
                                    return "messages: array expected";
                                for (var i = 0; i < message.messages.length; ++i)
                                    if (!$util.isString(message.messages[i]))
                                        return "messages: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PublishAction message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.PublishAction
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.PublishAction} PublishAction
                         */
                        PublishAction.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.PublishAction)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.PublishAction();
                            if (object.topicId != null)
                                message.topicId = String(object.topicId);
                            if (object.messages) {
                                if (!Array.isArray(object.messages))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.PublishAction.messages: array expected");
                                message.messages = [];
                                for (var i = 0; i < object.messages.length; ++i)
                                    message.messages[i] = String(object.messages[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PublishAction message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.PublishAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.PublishAction} message PublishAction
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PublishAction.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.messages = [];
                            if (options.defaults)
                                object.topicId = "";
                            if (message.topicId != null && message.hasOwnProperty("topicId"))
                                object.topicId = message.topicId;
                            if (message.messages && message.messages.length) {
                                object.messages = [];
                                for (var j = 0; j < message.messages.length; ++j)
                                    object.messages[j] = message.messages[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PublishAction to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.PublishAction
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PublishAction.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PublishAction
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.PublishAction
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PublishAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.PublishAction";
                        };
    
                        return PublishAction;
                    })();
    
                    v1.DeleteDocumentAction = (function() {
    
                        /**
                         * Properties of a DeleteDocumentAction.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IDeleteDocumentAction
                         * @property {boolean|null} [enableHardDelete] DeleteDocumentAction enableHardDelete
                         */
    
                        /**
                         * Constructs a new DeleteDocumentAction.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DeleteDocumentAction.
                         * @implements IDeleteDocumentAction
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentAction=} [properties] Properties to set
                         */
                        function DeleteDocumentAction(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteDocumentAction enableHardDelete.
                         * @member {boolean} enableHardDelete
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentAction
                         * @instance
                         */
                        DeleteDocumentAction.prototype.enableHardDelete = false;
    
                        /**
                         * Creates a new DeleteDocumentAction instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentAction=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentAction} DeleteDocumentAction instance
                         */
                        DeleteDocumentAction.create = function create(properties) {
                            return new DeleteDocumentAction(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteDocumentAction message. Does not implicitly {@link google.cloud.contentwarehouse.v1.DeleteDocumentAction.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentAction} message DeleteDocumentAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteDocumentAction.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.enableHardDelete != null && Object.hasOwnProperty.call(message, "enableHardDelete"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enableHardDelete);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteDocumentAction message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.DeleteDocumentAction.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteDocumentAction} message DeleteDocumentAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteDocumentAction.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteDocumentAction message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentAction} DeleteDocumentAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteDocumentAction.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.DeleteDocumentAction();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.enableHardDelete = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteDocumentAction message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentAction} DeleteDocumentAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteDocumentAction.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteDocumentAction message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentAction
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteDocumentAction.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.enableHardDelete != null && message.hasOwnProperty("enableHardDelete"))
                                if (typeof message.enableHardDelete !== "boolean")
                                    return "enableHardDelete: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteDocumentAction message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentAction
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.DeleteDocumentAction} DeleteDocumentAction
                         */
                        DeleteDocumentAction.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.DeleteDocumentAction)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.DeleteDocumentAction();
                            if (object.enableHardDelete != null)
                                message.enableHardDelete = Boolean(object.enableHardDelete);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteDocumentAction message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentAction
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.DeleteDocumentAction} message DeleteDocumentAction
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteDocumentAction.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.enableHardDelete = false;
                            if (message.enableHardDelete != null && message.hasOwnProperty("enableHardDelete"))
                                object.enableHardDelete = message.enableHardDelete;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteDocumentAction to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentAction
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteDocumentAction.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteDocumentAction
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.DeleteDocumentAction
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteDocumentAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.DeleteDocumentAction";
                        };
    
                        return DeleteDocumentAction;
                    })();
    
                    v1.RuleEngineOutput = (function() {
    
                        /**
                         * Properties of a RuleEngineOutput.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IRuleEngineOutput
                         * @property {string|null} [documentName] RuleEngineOutput documentName
                         * @property {google.cloud.contentwarehouse.v1.IRuleEvaluatorOutput|null} [ruleEvaluatorOutput] RuleEngineOutput ruleEvaluatorOutput
                         * @property {google.cloud.contentwarehouse.v1.IActionExecutorOutput|null} [actionExecutorOutput] RuleEngineOutput actionExecutorOutput
                         */
    
                        /**
                         * Constructs a new RuleEngineOutput.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a RuleEngineOutput.
                         * @implements IRuleEngineOutput
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IRuleEngineOutput=} [properties] Properties to set
                         */
                        function RuleEngineOutput(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RuleEngineOutput documentName.
                         * @member {string} documentName
                         * @memberof google.cloud.contentwarehouse.v1.RuleEngineOutput
                         * @instance
                         */
                        RuleEngineOutput.prototype.documentName = "";
    
                        /**
                         * RuleEngineOutput ruleEvaluatorOutput.
                         * @member {google.cloud.contentwarehouse.v1.IRuleEvaluatorOutput|null|undefined} ruleEvaluatorOutput
                         * @memberof google.cloud.contentwarehouse.v1.RuleEngineOutput
                         * @instance
                         */
                        RuleEngineOutput.prototype.ruleEvaluatorOutput = null;
    
                        /**
                         * RuleEngineOutput actionExecutorOutput.
                         * @member {google.cloud.contentwarehouse.v1.IActionExecutorOutput|null|undefined} actionExecutorOutput
                         * @memberof google.cloud.contentwarehouse.v1.RuleEngineOutput
                         * @instance
                         */
                        RuleEngineOutput.prototype.actionExecutorOutput = null;
    
                        /**
                         * Creates a new RuleEngineOutput instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.RuleEngineOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRuleEngineOutput=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.RuleEngineOutput} RuleEngineOutput instance
                         */
                        RuleEngineOutput.create = function create(properties) {
                            return new RuleEngineOutput(properties);
                        };
    
                        /**
                         * Encodes the specified RuleEngineOutput message. Does not implicitly {@link google.cloud.contentwarehouse.v1.RuleEngineOutput.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.RuleEngineOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRuleEngineOutput} message RuleEngineOutput message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuleEngineOutput.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.ruleEvaluatorOutput != null && Object.hasOwnProperty.call(message, "ruleEvaluatorOutput"))
                                $root.google.cloud.contentwarehouse.v1.RuleEvaluatorOutput.encode(message.ruleEvaluatorOutput, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.actionExecutorOutput != null && Object.hasOwnProperty.call(message, "actionExecutorOutput"))
                                $root.google.cloud.contentwarehouse.v1.ActionExecutorOutput.encode(message.actionExecutorOutput, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.documentName != null && Object.hasOwnProperty.call(message, "documentName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.documentName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RuleEngineOutput message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.RuleEngineOutput.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.RuleEngineOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRuleEngineOutput} message RuleEngineOutput message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuleEngineOutput.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RuleEngineOutput message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.RuleEngineOutput
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.RuleEngineOutput} RuleEngineOutput
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuleEngineOutput.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.RuleEngineOutput();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.documentName = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.ruleEvaluatorOutput = $root.google.cloud.contentwarehouse.v1.RuleEvaluatorOutput.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.actionExecutorOutput = $root.google.cloud.contentwarehouse.v1.ActionExecutorOutput.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RuleEngineOutput message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.RuleEngineOutput
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.RuleEngineOutput} RuleEngineOutput
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuleEngineOutput.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RuleEngineOutput message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.RuleEngineOutput
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RuleEngineOutput.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.documentName != null && message.hasOwnProperty("documentName"))
                                if (!$util.isString(message.documentName))
                                    return "documentName: string expected";
                            if (message.ruleEvaluatorOutput != null && message.hasOwnProperty("ruleEvaluatorOutput")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RuleEvaluatorOutput.verify(message.ruleEvaluatorOutput);
                                if (error)
                                    return "ruleEvaluatorOutput." + error;
                            }
                            if (message.actionExecutorOutput != null && message.hasOwnProperty("actionExecutorOutput")) {
                                var error = $root.google.cloud.contentwarehouse.v1.ActionExecutorOutput.verify(message.actionExecutorOutput);
                                if (error)
                                    return "actionExecutorOutput." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RuleEngineOutput message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.RuleEngineOutput
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.RuleEngineOutput} RuleEngineOutput
                         */
                        RuleEngineOutput.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.RuleEngineOutput)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.RuleEngineOutput();
                            if (object.documentName != null)
                                message.documentName = String(object.documentName);
                            if (object.ruleEvaluatorOutput != null) {
                                if (typeof object.ruleEvaluatorOutput !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.RuleEngineOutput.ruleEvaluatorOutput: object expected");
                                message.ruleEvaluatorOutput = $root.google.cloud.contentwarehouse.v1.RuleEvaluatorOutput.fromObject(object.ruleEvaluatorOutput);
                            }
                            if (object.actionExecutorOutput != null) {
                                if (typeof object.actionExecutorOutput !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.RuleEngineOutput.actionExecutorOutput: object expected");
                                message.actionExecutorOutput = $root.google.cloud.contentwarehouse.v1.ActionExecutorOutput.fromObject(object.actionExecutorOutput);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RuleEngineOutput message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.RuleEngineOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.RuleEngineOutput} message RuleEngineOutput
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RuleEngineOutput.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.ruleEvaluatorOutput = null;
                                object.actionExecutorOutput = null;
                                object.documentName = "";
                            }
                            if (message.ruleEvaluatorOutput != null && message.hasOwnProperty("ruleEvaluatorOutput"))
                                object.ruleEvaluatorOutput = $root.google.cloud.contentwarehouse.v1.RuleEvaluatorOutput.toObject(message.ruleEvaluatorOutput, options);
                            if (message.actionExecutorOutput != null && message.hasOwnProperty("actionExecutorOutput"))
                                object.actionExecutorOutput = $root.google.cloud.contentwarehouse.v1.ActionExecutorOutput.toObject(message.actionExecutorOutput, options);
                            if (message.documentName != null && message.hasOwnProperty("documentName"))
                                object.documentName = message.documentName;
                            return object;
                        };
    
                        /**
                         * Converts this RuleEngineOutput to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.RuleEngineOutput
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RuleEngineOutput.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RuleEngineOutput
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.RuleEngineOutput
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RuleEngineOutput.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.RuleEngineOutput";
                        };
    
                        return RuleEngineOutput;
                    })();
    
                    v1.RuleEvaluatorOutput = (function() {
    
                        /**
                         * Properties of a RuleEvaluatorOutput.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IRuleEvaluatorOutput
                         * @property {Array.<google.cloud.contentwarehouse.v1.IRule>|null} [triggeredRules] RuleEvaluatorOutput triggeredRules
                         * @property {Array.<google.cloud.contentwarehouse.v1.IRule>|null} [matchedRules] RuleEvaluatorOutput matchedRules
                         * @property {Array.<google.cloud.contentwarehouse.v1.IInvalidRule>|null} [invalidRules] RuleEvaluatorOutput invalidRules
                         */
    
                        /**
                         * Constructs a new RuleEvaluatorOutput.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a RuleEvaluatorOutput.
                         * @implements IRuleEvaluatorOutput
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IRuleEvaluatorOutput=} [properties] Properties to set
                         */
                        function RuleEvaluatorOutput(properties) {
                            this.triggeredRules = [];
                            this.matchedRules = [];
                            this.invalidRules = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RuleEvaluatorOutput triggeredRules.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IRule>} triggeredRules
                         * @memberof google.cloud.contentwarehouse.v1.RuleEvaluatorOutput
                         * @instance
                         */
                        RuleEvaluatorOutput.prototype.triggeredRules = $util.emptyArray;
    
                        /**
                         * RuleEvaluatorOutput matchedRules.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IRule>} matchedRules
                         * @memberof google.cloud.contentwarehouse.v1.RuleEvaluatorOutput
                         * @instance
                         */
                        RuleEvaluatorOutput.prototype.matchedRules = $util.emptyArray;
    
                        /**
                         * RuleEvaluatorOutput invalidRules.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IInvalidRule>} invalidRules
                         * @memberof google.cloud.contentwarehouse.v1.RuleEvaluatorOutput
                         * @instance
                         */
                        RuleEvaluatorOutput.prototype.invalidRules = $util.emptyArray;
    
                        /**
                         * Creates a new RuleEvaluatorOutput instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.RuleEvaluatorOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRuleEvaluatorOutput=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.RuleEvaluatorOutput} RuleEvaluatorOutput instance
                         */
                        RuleEvaluatorOutput.create = function create(properties) {
                            return new RuleEvaluatorOutput(properties);
                        };
    
                        /**
                         * Encodes the specified RuleEvaluatorOutput message. Does not implicitly {@link google.cloud.contentwarehouse.v1.RuleEvaluatorOutput.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.RuleEvaluatorOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRuleEvaluatorOutput} message RuleEvaluatorOutput message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuleEvaluatorOutput.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.triggeredRules != null && message.triggeredRules.length)
                                for (var i = 0; i < message.triggeredRules.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.Rule.encode(message.triggeredRules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.matchedRules != null && message.matchedRules.length)
                                for (var i = 0; i < message.matchedRules.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.Rule.encode(message.matchedRules[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.invalidRules != null && message.invalidRules.length)
                                for (var i = 0; i < message.invalidRules.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.InvalidRule.encode(message.invalidRules[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RuleEvaluatorOutput message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.RuleEvaluatorOutput.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.RuleEvaluatorOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRuleEvaluatorOutput} message RuleEvaluatorOutput message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuleEvaluatorOutput.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RuleEvaluatorOutput message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.RuleEvaluatorOutput
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.RuleEvaluatorOutput} RuleEvaluatorOutput
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuleEvaluatorOutput.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.RuleEvaluatorOutput();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.triggeredRules && message.triggeredRules.length))
                                            message.triggeredRules = [];
                                        message.triggeredRules.push($root.google.cloud.contentwarehouse.v1.Rule.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.matchedRules && message.matchedRules.length))
                                            message.matchedRules = [];
                                        message.matchedRules.push($root.google.cloud.contentwarehouse.v1.Rule.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 3: {
                                        if (!(message.invalidRules && message.invalidRules.length))
                                            message.invalidRules = [];
                                        message.invalidRules.push($root.google.cloud.contentwarehouse.v1.InvalidRule.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RuleEvaluatorOutput message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.RuleEvaluatorOutput
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.RuleEvaluatorOutput} RuleEvaluatorOutput
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuleEvaluatorOutput.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RuleEvaluatorOutput message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.RuleEvaluatorOutput
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RuleEvaluatorOutput.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.triggeredRules != null && message.hasOwnProperty("triggeredRules")) {
                                if (!Array.isArray(message.triggeredRules))
                                    return "triggeredRules: array expected";
                                for (var i = 0; i < message.triggeredRules.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.Rule.verify(message.triggeredRules[i]);
                                    if (error)
                                        return "triggeredRules." + error;
                                }
                            }
                            if (message.matchedRules != null && message.hasOwnProperty("matchedRules")) {
                                if (!Array.isArray(message.matchedRules))
                                    return "matchedRules: array expected";
                                for (var i = 0; i < message.matchedRules.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.Rule.verify(message.matchedRules[i]);
                                    if (error)
                                        return "matchedRules." + error;
                                }
                            }
                            if (message.invalidRules != null && message.hasOwnProperty("invalidRules")) {
                                if (!Array.isArray(message.invalidRules))
                                    return "invalidRules: array expected";
                                for (var i = 0; i < message.invalidRules.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.InvalidRule.verify(message.invalidRules[i]);
                                    if (error)
                                        return "invalidRules." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RuleEvaluatorOutput message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.RuleEvaluatorOutput
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.RuleEvaluatorOutput} RuleEvaluatorOutput
                         */
                        RuleEvaluatorOutput.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.RuleEvaluatorOutput)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.RuleEvaluatorOutput();
                            if (object.triggeredRules) {
                                if (!Array.isArray(object.triggeredRules))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.RuleEvaluatorOutput.triggeredRules: array expected");
                                message.triggeredRules = [];
                                for (var i = 0; i < object.triggeredRules.length; ++i) {
                                    if (typeof object.triggeredRules[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.RuleEvaluatorOutput.triggeredRules: object expected");
                                    message.triggeredRules[i] = $root.google.cloud.contentwarehouse.v1.Rule.fromObject(object.triggeredRules[i]);
                                }
                            }
                            if (object.matchedRules) {
                                if (!Array.isArray(object.matchedRules))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.RuleEvaluatorOutput.matchedRules: array expected");
                                message.matchedRules = [];
                                for (var i = 0; i < object.matchedRules.length; ++i) {
                                    if (typeof object.matchedRules[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.RuleEvaluatorOutput.matchedRules: object expected");
                                    message.matchedRules[i] = $root.google.cloud.contentwarehouse.v1.Rule.fromObject(object.matchedRules[i]);
                                }
                            }
                            if (object.invalidRules) {
                                if (!Array.isArray(object.invalidRules))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.RuleEvaluatorOutput.invalidRules: array expected");
                                message.invalidRules = [];
                                for (var i = 0; i < object.invalidRules.length; ++i) {
                                    if (typeof object.invalidRules[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.RuleEvaluatorOutput.invalidRules: object expected");
                                    message.invalidRules[i] = $root.google.cloud.contentwarehouse.v1.InvalidRule.fromObject(object.invalidRules[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RuleEvaluatorOutput message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.RuleEvaluatorOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.RuleEvaluatorOutput} message RuleEvaluatorOutput
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RuleEvaluatorOutput.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.triggeredRules = [];
                                object.matchedRules = [];
                                object.invalidRules = [];
                            }
                            if (message.triggeredRules && message.triggeredRules.length) {
                                object.triggeredRules = [];
                                for (var j = 0; j < message.triggeredRules.length; ++j)
                                    object.triggeredRules[j] = $root.google.cloud.contentwarehouse.v1.Rule.toObject(message.triggeredRules[j], options);
                            }
                            if (message.matchedRules && message.matchedRules.length) {
                                object.matchedRules = [];
                                for (var j = 0; j < message.matchedRules.length; ++j)
                                    object.matchedRules[j] = $root.google.cloud.contentwarehouse.v1.Rule.toObject(message.matchedRules[j], options);
                            }
                            if (message.invalidRules && message.invalidRules.length) {
                                object.invalidRules = [];
                                for (var j = 0; j < message.invalidRules.length; ++j)
                                    object.invalidRules[j] = $root.google.cloud.contentwarehouse.v1.InvalidRule.toObject(message.invalidRules[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RuleEvaluatorOutput to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.RuleEvaluatorOutput
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RuleEvaluatorOutput.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RuleEvaluatorOutput
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.RuleEvaluatorOutput
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RuleEvaluatorOutput.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.RuleEvaluatorOutput";
                        };
    
                        return RuleEvaluatorOutput;
                    })();
    
                    v1.InvalidRule = (function() {
    
                        /**
                         * Properties of an InvalidRule.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IInvalidRule
                         * @property {google.cloud.contentwarehouse.v1.IRule|null} [rule] InvalidRule rule
                         * @property {string|null} [error] InvalidRule error
                         */
    
                        /**
                         * Constructs a new InvalidRule.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an InvalidRule.
                         * @implements IInvalidRule
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IInvalidRule=} [properties] Properties to set
                         */
                        function InvalidRule(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InvalidRule rule.
                         * @member {google.cloud.contentwarehouse.v1.IRule|null|undefined} rule
                         * @memberof google.cloud.contentwarehouse.v1.InvalidRule
                         * @instance
                         */
                        InvalidRule.prototype.rule = null;
    
                        /**
                         * InvalidRule error.
                         * @member {string} error
                         * @memberof google.cloud.contentwarehouse.v1.InvalidRule
                         * @instance
                         */
                        InvalidRule.prototype.error = "";
    
                        /**
                         * Creates a new InvalidRule instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.InvalidRule
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IInvalidRule=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.InvalidRule} InvalidRule instance
                         */
                        InvalidRule.create = function create(properties) {
                            return new InvalidRule(properties);
                        };
    
                        /**
                         * Encodes the specified InvalidRule message. Does not implicitly {@link google.cloud.contentwarehouse.v1.InvalidRule.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.InvalidRule
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IInvalidRule} message InvalidRule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InvalidRule.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.rule != null && Object.hasOwnProperty.call(message, "rule"))
                                $root.google.cloud.contentwarehouse.v1.Rule.encode(message.rule, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.error);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InvalidRule message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.InvalidRule.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.InvalidRule
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IInvalidRule} message InvalidRule message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InvalidRule.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InvalidRule message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.InvalidRule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.InvalidRule} InvalidRule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InvalidRule.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.InvalidRule();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.rule = $root.google.cloud.contentwarehouse.v1.Rule.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.error = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InvalidRule message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.InvalidRule
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.InvalidRule} InvalidRule
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InvalidRule.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InvalidRule message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.InvalidRule
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InvalidRule.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.rule != null && message.hasOwnProperty("rule")) {
                                var error = $root.google.cloud.contentwarehouse.v1.Rule.verify(message.rule);
                                if (error)
                                    return "rule." + error;
                            }
                            if (message.error != null && message.hasOwnProperty("error"))
                                if (!$util.isString(message.error))
                                    return "error: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an InvalidRule message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.InvalidRule
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.InvalidRule} InvalidRule
                         */
                        InvalidRule.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.InvalidRule)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.InvalidRule();
                            if (object.rule != null) {
                                if (typeof object.rule !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.InvalidRule.rule: object expected");
                                message.rule = $root.google.cloud.contentwarehouse.v1.Rule.fromObject(object.rule);
                            }
                            if (object.error != null)
                                message.error = String(object.error);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InvalidRule message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.InvalidRule
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.InvalidRule} message InvalidRule
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InvalidRule.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.rule = null;
                                object.error = "";
                            }
                            if (message.rule != null && message.hasOwnProperty("rule"))
                                object.rule = $root.google.cloud.contentwarehouse.v1.Rule.toObject(message.rule, options);
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = message.error;
                            return object;
                        };
    
                        /**
                         * Converts this InvalidRule to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.InvalidRule
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InvalidRule.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for InvalidRule
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.InvalidRule
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        InvalidRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.InvalidRule";
                        };
    
                        return InvalidRule;
                    })();
    
                    v1.ActionExecutorOutput = (function() {
    
                        /**
                         * Properties of an ActionExecutorOutput.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IActionExecutorOutput
                         * @property {Array.<google.cloud.contentwarehouse.v1.IRuleActionsPair>|null} [ruleActionsPairs] ActionExecutorOutput ruleActionsPairs
                         */
    
                        /**
                         * Constructs a new ActionExecutorOutput.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an ActionExecutorOutput.
                         * @implements IActionExecutorOutput
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IActionExecutorOutput=} [properties] Properties to set
                         */
                        function ActionExecutorOutput(properties) {
                            this.ruleActionsPairs = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ActionExecutorOutput ruleActionsPairs.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IRuleActionsPair>} ruleActionsPairs
                         * @memberof google.cloud.contentwarehouse.v1.ActionExecutorOutput
                         * @instance
                         */
                        ActionExecutorOutput.prototype.ruleActionsPairs = $util.emptyArray;
    
                        /**
                         * Creates a new ActionExecutorOutput instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.ActionExecutorOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IActionExecutorOutput=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.ActionExecutorOutput} ActionExecutorOutput instance
                         */
                        ActionExecutorOutput.create = function create(properties) {
                            return new ActionExecutorOutput(properties);
                        };
    
                        /**
                         * Encodes the specified ActionExecutorOutput message. Does not implicitly {@link google.cloud.contentwarehouse.v1.ActionExecutorOutput.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.ActionExecutorOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IActionExecutorOutput} message ActionExecutorOutput message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ActionExecutorOutput.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.ruleActionsPairs != null && message.ruleActionsPairs.length)
                                for (var i = 0; i < message.ruleActionsPairs.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.RuleActionsPair.encode(message.ruleActionsPairs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ActionExecutorOutput message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.ActionExecutorOutput.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ActionExecutorOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IActionExecutorOutput} message ActionExecutorOutput message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ActionExecutorOutput.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ActionExecutorOutput message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.ActionExecutorOutput
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.ActionExecutorOutput} ActionExecutorOutput
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ActionExecutorOutput.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.ActionExecutorOutput();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.ruleActionsPairs && message.ruleActionsPairs.length))
                                            message.ruleActionsPairs = [];
                                        message.ruleActionsPairs.push($root.google.cloud.contentwarehouse.v1.RuleActionsPair.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ActionExecutorOutput message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ActionExecutorOutput
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.ActionExecutorOutput} ActionExecutorOutput
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ActionExecutorOutput.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ActionExecutorOutput message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.ActionExecutorOutput
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ActionExecutorOutput.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.ruleActionsPairs != null && message.hasOwnProperty("ruleActionsPairs")) {
                                if (!Array.isArray(message.ruleActionsPairs))
                                    return "ruleActionsPairs: array expected";
                                for (var i = 0; i < message.ruleActionsPairs.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.RuleActionsPair.verify(message.ruleActionsPairs[i]);
                                    if (error)
                                        return "ruleActionsPairs." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ActionExecutorOutput message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.ActionExecutorOutput
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.ActionExecutorOutput} ActionExecutorOutput
                         */
                        ActionExecutorOutput.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.ActionExecutorOutput)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.ActionExecutorOutput();
                            if (object.ruleActionsPairs) {
                                if (!Array.isArray(object.ruleActionsPairs))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.ActionExecutorOutput.ruleActionsPairs: array expected");
                                message.ruleActionsPairs = [];
                                for (var i = 0; i < object.ruleActionsPairs.length; ++i) {
                                    if (typeof object.ruleActionsPairs[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.ActionExecutorOutput.ruleActionsPairs: object expected");
                                    message.ruleActionsPairs[i] = $root.google.cloud.contentwarehouse.v1.RuleActionsPair.fromObject(object.ruleActionsPairs[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ActionExecutorOutput message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.ActionExecutorOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ActionExecutorOutput} message ActionExecutorOutput
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ActionExecutorOutput.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.ruleActionsPairs = [];
                            if (message.ruleActionsPairs && message.ruleActionsPairs.length) {
                                object.ruleActionsPairs = [];
                                for (var j = 0; j < message.ruleActionsPairs.length; ++j)
                                    object.ruleActionsPairs[j] = $root.google.cloud.contentwarehouse.v1.RuleActionsPair.toObject(message.ruleActionsPairs[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ActionExecutorOutput to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.ActionExecutorOutput
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ActionExecutorOutput.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ActionExecutorOutput
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.ActionExecutorOutput
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ActionExecutorOutput.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.ActionExecutorOutput";
                        };
    
                        return ActionExecutorOutput;
                    })();
    
                    v1.RuleActionsPair = (function() {
    
                        /**
                         * Properties of a RuleActionsPair.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IRuleActionsPair
                         * @property {google.cloud.contentwarehouse.v1.IRule|null} [rule] RuleActionsPair rule
                         * @property {Array.<google.cloud.contentwarehouse.v1.IActionOutput>|null} [actionOutputs] RuleActionsPair actionOutputs
                         */
    
                        /**
                         * Constructs a new RuleActionsPair.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a RuleActionsPair.
                         * @implements IRuleActionsPair
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IRuleActionsPair=} [properties] Properties to set
                         */
                        function RuleActionsPair(properties) {
                            this.actionOutputs = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RuleActionsPair rule.
                         * @member {google.cloud.contentwarehouse.v1.IRule|null|undefined} rule
                         * @memberof google.cloud.contentwarehouse.v1.RuleActionsPair
                         * @instance
                         */
                        RuleActionsPair.prototype.rule = null;
    
                        /**
                         * RuleActionsPair actionOutputs.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IActionOutput>} actionOutputs
                         * @memberof google.cloud.contentwarehouse.v1.RuleActionsPair
                         * @instance
                         */
                        RuleActionsPair.prototype.actionOutputs = $util.emptyArray;
    
                        /**
                         * Creates a new RuleActionsPair instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.RuleActionsPair
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRuleActionsPair=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.RuleActionsPair} RuleActionsPair instance
                         */
                        RuleActionsPair.create = function create(properties) {
                            return new RuleActionsPair(properties);
                        };
    
                        /**
                         * Encodes the specified RuleActionsPair message. Does not implicitly {@link google.cloud.contentwarehouse.v1.RuleActionsPair.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.RuleActionsPair
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRuleActionsPair} message RuleActionsPair message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuleActionsPair.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.rule != null && Object.hasOwnProperty.call(message, "rule"))
                                $root.google.cloud.contentwarehouse.v1.Rule.encode(message.rule, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.actionOutputs != null && message.actionOutputs.length)
                                for (var i = 0; i < message.actionOutputs.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.ActionOutput.encode(message.actionOutputs[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RuleActionsPair message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.RuleActionsPair.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.RuleActionsPair
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IRuleActionsPair} message RuleActionsPair message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuleActionsPair.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RuleActionsPair message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.RuleActionsPair
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.RuleActionsPair} RuleActionsPair
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuleActionsPair.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.RuleActionsPair();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.rule = $root.google.cloud.contentwarehouse.v1.Rule.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        if (!(message.actionOutputs && message.actionOutputs.length))
                                            message.actionOutputs = [];
                                        message.actionOutputs.push($root.google.cloud.contentwarehouse.v1.ActionOutput.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RuleActionsPair message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.RuleActionsPair
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.RuleActionsPair} RuleActionsPair
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuleActionsPair.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RuleActionsPair message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.RuleActionsPair
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RuleActionsPair.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.rule != null && message.hasOwnProperty("rule")) {
                                var error = $root.google.cloud.contentwarehouse.v1.Rule.verify(message.rule);
                                if (error)
                                    return "rule." + error;
                            }
                            if (message.actionOutputs != null && message.hasOwnProperty("actionOutputs")) {
                                if (!Array.isArray(message.actionOutputs))
                                    return "actionOutputs: array expected";
                                for (var i = 0; i < message.actionOutputs.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.ActionOutput.verify(message.actionOutputs[i]);
                                    if (error)
                                        return "actionOutputs." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RuleActionsPair message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.RuleActionsPair
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.RuleActionsPair} RuleActionsPair
                         */
                        RuleActionsPair.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.RuleActionsPair)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.RuleActionsPair();
                            if (object.rule != null) {
                                if (typeof object.rule !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.RuleActionsPair.rule: object expected");
                                message.rule = $root.google.cloud.contentwarehouse.v1.Rule.fromObject(object.rule);
                            }
                            if (object.actionOutputs) {
                                if (!Array.isArray(object.actionOutputs))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.RuleActionsPair.actionOutputs: array expected");
                                message.actionOutputs = [];
                                for (var i = 0; i < object.actionOutputs.length; ++i) {
                                    if (typeof object.actionOutputs[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.RuleActionsPair.actionOutputs: object expected");
                                    message.actionOutputs[i] = $root.google.cloud.contentwarehouse.v1.ActionOutput.fromObject(object.actionOutputs[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RuleActionsPair message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.RuleActionsPair
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.RuleActionsPair} message RuleActionsPair
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RuleActionsPair.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.actionOutputs = [];
                            if (options.defaults)
                                object.rule = null;
                            if (message.rule != null && message.hasOwnProperty("rule"))
                                object.rule = $root.google.cloud.contentwarehouse.v1.Rule.toObject(message.rule, options);
                            if (message.actionOutputs && message.actionOutputs.length) {
                                object.actionOutputs = [];
                                for (var j = 0; j < message.actionOutputs.length; ++j)
                                    object.actionOutputs[j] = $root.google.cloud.contentwarehouse.v1.ActionOutput.toObject(message.actionOutputs[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RuleActionsPair to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.RuleActionsPair
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RuleActionsPair.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RuleActionsPair
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.RuleActionsPair
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RuleActionsPair.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.RuleActionsPair";
                        };
    
                        return RuleActionsPair;
                    })();
    
                    v1.ActionOutput = (function() {
    
                        /**
                         * Properties of an ActionOutput.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IActionOutput
                         * @property {string|null} [actionId] ActionOutput actionId
                         * @property {google.cloud.contentwarehouse.v1.ActionOutput.State|null} [actionState] ActionOutput actionState
                         * @property {string|null} [outputMessage] ActionOutput outputMessage
                         */
    
                        /**
                         * Constructs a new ActionOutput.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an ActionOutput.
                         * @implements IActionOutput
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IActionOutput=} [properties] Properties to set
                         */
                        function ActionOutput(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ActionOutput actionId.
                         * @member {string} actionId
                         * @memberof google.cloud.contentwarehouse.v1.ActionOutput
                         * @instance
                         */
                        ActionOutput.prototype.actionId = "";
    
                        /**
                         * ActionOutput actionState.
                         * @member {google.cloud.contentwarehouse.v1.ActionOutput.State} actionState
                         * @memberof google.cloud.contentwarehouse.v1.ActionOutput
                         * @instance
                         */
                        ActionOutput.prototype.actionState = 0;
    
                        /**
                         * ActionOutput outputMessage.
                         * @member {string} outputMessage
                         * @memberof google.cloud.contentwarehouse.v1.ActionOutput
                         * @instance
                         */
                        ActionOutput.prototype.outputMessage = "";
    
                        /**
                         * Creates a new ActionOutput instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.ActionOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IActionOutput=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.ActionOutput} ActionOutput instance
                         */
                        ActionOutput.create = function create(properties) {
                            return new ActionOutput(properties);
                        };
    
                        /**
                         * Encodes the specified ActionOutput message. Does not implicitly {@link google.cloud.contentwarehouse.v1.ActionOutput.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.ActionOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IActionOutput} message ActionOutput message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ActionOutput.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.actionId != null && Object.hasOwnProperty.call(message, "actionId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.actionId);
                            if (message.actionState != null && Object.hasOwnProperty.call(message, "actionState"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.actionState);
                            if (message.outputMessage != null && Object.hasOwnProperty.call(message, "outputMessage"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputMessage);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ActionOutput message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.ActionOutput.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ActionOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IActionOutput} message ActionOutput message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ActionOutput.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ActionOutput message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.ActionOutput
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.ActionOutput} ActionOutput
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ActionOutput.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.ActionOutput();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.actionId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.actionState = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.outputMessage = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ActionOutput message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ActionOutput
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.ActionOutput} ActionOutput
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ActionOutput.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ActionOutput message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.ActionOutput
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ActionOutput.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.actionId != null && message.hasOwnProperty("actionId"))
                                if (!$util.isString(message.actionId))
                                    return "actionId: string expected";
                            if (message.actionState != null && message.hasOwnProperty("actionState"))
                                switch (message.actionState) {
                                default:
                                    return "actionState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.outputMessage != null && message.hasOwnProperty("outputMessage"))
                                if (!$util.isString(message.outputMessage))
                                    return "outputMessage: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ActionOutput message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.ActionOutput
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.ActionOutput} ActionOutput
                         */
                        ActionOutput.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.ActionOutput)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.ActionOutput();
                            if (object.actionId != null)
                                message.actionId = String(object.actionId);
                            switch (object.actionState) {
                            default:
                                if (typeof object.actionState === "number") {
                                    message.actionState = object.actionState;
                                    break;
                                }
                                break;
                            case "UNKNOWN":
                            case 0:
                                message.actionState = 0;
                                break;
                            case "ACTION_SUCCEEDED":
                            case 1:
                                message.actionState = 1;
                                break;
                            case "ACTION_FAILED":
                            case 2:
                                message.actionState = 2;
                                break;
                            case "ACTION_TIMED_OUT":
                            case 3:
                                message.actionState = 3;
                                break;
                            case "ACTION_PENDING":
                            case 4:
                                message.actionState = 4;
                                break;
                            }
                            if (object.outputMessage != null)
                                message.outputMessage = String(object.outputMessage);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ActionOutput message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.ActionOutput
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ActionOutput} message ActionOutput
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ActionOutput.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.actionId = "";
                                object.actionState = options.enums === String ? "UNKNOWN" : 0;
                                object.outputMessage = "";
                            }
                            if (message.actionId != null && message.hasOwnProperty("actionId"))
                                object.actionId = message.actionId;
                            if (message.actionState != null && message.hasOwnProperty("actionState"))
                                object.actionState = options.enums === String ? $root.google.cloud.contentwarehouse.v1.ActionOutput.State[message.actionState] === undefined ? message.actionState : $root.google.cloud.contentwarehouse.v1.ActionOutput.State[message.actionState] : message.actionState;
                            if (message.outputMessage != null && message.hasOwnProperty("outputMessage"))
                                object.outputMessage = message.outputMessage;
                            return object;
                        };
    
                        /**
                         * Converts this ActionOutput to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.ActionOutput
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ActionOutput.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ActionOutput
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.ActionOutput
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ActionOutput.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.ActionOutput";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.contentwarehouse.v1.ActionOutput.State
                         * @enum {number}
                         * @property {number} UNKNOWN=0 UNKNOWN value
                         * @property {number} ACTION_SUCCEEDED=1 ACTION_SUCCEEDED value
                         * @property {number} ACTION_FAILED=2 ACTION_FAILED value
                         * @property {number} ACTION_TIMED_OUT=3 ACTION_TIMED_OUT value
                         * @property {number} ACTION_PENDING=4 ACTION_PENDING value
                         */
                        ActionOutput.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "UNKNOWN"] = 0;
                            values[valuesById[1] = "ACTION_SUCCEEDED"] = 1;
                            values[valuesById[2] = "ACTION_FAILED"] = 2;
                            values[valuesById[3] = "ACTION_TIMED_OUT"] = 3;
                            values[valuesById[4] = "ACTION_PENDING"] = 4;
                            return values;
                        })();
    
                        return ActionOutput;
                    })();
    
                    v1.RuleSetService = (function() {
    
                        /**
                         * Constructs a new RuleSetService service.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a RuleSetService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function RuleSetService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (RuleSetService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = RuleSetService;
    
                        /**
                         * Creates new RuleSetService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {RuleSetService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        RuleSetService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.RuleSetService|createRuleSet}.
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @typedef CreateRuleSetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.RuleSet} [response] RuleSet
                         */
    
                        /**
                         * Calls CreateRuleSet.
                         * @function createRuleSet
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.ICreateRuleSetRequest} request CreateRuleSetRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.RuleSetService.CreateRuleSetCallback} callback Node-style callback called with the error, if any, and RuleSet
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(RuleSetService.prototype.createRuleSet = function createRuleSet(request, callback) {
                            return this.rpcCall(createRuleSet, $root.google.cloud.contentwarehouse.v1.CreateRuleSetRequest, $root.google.cloud.contentwarehouse.v1.RuleSet, request, callback);
                        }, "name", { value: "CreateRuleSet" });
    
                        /**
                         * Calls CreateRuleSet.
                         * @function createRuleSet
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.ICreateRuleSetRequest} request CreateRuleSetRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.RuleSet>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.RuleSetService|getRuleSet}.
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @typedef GetRuleSetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.RuleSet} [response] RuleSet
                         */
    
                        /**
                         * Calls GetRuleSet.
                         * @function getRuleSet
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IGetRuleSetRequest} request GetRuleSetRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.RuleSetService.GetRuleSetCallback} callback Node-style callback called with the error, if any, and RuleSet
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(RuleSetService.prototype.getRuleSet = function getRuleSet(request, callback) {
                            return this.rpcCall(getRuleSet, $root.google.cloud.contentwarehouse.v1.GetRuleSetRequest, $root.google.cloud.contentwarehouse.v1.RuleSet, request, callback);
                        }, "name", { value: "GetRuleSet" });
    
                        /**
                         * Calls GetRuleSet.
                         * @function getRuleSet
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IGetRuleSetRequest} request GetRuleSetRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.RuleSet>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.RuleSetService|updateRuleSet}.
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @typedef UpdateRuleSetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.RuleSet} [response] RuleSet
                         */
    
                        /**
                         * Calls UpdateRuleSet.
                         * @function updateRuleSet
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IUpdateRuleSetRequest} request UpdateRuleSetRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.RuleSetService.UpdateRuleSetCallback} callback Node-style callback called with the error, if any, and RuleSet
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(RuleSetService.prototype.updateRuleSet = function updateRuleSet(request, callback) {
                            return this.rpcCall(updateRuleSet, $root.google.cloud.contentwarehouse.v1.UpdateRuleSetRequest, $root.google.cloud.contentwarehouse.v1.RuleSet, request, callback);
                        }, "name", { value: "UpdateRuleSet" });
    
                        /**
                         * Calls UpdateRuleSet.
                         * @function updateRuleSet
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IUpdateRuleSetRequest} request UpdateRuleSetRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.RuleSet>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.RuleSetService|deleteRuleSet}.
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @typedef DeleteRuleSetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteRuleSet.
                         * @function deleteRuleSet
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IDeleteRuleSetRequest} request DeleteRuleSetRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.RuleSetService.DeleteRuleSetCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(RuleSetService.prototype.deleteRuleSet = function deleteRuleSet(request, callback) {
                            return this.rpcCall(deleteRuleSet, $root.google.cloud.contentwarehouse.v1.DeleteRuleSetRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteRuleSet" });
    
                        /**
                         * Calls DeleteRuleSet.
                         * @function deleteRuleSet
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IDeleteRuleSetRequest} request DeleteRuleSetRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.RuleSetService|listRuleSets}.
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @typedef ListRuleSetsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.ListRuleSetsResponse} [response] ListRuleSetsResponse
                         */
    
                        /**
                         * Calls ListRuleSets.
                         * @function listRuleSets
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IListRuleSetsRequest} request ListRuleSetsRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.RuleSetService.ListRuleSetsCallback} callback Node-style callback called with the error, if any, and ListRuleSetsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(RuleSetService.prototype.listRuleSets = function listRuleSets(request, callback) {
                            return this.rpcCall(listRuleSets, $root.google.cloud.contentwarehouse.v1.ListRuleSetsRequest, $root.google.cloud.contentwarehouse.v1.ListRuleSetsResponse, request, callback);
                        }, "name", { value: "ListRuleSets" });
    
                        /**
                         * Calls ListRuleSets.
                         * @function listRuleSets
                         * @memberof google.cloud.contentwarehouse.v1.RuleSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IListRuleSetsRequest} request ListRuleSetsRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.ListRuleSetsResponse>} Promise
                         * @variation 2
                         */
    
                        return RuleSetService;
                    })();
    
                    v1.CreateRuleSetRequest = (function() {
    
                        /**
                         * Properties of a CreateRuleSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ICreateRuleSetRequest
                         * @property {string|null} [parent] CreateRuleSetRequest parent
                         * @property {google.cloud.contentwarehouse.v1.IRuleSet|null} [ruleSet] CreateRuleSetRequest ruleSet
                         */
    
                        /**
                         * Constructs a new CreateRuleSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a CreateRuleSetRequest.
                         * @implements ICreateRuleSetRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ICreateRuleSetRequest=} [properties] Properties to set
                         */
                        function CreateRuleSetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateRuleSetRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.contentwarehouse.v1.CreateRuleSetRequest
                         * @instance
                         */
                        CreateRuleSetRequest.prototype.parent = "";
    
                        /**
                         * CreateRuleSetRequest ruleSet.
                         * @member {google.cloud.contentwarehouse.v1.IRuleSet|null|undefined} ruleSet
                         * @memberof google.cloud.contentwarehouse.v1.CreateRuleSetRequest
                         * @instance
                         */
                        CreateRuleSetRequest.prototype.ruleSet = null;
    
                        /**
                         * Creates a new CreateRuleSetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.CreateRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateRuleSetRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.CreateRuleSetRequest} CreateRuleSetRequest instance
                         */
                        CreateRuleSetRequest.create = function create(properties) {
                            return new CreateRuleSetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateRuleSetRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.CreateRuleSetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.CreateRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateRuleSetRequest} message CreateRuleSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRuleSetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.ruleSet != null && Object.hasOwnProperty.call(message, "ruleSet"))
                                $root.google.cloud.contentwarehouse.v1.RuleSet.encode(message.ruleSet, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateRuleSetRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.CreateRuleSetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CreateRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateRuleSetRequest} message CreateRuleSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateRuleSetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateRuleSetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.CreateRuleSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.CreateRuleSetRequest} CreateRuleSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRuleSetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.CreateRuleSetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.ruleSet = $root.google.cloud.contentwarehouse.v1.RuleSet.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateRuleSetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CreateRuleSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.CreateRuleSetRequest} CreateRuleSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateRuleSetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateRuleSetRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.CreateRuleSetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateRuleSetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.ruleSet != null && message.hasOwnProperty("ruleSet")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RuleSet.verify(message.ruleSet);
                                if (error)
                                    return "ruleSet." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateRuleSetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.CreateRuleSetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.CreateRuleSetRequest} CreateRuleSetRequest
                         */
                        CreateRuleSetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.CreateRuleSetRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.CreateRuleSetRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.ruleSet != null) {
                                if (typeof object.ruleSet !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.CreateRuleSetRequest.ruleSet: object expected");
                                message.ruleSet = $root.google.cloud.contentwarehouse.v1.RuleSet.fromObject(object.ruleSet);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateRuleSetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.CreateRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.CreateRuleSetRequest} message CreateRuleSetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateRuleSetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.ruleSet = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.ruleSet != null && message.hasOwnProperty("ruleSet"))
                                object.ruleSet = $root.google.cloud.contentwarehouse.v1.RuleSet.toObject(message.ruleSet, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateRuleSetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.CreateRuleSetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateRuleSetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateRuleSetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.CreateRuleSetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateRuleSetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.CreateRuleSetRequest";
                        };
    
                        return CreateRuleSetRequest;
                    })();
    
                    v1.GetRuleSetRequest = (function() {
    
                        /**
                         * Properties of a GetRuleSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IGetRuleSetRequest
                         * @property {string|null} [name] GetRuleSetRequest name
                         */
    
                        /**
                         * Constructs a new GetRuleSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a GetRuleSetRequest.
                         * @implements IGetRuleSetRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IGetRuleSetRequest=} [properties] Properties to set
                         */
                        function GetRuleSetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetRuleSetRequest name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.GetRuleSetRequest
                         * @instance
                         */
                        GetRuleSetRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetRuleSetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.GetRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IGetRuleSetRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.GetRuleSetRequest} GetRuleSetRequest instance
                         */
                        GetRuleSetRequest.create = function create(properties) {
                            return new GetRuleSetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetRuleSetRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.GetRuleSetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.GetRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IGetRuleSetRequest} message GetRuleSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRuleSetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetRuleSetRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.GetRuleSetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.GetRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IGetRuleSetRequest} message GetRuleSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetRuleSetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetRuleSetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.GetRuleSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.GetRuleSetRequest} GetRuleSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRuleSetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.GetRuleSetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetRuleSetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.GetRuleSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.GetRuleSetRequest} GetRuleSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetRuleSetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetRuleSetRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.GetRuleSetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetRuleSetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetRuleSetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.GetRuleSetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.GetRuleSetRequest} GetRuleSetRequest
                         */
                        GetRuleSetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.GetRuleSetRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.GetRuleSetRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetRuleSetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.GetRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.GetRuleSetRequest} message GetRuleSetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetRuleSetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetRuleSetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.GetRuleSetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetRuleSetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetRuleSetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.GetRuleSetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetRuleSetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.GetRuleSetRequest";
                        };
    
                        return GetRuleSetRequest;
                    })();
    
                    v1.UpdateRuleSetRequest = (function() {
    
                        /**
                         * Properties of an UpdateRuleSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IUpdateRuleSetRequest
                         * @property {string|null} [name] UpdateRuleSetRequest name
                         * @property {google.cloud.contentwarehouse.v1.IRuleSet|null} [ruleSet] UpdateRuleSetRequest ruleSet
                         */
    
                        /**
                         * Constructs a new UpdateRuleSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an UpdateRuleSetRequest.
                         * @implements IUpdateRuleSetRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IUpdateRuleSetRequest=} [properties] Properties to set
                         */
                        function UpdateRuleSetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateRuleSetRequest name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.UpdateRuleSetRequest
                         * @instance
                         */
                        UpdateRuleSetRequest.prototype.name = "";
    
                        /**
                         * UpdateRuleSetRequest ruleSet.
                         * @member {google.cloud.contentwarehouse.v1.IRuleSet|null|undefined} ruleSet
                         * @memberof google.cloud.contentwarehouse.v1.UpdateRuleSetRequest
                         * @instance
                         */
                        UpdateRuleSetRequest.prototype.ruleSet = null;
    
                        /**
                         * Creates a new UpdateRuleSetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.UpdateRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateRuleSetRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.UpdateRuleSetRequest} UpdateRuleSetRequest instance
                         */
                        UpdateRuleSetRequest.create = function create(properties) {
                            return new UpdateRuleSetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateRuleSetRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.UpdateRuleSetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.UpdateRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateRuleSetRequest} message UpdateRuleSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRuleSetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.ruleSet != null && Object.hasOwnProperty.call(message, "ruleSet"))
                                $root.google.cloud.contentwarehouse.v1.RuleSet.encode(message.ruleSet, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateRuleSetRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.UpdateRuleSetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UpdateRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateRuleSetRequest} message UpdateRuleSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateRuleSetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateRuleSetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.UpdateRuleSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.UpdateRuleSetRequest} UpdateRuleSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRuleSetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.UpdateRuleSetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.ruleSet = $root.google.cloud.contentwarehouse.v1.RuleSet.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateRuleSetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UpdateRuleSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.UpdateRuleSetRequest} UpdateRuleSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateRuleSetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateRuleSetRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.UpdateRuleSetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateRuleSetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.ruleSet != null && message.hasOwnProperty("ruleSet")) {
                                var error = $root.google.cloud.contentwarehouse.v1.RuleSet.verify(message.ruleSet);
                                if (error)
                                    return "ruleSet." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateRuleSetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.UpdateRuleSetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.UpdateRuleSetRequest} UpdateRuleSetRequest
                         */
                        UpdateRuleSetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.UpdateRuleSetRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.UpdateRuleSetRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.ruleSet != null) {
                                if (typeof object.ruleSet !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.UpdateRuleSetRequest.ruleSet: object expected");
                                message.ruleSet = $root.google.cloud.contentwarehouse.v1.RuleSet.fromObject(object.ruleSet);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateRuleSetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.UpdateRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.UpdateRuleSetRequest} message UpdateRuleSetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateRuleSetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.ruleSet = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.ruleSet != null && message.hasOwnProperty("ruleSet"))
                                object.ruleSet = $root.google.cloud.contentwarehouse.v1.RuleSet.toObject(message.ruleSet, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateRuleSetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.UpdateRuleSetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateRuleSetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateRuleSetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.UpdateRuleSetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateRuleSetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.UpdateRuleSetRequest";
                        };
    
                        return UpdateRuleSetRequest;
                    })();
    
                    v1.DeleteRuleSetRequest = (function() {
    
                        /**
                         * Properties of a DeleteRuleSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IDeleteRuleSetRequest
                         * @property {string|null} [name] DeleteRuleSetRequest name
                         */
    
                        /**
                         * Constructs a new DeleteRuleSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DeleteRuleSetRequest.
                         * @implements IDeleteRuleSetRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IDeleteRuleSetRequest=} [properties] Properties to set
                         */
                        function DeleteRuleSetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteRuleSetRequest name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.DeleteRuleSetRequest
                         * @instance
                         */
                        DeleteRuleSetRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteRuleSetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DeleteRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteRuleSetRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.DeleteRuleSetRequest} DeleteRuleSetRequest instance
                         */
                        DeleteRuleSetRequest.create = function create(properties) {
                            return new DeleteRuleSetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteRuleSetRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.DeleteRuleSetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.DeleteRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteRuleSetRequest} message DeleteRuleSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRuleSetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteRuleSetRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.DeleteRuleSetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DeleteRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteRuleSetRequest} message DeleteRuleSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteRuleSetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteRuleSetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.DeleteRuleSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.DeleteRuleSetRequest} DeleteRuleSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRuleSetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.DeleteRuleSetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteRuleSetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DeleteRuleSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.DeleteRuleSetRequest} DeleteRuleSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteRuleSetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteRuleSetRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.DeleteRuleSetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteRuleSetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteRuleSetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.DeleteRuleSetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.DeleteRuleSetRequest} DeleteRuleSetRequest
                         */
                        DeleteRuleSetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.DeleteRuleSetRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.DeleteRuleSetRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteRuleSetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.DeleteRuleSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.DeleteRuleSetRequest} message DeleteRuleSetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteRuleSetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteRuleSetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.DeleteRuleSetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteRuleSetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteRuleSetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.DeleteRuleSetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteRuleSetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.DeleteRuleSetRequest";
                        };
    
                        return DeleteRuleSetRequest;
                    })();
    
                    v1.ListRuleSetsRequest = (function() {
    
                        /**
                         * Properties of a ListRuleSetsRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IListRuleSetsRequest
                         * @property {string|null} [parent] ListRuleSetsRequest parent
                         * @property {number|null} [pageSize] ListRuleSetsRequest pageSize
                         * @property {string|null} [pageToken] ListRuleSetsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListRuleSetsRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a ListRuleSetsRequest.
                         * @implements IListRuleSetsRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IListRuleSetsRequest=} [properties] Properties to set
                         */
                        function ListRuleSetsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRuleSetsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsRequest
                         * @instance
                         */
                        ListRuleSetsRequest.prototype.parent = "";
    
                        /**
                         * ListRuleSetsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsRequest
                         * @instance
                         */
                        ListRuleSetsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListRuleSetsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsRequest
                         * @instance
                         */
                        ListRuleSetsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListRuleSetsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListRuleSetsRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.ListRuleSetsRequest} ListRuleSetsRequest instance
                         */
                        ListRuleSetsRequest.create = function create(properties) {
                            return new ListRuleSetsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListRuleSetsRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListRuleSetsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListRuleSetsRequest} message ListRuleSetsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuleSetsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRuleSetsRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListRuleSetsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListRuleSetsRequest} message ListRuleSetsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuleSetsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRuleSetsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.ListRuleSetsRequest} ListRuleSetsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuleSetsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.ListRuleSetsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRuleSetsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.ListRuleSetsRequest} ListRuleSetsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuleSetsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRuleSetsRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRuleSetsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRuleSetsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.ListRuleSetsRequest} ListRuleSetsRequest
                         */
                        ListRuleSetsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.ListRuleSetsRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.ListRuleSetsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRuleSetsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ListRuleSetsRequest} message ListRuleSetsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRuleSetsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListRuleSetsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRuleSetsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRuleSetsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRuleSetsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.ListRuleSetsRequest";
                        };
    
                        return ListRuleSetsRequest;
                    })();
    
                    v1.ListRuleSetsResponse = (function() {
    
                        /**
                         * Properties of a ListRuleSetsResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IListRuleSetsResponse
                         * @property {Array.<google.cloud.contentwarehouse.v1.IRuleSet>|null} [ruleSets] ListRuleSetsResponse ruleSets
                         * @property {string|null} [nextPageToken] ListRuleSetsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListRuleSetsResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a ListRuleSetsResponse.
                         * @implements IListRuleSetsResponse
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IListRuleSetsResponse=} [properties] Properties to set
                         */
                        function ListRuleSetsResponse(properties) {
                            this.ruleSets = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRuleSetsResponse ruleSets.
                         * @member {Array.<google.cloud.contentwarehouse.v1.IRuleSet>} ruleSets
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsResponse
                         * @instance
                         */
                        ListRuleSetsResponse.prototype.ruleSets = $util.emptyArray;
    
                        /**
                         * ListRuleSetsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsResponse
                         * @instance
                         */
                        ListRuleSetsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListRuleSetsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListRuleSetsResponse=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.ListRuleSetsResponse} ListRuleSetsResponse instance
                         */
                        ListRuleSetsResponse.create = function create(properties) {
                            return new ListRuleSetsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListRuleSetsResponse message. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListRuleSetsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListRuleSetsResponse} message ListRuleSetsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuleSetsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.ruleSets != null && message.ruleSets.length)
                                for (var i = 0; i < message.ruleSets.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.RuleSet.encode(message.ruleSets[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRuleSetsResponse message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListRuleSetsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListRuleSetsResponse} message ListRuleSetsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuleSetsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRuleSetsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.ListRuleSetsResponse} ListRuleSetsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuleSetsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.ListRuleSetsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.ruleSets && message.ruleSets.length))
                                            message.ruleSets = [];
                                        message.ruleSets.push($root.google.cloud.contentwarehouse.v1.RuleSet.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRuleSetsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.ListRuleSetsResponse} ListRuleSetsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuleSetsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRuleSetsResponse message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRuleSetsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.ruleSets != null && message.hasOwnProperty("ruleSets")) {
                                if (!Array.isArray(message.ruleSets))
                                    return "ruleSets: array expected";
                                for (var i = 0; i < message.ruleSets.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.RuleSet.verify(message.ruleSets[i]);
                                    if (error)
                                        return "ruleSets." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRuleSetsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.ListRuleSetsResponse} ListRuleSetsResponse
                         */
                        ListRuleSetsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.ListRuleSetsResponse)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.ListRuleSetsResponse();
                            if (object.ruleSets) {
                                if (!Array.isArray(object.ruleSets))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.ListRuleSetsResponse.ruleSets: array expected");
                                message.ruleSets = [];
                                for (var i = 0; i < object.ruleSets.length; ++i) {
                                    if (typeof object.ruleSets[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.ListRuleSetsResponse.ruleSets: object expected");
                                    message.ruleSets[i] = $root.google.cloud.contentwarehouse.v1.RuleSet.fromObject(object.ruleSets[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRuleSetsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ListRuleSetsResponse} message ListRuleSetsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRuleSetsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.ruleSets = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.ruleSets && message.ruleSets.length) {
                                object.ruleSets = [];
                                for (var j = 0; j < message.ruleSets.length; ++j)
                                    object.ruleSets[j] = $root.google.cloud.contentwarehouse.v1.RuleSet.toObject(message.ruleSets[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListRuleSetsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRuleSetsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRuleSetsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.ListRuleSetsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRuleSetsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.ListRuleSetsResponse";
                        };
    
                        return ListRuleSetsResponse;
                    })();
    
                    v1.SynonymSet = (function() {
    
                        /**
                         * Properties of a SynonymSet.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ISynonymSet
                         * @property {string|null} [name] SynonymSet name
                         * @property {string|null} [context] SynonymSet context
                         * @property {Array.<google.cloud.contentwarehouse.v1.SynonymSet.ISynonym>|null} [synonyms] SynonymSet synonyms
                         */
    
                        /**
                         * Constructs a new SynonymSet.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a SynonymSet.
                         * @implements ISynonymSet
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ISynonymSet=} [properties] Properties to set
                         */
                        function SynonymSet(properties) {
                            this.synonyms = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SynonymSet name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSet
                         * @instance
                         */
                        SynonymSet.prototype.name = "";
    
                        /**
                         * SynonymSet context.
                         * @member {string} context
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSet
                         * @instance
                         */
                        SynonymSet.prototype.context = "";
    
                        /**
                         * SynonymSet synonyms.
                         * @member {Array.<google.cloud.contentwarehouse.v1.SynonymSet.ISynonym>} synonyms
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSet
                         * @instance
                         */
                        SynonymSet.prototype.synonyms = $util.emptyArray;
    
                        /**
                         * Creates a new SynonymSet instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSet
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ISynonymSet=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.SynonymSet} SynonymSet instance
                         */
                        SynonymSet.create = function create(properties) {
                            return new SynonymSet(properties);
                        };
    
                        /**
                         * Encodes the specified SynonymSet message. Does not implicitly {@link google.cloud.contentwarehouse.v1.SynonymSet.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSet
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ISynonymSet} message SynonymSet message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SynonymSet.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.context != null && Object.hasOwnProperty.call(message, "context"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.context);
                            if (message.synonyms != null && message.synonyms.length)
                                for (var i = 0; i < message.synonyms.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.SynonymSet.Synonym.encode(message.synonyms[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SynonymSet message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.SynonymSet.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSet
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ISynonymSet} message SynonymSet message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SynonymSet.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SynonymSet message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSet
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.SynonymSet} SynonymSet
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SynonymSet.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.SynonymSet();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.context = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.synonyms && message.synonyms.length))
                                            message.synonyms = [];
                                        message.synonyms.push($root.google.cloud.contentwarehouse.v1.SynonymSet.Synonym.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SynonymSet message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSet
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.SynonymSet} SynonymSet
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SynonymSet.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SynonymSet message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSet
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SynonymSet.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.context != null && message.hasOwnProperty("context"))
                                if (!$util.isString(message.context))
                                    return "context: string expected";
                            if (message.synonyms != null && message.hasOwnProperty("synonyms")) {
                                if (!Array.isArray(message.synonyms))
                                    return "synonyms: array expected";
                                for (var i = 0; i < message.synonyms.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.SynonymSet.Synonym.verify(message.synonyms[i]);
                                    if (error)
                                        return "synonyms." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SynonymSet message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSet
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.SynonymSet} SynonymSet
                         */
                        SynonymSet.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.SynonymSet)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.SynonymSet();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.context != null)
                                message.context = String(object.context);
                            if (object.synonyms) {
                                if (!Array.isArray(object.synonyms))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.SynonymSet.synonyms: array expected");
                                message.synonyms = [];
                                for (var i = 0; i < object.synonyms.length; ++i) {
                                    if (typeof object.synonyms[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.SynonymSet.synonyms: object expected");
                                    message.synonyms[i] = $root.google.cloud.contentwarehouse.v1.SynonymSet.Synonym.fromObject(object.synonyms[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SynonymSet message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSet
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.SynonymSet} message SynonymSet
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SynonymSet.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.synonyms = [];
                            if (options.defaults) {
                                object.name = "";
                                object.context = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.context != null && message.hasOwnProperty("context"))
                                object.context = message.context;
                            if (message.synonyms && message.synonyms.length) {
                                object.synonyms = [];
                                for (var j = 0; j < message.synonyms.length; ++j)
                                    object.synonyms[j] = $root.google.cloud.contentwarehouse.v1.SynonymSet.Synonym.toObject(message.synonyms[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SynonymSet to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSet
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SynonymSet.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SynonymSet
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSet
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SynonymSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.SynonymSet";
                        };
    
                        SynonymSet.Synonym = (function() {
    
                            /**
                             * Properties of a Synonym.
                             * @memberof google.cloud.contentwarehouse.v1.SynonymSet
                             * @interface ISynonym
                             * @property {Array.<string>|null} [words] Synonym words
                             */
    
                            /**
                             * Constructs a new Synonym.
                             * @memberof google.cloud.contentwarehouse.v1.SynonymSet
                             * @classdesc Represents a Synonym.
                             * @implements ISynonym
                             * @constructor
                             * @param {google.cloud.contentwarehouse.v1.SynonymSet.ISynonym=} [properties] Properties to set
                             */
                            function Synonym(properties) {
                                this.words = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Synonym words.
                             * @member {Array.<string>} words
                             * @memberof google.cloud.contentwarehouse.v1.SynonymSet.Synonym
                             * @instance
                             */
                            Synonym.prototype.words = $util.emptyArray;
    
                            /**
                             * Creates a new Synonym instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.contentwarehouse.v1.SynonymSet.Synonym
                             * @static
                             * @param {google.cloud.contentwarehouse.v1.SynonymSet.ISynonym=} [properties] Properties to set
                             * @returns {google.cloud.contentwarehouse.v1.SynonymSet.Synonym} Synonym instance
                             */
                            Synonym.create = function create(properties) {
                                return new Synonym(properties);
                            };
    
                            /**
                             * Encodes the specified Synonym message. Does not implicitly {@link google.cloud.contentwarehouse.v1.SynonymSet.Synonym.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.contentwarehouse.v1.SynonymSet.Synonym
                             * @static
                             * @param {google.cloud.contentwarehouse.v1.SynonymSet.ISynonym} message Synonym message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Synonym.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.words != null && message.words.length)
                                    for (var i = 0; i < message.words.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.words[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Synonym message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.SynonymSet.Synonym.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.contentwarehouse.v1.SynonymSet.Synonym
                             * @static
                             * @param {google.cloud.contentwarehouse.v1.SynonymSet.ISynonym} message Synonym message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Synonym.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Synonym message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.contentwarehouse.v1.SynonymSet.Synonym
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.contentwarehouse.v1.SynonymSet.Synonym} Synonym
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Synonym.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.SynonymSet.Synonym();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.words && message.words.length))
                                                message.words = [];
                                            message.words.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Synonym message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.contentwarehouse.v1.SynonymSet.Synonym
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.contentwarehouse.v1.SynonymSet.Synonym} Synonym
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Synonym.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Synonym message.
                             * @function verify
                             * @memberof google.cloud.contentwarehouse.v1.SynonymSet.Synonym
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Synonym.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.words != null && message.hasOwnProperty("words")) {
                                    if (!Array.isArray(message.words))
                                        return "words: array expected";
                                    for (var i = 0; i < message.words.length; ++i)
                                        if (!$util.isString(message.words[i]))
                                            return "words: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a Synonym message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.contentwarehouse.v1.SynonymSet.Synonym
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.contentwarehouse.v1.SynonymSet.Synonym} Synonym
                             */
                            Synonym.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.contentwarehouse.v1.SynonymSet.Synonym)
                                    return object;
                                var message = new $root.google.cloud.contentwarehouse.v1.SynonymSet.Synonym();
                                if (object.words) {
                                    if (!Array.isArray(object.words))
                                        throw TypeError(".google.cloud.contentwarehouse.v1.SynonymSet.Synonym.words: array expected");
                                    message.words = [];
                                    for (var i = 0; i < object.words.length; ++i)
                                        message.words[i] = String(object.words[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Synonym message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.contentwarehouse.v1.SynonymSet.Synonym
                             * @static
                             * @param {google.cloud.contentwarehouse.v1.SynonymSet.Synonym} message Synonym
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Synonym.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.words = [];
                                if (message.words && message.words.length) {
                                    object.words = [];
                                    for (var j = 0; j < message.words.length; ++j)
                                        object.words[j] = message.words[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this Synonym to JSON.
                             * @function toJSON
                             * @memberof google.cloud.contentwarehouse.v1.SynonymSet.Synonym
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Synonym.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Synonym
                             * @function getTypeUrl
                             * @memberof google.cloud.contentwarehouse.v1.SynonymSet.Synonym
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Synonym.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.SynonymSet.Synonym";
                            };
    
                            return Synonym;
                        })();
    
                        return SynonymSet;
                    })();
    
                    v1.SynonymSetService = (function() {
    
                        /**
                         * Constructs a new SynonymSetService service.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a SynonymSetService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function SynonymSetService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (SynonymSetService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = SynonymSetService;
    
                        /**
                         * Creates new SynonymSetService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {SynonymSetService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        SynonymSetService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.SynonymSetService|createSynonymSet}.
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @typedef CreateSynonymSetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.SynonymSet} [response] SynonymSet
                         */
    
                        /**
                         * Calls CreateSynonymSet.
                         * @function createSynonymSet
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.ICreateSynonymSetRequest} request CreateSynonymSetRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.SynonymSetService.CreateSynonymSetCallback} callback Node-style callback called with the error, if any, and SynonymSet
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SynonymSetService.prototype.createSynonymSet = function createSynonymSet(request, callback) {
                            return this.rpcCall(createSynonymSet, $root.google.cloud.contentwarehouse.v1.CreateSynonymSetRequest, $root.google.cloud.contentwarehouse.v1.SynonymSet, request, callback);
                        }, "name", { value: "CreateSynonymSet" });
    
                        /**
                         * Calls CreateSynonymSet.
                         * @function createSynonymSet
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.ICreateSynonymSetRequest} request CreateSynonymSetRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.SynonymSet>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.SynonymSetService|getSynonymSet}.
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @typedef GetSynonymSetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.SynonymSet} [response] SynonymSet
                         */
    
                        /**
                         * Calls GetSynonymSet.
                         * @function getSynonymSet
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IGetSynonymSetRequest} request GetSynonymSetRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.SynonymSetService.GetSynonymSetCallback} callback Node-style callback called with the error, if any, and SynonymSet
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SynonymSetService.prototype.getSynonymSet = function getSynonymSet(request, callback) {
                            return this.rpcCall(getSynonymSet, $root.google.cloud.contentwarehouse.v1.GetSynonymSetRequest, $root.google.cloud.contentwarehouse.v1.SynonymSet, request, callback);
                        }, "name", { value: "GetSynonymSet" });
    
                        /**
                         * Calls GetSynonymSet.
                         * @function getSynonymSet
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IGetSynonymSetRequest} request GetSynonymSetRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.SynonymSet>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.SynonymSetService|updateSynonymSet}.
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @typedef UpdateSynonymSetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.SynonymSet} [response] SynonymSet
                         */
    
                        /**
                         * Calls UpdateSynonymSet.
                         * @function updateSynonymSet
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IUpdateSynonymSetRequest} request UpdateSynonymSetRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.SynonymSetService.UpdateSynonymSetCallback} callback Node-style callback called with the error, if any, and SynonymSet
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SynonymSetService.prototype.updateSynonymSet = function updateSynonymSet(request, callback) {
                            return this.rpcCall(updateSynonymSet, $root.google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest, $root.google.cloud.contentwarehouse.v1.SynonymSet, request, callback);
                        }, "name", { value: "UpdateSynonymSet" });
    
                        /**
                         * Calls UpdateSynonymSet.
                         * @function updateSynonymSet
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IUpdateSynonymSetRequest} request UpdateSynonymSetRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.SynonymSet>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.SynonymSetService|deleteSynonymSet}.
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @typedef DeleteSynonymSetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteSynonymSet.
                         * @function deleteSynonymSet
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IDeleteSynonymSetRequest} request DeleteSynonymSetRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.SynonymSetService.DeleteSynonymSetCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SynonymSetService.prototype.deleteSynonymSet = function deleteSynonymSet(request, callback) {
                            return this.rpcCall(deleteSynonymSet, $root.google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteSynonymSet" });
    
                        /**
                         * Calls DeleteSynonymSet.
                         * @function deleteSynonymSet
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IDeleteSynonymSetRequest} request DeleteSynonymSetRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.contentwarehouse.v1.SynonymSetService|listSynonymSets}.
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @typedef ListSynonymSetsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.contentwarehouse.v1.ListSynonymSetsResponse} [response] ListSynonymSetsResponse
                         */
    
                        /**
                         * Calls ListSynonymSets.
                         * @function listSynonymSets
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IListSynonymSetsRequest} request ListSynonymSetsRequest message or plain object
                         * @param {google.cloud.contentwarehouse.v1.SynonymSetService.ListSynonymSetsCallback} callback Node-style callback called with the error, if any, and ListSynonymSetsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SynonymSetService.prototype.listSynonymSets = function listSynonymSets(request, callback) {
                            return this.rpcCall(listSynonymSets, $root.google.cloud.contentwarehouse.v1.ListSynonymSetsRequest, $root.google.cloud.contentwarehouse.v1.ListSynonymSetsResponse, request, callback);
                        }, "name", { value: "ListSynonymSets" });
    
                        /**
                         * Calls ListSynonymSets.
                         * @function listSynonymSets
                         * @memberof google.cloud.contentwarehouse.v1.SynonymSetService
                         * @instance
                         * @param {google.cloud.contentwarehouse.v1.IListSynonymSetsRequest} request ListSynonymSetsRequest message or plain object
                         * @returns {Promise<google.cloud.contentwarehouse.v1.ListSynonymSetsResponse>} Promise
                         * @variation 2
                         */
    
                        return SynonymSetService;
                    })();
    
                    v1.CreateSynonymSetRequest = (function() {
    
                        /**
                         * Properties of a CreateSynonymSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface ICreateSynonymSetRequest
                         * @property {string|null} [parent] CreateSynonymSetRequest parent
                         * @property {google.cloud.contentwarehouse.v1.ISynonymSet|null} [synonymSet] CreateSynonymSetRequest synonymSet
                         */
    
                        /**
                         * Constructs a new CreateSynonymSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a CreateSynonymSetRequest.
                         * @implements ICreateSynonymSetRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.ICreateSynonymSetRequest=} [properties] Properties to set
                         */
                        function CreateSynonymSetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateSynonymSetRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.contentwarehouse.v1.CreateSynonymSetRequest
                         * @instance
                         */
                        CreateSynonymSetRequest.prototype.parent = "";
    
                        /**
                         * CreateSynonymSetRequest synonymSet.
                         * @member {google.cloud.contentwarehouse.v1.ISynonymSet|null|undefined} synonymSet
                         * @memberof google.cloud.contentwarehouse.v1.CreateSynonymSetRequest
                         * @instance
                         */
                        CreateSynonymSetRequest.prototype.synonymSet = null;
    
                        /**
                         * Creates a new CreateSynonymSetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.CreateSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateSynonymSetRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.CreateSynonymSetRequest} CreateSynonymSetRequest instance
                         */
                        CreateSynonymSetRequest.create = function create(properties) {
                            return new CreateSynonymSetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateSynonymSetRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.CreateSynonymSetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.CreateSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateSynonymSetRequest} message CreateSynonymSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateSynonymSetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.synonymSet != null && Object.hasOwnProperty.call(message, "synonymSet"))
                                $root.google.cloud.contentwarehouse.v1.SynonymSet.encode(message.synonymSet, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateSynonymSetRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.CreateSynonymSetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CreateSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ICreateSynonymSetRequest} message CreateSynonymSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateSynonymSetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateSynonymSetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.CreateSynonymSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.CreateSynonymSetRequest} CreateSynonymSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateSynonymSetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.CreateSynonymSetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.synonymSet = $root.google.cloud.contentwarehouse.v1.SynonymSet.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateSynonymSetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.CreateSynonymSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.CreateSynonymSetRequest} CreateSynonymSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateSynonymSetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateSynonymSetRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.CreateSynonymSetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateSynonymSetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.synonymSet != null && message.hasOwnProperty("synonymSet")) {
                                var error = $root.google.cloud.contentwarehouse.v1.SynonymSet.verify(message.synonymSet);
                                if (error)
                                    return "synonymSet." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateSynonymSetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.CreateSynonymSetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.CreateSynonymSetRequest} CreateSynonymSetRequest
                         */
                        CreateSynonymSetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.CreateSynonymSetRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.CreateSynonymSetRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.synonymSet != null) {
                                if (typeof object.synonymSet !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.CreateSynonymSetRequest.synonymSet: object expected");
                                message.synonymSet = $root.google.cloud.contentwarehouse.v1.SynonymSet.fromObject(object.synonymSet);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateSynonymSetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.CreateSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.CreateSynonymSetRequest} message CreateSynonymSetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateSynonymSetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.synonymSet = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.synonymSet != null && message.hasOwnProperty("synonymSet"))
                                object.synonymSet = $root.google.cloud.contentwarehouse.v1.SynonymSet.toObject(message.synonymSet, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateSynonymSetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.CreateSynonymSetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateSynonymSetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateSynonymSetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.CreateSynonymSetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateSynonymSetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.CreateSynonymSetRequest";
                        };
    
                        return CreateSynonymSetRequest;
                    })();
    
                    v1.GetSynonymSetRequest = (function() {
    
                        /**
                         * Properties of a GetSynonymSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IGetSynonymSetRequest
                         * @property {string|null} [name] GetSynonymSetRequest name
                         */
    
                        /**
                         * Constructs a new GetSynonymSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a GetSynonymSetRequest.
                         * @implements IGetSynonymSetRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IGetSynonymSetRequest=} [properties] Properties to set
                         */
                        function GetSynonymSetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetSynonymSetRequest name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.GetSynonymSetRequest
                         * @instance
                         */
                        GetSynonymSetRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetSynonymSetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.GetSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IGetSynonymSetRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.GetSynonymSetRequest} GetSynonymSetRequest instance
                         */
                        GetSynonymSetRequest.create = function create(properties) {
                            return new GetSynonymSetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetSynonymSetRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.GetSynonymSetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.GetSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IGetSynonymSetRequest} message GetSynonymSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetSynonymSetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetSynonymSetRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.GetSynonymSetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.GetSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IGetSynonymSetRequest} message GetSynonymSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetSynonymSetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetSynonymSetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.GetSynonymSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.GetSynonymSetRequest} GetSynonymSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetSynonymSetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.GetSynonymSetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetSynonymSetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.GetSynonymSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.GetSynonymSetRequest} GetSynonymSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetSynonymSetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetSynonymSetRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.GetSynonymSetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetSynonymSetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetSynonymSetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.GetSynonymSetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.GetSynonymSetRequest} GetSynonymSetRequest
                         */
                        GetSynonymSetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.GetSynonymSetRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.GetSynonymSetRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetSynonymSetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.GetSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.GetSynonymSetRequest} message GetSynonymSetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetSynonymSetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetSynonymSetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.GetSynonymSetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetSynonymSetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetSynonymSetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.GetSynonymSetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetSynonymSetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.GetSynonymSetRequest";
                        };
    
                        return GetSynonymSetRequest;
                    })();
    
                    v1.ListSynonymSetsRequest = (function() {
    
                        /**
                         * Properties of a ListSynonymSetsRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IListSynonymSetsRequest
                         * @property {string|null} [parent] ListSynonymSetsRequest parent
                         * @property {number|null} [pageSize] ListSynonymSetsRequest pageSize
                         * @property {string|null} [pageToken] ListSynonymSetsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListSynonymSetsRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a ListSynonymSetsRequest.
                         * @implements IListSynonymSetsRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IListSynonymSetsRequest=} [properties] Properties to set
                         */
                        function ListSynonymSetsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSynonymSetsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsRequest
                         * @instance
                         */
                        ListSynonymSetsRequest.prototype.parent = "";
    
                        /**
                         * ListSynonymSetsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsRequest
                         * @instance
                         */
                        ListSynonymSetsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListSynonymSetsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsRequest
                         * @instance
                         */
                        ListSynonymSetsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListSynonymSetsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListSynonymSetsRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.ListSynonymSetsRequest} ListSynonymSetsRequest instance
                         */
                        ListSynonymSetsRequest.create = function create(properties) {
                            return new ListSynonymSetsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListSynonymSetsRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListSynonymSetsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListSynonymSetsRequest} message ListSynonymSetsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSynonymSetsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSynonymSetsRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListSynonymSetsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListSynonymSetsRequest} message ListSynonymSetsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSynonymSetsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSynonymSetsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.ListSynonymSetsRequest} ListSynonymSetsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSynonymSetsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.ListSynonymSetsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSynonymSetsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.ListSynonymSetsRequest} ListSynonymSetsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSynonymSetsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSynonymSetsRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSynonymSetsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListSynonymSetsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.ListSynonymSetsRequest} ListSynonymSetsRequest
                         */
                        ListSynonymSetsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.ListSynonymSetsRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.ListSynonymSetsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSynonymSetsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ListSynonymSetsRequest} message ListSynonymSetsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSynonymSetsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListSynonymSetsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSynonymSetsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListSynonymSetsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListSynonymSetsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.ListSynonymSetsRequest";
                        };
    
                        return ListSynonymSetsRequest;
                    })();
    
                    v1.ListSynonymSetsResponse = (function() {
    
                        /**
                         * Properties of a ListSynonymSetsResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IListSynonymSetsResponse
                         * @property {Array.<google.cloud.contentwarehouse.v1.ISynonymSet>|null} [synonymSets] ListSynonymSetsResponse synonymSets
                         * @property {string|null} [nextPageToken] ListSynonymSetsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListSynonymSetsResponse.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a ListSynonymSetsResponse.
                         * @implements IListSynonymSetsResponse
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IListSynonymSetsResponse=} [properties] Properties to set
                         */
                        function ListSynonymSetsResponse(properties) {
                            this.synonymSets = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSynonymSetsResponse synonymSets.
                         * @member {Array.<google.cloud.contentwarehouse.v1.ISynonymSet>} synonymSets
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsResponse
                         * @instance
                         */
                        ListSynonymSetsResponse.prototype.synonymSets = $util.emptyArray;
    
                        /**
                         * ListSynonymSetsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsResponse
                         * @instance
                         */
                        ListSynonymSetsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListSynonymSetsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListSynonymSetsResponse=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.ListSynonymSetsResponse} ListSynonymSetsResponse instance
                         */
                        ListSynonymSetsResponse.create = function create(properties) {
                            return new ListSynonymSetsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListSynonymSetsResponse message. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListSynonymSetsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListSynonymSetsResponse} message ListSynonymSetsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSynonymSetsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.synonymSets != null && message.synonymSets.length)
                                for (var i = 0; i < message.synonymSets.length; ++i)
                                    $root.google.cloud.contentwarehouse.v1.SynonymSet.encode(message.synonymSets[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSynonymSetsResponse message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.ListSynonymSetsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IListSynonymSetsResponse} message ListSynonymSetsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSynonymSetsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSynonymSetsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.ListSynonymSetsResponse} ListSynonymSetsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSynonymSetsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.ListSynonymSetsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.synonymSets && message.synonymSets.length))
                                            message.synonymSets = [];
                                        message.synonymSets.push($root.google.cloud.contentwarehouse.v1.SynonymSet.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSynonymSetsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.ListSynonymSetsResponse} ListSynonymSetsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSynonymSetsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSynonymSetsResponse message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSynonymSetsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.synonymSets != null && message.hasOwnProperty("synonymSets")) {
                                if (!Array.isArray(message.synonymSets))
                                    return "synonymSets: array expected";
                                for (var i = 0; i < message.synonymSets.length; ++i) {
                                    var error = $root.google.cloud.contentwarehouse.v1.SynonymSet.verify(message.synonymSets[i]);
                                    if (error)
                                        return "synonymSets." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListSynonymSetsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.ListSynonymSetsResponse} ListSynonymSetsResponse
                         */
                        ListSynonymSetsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.ListSynonymSetsResponse)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.ListSynonymSetsResponse();
                            if (object.synonymSets) {
                                if (!Array.isArray(object.synonymSets))
                                    throw TypeError(".google.cloud.contentwarehouse.v1.ListSynonymSetsResponse.synonymSets: array expected");
                                message.synonymSets = [];
                                for (var i = 0; i < object.synonymSets.length; ++i) {
                                    if (typeof object.synonymSets[i] !== "object")
                                        throw TypeError(".google.cloud.contentwarehouse.v1.ListSynonymSetsResponse.synonymSets: object expected");
                                    message.synonymSets[i] = $root.google.cloud.contentwarehouse.v1.SynonymSet.fromObject(object.synonymSets[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSynonymSetsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsResponse
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.ListSynonymSetsResponse} message ListSynonymSetsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSynonymSetsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.synonymSets = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.synonymSets && message.synonymSets.length) {
                                object.synonymSets = [];
                                for (var j = 0; j < message.synonymSets.length; ++j)
                                    object.synonymSets[j] = $root.google.cloud.contentwarehouse.v1.SynonymSet.toObject(message.synonymSets[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListSynonymSetsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSynonymSetsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListSynonymSetsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.ListSynonymSetsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListSynonymSetsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.ListSynonymSetsResponse";
                        };
    
                        return ListSynonymSetsResponse;
                    })();
    
                    v1.UpdateSynonymSetRequest = (function() {
    
                        /**
                         * Properties of an UpdateSynonymSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IUpdateSynonymSetRequest
                         * @property {string|null} [name] UpdateSynonymSetRequest name
                         * @property {google.cloud.contentwarehouse.v1.ISynonymSet|null} [synonymSet] UpdateSynonymSetRequest synonymSet
                         */
    
                        /**
                         * Constructs a new UpdateSynonymSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents an UpdateSynonymSetRequest.
                         * @implements IUpdateSynonymSetRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IUpdateSynonymSetRequest=} [properties] Properties to set
                         */
                        function UpdateSynonymSetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateSynonymSetRequest name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest
                         * @instance
                         */
                        UpdateSynonymSetRequest.prototype.name = "";
    
                        /**
                         * UpdateSynonymSetRequest synonymSet.
                         * @member {google.cloud.contentwarehouse.v1.ISynonymSet|null|undefined} synonymSet
                         * @memberof google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest
                         * @instance
                         */
                        UpdateSynonymSetRequest.prototype.synonymSet = null;
    
                        /**
                         * Creates a new UpdateSynonymSetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateSynonymSetRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest} UpdateSynonymSetRequest instance
                         */
                        UpdateSynonymSetRequest.create = function create(properties) {
                            return new UpdateSynonymSetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateSynonymSetRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateSynonymSetRequest} message UpdateSynonymSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSynonymSetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.synonymSet != null && Object.hasOwnProperty.call(message, "synonymSet"))
                                $root.google.cloud.contentwarehouse.v1.SynonymSet.encode(message.synonymSet, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateSynonymSetRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IUpdateSynonymSetRequest} message UpdateSynonymSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSynonymSetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateSynonymSetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest} UpdateSynonymSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSynonymSetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.synonymSet = $root.google.cloud.contentwarehouse.v1.SynonymSet.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateSynonymSetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest} UpdateSynonymSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSynonymSetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateSynonymSetRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateSynonymSetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.synonymSet != null && message.hasOwnProperty("synonymSet")) {
                                var error = $root.google.cloud.contentwarehouse.v1.SynonymSet.verify(message.synonymSet);
                                if (error)
                                    return "synonymSet." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateSynonymSetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest} UpdateSynonymSetRequest
                         */
                        UpdateSynonymSetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.synonymSet != null) {
                                if (typeof object.synonymSet !== "object")
                                    throw TypeError(".google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest.synonymSet: object expected");
                                message.synonymSet = $root.google.cloud.contentwarehouse.v1.SynonymSet.fromObject(object.synonymSet);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateSynonymSetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest} message UpdateSynonymSetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateSynonymSetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.synonymSet = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.synonymSet != null && message.hasOwnProperty("synonymSet"))
                                object.synonymSet = $root.google.cloud.contentwarehouse.v1.SynonymSet.toObject(message.synonymSet, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateSynonymSetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateSynonymSetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateSynonymSetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateSynonymSetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.UpdateSynonymSetRequest";
                        };
    
                        return UpdateSynonymSetRequest;
                    })();
    
                    v1.DeleteSynonymSetRequest = (function() {
    
                        /**
                         * Properties of a DeleteSynonymSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @interface IDeleteSynonymSetRequest
                         * @property {string|null} [name] DeleteSynonymSetRequest name
                         */
    
                        /**
                         * Constructs a new DeleteSynonymSetRequest.
                         * @memberof google.cloud.contentwarehouse.v1
                         * @classdesc Represents a DeleteSynonymSetRequest.
                         * @implements IDeleteSynonymSetRequest
                         * @constructor
                         * @param {google.cloud.contentwarehouse.v1.IDeleteSynonymSetRequest=} [properties] Properties to set
                         */
                        function DeleteSynonymSetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteSynonymSetRequest name.
                         * @member {string} name
                         * @memberof google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest
                         * @instance
                         */
                        DeleteSynonymSetRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteSynonymSetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteSynonymSetRequest=} [properties] Properties to set
                         * @returns {google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest} DeleteSynonymSetRequest instance
                         */
                        DeleteSynonymSetRequest.create = function create(properties) {
                            return new DeleteSynonymSetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteSynonymSetRequest message. Does not implicitly {@link google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteSynonymSetRequest} message DeleteSynonymSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteSynonymSetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteSynonymSetRequest message, length delimited. Does not implicitly {@link google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.IDeleteSynonymSetRequest} message DeleteSynonymSetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteSynonymSetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteSynonymSetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest} DeleteSynonymSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteSynonymSetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteSynonymSetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest} DeleteSynonymSetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteSynonymSetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteSynonymSetRequest message.
                         * @function verify
                         * @memberof google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteSynonymSetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteSynonymSetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest} DeleteSynonymSetRequest
                         */
                        DeleteSynonymSetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest)
                                return object;
                            var message = new $root.google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteSynonymSetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest
                         * @static
                         * @param {google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest} message DeleteSynonymSetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteSynonymSetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteSynonymSetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteSynonymSetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteSynonymSetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteSynonymSetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.contentwarehouse.v1.DeleteSynonymSetRequest";
                        };
    
                        return DeleteSynonymSetRequest;
                    })();
    
                    return v1;
                })();
    
                return contentwarehouse;
            })();
    
            cloud.documentai = (function() {
    
                /**
                 * Namespace documentai.
                 * @memberof google.cloud
                 * @namespace
                 */
                var documentai = {};
    
                documentai.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.cloud.documentai
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.Document = (function() {
    
                        /**
                         * Properties of a Document.
                         * @memberof google.cloud.documentai.v1
                         * @interface IDocument
                         * @property {string|null} [uri] Document uri
                         * @property {Uint8Array|null} [content] Document content
                         * @property {string|null} [mimeType] Document mimeType
                         * @property {string|null} [text] Document text
                         * @property {Array.<google.cloud.documentai.v1.Document.IStyle>|null} [textStyles] Document textStyles
                         * @property {Array.<google.cloud.documentai.v1.Document.IPage>|null} [pages] Document pages
                         * @property {Array.<google.cloud.documentai.v1.Document.IEntity>|null} [entities] Document entities
                         * @property {Array.<google.cloud.documentai.v1.Document.IEntityRelation>|null} [entityRelations] Document entityRelations
                         * @property {Array.<google.cloud.documentai.v1.Document.ITextChange>|null} [textChanges] Document textChanges
                         * @property {google.cloud.documentai.v1.Document.IShardInfo|null} [shardInfo] Document shardInfo
                         * @property {google.rpc.IStatus|null} [error] Document error
                         * @property {Array.<google.cloud.documentai.v1.Document.IRevision>|null} [revisions] Document revisions
                         */
    
                        /**
                         * Constructs a new Document.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a Document.
                         * @implements IDocument
                         * @constructor
                         * @param {google.cloud.documentai.v1.IDocument=} [properties] Properties to set
                         */
                        function Document(properties) {
                            this.textStyles = [];
                            this.pages = [];
                            this.entities = [];
                            this.entityRelations = [];
                            this.textChanges = [];
                            this.revisions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Document uri.
                         * @member {string|null|undefined} uri
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.uri = null;
    
                        /**
                         * Document content.
                         * @member {Uint8Array|null|undefined} content
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.content = null;
    
                        /**
                         * Document mimeType.
                         * @member {string} mimeType
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.mimeType = "";
    
                        /**
                         * Document text.
                         * @member {string} text
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.text = "";
    
                        /**
                         * Document textStyles.
                         * @member {Array.<google.cloud.documentai.v1.Document.IStyle>} textStyles
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.textStyles = $util.emptyArray;
    
                        /**
                         * Document pages.
                         * @member {Array.<google.cloud.documentai.v1.Document.IPage>} pages
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.pages = $util.emptyArray;
    
                        /**
                         * Document entities.
                         * @member {Array.<google.cloud.documentai.v1.Document.IEntity>} entities
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.entities = $util.emptyArray;
    
                        /**
                         * Document entityRelations.
                         * @member {Array.<google.cloud.documentai.v1.Document.IEntityRelation>} entityRelations
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.entityRelations = $util.emptyArray;
    
                        /**
                         * Document textChanges.
                         * @member {Array.<google.cloud.documentai.v1.Document.ITextChange>} textChanges
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.textChanges = $util.emptyArray;
    
                        /**
                         * Document shardInfo.
                         * @member {google.cloud.documentai.v1.Document.IShardInfo|null|undefined} shardInfo
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.shardInfo = null;
    
                        /**
                         * Document error.
                         * @member {google.rpc.IStatus|null|undefined} error
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.error = null;
    
                        /**
                         * Document revisions.
                         * @member {Array.<google.cloud.documentai.v1.Document.IRevision>} revisions
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Document.prototype.revisions = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Document source.
                         * @member {"uri"|"content"|undefined} source
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         */
                        Object.defineProperty(Document.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["uri", "content"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Document instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {google.cloud.documentai.v1.IDocument=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.Document} Document instance
                         */
                        Document.create = function create(properties) {
                            return new Document(properties);
                        };
    
                        /**
                         * Encodes the specified Document message. Does not implicitly {@link google.cloud.documentai.v1.Document.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {google.cloud.documentai.v1.IDocument} message Document message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Document.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                            if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.content);
                            if (message.mimeType != null && Object.hasOwnProperty.call(message, "mimeType"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.mimeType);
                            if (message.text != null && Object.hasOwnProperty.call(message, "text"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.text);
                            if (message.textStyles != null && message.textStyles.length)
                                for (var i = 0; i < message.textStyles.length; ++i)
                                    $root.google.cloud.documentai.v1.Document.Style.encode(message.textStyles[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.pages != null && message.pages.length)
                                for (var i = 0; i < message.pages.length; ++i)
                                    $root.google.cloud.documentai.v1.Document.Page.encode(message.pages[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.entities != null && message.entities.length)
                                for (var i = 0; i < message.entities.length; ++i)
                                    $root.google.cloud.documentai.v1.Document.Entity.encode(message.entities[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.entityRelations != null && message.entityRelations.length)
                                for (var i = 0; i < message.entityRelations.length; ++i)
                                    $root.google.cloud.documentai.v1.Document.EntityRelation.encode(message.entityRelations[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.shardInfo != null && Object.hasOwnProperty.call(message, "shardInfo"))
                                $root.google.cloud.documentai.v1.Document.ShardInfo.encode(message.shardInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.revisions != null && message.revisions.length)
                                for (var i = 0; i < message.revisions.length; ++i)
                                    $root.google.cloud.documentai.v1.Document.Revision.encode(message.revisions[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.textChanges != null && message.textChanges.length)
                                for (var i = 0; i < message.textChanges.length; ++i)
                                    $root.google.cloud.documentai.v1.Document.TextChange.encode(message.textChanges[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Document message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {google.cloud.documentai.v1.IDocument} message Document message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Document.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Document message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.Document} Document
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Document.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.content = reader.bytes();
                                        break;
                                    }
                                case 3: {
                                        message.mimeType = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.text = reader.string();
                                        break;
                                    }
                                case 5: {
                                        if (!(message.textStyles && message.textStyles.length))
                                            message.textStyles = [];
                                        message.textStyles.push($root.google.cloud.documentai.v1.Document.Style.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        if (!(message.pages && message.pages.length))
                                            message.pages = [];
                                        message.pages.push($root.google.cloud.documentai.v1.Document.Page.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 7: {
                                        if (!(message.entities && message.entities.length))
                                            message.entities = [];
                                        message.entities.push($root.google.cloud.documentai.v1.Document.Entity.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 8: {
                                        if (!(message.entityRelations && message.entityRelations.length))
                                            message.entityRelations = [];
                                        message.entityRelations.push($root.google.cloud.documentai.v1.Document.EntityRelation.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 14: {
                                        if (!(message.textChanges && message.textChanges.length))
                                            message.textChanges = [];
                                        message.textChanges.push($root.google.cloud.documentai.v1.Document.TextChange.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 9: {
                                        message.shardInfo = $root.google.cloud.documentai.v1.Document.ShardInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        if (!(message.revisions && message.revisions.length))
                                            message.revisions = [];
                                        message.revisions.push($root.google.cloud.documentai.v1.Document.Revision.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Document message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.Document} Document
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Document.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Document message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Document.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                properties.source = 1;
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            }
                            if (message.content != null && message.hasOwnProperty("content")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                if (!(message.content && typeof message.content.length === "number" || $util.isString(message.content)))
                                    return "content: buffer expected";
                            }
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                if (!$util.isString(message.mimeType))
                                    return "mimeType: string expected";
                            if (message.text != null && message.hasOwnProperty("text"))
                                if (!$util.isString(message.text))
                                    return "text: string expected";
                            if (message.textStyles != null && message.hasOwnProperty("textStyles")) {
                                if (!Array.isArray(message.textStyles))
                                    return "textStyles: array expected";
                                for (var i = 0; i < message.textStyles.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Document.Style.verify(message.textStyles[i]);
                                    if (error)
                                        return "textStyles." + error;
                                }
                            }
                            if (message.pages != null && message.hasOwnProperty("pages")) {
                                if (!Array.isArray(message.pages))
                                    return "pages: array expected";
                                for (var i = 0; i < message.pages.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Document.Page.verify(message.pages[i]);
                                    if (error)
                                        return "pages." + error;
                                }
                            }
                            if (message.entities != null && message.hasOwnProperty("entities")) {
                                if (!Array.isArray(message.entities))
                                    return "entities: array expected";
                                for (var i = 0; i < message.entities.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Document.Entity.verify(message.entities[i]);
                                    if (error)
                                        return "entities." + error;
                                }
                            }
                            if (message.entityRelations != null && message.hasOwnProperty("entityRelations")) {
                                if (!Array.isArray(message.entityRelations))
                                    return "entityRelations: array expected";
                                for (var i = 0; i < message.entityRelations.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Document.EntityRelation.verify(message.entityRelations[i]);
                                    if (error)
                                        return "entityRelations." + error;
                                }
                            }
                            if (message.textChanges != null && message.hasOwnProperty("textChanges")) {
                                if (!Array.isArray(message.textChanges))
                                    return "textChanges: array expected";
                                for (var i = 0; i < message.textChanges.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Document.TextChange.verify(message.textChanges[i]);
                                    if (error)
                                        return "textChanges." + error;
                                }
                            }
                            if (message.shardInfo != null && message.hasOwnProperty("shardInfo")) {
                                var error = $root.google.cloud.documentai.v1.Document.ShardInfo.verify(message.shardInfo);
                                if (error)
                                    return "shardInfo." + error;
                            }
                            if (message.error != null && message.hasOwnProperty("error")) {
                                var error = $root.google.rpc.Status.verify(message.error);
                                if (error)
                                    return "error." + error;
                            }
                            if (message.revisions != null && message.hasOwnProperty("revisions")) {
                                if (!Array.isArray(message.revisions))
                                    return "revisions: array expected";
                                for (var i = 0; i < message.revisions.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Document.Revision.verify(message.revisions[i]);
                                    if (error)
                                        return "revisions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Document message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.Document} Document
                         */
                        Document.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.Document)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.Document();
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.content != null)
                                if (typeof object.content === "string")
                                    $util.base64.decode(object.content, message.content = $util.newBuffer($util.base64.length(object.content)), 0);
                                else if (object.content.length >= 0)
                                    message.content = object.content;
                            if (object.mimeType != null)
                                message.mimeType = String(object.mimeType);
                            if (object.text != null)
                                message.text = String(object.text);
                            if (object.textStyles) {
                                if (!Array.isArray(object.textStyles))
                                    throw TypeError(".google.cloud.documentai.v1.Document.textStyles: array expected");
                                message.textStyles = [];
                                for (var i = 0; i < object.textStyles.length; ++i) {
                                    if (typeof object.textStyles[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.textStyles: object expected");
                                    message.textStyles[i] = $root.google.cloud.documentai.v1.Document.Style.fromObject(object.textStyles[i]);
                                }
                            }
                            if (object.pages) {
                                if (!Array.isArray(object.pages))
                                    throw TypeError(".google.cloud.documentai.v1.Document.pages: array expected");
                                message.pages = [];
                                for (var i = 0; i < object.pages.length; ++i) {
                                    if (typeof object.pages[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.pages: object expected");
                                    message.pages[i] = $root.google.cloud.documentai.v1.Document.Page.fromObject(object.pages[i]);
                                }
                            }
                            if (object.entities) {
                                if (!Array.isArray(object.entities))
                                    throw TypeError(".google.cloud.documentai.v1.Document.entities: array expected");
                                message.entities = [];
                                for (var i = 0; i < object.entities.length; ++i) {
                                    if (typeof object.entities[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.entities: object expected");
                                    message.entities[i] = $root.google.cloud.documentai.v1.Document.Entity.fromObject(object.entities[i]);
                                }
                            }
                            if (object.entityRelations) {
                                if (!Array.isArray(object.entityRelations))
                                    throw TypeError(".google.cloud.documentai.v1.Document.entityRelations: array expected");
                                message.entityRelations = [];
                                for (var i = 0; i < object.entityRelations.length; ++i) {
                                    if (typeof object.entityRelations[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.entityRelations: object expected");
                                    message.entityRelations[i] = $root.google.cloud.documentai.v1.Document.EntityRelation.fromObject(object.entityRelations[i]);
                                }
                            }
                            if (object.textChanges) {
                                if (!Array.isArray(object.textChanges))
                                    throw TypeError(".google.cloud.documentai.v1.Document.textChanges: array expected");
                                message.textChanges = [];
                                for (var i = 0; i < object.textChanges.length; ++i) {
                                    if (typeof object.textChanges[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.textChanges: object expected");
                                    message.textChanges[i] = $root.google.cloud.documentai.v1.Document.TextChange.fromObject(object.textChanges[i]);
                                }
                            }
                            if (object.shardInfo != null) {
                                if (typeof object.shardInfo !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.Document.shardInfo: object expected");
                                message.shardInfo = $root.google.cloud.documentai.v1.Document.ShardInfo.fromObject(object.shardInfo);
                            }
                            if (object.error != null) {
                                if (typeof object.error !== "object")
                                    throw TypeError(".google.cloud.documentai.v1.Document.error: object expected");
                                message.error = $root.google.rpc.Status.fromObject(object.error);
                            }
                            if (object.revisions) {
                                if (!Array.isArray(object.revisions))
                                    throw TypeError(".google.cloud.documentai.v1.Document.revisions: array expected");
                                message.revisions = [];
                                for (var i = 0; i < object.revisions.length; ++i) {
                                    if (typeof object.revisions[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.revisions: object expected");
                                    message.revisions[i] = $root.google.cloud.documentai.v1.Document.Revision.fromObject(object.revisions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Document message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {google.cloud.documentai.v1.Document} message Document
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Document.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.textStyles = [];
                                object.pages = [];
                                object.entities = [];
                                object.entityRelations = [];
                                object.revisions = [];
                                object.textChanges = [];
                            }
                            if (options.defaults) {
                                object.mimeType = "";
                                object.text = "";
                                object.shardInfo = null;
                                object.error = null;
                            }
                            if (message.uri != null && message.hasOwnProperty("uri")) {
                                object.uri = message.uri;
                                if (options.oneofs)
                                    object.source = "uri";
                            }
                            if (message.content != null && message.hasOwnProperty("content")) {
                                object.content = options.bytes === String ? $util.base64.encode(message.content, 0, message.content.length) : options.bytes === Array ? Array.prototype.slice.call(message.content) : message.content;
                                if (options.oneofs)
                                    object.source = "content";
                            }
                            if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                object.mimeType = message.mimeType;
                            if (message.text != null && message.hasOwnProperty("text"))
                                object.text = message.text;
                            if (message.textStyles && message.textStyles.length) {
                                object.textStyles = [];
                                for (var j = 0; j < message.textStyles.length; ++j)
                                    object.textStyles[j] = $root.google.cloud.documentai.v1.Document.Style.toObject(message.textStyles[j], options);
                            }
                            if (message.pages && message.pages.length) {
                                object.pages = [];
                                for (var j = 0; j < message.pages.length; ++j)
                                    object.pages[j] = $root.google.cloud.documentai.v1.Document.Page.toObject(message.pages[j], options);
                            }
                            if (message.entities && message.entities.length) {
                                object.entities = [];
                                for (var j = 0; j < message.entities.length; ++j)
                                    object.entities[j] = $root.google.cloud.documentai.v1.Document.Entity.toObject(message.entities[j], options);
                            }
                            if (message.entityRelations && message.entityRelations.length) {
                                object.entityRelations = [];
                                for (var j = 0; j < message.entityRelations.length; ++j)
                                    object.entityRelations[j] = $root.google.cloud.documentai.v1.Document.EntityRelation.toObject(message.entityRelations[j], options);
                            }
                            if (message.shardInfo != null && message.hasOwnProperty("shardInfo"))
                                object.shardInfo = $root.google.cloud.documentai.v1.Document.ShardInfo.toObject(message.shardInfo, options);
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = $root.google.rpc.Status.toObject(message.error, options);
                            if (message.revisions && message.revisions.length) {
                                object.revisions = [];
                                for (var j = 0; j < message.revisions.length; ++j)
                                    object.revisions[j] = $root.google.cloud.documentai.v1.Document.Revision.toObject(message.revisions[j], options);
                            }
                            if (message.textChanges && message.textChanges.length) {
                                object.textChanges = [];
                                for (var j = 0; j < message.textChanges.length; ++j)
                                    object.textChanges[j] = $root.google.cloud.documentai.v1.Document.TextChange.toObject(message.textChanges[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Document to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.Document
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Document.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Document
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.Document
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Document.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.Document";
                        };
    
                        Document.ShardInfo = (function() {
    
                            /**
                             * Properties of a ShardInfo.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IShardInfo
                             * @property {number|Long|null} [shardIndex] ShardInfo shardIndex
                             * @property {number|Long|null} [shardCount] ShardInfo shardCount
                             * @property {number|Long|null} [textOffset] ShardInfo textOffset
                             */
    
                            /**
                             * Constructs a new ShardInfo.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a ShardInfo.
                             * @implements IShardInfo
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IShardInfo=} [properties] Properties to set
                             */
                            function ShardInfo(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ShardInfo shardIndex.
                             * @member {number|Long} shardIndex
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @instance
                             */
                            ShardInfo.prototype.shardIndex = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * ShardInfo shardCount.
                             * @member {number|Long} shardCount
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @instance
                             */
                            ShardInfo.prototype.shardCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * ShardInfo textOffset.
                             * @member {number|Long} textOffset
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @instance
                             */
                            ShardInfo.prototype.textOffset = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * Creates a new ShardInfo instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IShardInfo=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.ShardInfo} ShardInfo instance
                             */
                            ShardInfo.create = function create(properties) {
                                return new ShardInfo(properties);
                            };
    
                            /**
                             * Encodes the specified ShardInfo message. Does not implicitly {@link google.cloud.documentai.v1.Document.ShardInfo.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IShardInfo} message ShardInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ShardInfo.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.shardIndex != null && Object.hasOwnProperty.call(message, "shardIndex"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.shardIndex);
                                if (message.shardCount != null && Object.hasOwnProperty.call(message, "shardCount"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.shardCount);
                                if (message.textOffset != null && Object.hasOwnProperty.call(message, "textOffset"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int64(message.textOffset);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ShardInfo message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.ShardInfo.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IShardInfo} message ShardInfo message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ShardInfo.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ShardInfo message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.ShardInfo} ShardInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ShardInfo.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.ShardInfo();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.shardIndex = reader.int64();
                                            break;
                                        }
                                    case 2: {
                                            message.shardCount = reader.int64();
                                            break;
                                        }
                                    case 3: {
                                            message.textOffset = reader.int64();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ShardInfo message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.ShardInfo} ShardInfo
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ShardInfo.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ShardInfo message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ShardInfo.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.shardIndex != null && message.hasOwnProperty("shardIndex"))
                                    if (!$util.isInteger(message.shardIndex) && !(message.shardIndex && $util.isInteger(message.shardIndex.low) && $util.isInteger(message.shardIndex.high)))
                                        return "shardIndex: integer|Long expected";
                                if (message.shardCount != null && message.hasOwnProperty("shardCount"))
                                    if (!$util.isInteger(message.shardCount) && !(message.shardCount && $util.isInteger(message.shardCount.low) && $util.isInteger(message.shardCount.high)))
                                        return "shardCount: integer|Long expected";
                                if (message.textOffset != null && message.hasOwnProperty("textOffset"))
                                    if (!$util.isInteger(message.textOffset) && !(message.textOffset && $util.isInteger(message.textOffset.low) && $util.isInteger(message.textOffset.high)))
                                        return "textOffset: integer|Long expected";
                                return null;
                            };
    
                            /**
                             * Creates a ShardInfo message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.ShardInfo} ShardInfo
                             */
                            ShardInfo.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.ShardInfo)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.ShardInfo();
                                if (object.shardIndex != null)
                                    if ($util.Long)
                                        (message.shardIndex = $util.Long.fromValue(object.shardIndex)).unsigned = false;
                                    else if (typeof object.shardIndex === "string")
                                        message.shardIndex = parseInt(object.shardIndex, 10);
                                    else if (typeof object.shardIndex === "number")
                                        message.shardIndex = object.shardIndex;
                                    else if (typeof object.shardIndex === "object")
                                        message.shardIndex = new $util.LongBits(object.shardIndex.low >>> 0, object.shardIndex.high >>> 0).toNumber();
                                if (object.shardCount != null)
                                    if ($util.Long)
                                        (message.shardCount = $util.Long.fromValue(object.shardCount)).unsigned = false;
                                    else if (typeof object.shardCount === "string")
                                        message.shardCount = parseInt(object.shardCount, 10);
                                    else if (typeof object.shardCount === "number")
                                        message.shardCount = object.shardCount;
                                    else if (typeof object.shardCount === "object")
                                        message.shardCount = new $util.LongBits(object.shardCount.low >>> 0, object.shardCount.high >>> 0).toNumber();
                                if (object.textOffset != null)
                                    if ($util.Long)
                                        (message.textOffset = $util.Long.fromValue(object.textOffset)).unsigned = false;
                                    else if (typeof object.textOffset === "string")
                                        message.textOffset = parseInt(object.textOffset, 10);
                                    else if (typeof object.textOffset === "number")
                                        message.textOffset = object.textOffset;
                                    else if (typeof object.textOffset === "object")
                                        message.textOffset = new $util.LongBits(object.textOffset.low >>> 0, object.textOffset.high >>> 0).toNumber();
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ShardInfo message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {google.cloud.documentai.v1.Document.ShardInfo} message ShardInfo
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ShardInfo.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.shardIndex = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.shardIndex = options.longs === String ? "0" : 0;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.shardCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.shardCount = options.longs === String ? "0" : 0;
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.textOffset = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.textOffset = options.longs === String ? "0" : 0;
                                }
                                if (message.shardIndex != null && message.hasOwnProperty("shardIndex"))
                                    if (typeof message.shardIndex === "number")
                                        object.shardIndex = options.longs === String ? String(message.shardIndex) : message.shardIndex;
                                    else
                                        object.shardIndex = options.longs === String ? $util.Long.prototype.toString.call(message.shardIndex) : options.longs === Number ? new $util.LongBits(message.shardIndex.low >>> 0, message.shardIndex.high >>> 0).toNumber() : message.shardIndex;
                                if (message.shardCount != null && message.hasOwnProperty("shardCount"))
                                    if (typeof message.shardCount === "number")
                                        object.shardCount = options.longs === String ? String(message.shardCount) : message.shardCount;
                                    else
                                        object.shardCount = options.longs === String ? $util.Long.prototype.toString.call(message.shardCount) : options.longs === Number ? new $util.LongBits(message.shardCount.low >>> 0, message.shardCount.high >>> 0).toNumber() : message.shardCount;
                                if (message.textOffset != null && message.hasOwnProperty("textOffset"))
                                    if (typeof message.textOffset === "number")
                                        object.textOffset = options.longs === String ? String(message.textOffset) : message.textOffset;
                                    else
                                        object.textOffset = options.longs === String ? $util.Long.prototype.toString.call(message.textOffset) : options.longs === Number ? new $util.LongBits(message.textOffset.low >>> 0, message.textOffset.high >>> 0).toNumber() : message.textOffset;
                                return object;
                            };
    
                            /**
                             * Converts this ShardInfo to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ShardInfo.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ShardInfo
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.ShardInfo
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ShardInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.ShardInfo";
                            };
    
                            return ShardInfo;
                        })();
    
                        Document.Style = (function() {
    
                            /**
                             * Properties of a Style.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IStyle
                             * @property {google.cloud.documentai.v1.Document.ITextAnchor|null} [textAnchor] Style textAnchor
                             * @property {google.type.IColor|null} [color] Style color
                             * @property {google.type.IColor|null} [backgroundColor] Style backgroundColor
                             * @property {string|null} [fontWeight] Style fontWeight
                             * @property {string|null} [textStyle] Style textStyle
                             * @property {string|null} [textDecoration] Style textDecoration
                             * @property {google.cloud.documentai.v1.Document.Style.IFontSize|null} [fontSize] Style fontSize
                             * @property {string|null} [fontFamily] Style fontFamily
                             */
    
                            /**
                             * Constructs a new Style.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a Style.
                             * @implements IStyle
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IStyle=} [properties] Properties to set
                             */
                            function Style(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Style textAnchor.
                             * @member {google.cloud.documentai.v1.Document.ITextAnchor|null|undefined} textAnchor
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.textAnchor = null;
    
                            /**
                             * Style color.
                             * @member {google.type.IColor|null|undefined} color
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.color = null;
    
                            /**
                             * Style backgroundColor.
                             * @member {google.type.IColor|null|undefined} backgroundColor
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.backgroundColor = null;
    
                            /**
                             * Style fontWeight.
                             * @member {string} fontWeight
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.fontWeight = "";
    
                            /**
                             * Style textStyle.
                             * @member {string} textStyle
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.textStyle = "";
    
                            /**
                             * Style textDecoration.
                             * @member {string} textDecoration
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.textDecoration = "";
    
                            /**
                             * Style fontSize.
                             * @member {google.cloud.documentai.v1.Document.Style.IFontSize|null|undefined} fontSize
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.fontSize = null;
    
                            /**
                             * Style fontFamily.
                             * @member {string} fontFamily
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             */
                            Style.prototype.fontFamily = "";
    
                            /**
                             * Creates a new Style instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IStyle=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.Style} Style instance
                             */
                            Style.create = function create(properties) {
                                return new Style(properties);
                            };
    
                            /**
                             * Encodes the specified Style message. Does not implicitly {@link google.cloud.documentai.v1.Document.Style.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IStyle} message Style message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Style.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.textAnchor != null && Object.hasOwnProperty.call(message, "textAnchor"))
                                    $root.google.cloud.documentai.v1.Document.TextAnchor.encode(message.textAnchor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.color != null && Object.hasOwnProperty.call(message, "color"))
                                    $root.google.type.Color.encode(message.color, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.backgroundColor != null && Object.hasOwnProperty.call(message, "backgroundColor"))
                                    $root.google.type.Color.encode(message.backgroundColor, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.fontWeight != null && Object.hasOwnProperty.call(message, "fontWeight"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.fontWeight);
                                if (message.textStyle != null && Object.hasOwnProperty.call(message, "textStyle"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.textStyle);
                                if (message.textDecoration != null && Object.hasOwnProperty.call(message, "textDecoration"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.textDecoration);
                                if (message.fontSize != null && Object.hasOwnProperty.call(message, "fontSize"))
                                    $root.google.cloud.documentai.v1.Document.Style.FontSize.encode(message.fontSize, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.fontFamily != null && Object.hasOwnProperty.call(message, "fontFamily"))
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.fontFamily);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Style message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Style.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IStyle} message Style message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Style.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Style message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.Style} Style
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Style.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Style();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.color = $root.google.type.Color.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.backgroundColor = $root.google.type.Color.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.fontWeight = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.textStyle = reader.string();
                                            break;
                                        }
                                    case 6: {
                                            message.textDecoration = reader.string();
                                            break;
                                        }
                                    case 7: {
                                            message.fontSize = $root.google.cloud.documentai.v1.Document.Style.FontSize.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 8: {
                                            message.fontFamily = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Style message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.Style} Style
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Style.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Style message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Style.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.textAnchor != null && message.hasOwnProperty("textAnchor")) {
                                    var error = $root.google.cloud.documentai.v1.Document.TextAnchor.verify(message.textAnchor);
                                    if (error)
                                        return "textAnchor." + error;
                                }
                                if (message.color != null && message.hasOwnProperty("color")) {
                                    var error = $root.google.type.Color.verify(message.color);
                                    if (error)
                                        return "color." + error;
                                }
                                if (message.backgroundColor != null && message.hasOwnProperty("backgroundColor")) {
                                    var error = $root.google.type.Color.verify(message.backgroundColor);
                                    if (error)
                                        return "backgroundColor." + error;
                                }
                                if (message.fontWeight != null && message.hasOwnProperty("fontWeight"))
                                    if (!$util.isString(message.fontWeight))
                                        return "fontWeight: string expected";
                                if (message.textStyle != null && message.hasOwnProperty("textStyle"))
                                    if (!$util.isString(message.textStyle))
                                        return "textStyle: string expected";
                                if (message.textDecoration != null && message.hasOwnProperty("textDecoration"))
                                    if (!$util.isString(message.textDecoration))
                                        return "textDecoration: string expected";
                                if (message.fontSize != null && message.hasOwnProperty("fontSize")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Style.FontSize.verify(message.fontSize);
                                    if (error)
                                        return "fontSize." + error;
                                }
                                if (message.fontFamily != null && message.hasOwnProperty("fontFamily"))
                                    if (!$util.isString(message.fontFamily))
                                        return "fontFamily: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Style message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.Style} Style
                             */
                            Style.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.Style)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.Style();
                                if (object.textAnchor != null) {
                                    if (typeof object.textAnchor !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Style.textAnchor: object expected");
                                    message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.fromObject(object.textAnchor);
                                }
                                if (object.color != null) {
                                    if (typeof object.color !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Style.color: object expected");
                                    message.color = $root.google.type.Color.fromObject(object.color);
                                }
                                if (object.backgroundColor != null) {
                                    if (typeof object.backgroundColor !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Style.backgroundColor: object expected");
                                    message.backgroundColor = $root.google.type.Color.fromObject(object.backgroundColor);
                                }
                                if (object.fontWeight != null)
                                    message.fontWeight = String(object.fontWeight);
                                if (object.textStyle != null)
                                    message.textStyle = String(object.textStyle);
                                if (object.textDecoration != null)
                                    message.textDecoration = String(object.textDecoration);
                                if (object.fontSize != null) {
                                    if (typeof object.fontSize !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Style.fontSize: object expected");
                                    message.fontSize = $root.google.cloud.documentai.v1.Document.Style.FontSize.fromObject(object.fontSize);
                                }
                                if (object.fontFamily != null)
                                    message.fontFamily = String(object.fontFamily);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Style message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {google.cloud.documentai.v1.Document.Style} message Style
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Style.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.textAnchor = null;
                                    object.color = null;
                                    object.backgroundColor = null;
                                    object.fontWeight = "";
                                    object.textStyle = "";
                                    object.textDecoration = "";
                                    object.fontSize = null;
                                    object.fontFamily = "";
                                }
                                if (message.textAnchor != null && message.hasOwnProperty("textAnchor"))
                                    object.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.toObject(message.textAnchor, options);
                                if (message.color != null && message.hasOwnProperty("color"))
                                    object.color = $root.google.type.Color.toObject(message.color, options);
                                if (message.backgroundColor != null && message.hasOwnProperty("backgroundColor"))
                                    object.backgroundColor = $root.google.type.Color.toObject(message.backgroundColor, options);
                                if (message.fontWeight != null && message.hasOwnProperty("fontWeight"))
                                    object.fontWeight = message.fontWeight;
                                if (message.textStyle != null && message.hasOwnProperty("textStyle"))
                                    object.textStyle = message.textStyle;
                                if (message.textDecoration != null && message.hasOwnProperty("textDecoration"))
                                    object.textDecoration = message.textDecoration;
                                if (message.fontSize != null && message.hasOwnProperty("fontSize"))
                                    object.fontSize = $root.google.cloud.documentai.v1.Document.Style.FontSize.toObject(message.fontSize, options);
                                if (message.fontFamily != null && message.hasOwnProperty("fontFamily"))
                                    object.fontFamily = message.fontFamily;
                                return object;
                            };
    
                            /**
                             * Converts this Style to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Style.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Style
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.Style
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Style.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Style";
                            };
    
                            Style.FontSize = (function() {
    
                                /**
                                 * Properties of a FontSize.
                                 * @memberof google.cloud.documentai.v1.Document.Style
                                 * @interface IFontSize
                                 * @property {number|null} [size] FontSize size
                                 * @property {string|null} [unit] FontSize unit
                                 */
    
                                /**
                                 * Constructs a new FontSize.
                                 * @memberof google.cloud.documentai.v1.Document.Style
                                 * @classdesc Represents a FontSize.
                                 * @implements IFontSize
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Style.IFontSize=} [properties] Properties to set
                                 */
                                function FontSize(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * FontSize size.
                                 * @member {number} size
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @instance
                                 */
                                FontSize.prototype.size = 0;
    
                                /**
                                 * FontSize unit.
                                 * @member {string} unit
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @instance
                                 */
                                FontSize.prototype.unit = "";
    
                                /**
                                 * Creates a new FontSize instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Style.IFontSize=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Style.FontSize} FontSize instance
                                 */
                                FontSize.create = function create(properties) {
                                    return new FontSize(properties);
                                };
    
                                /**
                                 * Encodes the specified FontSize message. Does not implicitly {@link google.cloud.documentai.v1.Document.Style.FontSize.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Style.IFontSize} message FontSize message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                FontSize.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.size != null && Object.hasOwnProperty.call(message, "size"))
                                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.size);
                                    if (message.unit != null && Object.hasOwnProperty.call(message, "unit"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.unit);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified FontSize message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Style.FontSize.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Style.IFontSize} message FontSize message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                FontSize.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a FontSize message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Style.FontSize} FontSize
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                FontSize.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Style.FontSize();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.size = reader.float();
                                                break;
                                            }
                                        case 2: {
                                                message.unit = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a FontSize message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Style.FontSize} FontSize
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                FontSize.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a FontSize message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                FontSize.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.size != null && message.hasOwnProperty("size"))
                                        if (typeof message.size !== "number")
                                            return "size: number expected";
                                    if (message.unit != null && message.hasOwnProperty("unit"))
                                        if (!$util.isString(message.unit))
                                            return "unit: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a FontSize message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Style.FontSize} FontSize
                                 */
                                FontSize.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Style.FontSize)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Style.FontSize();
                                    if (object.size != null)
                                        message.size = Number(object.size);
                                    if (object.unit != null)
                                        message.unit = String(object.unit);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a FontSize message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Style.FontSize} message FontSize
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                FontSize.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.size = 0;
                                        object.unit = "";
                                    }
                                    if (message.size != null && message.hasOwnProperty("size"))
                                        object.size = options.json && !isFinite(message.size) ? String(message.size) : message.size;
                                    if (message.unit != null && message.hasOwnProperty("unit"))
                                        object.unit = message.unit;
                                    return object;
                                };
    
                                /**
                                 * Converts this FontSize to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                FontSize.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for FontSize
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Style.FontSize
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                FontSize.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Style.FontSize";
                                };
    
                                return FontSize;
                            })();
    
                            return Style;
                        })();
    
                        Document.Page = (function() {
    
                            /**
                             * Properties of a Page.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IPage
                             * @property {number|null} [pageNumber] Page pageNumber
                             * @property {google.cloud.documentai.v1.Document.Page.IImage|null} [image] Page image
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IMatrix>|null} [transforms] Page transforms
                             * @property {google.cloud.documentai.v1.Document.Page.IDimension|null} [dimension] Page dimension
                             * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] Page layout
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] Page detectedLanguages
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IBlock>|null} [blocks] Page blocks
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IParagraph>|null} [paragraphs] Page paragraphs
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.ILine>|null} [lines] Page lines
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IToken>|null} [tokens] Page tokens
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IVisualElement>|null} [visualElements] Page visualElements
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.ITable>|null} [tables] Page tables
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IFormField>|null} [formFields] Page formFields
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.ISymbol>|null} [symbols] Page symbols
                             * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedBarcode>|null} [detectedBarcodes] Page detectedBarcodes
                             * @property {google.cloud.documentai.v1.Document.Page.IImageQualityScores|null} [imageQualityScores] Page imageQualityScores
                             * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] Page provenance
                             */
    
                            /**
                             * Constructs a new Page.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a Page.
                             * @implements IPage
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IPage=} [properties] Properties to set
                             */
                            function Page(properties) {
                                this.transforms = [];
                                this.detectedLanguages = [];
                                this.blocks = [];
                                this.paragraphs = [];
                                this.lines = [];
                                this.tokens = [];
                                this.visualElements = [];
                                this.tables = [];
                                this.formFields = [];
                                this.symbols = [];
                                this.detectedBarcodes = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Page pageNumber.
                             * @member {number} pageNumber
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.pageNumber = 0;
    
                            /**
                             * Page image.
                             * @member {google.cloud.documentai.v1.Document.Page.IImage|null|undefined} image
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.image = null;
    
                            /**
                             * Page transforms.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IMatrix>} transforms
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.transforms = $util.emptyArray;
    
                            /**
                             * Page dimension.
                             * @member {google.cloud.documentai.v1.Document.Page.IDimension|null|undefined} dimension
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.dimension = null;
    
                            /**
                             * Page layout.
                             * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.layout = null;
    
                            /**
                             * Page detectedLanguages.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.detectedLanguages = $util.emptyArray;
    
                            /**
                             * Page blocks.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IBlock>} blocks
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.blocks = $util.emptyArray;
    
                            /**
                             * Page paragraphs.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IParagraph>} paragraphs
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.paragraphs = $util.emptyArray;
    
                            /**
                             * Page lines.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.ILine>} lines
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.lines = $util.emptyArray;
    
                            /**
                             * Page tokens.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IToken>} tokens
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.tokens = $util.emptyArray;
    
                            /**
                             * Page visualElements.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IVisualElement>} visualElements
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.visualElements = $util.emptyArray;
    
                            /**
                             * Page tables.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.ITable>} tables
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.tables = $util.emptyArray;
    
                            /**
                             * Page formFields.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IFormField>} formFields
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.formFields = $util.emptyArray;
    
                            /**
                             * Page symbols.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.ISymbol>} symbols
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.symbols = $util.emptyArray;
    
                            /**
                             * Page detectedBarcodes.
                             * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedBarcode>} detectedBarcodes
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.detectedBarcodes = $util.emptyArray;
    
                            /**
                             * Page imageQualityScores.
                             * @member {google.cloud.documentai.v1.Document.Page.IImageQualityScores|null|undefined} imageQualityScores
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.imageQualityScores = null;
    
                            /**
                             * Page provenance.
                             * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             */
                            Page.prototype.provenance = null;
    
                            /**
                             * Creates a new Page instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IPage=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.Page} Page instance
                             */
                            Page.create = function create(properties) {
                                return new Page(properties);
                            };
    
                            /**
                             * Encodes the specified Page message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IPage} message Page message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Page.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.pageNumber != null && Object.hasOwnProperty.call(message, "pageNumber"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.pageNumber);
                                if (message.dimension != null && Object.hasOwnProperty.call(message, "dimension"))
                                    $root.google.cloud.documentai.v1.Document.Page.Dimension.encode(message.dimension, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                    $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.detectedLanguages != null && message.detectedLanguages.length)
                                    for (var i = 0; i < message.detectedLanguages.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.blocks != null && message.blocks.length)
                                    for (var i = 0; i < message.blocks.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.Block.encode(message.blocks[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.paragraphs != null && message.paragraphs.length)
                                    for (var i = 0; i < message.paragraphs.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.Paragraph.encode(message.paragraphs[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.lines != null && message.lines.length)
                                    for (var i = 0; i < message.lines.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.Line.encode(message.lines[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.tokens != null && message.tokens.length)
                                    for (var i = 0; i < message.tokens.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.Token.encode(message.tokens[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                if (message.visualElements != null && message.visualElements.length)
                                    for (var i = 0; i < message.visualElements.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.VisualElement.encode(message.visualElements[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                                if (message.tables != null && message.tables.length)
                                    for (var i = 0; i < message.tables.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.Table.encode(message.tables[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                                if (message.formFields != null && message.formFields.length)
                                    for (var i = 0; i < message.formFields.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.FormField.encode(message.formFields[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                                if (message.symbols != null && message.symbols.length)
                                    for (var i = 0; i < message.symbols.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.Symbol.encode(message.symbols[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                                if (message.image != null && Object.hasOwnProperty.call(message, "image"))
                                    $root.google.cloud.documentai.v1.Document.Page.Image.encode(message.image, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                                if (message.transforms != null && message.transforms.length)
                                    for (var i = 0; i < message.transforms.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.Matrix.encode(message.transforms[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                                if (message.detectedBarcodes != null && message.detectedBarcodes.length)
                                    for (var i = 0; i < message.detectedBarcodes.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Page.DetectedBarcode.encode(message.detectedBarcodes[i], writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                                if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                    $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                                if (message.imageQualityScores != null && Object.hasOwnProperty.call(message, "imageQualityScores"))
                                    $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.encode(message.imageQualityScores, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Page message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IPage} message Page message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Page.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Page message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.Page} Page
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Page.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.pageNumber = reader.int32();
                                            break;
                                        }
                                    case 13: {
                                            message.image = $root.google.cloud.documentai.v1.Document.Page.Image.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 14: {
                                            if (!(message.transforms && message.transforms.length))
                                                message.transforms = [];
                                            message.transforms.push($root.google.cloud.documentai.v1.Document.Page.Matrix.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            message.dimension = $root.google.cloud.documentai.v1.Document.Page.Dimension.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                message.detectedLanguages = [];
                                            message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 5: {
                                            if (!(message.blocks && message.blocks.length))
                                                message.blocks = [];
                                            message.blocks.push($root.google.cloud.documentai.v1.Document.Page.Block.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 6: {
                                            if (!(message.paragraphs && message.paragraphs.length))
                                                message.paragraphs = [];
                                            message.paragraphs.push($root.google.cloud.documentai.v1.Document.Page.Paragraph.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 7: {
                                            if (!(message.lines && message.lines.length))
                                                message.lines = [];
                                            message.lines.push($root.google.cloud.documentai.v1.Document.Page.Line.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 8: {
                                            if (!(message.tokens && message.tokens.length))
                                                message.tokens = [];
                                            message.tokens.push($root.google.cloud.documentai.v1.Document.Page.Token.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 9: {
                                            if (!(message.visualElements && message.visualElements.length))
                                                message.visualElements = [];
                                            message.visualElements.push($root.google.cloud.documentai.v1.Document.Page.VisualElement.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 10: {
                                            if (!(message.tables && message.tables.length))
                                                message.tables = [];
                                            message.tables.push($root.google.cloud.documentai.v1.Document.Page.Table.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 11: {
                                            if (!(message.formFields && message.formFields.length))
                                                message.formFields = [];
                                            message.formFields.push($root.google.cloud.documentai.v1.Document.Page.FormField.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 12: {
                                            if (!(message.symbols && message.symbols.length))
                                                message.symbols = [];
                                            message.symbols.push($root.google.cloud.documentai.v1.Document.Page.Symbol.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 15: {
                                            if (!(message.detectedBarcodes && message.detectedBarcodes.length))
                                                message.detectedBarcodes = [];
                                            message.detectedBarcodes.push($root.google.cloud.documentai.v1.Document.Page.DetectedBarcode.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 17: {
                                            message.imageQualityScores = $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 16: {
                                            message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Page message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.Page} Page
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Page.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Page message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Page.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.pageNumber != null && message.hasOwnProperty("pageNumber"))
                                    if (!$util.isInteger(message.pageNumber))
                                        return "pageNumber: integer expected";
                                if (message.image != null && message.hasOwnProperty("image")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Page.Image.verify(message.image);
                                    if (error)
                                        return "image." + error;
                                }
                                if (message.transforms != null && message.hasOwnProperty("transforms")) {
                                    if (!Array.isArray(message.transforms))
                                        return "transforms: array expected";
                                    for (var i = 0; i < message.transforms.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Matrix.verify(message.transforms[i]);
                                        if (error)
                                            return "transforms." + error;
                                    }
                                }
                                if (message.dimension != null && message.hasOwnProperty("dimension")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Page.Dimension.verify(message.dimension);
                                    if (error)
                                        return "dimension." + error;
                                }
                                if (message.layout != null && message.hasOwnProperty("layout")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                    if (error)
                                        return "layout." + error;
                                }
                                if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                    if (!Array.isArray(message.detectedLanguages))
                                        return "detectedLanguages: array expected";
                                    for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                        if (error)
                                            return "detectedLanguages." + error;
                                    }
                                }
                                if (message.blocks != null && message.hasOwnProperty("blocks")) {
                                    if (!Array.isArray(message.blocks))
                                        return "blocks: array expected";
                                    for (var i = 0; i < message.blocks.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Block.verify(message.blocks[i]);
                                        if (error)
                                            return "blocks." + error;
                                    }
                                }
                                if (message.paragraphs != null && message.hasOwnProperty("paragraphs")) {
                                    if (!Array.isArray(message.paragraphs))
                                        return "paragraphs: array expected";
                                    for (var i = 0; i < message.paragraphs.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Paragraph.verify(message.paragraphs[i]);
                                        if (error)
                                            return "paragraphs." + error;
                                    }
                                }
                                if (message.lines != null && message.hasOwnProperty("lines")) {
                                    if (!Array.isArray(message.lines))
                                        return "lines: array expected";
                                    for (var i = 0; i < message.lines.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Line.verify(message.lines[i]);
                                        if (error)
                                            return "lines." + error;
                                    }
                                }
                                if (message.tokens != null && message.hasOwnProperty("tokens")) {
                                    if (!Array.isArray(message.tokens))
                                        return "tokens: array expected";
                                    for (var i = 0; i < message.tokens.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Token.verify(message.tokens[i]);
                                        if (error)
                                            return "tokens." + error;
                                    }
                                }
                                if (message.visualElements != null && message.hasOwnProperty("visualElements")) {
                                    if (!Array.isArray(message.visualElements))
                                        return "visualElements: array expected";
                                    for (var i = 0; i < message.visualElements.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.VisualElement.verify(message.visualElements[i]);
                                        if (error)
                                            return "visualElements." + error;
                                    }
                                }
                                if (message.tables != null && message.hasOwnProperty("tables")) {
                                    if (!Array.isArray(message.tables))
                                        return "tables: array expected";
                                    for (var i = 0; i < message.tables.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Table.verify(message.tables[i]);
                                        if (error)
                                            return "tables." + error;
                                    }
                                }
                                if (message.formFields != null && message.hasOwnProperty("formFields")) {
                                    if (!Array.isArray(message.formFields))
                                        return "formFields: array expected";
                                    for (var i = 0; i < message.formFields.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.FormField.verify(message.formFields[i]);
                                        if (error)
                                            return "formFields." + error;
                                    }
                                }
                                if (message.symbols != null && message.hasOwnProperty("symbols")) {
                                    if (!Array.isArray(message.symbols))
                                        return "symbols: array expected";
                                    for (var i = 0; i < message.symbols.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Symbol.verify(message.symbols[i]);
                                        if (error)
                                            return "symbols." + error;
                                    }
                                }
                                if (message.detectedBarcodes != null && message.hasOwnProperty("detectedBarcodes")) {
                                    if (!Array.isArray(message.detectedBarcodes))
                                        return "detectedBarcodes: array expected";
                                    for (var i = 0; i < message.detectedBarcodes.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.DetectedBarcode.verify(message.detectedBarcodes[i]);
                                        if (error)
                                            return "detectedBarcodes." + error;
                                    }
                                }
                                if (message.imageQualityScores != null && message.hasOwnProperty("imageQualityScores")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.verify(message.imageQualityScores);
                                    if (error)
                                        return "imageQualityScores." + error;
                                }
                                if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                    if (error)
                                        return "provenance." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a Page message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.Page} Page
                             */
                            Page.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.Page)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.Page();
                                if (object.pageNumber != null)
                                    message.pageNumber = object.pageNumber | 0;
                                if (object.image != null) {
                                    if (typeof object.image !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.image: object expected");
                                    message.image = $root.google.cloud.documentai.v1.Document.Page.Image.fromObject(object.image);
                                }
                                if (object.transforms) {
                                    if (!Array.isArray(object.transforms))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.transforms: array expected");
                                    message.transforms = [];
                                    for (var i = 0; i < object.transforms.length; ++i) {
                                        if (typeof object.transforms[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.transforms: object expected");
                                        message.transforms[i] = $root.google.cloud.documentai.v1.Document.Page.Matrix.fromObject(object.transforms[i]);
                                    }
                                }
                                if (object.dimension != null) {
                                    if (typeof object.dimension !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.dimension: object expected");
                                    message.dimension = $root.google.cloud.documentai.v1.Document.Page.Dimension.fromObject(object.dimension);
                                }
                                if (object.layout != null) {
                                    if (typeof object.layout !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.layout: object expected");
                                    message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                }
                                if (object.detectedLanguages) {
                                    if (!Array.isArray(object.detectedLanguages))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.detectedLanguages: array expected");
                                    message.detectedLanguages = [];
                                    for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                        if (typeof object.detectedLanguages[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.detectedLanguages: object expected");
                                        message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                    }
                                }
                                if (object.blocks) {
                                    if (!Array.isArray(object.blocks))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.blocks: array expected");
                                    message.blocks = [];
                                    for (var i = 0; i < object.blocks.length; ++i) {
                                        if (typeof object.blocks[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.blocks: object expected");
                                        message.blocks[i] = $root.google.cloud.documentai.v1.Document.Page.Block.fromObject(object.blocks[i]);
                                    }
                                }
                                if (object.paragraphs) {
                                    if (!Array.isArray(object.paragraphs))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.paragraphs: array expected");
                                    message.paragraphs = [];
                                    for (var i = 0; i < object.paragraphs.length; ++i) {
                                        if (typeof object.paragraphs[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.paragraphs: object expected");
                                        message.paragraphs[i] = $root.google.cloud.documentai.v1.Document.Page.Paragraph.fromObject(object.paragraphs[i]);
                                    }
                                }
                                if (object.lines) {
                                    if (!Array.isArray(object.lines))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.lines: array expected");
                                    message.lines = [];
                                    for (var i = 0; i < object.lines.length; ++i) {
                                        if (typeof object.lines[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.lines: object expected");
                                        message.lines[i] = $root.google.cloud.documentai.v1.Document.Page.Line.fromObject(object.lines[i]);
                                    }
                                }
                                if (object.tokens) {
                                    if (!Array.isArray(object.tokens))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.tokens: array expected");
                                    message.tokens = [];
                                    for (var i = 0; i < object.tokens.length; ++i) {
                                        if (typeof object.tokens[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.tokens: object expected");
                                        message.tokens[i] = $root.google.cloud.documentai.v1.Document.Page.Token.fromObject(object.tokens[i]);
                                    }
                                }
                                if (object.visualElements) {
                                    if (!Array.isArray(object.visualElements))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.visualElements: array expected");
                                    message.visualElements = [];
                                    for (var i = 0; i < object.visualElements.length; ++i) {
                                        if (typeof object.visualElements[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.visualElements: object expected");
                                        message.visualElements[i] = $root.google.cloud.documentai.v1.Document.Page.VisualElement.fromObject(object.visualElements[i]);
                                    }
                                }
                                if (object.tables) {
                                    if (!Array.isArray(object.tables))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.tables: array expected");
                                    message.tables = [];
                                    for (var i = 0; i < object.tables.length; ++i) {
                                        if (typeof object.tables[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.tables: object expected");
                                        message.tables[i] = $root.google.cloud.documentai.v1.Document.Page.Table.fromObject(object.tables[i]);
                                    }
                                }
                                if (object.formFields) {
                                    if (!Array.isArray(object.formFields))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.formFields: array expected");
                                    message.formFields = [];
                                    for (var i = 0; i < object.formFields.length; ++i) {
                                        if (typeof object.formFields[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.formFields: object expected");
                                        message.formFields[i] = $root.google.cloud.documentai.v1.Document.Page.FormField.fromObject(object.formFields[i]);
                                    }
                                }
                                if (object.symbols) {
                                    if (!Array.isArray(object.symbols))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.symbols: array expected");
                                    message.symbols = [];
                                    for (var i = 0; i < object.symbols.length; ++i) {
                                        if (typeof object.symbols[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.symbols: object expected");
                                        message.symbols[i] = $root.google.cloud.documentai.v1.Document.Page.Symbol.fromObject(object.symbols[i]);
                                    }
                                }
                                if (object.detectedBarcodes) {
                                    if (!Array.isArray(object.detectedBarcodes))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.detectedBarcodes: array expected");
                                    message.detectedBarcodes = [];
                                    for (var i = 0; i < object.detectedBarcodes.length; ++i) {
                                        if (typeof object.detectedBarcodes[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.detectedBarcodes: object expected");
                                        message.detectedBarcodes[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedBarcode.fromObject(object.detectedBarcodes[i]);
                                    }
                                }
                                if (object.imageQualityScores != null) {
                                    if (typeof object.imageQualityScores !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.imageQualityScores: object expected");
                                    message.imageQualityScores = $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.fromObject(object.imageQualityScores);
                                }
                                if (object.provenance != null) {
                                    if (typeof object.provenance !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Page.provenance: object expected");
                                    message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Page message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {google.cloud.documentai.v1.Document.Page} message Page
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Page.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.detectedLanguages = [];
                                    object.blocks = [];
                                    object.paragraphs = [];
                                    object.lines = [];
                                    object.tokens = [];
                                    object.visualElements = [];
                                    object.tables = [];
                                    object.formFields = [];
                                    object.symbols = [];
                                    object.transforms = [];
                                    object.detectedBarcodes = [];
                                }
                                if (options.defaults) {
                                    object.pageNumber = 0;
                                    object.dimension = null;
                                    object.layout = null;
                                    object.image = null;
                                    object.provenance = null;
                                    object.imageQualityScores = null;
                                }
                                if (message.pageNumber != null && message.hasOwnProperty("pageNumber"))
                                    object.pageNumber = message.pageNumber;
                                if (message.dimension != null && message.hasOwnProperty("dimension"))
                                    object.dimension = $root.google.cloud.documentai.v1.Document.Page.Dimension.toObject(message.dimension, options);
                                if (message.layout != null && message.hasOwnProperty("layout"))
                                    object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                if (message.detectedLanguages && message.detectedLanguages.length) {
                                    object.detectedLanguages = [];
                                    for (var j = 0; j < message.detectedLanguages.length; ++j)
                                        object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                }
                                if (message.blocks && message.blocks.length) {
                                    object.blocks = [];
                                    for (var j = 0; j < message.blocks.length; ++j)
                                        object.blocks[j] = $root.google.cloud.documentai.v1.Document.Page.Block.toObject(message.blocks[j], options);
                                }
                                if (message.paragraphs && message.paragraphs.length) {
                                    object.paragraphs = [];
                                    for (var j = 0; j < message.paragraphs.length; ++j)
                                        object.paragraphs[j] = $root.google.cloud.documentai.v1.Document.Page.Paragraph.toObject(message.paragraphs[j], options);
                                }
                                if (message.lines && message.lines.length) {
                                    object.lines = [];
                                    for (var j = 0; j < message.lines.length; ++j)
                                        object.lines[j] = $root.google.cloud.documentai.v1.Document.Page.Line.toObject(message.lines[j], options);
                                }
                                if (message.tokens && message.tokens.length) {
                                    object.tokens = [];
                                    for (var j = 0; j < message.tokens.length; ++j)
                                        object.tokens[j] = $root.google.cloud.documentai.v1.Document.Page.Token.toObject(message.tokens[j], options);
                                }
                                if (message.visualElements && message.visualElements.length) {
                                    object.visualElements = [];
                                    for (var j = 0; j < message.visualElements.length; ++j)
                                        object.visualElements[j] = $root.google.cloud.documentai.v1.Document.Page.VisualElement.toObject(message.visualElements[j], options);
                                }
                                if (message.tables && message.tables.length) {
                                    object.tables = [];
                                    for (var j = 0; j < message.tables.length; ++j)
                                        object.tables[j] = $root.google.cloud.documentai.v1.Document.Page.Table.toObject(message.tables[j], options);
                                }
                                if (message.formFields && message.formFields.length) {
                                    object.formFields = [];
                                    for (var j = 0; j < message.formFields.length; ++j)
                                        object.formFields[j] = $root.google.cloud.documentai.v1.Document.Page.FormField.toObject(message.formFields[j], options);
                                }
                                if (message.symbols && message.symbols.length) {
                                    object.symbols = [];
                                    for (var j = 0; j < message.symbols.length; ++j)
                                        object.symbols[j] = $root.google.cloud.documentai.v1.Document.Page.Symbol.toObject(message.symbols[j], options);
                                }
                                if (message.image != null && message.hasOwnProperty("image"))
                                    object.image = $root.google.cloud.documentai.v1.Document.Page.Image.toObject(message.image, options);
                                if (message.transforms && message.transforms.length) {
                                    object.transforms = [];
                                    for (var j = 0; j < message.transforms.length; ++j)
                                        object.transforms[j] = $root.google.cloud.documentai.v1.Document.Page.Matrix.toObject(message.transforms[j], options);
                                }
                                if (message.detectedBarcodes && message.detectedBarcodes.length) {
                                    object.detectedBarcodes = [];
                                    for (var j = 0; j < message.detectedBarcodes.length; ++j)
                                        object.detectedBarcodes[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedBarcode.toObject(message.detectedBarcodes[j], options);
                                }
                                if (message.provenance != null && message.hasOwnProperty("provenance"))
                                    object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                if (message.imageQualityScores != null && message.hasOwnProperty("imageQualityScores"))
                                    object.imageQualityScores = $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.toObject(message.imageQualityScores, options);
                                return object;
                            };
    
                            /**
                             * Converts this Page to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Page.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Page
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.Page
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Page.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page";
                            };
    
                            Page.Dimension = (function() {
    
                                /**
                                 * Properties of a Dimension.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IDimension
                                 * @property {number|null} [width] Dimension width
                                 * @property {number|null} [height] Dimension height
                                 * @property {string|null} [unit] Dimension unit
                                 */
    
                                /**
                                 * Constructs a new Dimension.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Dimension.
                                 * @implements IDimension
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IDimension=} [properties] Properties to set
                                 */
                                function Dimension(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Dimension width.
                                 * @member {number} width
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @instance
                                 */
                                Dimension.prototype.width = 0;
    
                                /**
                                 * Dimension height.
                                 * @member {number} height
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @instance
                                 */
                                Dimension.prototype.height = 0;
    
                                /**
                                 * Dimension unit.
                                 * @member {string} unit
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @instance
                                 */
                                Dimension.prototype.unit = "";
    
                                /**
                                 * Creates a new Dimension instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDimension=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Dimension} Dimension instance
                                 */
                                Dimension.create = function create(properties) {
                                    return new Dimension(properties);
                                };
    
                                /**
                                 * Encodes the specified Dimension message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Dimension.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDimension} message Dimension message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Dimension.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.width != null && Object.hasOwnProperty.call(message, "width"))
                                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.width);
                                    if (message.height != null && Object.hasOwnProperty.call(message, "height"))
                                        writer.uint32(/* id 2, wireType 5 =*/21).float(message.height);
                                    if (message.unit != null && Object.hasOwnProperty.call(message, "unit"))
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.unit);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Dimension message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Dimension.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDimension} message Dimension message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Dimension.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Dimension message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Dimension} Dimension
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Dimension.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Dimension();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.width = reader.float();
                                                break;
                                            }
                                        case 2: {
                                                message.height = reader.float();
                                                break;
                                            }
                                        case 3: {
                                                message.unit = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Dimension message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Dimension} Dimension
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Dimension.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Dimension message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Dimension.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.width != null && message.hasOwnProperty("width"))
                                        if (typeof message.width !== "number")
                                            return "width: number expected";
                                    if (message.height != null && message.hasOwnProperty("height"))
                                        if (typeof message.height !== "number")
                                            return "height: number expected";
                                    if (message.unit != null && message.hasOwnProperty("unit"))
                                        if (!$util.isString(message.unit))
                                            return "unit: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a Dimension message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Dimension} Dimension
                                 */
                                Dimension.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Dimension)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Dimension();
                                    if (object.width != null)
                                        message.width = Number(object.width);
                                    if (object.height != null)
                                        message.height = Number(object.height);
                                    if (object.unit != null)
                                        message.unit = String(object.unit);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Dimension message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Dimension} message Dimension
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Dimension.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.width = 0;
                                        object.height = 0;
                                        object.unit = "";
                                    }
                                    if (message.width != null && message.hasOwnProperty("width"))
                                        object.width = options.json && !isFinite(message.width) ? String(message.width) : message.width;
                                    if (message.height != null && message.hasOwnProperty("height"))
                                        object.height = options.json && !isFinite(message.height) ? String(message.height) : message.height;
                                    if (message.unit != null && message.hasOwnProperty("unit"))
                                        object.unit = message.unit;
                                    return object;
                                };
    
                                /**
                                 * Converts this Dimension to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Dimension.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Dimension
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Dimension
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Dimension.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Dimension";
                                };
    
                                return Dimension;
                            })();
    
                            Page.Image = (function() {
    
                                /**
                                 * Properties of an Image.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IImage
                                 * @property {Uint8Array|null} [content] Image content
                                 * @property {string|null} [mimeType] Image mimeType
                                 * @property {number|null} [width] Image width
                                 * @property {number|null} [height] Image height
                                 */
    
                                /**
                                 * Constructs a new Image.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents an Image.
                                 * @implements IImage
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IImage=} [properties] Properties to set
                                 */
                                function Image(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Image content.
                                 * @member {Uint8Array} content
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @instance
                                 */
                                Image.prototype.content = $util.newBuffer([]);
    
                                /**
                                 * Image mimeType.
                                 * @member {string} mimeType
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @instance
                                 */
                                Image.prototype.mimeType = "";
    
                                /**
                                 * Image width.
                                 * @member {number} width
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @instance
                                 */
                                Image.prototype.width = 0;
    
                                /**
                                 * Image height.
                                 * @member {number} height
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @instance
                                 */
                                Image.prototype.height = 0;
    
                                /**
                                 * Creates a new Image instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IImage=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Image} Image instance
                                 */
                                Image.create = function create(properties) {
                                    return new Image(properties);
                                };
    
                                /**
                                 * Encodes the specified Image message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Image.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IImage} message Image message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Image.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.content);
                                    if (message.mimeType != null && Object.hasOwnProperty.call(message, "mimeType"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.mimeType);
                                    if (message.width != null && Object.hasOwnProperty.call(message, "width"))
                                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.width);
                                    if (message.height != null && Object.hasOwnProperty.call(message, "height"))
                                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.height);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Image message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Image.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IImage} message Image message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Image.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an Image message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Image} Image
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Image.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Image();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.content = reader.bytes();
                                                break;
                                            }
                                        case 2: {
                                                message.mimeType = reader.string();
                                                break;
                                            }
                                        case 3: {
                                                message.width = reader.int32();
                                                break;
                                            }
                                        case 4: {
                                                message.height = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an Image message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Image} Image
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Image.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an Image message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Image.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.content != null && message.hasOwnProperty("content"))
                                        if (!(message.content && typeof message.content.length === "number" || $util.isString(message.content)))
                                            return "content: buffer expected";
                                    if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                        if (!$util.isString(message.mimeType))
                                            return "mimeType: string expected";
                                    if (message.width != null && message.hasOwnProperty("width"))
                                        if (!$util.isInteger(message.width))
                                            return "width: integer expected";
                                    if (message.height != null && message.hasOwnProperty("height"))
                                        if (!$util.isInteger(message.height))
                                            return "height: integer expected";
                                    return null;
                                };
    
                                /**
                                 * Creates an Image message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Image} Image
                                 */
                                Image.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Image)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Image();
                                    if (object.content != null)
                                        if (typeof object.content === "string")
                                            $util.base64.decode(object.content, message.content = $util.newBuffer($util.base64.length(object.content)), 0);
                                        else if (object.content.length >= 0)
                                            message.content = object.content;
                                    if (object.mimeType != null)
                                        message.mimeType = String(object.mimeType);
                                    if (object.width != null)
                                        message.width = object.width | 0;
                                    if (object.height != null)
                                        message.height = object.height | 0;
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an Image message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Image} message Image
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Image.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        if (options.bytes === String)
                                            object.content = "";
                                        else {
                                            object.content = [];
                                            if (options.bytes !== Array)
                                                object.content = $util.newBuffer(object.content);
                                        }
                                        object.mimeType = "";
                                        object.width = 0;
                                        object.height = 0;
                                    }
                                    if (message.content != null && message.hasOwnProperty("content"))
                                        object.content = options.bytes === String ? $util.base64.encode(message.content, 0, message.content.length) : options.bytes === Array ? Array.prototype.slice.call(message.content) : message.content;
                                    if (message.mimeType != null && message.hasOwnProperty("mimeType"))
                                        object.mimeType = message.mimeType;
                                    if (message.width != null && message.hasOwnProperty("width"))
                                        object.width = message.width;
                                    if (message.height != null && message.hasOwnProperty("height"))
                                        object.height = message.height;
                                    return object;
                                };
    
                                /**
                                 * Converts this Image to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Image.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Image
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Image
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Image.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Image";
                                };
    
                                return Image;
                            })();
    
                            Page.Matrix = (function() {
    
                                /**
                                 * Properties of a Matrix.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IMatrix
                                 * @property {number|null} [rows] Matrix rows
                                 * @property {number|null} [cols] Matrix cols
                                 * @property {number|null} [type] Matrix type
                                 * @property {Uint8Array|null} [data] Matrix data
                                 */
    
                                /**
                                 * Constructs a new Matrix.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Matrix.
                                 * @implements IMatrix
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IMatrix=} [properties] Properties to set
                                 */
                                function Matrix(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Matrix rows.
                                 * @member {number} rows
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @instance
                                 */
                                Matrix.prototype.rows = 0;
    
                                /**
                                 * Matrix cols.
                                 * @member {number} cols
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @instance
                                 */
                                Matrix.prototype.cols = 0;
    
                                /**
                                 * Matrix type.
                                 * @member {number} type
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @instance
                                 */
                                Matrix.prototype.type = 0;
    
                                /**
                                 * Matrix data.
                                 * @member {Uint8Array} data
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @instance
                                 */
                                Matrix.prototype.data = $util.newBuffer([]);
    
                                /**
                                 * Creates a new Matrix instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IMatrix=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Matrix} Matrix instance
                                 */
                                Matrix.create = function create(properties) {
                                    return new Matrix(properties);
                                };
    
                                /**
                                 * Encodes the specified Matrix message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Matrix.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IMatrix} message Matrix message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Matrix.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.rows != null && Object.hasOwnProperty.call(message, "rows"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.rows);
                                    if (message.cols != null && Object.hasOwnProperty.call(message, "cols"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.cols);
                                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.type);
                                    if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                                        writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.data);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Matrix message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Matrix.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IMatrix} message Matrix message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Matrix.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Matrix message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Matrix} Matrix
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Matrix.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Matrix();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.rows = reader.int32();
                                                break;
                                            }
                                        case 2: {
                                                message.cols = reader.int32();
                                                break;
                                            }
                                        case 3: {
                                                message.type = reader.int32();
                                                break;
                                            }
                                        case 4: {
                                                message.data = reader.bytes();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Matrix message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Matrix} Matrix
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Matrix.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Matrix message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Matrix.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.rows != null && message.hasOwnProperty("rows"))
                                        if (!$util.isInteger(message.rows))
                                            return "rows: integer expected";
                                    if (message.cols != null && message.hasOwnProperty("cols"))
                                        if (!$util.isInteger(message.cols))
                                            return "cols: integer expected";
                                    if (message.type != null && message.hasOwnProperty("type"))
                                        if (!$util.isInteger(message.type))
                                            return "type: integer expected";
                                    if (message.data != null && message.hasOwnProperty("data"))
                                        if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                                            return "data: buffer expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a Matrix message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Matrix} Matrix
                                 */
                                Matrix.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Matrix)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Matrix();
                                    if (object.rows != null)
                                        message.rows = object.rows | 0;
                                    if (object.cols != null)
                                        message.cols = object.cols | 0;
                                    if (object.type != null)
                                        message.type = object.type | 0;
                                    if (object.data != null)
                                        if (typeof object.data === "string")
                                            $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                                        else if (object.data.length >= 0)
                                            message.data = object.data;
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Matrix message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Matrix} message Matrix
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Matrix.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.rows = 0;
                                        object.cols = 0;
                                        object.type = 0;
                                        if (options.bytes === String)
                                            object.data = "";
                                        else {
                                            object.data = [];
                                            if (options.bytes !== Array)
                                                object.data = $util.newBuffer(object.data);
                                        }
                                    }
                                    if (message.rows != null && message.hasOwnProperty("rows"))
                                        object.rows = message.rows;
                                    if (message.cols != null && message.hasOwnProperty("cols"))
                                        object.cols = message.cols;
                                    if (message.type != null && message.hasOwnProperty("type"))
                                        object.type = message.type;
                                    if (message.data != null && message.hasOwnProperty("data"))
                                        object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                                    return object;
                                };
    
                                /**
                                 * Converts this Matrix to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Matrix.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Matrix
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Matrix
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Matrix.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Matrix";
                                };
    
                                return Matrix;
                            })();
    
                            Page.Layout = (function() {
    
                                /**
                                 * Properties of a Layout.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface ILayout
                                 * @property {google.cloud.documentai.v1.Document.ITextAnchor|null} [textAnchor] Layout textAnchor
                                 * @property {number|null} [confidence] Layout confidence
                                 * @property {google.cloud.documentai.v1.IBoundingPoly|null} [boundingPoly] Layout boundingPoly
                                 * @property {google.cloud.documentai.v1.Document.Page.Layout.Orientation|null} [orientation] Layout orientation
                                 */
    
                                /**
                                 * Constructs a new Layout.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Layout.
                                 * @implements ILayout
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.ILayout=} [properties] Properties to set
                                 */
                                function Layout(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Layout textAnchor.
                                 * @member {google.cloud.documentai.v1.Document.ITextAnchor|null|undefined} textAnchor
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @instance
                                 */
                                Layout.prototype.textAnchor = null;
    
                                /**
                                 * Layout confidence.
                                 * @member {number} confidence
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @instance
                                 */
                                Layout.prototype.confidence = 0;
    
                                /**
                                 * Layout boundingPoly.
                                 * @member {google.cloud.documentai.v1.IBoundingPoly|null|undefined} boundingPoly
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @instance
                                 */
                                Layout.prototype.boundingPoly = null;
    
                                /**
                                 * Layout orientation.
                                 * @member {google.cloud.documentai.v1.Document.Page.Layout.Orientation} orientation
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @instance
                                 */
                                Layout.prototype.orientation = 0;
    
                                /**
                                 * Creates a new Layout instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ILayout=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Layout} Layout instance
                                 */
                                Layout.create = function create(properties) {
                                    return new Layout(properties);
                                };
    
                                /**
                                 * Encodes the specified Layout message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Layout.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ILayout} message Layout message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Layout.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.textAnchor != null && Object.hasOwnProperty.call(message, "textAnchor"))
                                        $root.google.cloud.documentai.v1.Document.TextAnchor.encode(message.textAnchor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.confidence != null && Object.hasOwnProperty.call(message, "confidence"))
                                        writer.uint32(/* id 2, wireType 5 =*/21).float(message.confidence);
                                    if (message.boundingPoly != null && Object.hasOwnProperty.call(message, "boundingPoly"))
                                        $root.google.cloud.documentai.v1.BoundingPoly.encode(message.boundingPoly, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    if (message.orientation != null && Object.hasOwnProperty.call(message, "orientation"))
                                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.orientation);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Layout message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Layout.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ILayout} message Layout message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Layout.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Layout message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Layout} Layout
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Layout.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Layout();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.confidence = reader.float();
                                                break;
                                            }
                                        case 3: {
                                                message.boundingPoly = $root.google.cloud.documentai.v1.BoundingPoly.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 4: {
                                                message.orientation = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Layout message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Layout} Layout
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Layout.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Layout message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Layout.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.textAnchor != null && message.hasOwnProperty("textAnchor")) {
                                        var error = $root.google.cloud.documentai.v1.Document.TextAnchor.verify(message.textAnchor);
                                        if (error)
                                            return "textAnchor." + error;
                                    }
                                    if (message.confidence != null && message.hasOwnProperty("confidence"))
                                        if (typeof message.confidence !== "number")
                                            return "confidence: number expected";
                                    if (message.boundingPoly != null && message.hasOwnProperty("boundingPoly")) {
                                        var error = $root.google.cloud.documentai.v1.BoundingPoly.verify(message.boundingPoly);
                                        if (error)
                                            return "boundingPoly." + error;
                                    }
                                    if (message.orientation != null && message.hasOwnProperty("orientation"))
                                        switch (message.orientation) {
                                        default:
                                            return "orientation: enum value expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                            break;
                                        }
                                    return null;
                                };
    
                                /**
                                 * Creates a Layout message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Layout} Layout
                                 */
                                Layout.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Layout)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Layout();
                                    if (object.textAnchor != null) {
                                        if (typeof object.textAnchor !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Layout.textAnchor: object expected");
                                        message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.fromObject(object.textAnchor);
                                    }
                                    if (object.confidence != null)
                                        message.confidence = Number(object.confidence);
                                    if (object.boundingPoly != null) {
                                        if (typeof object.boundingPoly !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Layout.boundingPoly: object expected");
                                        message.boundingPoly = $root.google.cloud.documentai.v1.BoundingPoly.fromObject(object.boundingPoly);
                                    }
                                    switch (object.orientation) {
                                    default:
                                        if (typeof object.orientation === "number") {
                                            message.orientation = object.orientation;
                                            break;
                                        }
                                        break;
                                    case "ORIENTATION_UNSPECIFIED":
                                    case 0:
                                        message.orientation = 0;
                                        break;
                                    case "PAGE_UP":
                                    case 1:
                                        message.orientation = 1;
                                        break;
                                    case "PAGE_RIGHT":
                                    case 2:
                                        message.orientation = 2;
                                        break;
                                    case "PAGE_DOWN":
                                    case 3:
                                        message.orientation = 3;
                                        break;
                                    case "PAGE_LEFT":
                                    case 4:
                                        message.orientation = 4;
                                        break;
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Layout message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Layout} message Layout
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Layout.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.textAnchor = null;
                                        object.confidence = 0;
                                        object.boundingPoly = null;
                                        object.orientation = options.enums === String ? "ORIENTATION_UNSPECIFIED" : 0;
                                    }
                                    if (message.textAnchor != null && message.hasOwnProperty("textAnchor"))
                                        object.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.toObject(message.textAnchor, options);
                                    if (message.confidence != null && message.hasOwnProperty("confidence"))
                                        object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;
                                    if (message.boundingPoly != null && message.hasOwnProperty("boundingPoly"))
                                        object.boundingPoly = $root.google.cloud.documentai.v1.BoundingPoly.toObject(message.boundingPoly, options);
                                    if (message.orientation != null && message.hasOwnProperty("orientation"))
                                        object.orientation = options.enums === String ? $root.google.cloud.documentai.v1.Document.Page.Layout.Orientation[message.orientation] === undefined ? message.orientation : $root.google.cloud.documentai.v1.Document.Page.Layout.Orientation[message.orientation] : message.orientation;
                                    return object;
                                };
    
                                /**
                                 * Converts this Layout to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Layout.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Layout
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Layout
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Layout.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Layout";
                                };
    
                                /**
                                 * Orientation enum.
                                 * @name google.cloud.documentai.v1.Document.Page.Layout.Orientation
                                 * @enum {number}
                                 * @property {number} ORIENTATION_UNSPECIFIED=0 ORIENTATION_UNSPECIFIED value
                                 * @property {number} PAGE_UP=1 PAGE_UP value
                                 * @property {number} PAGE_RIGHT=2 PAGE_RIGHT value
                                 * @property {number} PAGE_DOWN=3 PAGE_DOWN value
                                 * @property {number} PAGE_LEFT=4 PAGE_LEFT value
                                 */
                                Layout.Orientation = (function() {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "ORIENTATION_UNSPECIFIED"] = 0;
                                    values[valuesById[1] = "PAGE_UP"] = 1;
                                    values[valuesById[2] = "PAGE_RIGHT"] = 2;
                                    values[valuesById[3] = "PAGE_DOWN"] = 3;
                                    values[valuesById[4] = "PAGE_LEFT"] = 4;
                                    return values;
                                })();
    
                                return Layout;
                            })();
    
                            Page.Block = (function() {
    
                                /**
                                 * Properties of a Block.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IBlock
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] Block layout
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] Block detectedLanguages
                                 * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] Block provenance
                                 */
    
                                /**
                                 * Constructs a new Block.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Block.
                                 * @implements IBlock
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IBlock=} [properties] Properties to set
                                 */
                                function Block(properties) {
                                    this.detectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Block layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @instance
                                 */
                                Block.prototype.layout = null;
    
                                /**
                                 * Block detectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @instance
                                 */
                                Block.prototype.detectedLanguages = $util.emptyArray;
    
                                /**
                                 * Block provenance.
                                 * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @instance
                                 */
                                Block.prototype.provenance = null;
    
                                /**
                                 * Creates a new Block instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IBlock=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Block} Block instance
                                 */
                                Block.create = function create(properties) {
                                    return new Block(properties);
                                };
    
                                /**
                                 * Encodes the specified Block message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Block.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IBlock} message Block message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Block.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.detectedLanguages != null && message.detectedLanguages.length)
                                        for (var i = 0; i < message.detectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                        $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Block message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Block.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IBlock} message Block message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Block.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Block message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Block} Block
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Block.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Block();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                    message.detectedLanguages = [];
                                                message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 3: {
                                                message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Block message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Block} Block
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Block.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Block message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Block.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                        if (!Array.isArray(message.detectedLanguages))
                                            return "detectedLanguages: array expected";
                                        for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                            if (error)
                                                return "detectedLanguages." + error;
                                        }
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                        if (error)
                                            return "provenance." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a Block message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Block} Block
                                 */
                                Block.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Block)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Block();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Block.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.detectedLanguages) {
                                        if (!Array.isArray(object.detectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Block.detectedLanguages: array expected");
                                        message.detectedLanguages = [];
                                        for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                            if (typeof object.detectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Block.detectedLanguages: object expected");
                                            message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                        }
                                    }
                                    if (object.provenance != null) {
                                        if (typeof object.provenance !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Block.provenance: object expected");
                                        message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Block message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Block} message Block
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Block.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.detectedLanguages = [];
                                    if (options.defaults) {
                                        object.layout = null;
                                        object.provenance = null;
                                    }
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.detectedLanguages && message.detectedLanguages.length) {
                                        object.detectedLanguages = [];
                                        for (var j = 0; j < message.detectedLanguages.length; ++j)
                                            object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance"))
                                        object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this Block to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Block.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Block
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Block
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Block.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Block";
                                };
    
                                return Block;
                            })();
    
                            Page.Paragraph = (function() {
    
                                /**
                                 * Properties of a Paragraph.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IParagraph
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] Paragraph layout
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] Paragraph detectedLanguages
                                 * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] Paragraph provenance
                                 */
    
                                /**
                                 * Constructs a new Paragraph.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Paragraph.
                                 * @implements IParagraph
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IParagraph=} [properties] Properties to set
                                 */
                                function Paragraph(properties) {
                                    this.detectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Paragraph layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @instance
                                 */
                                Paragraph.prototype.layout = null;
    
                                /**
                                 * Paragraph detectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @instance
                                 */
                                Paragraph.prototype.detectedLanguages = $util.emptyArray;
    
                                /**
                                 * Paragraph provenance.
                                 * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @instance
                                 */
                                Paragraph.prototype.provenance = null;
    
                                /**
                                 * Creates a new Paragraph instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IParagraph=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Paragraph} Paragraph instance
                                 */
                                Paragraph.create = function create(properties) {
                                    return new Paragraph(properties);
                                };
    
                                /**
                                 * Encodes the specified Paragraph message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Paragraph.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IParagraph} message Paragraph message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Paragraph.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.detectedLanguages != null && message.detectedLanguages.length)
                                        for (var i = 0; i < message.detectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                        $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Paragraph message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Paragraph.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IParagraph} message Paragraph message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Paragraph.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Paragraph message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Paragraph} Paragraph
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Paragraph.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Paragraph();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                    message.detectedLanguages = [];
                                                message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 3: {
                                                message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Paragraph message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Paragraph} Paragraph
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Paragraph.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Paragraph message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Paragraph.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                        if (!Array.isArray(message.detectedLanguages))
                                            return "detectedLanguages: array expected";
                                        for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                            if (error)
                                                return "detectedLanguages." + error;
                                        }
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                        if (error)
                                            return "provenance." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a Paragraph message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Paragraph} Paragraph
                                 */
                                Paragraph.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Paragraph)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Paragraph();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Paragraph.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.detectedLanguages) {
                                        if (!Array.isArray(object.detectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Paragraph.detectedLanguages: array expected");
                                        message.detectedLanguages = [];
                                        for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                            if (typeof object.detectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Paragraph.detectedLanguages: object expected");
                                            message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                        }
                                    }
                                    if (object.provenance != null) {
                                        if (typeof object.provenance !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Paragraph.provenance: object expected");
                                        message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Paragraph message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Paragraph} message Paragraph
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Paragraph.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.detectedLanguages = [];
                                    if (options.defaults) {
                                        object.layout = null;
                                        object.provenance = null;
                                    }
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.detectedLanguages && message.detectedLanguages.length) {
                                        object.detectedLanguages = [];
                                        for (var j = 0; j < message.detectedLanguages.length; ++j)
                                            object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance"))
                                        object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this Paragraph to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Paragraph.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Paragraph
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Paragraph
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Paragraph.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Paragraph";
                                };
    
                                return Paragraph;
                            })();
    
                            Page.Line = (function() {
    
                                /**
                                 * Properties of a Line.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface ILine
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] Line layout
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] Line detectedLanguages
                                 * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] Line provenance
                                 */
    
                                /**
                                 * Constructs a new Line.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Line.
                                 * @implements ILine
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.ILine=} [properties] Properties to set
                                 */
                                function Line(properties) {
                                    this.detectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Line layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @instance
                                 */
                                Line.prototype.layout = null;
    
                                /**
                                 * Line detectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @instance
                                 */
                                Line.prototype.detectedLanguages = $util.emptyArray;
    
                                /**
                                 * Line provenance.
                                 * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @instance
                                 */
                                Line.prototype.provenance = null;
    
                                /**
                                 * Creates a new Line instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ILine=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Line} Line instance
                                 */
                                Line.create = function create(properties) {
                                    return new Line(properties);
                                };
    
                                /**
                                 * Encodes the specified Line message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Line.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ILine} message Line message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Line.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.detectedLanguages != null && message.detectedLanguages.length)
                                        for (var i = 0; i < message.detectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                        $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Line message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Line.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ILine} message Line message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Line.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Line message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Line} Line
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Line.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Line();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                    message.detectedLanguages = [];
                                                message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 3: {
                                                message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Line message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Line} Line
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Line.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Line message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Line.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                        if (!Array.isArray(message.detectedLanguages))
                                            return "detectedLanguages: array expected";
                                        for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                            if (error)
                                                return "detectedLanguages." + error;
                                        }
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                        if (error)
                                            return "provenance." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a Line message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Line} Line
                                 */
                                Line.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Line)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Line();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Line.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.detectedLanguages) {
                                        if (!Array.isArray(object.detectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Line.detectedLanguages: array expected");
                                        message.detectedLanguages = [];
                                        for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                            if (typeof object.detectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Line.detectedLanguages: object expected");
                                            message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                        }
                                    }
                                    if (object.provenance != null) {
                                        if (typeof object.provenance !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Line.provenance: object expected");
                                        message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Line message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Line} message Line
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Line.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.detectedLanguages = [];
                                    if (options.defaults) {
                                        object.layout = null;
                                        object.provenance = null;
                                    }
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.detectedLanguages && message.detectedLanguages.length) {
                                        object.detectedLanguages = [];
                                        for (var j = 0; j < message.detectedLanguages.length; ++j)
                                            object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance"))
                                        object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this Line to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Line.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Line
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Line
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Line.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Line";
                                };
    
                                return Line;
                            })();
    
                            Page.Token = (function() {
    
                                /**
                                 * Properties of a Token.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IToken
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] Token layout
                                 * @property {google.cloud.documentai.v1.Document.Page.Token.IDetectedBreak|null} [detectedBreak] Token detectedBreak
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] Token detectedLanguages
                                 * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] Token provenance
                                 */
    
                                /**
                                 * Constructs a new Token.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Token.
                                 * @implements IToken
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IToken=} [properties] Properties to set
                                 */
                                function Token(properties) {
                                    this.detectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Token layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @instance
                                 */
                                Token.prototype.layout = null;
    
                                /**
                                 * Token detectedBreak.
                                 * @member {google.cloud.documentai.v1.Document.Page.Token.IDetectedBreak|null|undefined} detectedBreak
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @instance
                                 */
                                Token.prototype.detectedBreak = null;
    
                                /**
                                 * Token detectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @instance
                                 */
                                Token.prototype.detectedLanguages = $util.emptyArray;
    
                                /**
                                 * Token provenance.
                                 * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @instance
                                 */
                                Token.prototype.provenance = null;
    
                                /**
                                 * Creates a new Token instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IToken=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Token} Token instance
                                 */
                                Token.create = function create(properties) {
                                    return new Token(properties);
                                };
    
                                /**
                                 * Encodes the specified Token message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Token.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IToken} message Token message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Token.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.detectedBreak != null && Object.hasOwnProperty.call(message, "detectedBreak"))
                                        $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.encode(message.detectedBreak, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.detectedLanguages != null && message.detectedLanguages.length)
                                        for (var i = 0; i < message.detectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                        $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Token message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Token.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IToken} message Token message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Token.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Token message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Token} Token
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Token.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Token();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.detectedBreak = $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 3: {
                                                if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                    message.detectedLanguages = [];
                                                message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 4: {
                                                message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Token message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Token} Token
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Token.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Token message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Token.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.detectedBreak != null && message.hasOwnProperty("detectedBreak")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.verify(message.detectedBreak);
                                        if (error)
                                            return "detectedBreak." + error;
                                    }
                                    if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                        if (!Array.isArray(message.detectedLanguages))
                                            return "detectedLanguages: array expected";
                                        for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                            if (error)
                                                return "detectedLanguages." + error;
                                        }
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                        if (error)
                                            return "provenance." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a Token message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Token} Token
                                 */
                                Token.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Token)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Token();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Token.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.detectedBreak != null) {
                                        if (typeof object.detectedBreak !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Token.detectedBreak: object expected");
                                        message.detectedBreak = $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.fromObject(object.detectedBreak);
                                    }
                                    if (object.detectedLanguages) {
                                        if (!Array.isArray(object.detectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Token.detectedLanguages: array expected");
                                        message.detectedLanguages = [];
                                        for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                            if (typeof object.detectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Token.detectedLanguages: object expected");
                                            message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                        }
                                    }
                                    if (object.provenance != null) {
                                        if (typeof object.provenance !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Token.provenance: object expected");
                                        message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Token message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Token} message Token
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Token.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.detectedLanguages = [];
                                    if (options.defaults) {
                                        object.layout = null;
                                        object.detectedBreak = null;
                                        object.provenance = null;
                                    }
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.detectedBreak != null && message.hasOwnProperty("detectedBreak"))
                                        object.detectedBreak = $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.toObject(message.detectedBreak, options);
                                    if (message.detectedLanguages && message.detectedLanguages.length) {
                                        object.detectedLanguages = [];
                                        for (var j = 0; j < message.detectedLanguages.length; ++j)
                                            object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance"))
                                        object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this Token to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Token.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Token
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Token
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Token.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Token";
                                };
    
                                Token.DetectedBreak = (function() {
    
                                    /**
                                     * Properties of a DetectedBreak.
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token
                                     * @interface IDetectedBreak
                                     * @property {google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.Type|null} [type] DetectedBreak type
                                     */
    
                                    /**
                                     * Constructs a new DetectedBreak.
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token
                                     * @classdesc Represents a DetectedBreak.
                                     * @implements IDetectedBreak
                                     * @constructor
                                     * @param {google.cloud.documentai.v1.Document.Page.Token.IDetectedBreak=} [properties] Properties to set
                                     */
                                    function DetectedBreak(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }
    
                                    /**
                                     * DetectedBreak type.
                                     * @member {google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.Type} type
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @instance
                                     */
                                    DetectedBreak.prototype.type = 0;
    
                                    /**
                                     * Creates a new DetectedBreak instance using the specified properties.
                                     * @function create
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Token.IDetectedBreak=} [properties] Properties to set
                                     * @returns {google.cloud.documentai.v1.Document.Page.Token.DetectedBreak} DetectedBreak instance
                                     */
                                    DetectedBreak.create = function create(properties) {
                                        return new DetectedBreak(properties);
                                    };
    
                                    /**
                                     * Encodes the specified DetectedBreak message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.verify|verify} messages.
                                     * @function encode
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Token.IDetectedBreak} message DetectedBreak message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    DetectedBreak.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                                        return writer;
                                    };
    
                                    /**
                                     * Encodes the specified DetectedBreak message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Token.IDetectedBreak} message DetectedBreak message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    DetectedBreak.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };
    
                                    /**
                                     * Decodes a DetectedBreak message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {google.cloud.documentai.v1.Document.Page.Token.DetectedBreak} DetectedBreak
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    DetectedBreak.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                            case 1: {
                                                    message.type = reader.int32();
                                                    break;
                                                }
                                            default:
                                                reader.skipType(tag & 7);
                                                break;
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Decodes a DetectedBreak message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {google.cloud.documentai.v1.Document.Page.Token.DetectedBreak} DetectedBreak
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    DetectedBreak.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };
    
                                    /**
                                     * Verifies a DetectedBreak message.
                                     * @function verify
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    DetectedBreak.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.type != null && message.hasOwnProperty("type"))
                                            switch (message.type) {
                                            default:
                                                return "type: enum value expected";
                                            case 0:
                                            case 1:
                                            case 2:
                                            case 3:
                                                break;
                                            }
                                        return null;
                                    };
    
                                    /**
                                     * Creates a DetectedBreak message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {google.cloud.documentai.v1.Document.Page.Token.DetectedBreak} DetectedBreak
                                     */
                                    DetectedBreak.fromObject = function fromObject(object) {
                                        if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak)
                                            return object;
                                        var message = new $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak();
                                        switch (object.type) {
                                        default:
                                            if (typeof object.type === "number") {
                                                message.type = object.type;
                                                break;
                                            }
                                            break;
                                        case "TYPE_UNSPECIFIED":
                                        case 0:
                                            message.type = 0;
                                            break;
                                        case "SPACE":
                                        case 1:
                                            message.type = 1;
                                            break;
                                        case "WIDE_SPACE":
                                        case 2:
                                            message.type = 2;
                                            break;
                                        case "HYPHEN":
                                        case 3:
                                            message.type = 3;
                                            break;
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Creates a plain object from a DetectedBreak message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Token.DetectedBreak} message DetectedBreak
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    DetectedBreak.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults)
                                            object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                        if (message.type != null && message.hasOwnProperty("type"))
                                            object.type = options.enums === String ? $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.Type[message.type] === undefined ? message.type : $root.google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.Type[message.type] : message.type;
                                        return object;
                                    };
    
                                    /**
                                     * Converts this DetectedBreak to JSON.
                                     * @function toJSON
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    DetectedBreak.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };
    
                                    /**
                                     * Gets the default type url for DetectedBreak
                                     * @function getTypeUrl
                                     * @memberof google.cloud.documentai.v1.Document.Page.Token.DetectedBreak
                                     * @static
                                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                     * @returns {string} The default type url
                                     */
                                    DetectedBreak.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                        if (typeUrlPrefix === undefined) {
                                            typeUrlPrefix = "type.googleapis.com";
                                        }
                                        return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Token.DetectedBreak";
                                    };
    
                                    /**
                                     * Type enum.
                                     * @name google.cloud.documentai.v1.Document.Page.Token.DetectedBreak.Type
                                     * @enum {number}
                                     * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                                     * @property {number} SPACE=1 SPACE value
                                     * @property {number} WIDE_SPACE=2 WIDE_SPACE value
                                     * @property {number} HYPHEN=3 HYPHEN value
                                     */
                                    DetectedBreak.Type = (function() {
                                        var valuesById = {}, values = Object.create(valuesById);
                                        values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                                        values[valuesById[1] = "SPACE"] = 1;
                                        values[valuesById[2] = "WIDE_SPACE"] = 2;
                                        values[valuesById[3] = "HYPHEN"] = 3;
                                        return values;
                                    })();
    
                                    return DetectedBreak;
                                })();
    
                                return Token;
                            })();
    
                            Page.Symbol = (function() {
    
                                /**
                                 * Properties of a Symbol.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface ISymbol
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] Symbol layout
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] Symbol detectedLanguages
                                 */
    
                                /**
                                 * Constructs a new Symbol.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Symbol.
                                 * @implements ISymbol
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.ISymbol=} [properties] Properties to set
                                 */
                                function Symbol(properties) {
                                    this.detectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Symbol layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @instance
                                 */
                                Symbol.prototype.layout = null;
    
                                /**
                                 * Symbol detectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @instance
                                 */
                                Symbol.prototype.detectedLanguages = $util.emptyArray;
    
                                /**
                                 * Creates a new Symbol instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ISymbol=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Symbol} Symbol instance
                                 */
                                Symbol.create = function create(properties) {
                                    return new Symbol(properties);
                                };
    
                                /**
                                 * Encodes the specified Symbol message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Symbol.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ISymbol} message Symbol message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Symbol.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.detectedLanguages != null && message.detectedLanguages.length)
                                        for (var i = 0; i < message.detectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Symbol message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Symbol.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ISymbol} message Symbol message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Symbol.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Symbol message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Symbol} Symbol
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Symbol.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Symbol();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                    message.detectedLanguages = [];
                                                message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Symbol message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Symbol} Symbol
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Symbol.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Symbol message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Symbol.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                        if (!Array.isArray(message.detectedLanguages))
                                            return "detectedLanguages: array expected";
                                        for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                            if (error)
                                                return "detectedLanguages." + error;
                                        }
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a Symbol message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Symbol} Symbol
                                 */
                                Symbol.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Symbol)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Symbol();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Symbol.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.detectedLanguages) {
                                        if (!Array.isArray(object.detectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Symbol.detectedLanguages: array expected");
                                        message.detectedLanguages = [];
                                        for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                            if (typeof object.detectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Symbol.detectedLanguages: object expected");
                                            message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Symbol message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Symbol} message Symbol
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Symbol.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.detectedLanguages = [];
                                    if (options.defaults)
                                        object.layout = null;
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.detectedLanguages && message.detectedLanguages.length) {
                                        object.detectedLanguages = [];
                                        for (var j = 0; j < message.detectedLanguages.length; ++j)
                                            object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this Symbol to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Symbol.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Symbol
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Symbol
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Symbol.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Symbol";
                                };
    
                                return Symbol;
                            })();
    
                            Page.VisualElement = (function() {
    
                                /**
                                 * Properties of a VisualElement.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IVisualElement
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] VisualElement layout
                                 * @property {string|null} [type] VisualElement type
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] VisualElement detectedLanguages
                                 */
    
                                /**
                                 * Constructs a new VisualElement.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a VisualElement.
                                 * @implements IVisualElement
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IVisualElement=} [properties] Properties to set
                                 */
                                function VisualElement(properties) {
                                    this.detectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * VisualElement layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @instance
                                 */
                                VisualElement.prototype.layout = null;
    
                                /**
                                 * VisualElement type.
                                 * @member {string} type
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @instance
                                 */
                                VisualElement.prototype.type = "";
    
                                /**
                                 * VisualElement detectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @instance
                                 */
                                VisualElement.prototype.detectedLanguages = $util.emptyArray;
    
                                /**
                                 * Creates a new VisualElement instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IVisualElement=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.VisualElement} VisualElement instance
                                 */
                                VisualElement.create = function create(properties) {
                                    return new VisualElement(properties);
                                };
    
                                /**
                                 * Encodes the specified VisualElement message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.VisualElement.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IVisualElement} message VisualElement message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                VisualElement.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);
                                    if (message.detectedLanguages != null && message.detectedLanguages.length)
                                        for (var i = 0; i < message.detectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified VisualElement message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.VisualElement.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IVisualElement} message VisualElement message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                VisualElement.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a VisualElement message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.VisualElement} VisualElement
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                VisualElement.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.VisualElement();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.type = reader.string();
                                                break;
                                            }
                                        case 3: {
                                                if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                    message.detectedLanguages = [];
                                                message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a VisualElement message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.VisualElement} VisualElement
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                VisualElement.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a VisualElement message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                VisualElement.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.type != null && message.hasOwnProperty("type"))
                                        if (!$util.isString(message.type))
                                            return "type: string expected";
                                    if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                        if (!Array.isArray(message.detectedLanguages))
                                            return "detectedLanguages: array expected";
                                        for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                            if (error)
                                                return "detectedLanguages." + error;
                                        }
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a VisualElement message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.VisualElement} VisualElement
                                 */
                                VisualElement.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.VisualElement)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.VisualElement();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.VisualElement.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.type != null)
                                        message.type = String(object.type);
                                    if (object.detectedLanguages) {
                                        if (!Array.isArray(object.detectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.VisualElement.detectedLanguages: array expected");
                                        message.detectedLanguages = [];
                                        for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                            if (typeof object.detectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.VisualElement.detectedLanguages: object expected");
                                            message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a VisualElement message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.VisualElement} message VisualElement
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                VisualElement.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.detectedLanguages = [];
                                    if (options.defaults) {
                                        object.layout = null;
                                        object.type = "";
                                    }
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.type != null && message.hasOwnProperty("type"))
                                        object.type = message.type;
                                    if (message.detectedLanguages && message.detectedLanguages.length) {
                                        object.detectedLanguages = [];
                                        for (var j = 0; j < message.detectedLanguages.length; ++j)
                                            object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this VisualElement to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                VisualElement.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for VisualElement
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.VisualElement
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                VisualElement.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.VisualElement";
                                };
    
                                return VisualElement;
                            })();
    
                            Page.Table = (function() {
    
                                /**
                                 * Properties of a Table.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface ITable
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] Table layout
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.Table.ITableRow>|null} [headerRows] Table headerRows
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.Table.ITableRow>|null} [bodyRows] Table bodyRows
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] Table detectedLanguages
                                 * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] Table provenance
                                 */
    
                                /**
                                 * Constructs a new Table.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a Table.
                                 * @implements ITable
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.ITable=} [properties] Properties to set
                                 */
                                function Table(properties) {
                                    this.headerRows = [];
                                    this.bodyRows = [];
                                    this.detectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Table layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @instance
                                 */
                                Table.prototype.layout = null;
    
                                /**
                                 * Table headerRows.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.Table.ITableRow>} headerRows
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @instance
                                 */
                                Table.prototype.headerRows = $util.emptyArray;
    
                                /**
                                 * Table bodyRows.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.Table.ITableRow>} bodyRows
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @instance
                                 */
                                Table.prototype.bodyRows = $util.emptyArray;
    
                                /**
                                 * Table detectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @instance
                                 */
                                Table.prototype.detectedLanguages = $util.emptyArray;
    
                                /**
                                 * Table provenance.
                                 * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @instance
                                 */
                                Table.prototype.provenance = null;
    
                                /**
                                 * Creates a new Table instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ITable=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.Table} Table instance
                                 */
                                Table.create = function create(properties) {
                                    return new Table(properties);
                                };
    
                                /**
                                 * Encodes the specified Table message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Table.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ITable} message Table message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Table.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.headerRows != null && message.headerRows.length)
                                        for (var i = 0; i < message.headerRows.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.encode(message.headerRows[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.bodyRows != null && message.bodyRows.length)
                                        for (var i = 0; i < message.bodyRows.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.encode(message.bodyRows[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    if (message.detectedLanguages != null && message.detectedLanguages.length)
                                        for (var i = 0; i < message.detectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                    if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                        $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Table message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Table.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ITable} message Table message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Table.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Table message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.Table} Table
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Table.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Table();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.headerRows && message.headerRows.length))
                                                    message.headerRows = [];
                                                message.headerRows.push($root.google.cloud.documentai.v1.Document.Page.Table.TableRow.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 3: {
                                                if (!(message.bodyRows && message.bodyRows.length))
                                                    message.bodyRows = [];
                                                message.bodyRows.push($root.google.cloud.documentai.v1.Document.Page.Table.TableRow.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 4: {
                                                if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                    message.detectedLanguages = [];
                                                message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 5: {
                                                message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Table message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.Table} Table
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Table.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Table message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Table.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.headerRows != null && message.hasOwnProperty("headerRows")) {
                                        if (!Array.isArray(message.headerRows))
                                            return "headerRows: array expected";
                                        for (var i = 0; i < message.headerRows.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.verify(message.headerRows[i]);
                                            if (error)
                                                return "headerRows." + error;
                                        }
                                    }
                                    if (message.bodyRows != null && message.hasOwnProperty("bodyRows")) {
                                        if (!Array.isArray(message.bodyRows))
                                            return "bodyRows: array expected";
                                        for (var i = 0; i < message.bodyRows.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.verify(message.bodyRows[i]);
                                            if (error)
                                                return "bodyRows." + error;
                                        }
                                    }
                                    if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                        if (!Array.isArray(message.detectedLanguages))
                                            return "detectedLanguages: array expected";
                                        for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                            if (error)
                                                return "detectedLanguages." + error;
                                        }
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                        if (error)
                                            return "provenance." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a Table message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.Table} Table
                                 */
                                Table.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Table)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.Table();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.headerRows) {
                                        if (!Array.isArray(object.headerRows))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.headerRows: array expected");
                                        message.headerRows = [];
                                        for (var i = 0; i < object.headerRows.length; ++i) {
                                            if (typeof object.headerRows[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.headerRows: object expected");
                                            message.headerRows[i] = $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.fromObject(object.headerRows[i]);
                                        }
                                    }
                                    if (object.bodyRows) {
                                        if (!Array.isArray(object.bodyRows))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.bodyRows: array expected");
                                        message.bodyRows = [];
                                        for (var i = 0; i < object.bodyRows.length; ++i) {
                                            if (typeof object.bodyRows[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.bodyRows: object expected");
                                            message.bodyRows[i] = $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.fromObject(object.bodyRows[i]);
                                        }
                                    }
                                    if (object.detectedLanguages) {
                                        if (!Array.isArray(object.detectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.detectedLanguages: array expected");
                                        message.detectedLanguages = [];
                                        for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                            if (typeof object.detectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.detectedLanguages: object expected");
                                            message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                        }
                                    }
                                    if (object.provenance != null) {
                                        if (typeof object.provenance !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.provenance: object expected");
                                        message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Table message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.Table} message Table
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Table.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults) {
                                        object.headerRows = [];
                                        object.bodyRows = [];
                                        object.detectedLanguages = [];
                                    }
                                    if (options.defaults) {
                                        object.layout = null;
                                        object.provenance = null;
                                    }
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.headerRows && message.headerRows.length) {
                                        object.headerRows = [];
                                        for (var j = 0; j < message.headerRows.length; ++j)
                                            object.headerRows[j] = $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.toObject(message.headerRows[j], options);
                                    }
                                    if (message.bodyRows && message.bodyRows.length) {
                                        object.bodyRows = [];
                                        for (var j = 0; j < message.bodyRows.length; ++j)
                                            object.bodyRows[j] = $root.google.cloud.documentai.v1.Document.Page.Table.TableRow.toObject(message.bodyRows[j], options);
                                    }
                                    if (message.detectedLanguages && message.detectedLanguages.length) {
                                        object.detectedLanguages = [];
                                        for (var j = 0; j < message.detectedLanguages.length; ++j)
                                            object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                    }
                                    if (message.provenance != null && message.hasOwnProperty("provenance"))
                                        object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this Table to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Table.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Table
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.Table
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Table.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Table";
                                };
    
                                Table.TableRow = (function() {
    
                                    /**
                                     * Properties of a TableRow.
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table
                                     * @interface ITableRow
                                     * @property {Array.<google.cloud.documentai.v1.Document.Page.Table.ITableCell>|null} [cells] TableRow cells
                                     */
    
                                    /**
                                     * Constructs a new TableRow.
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table
                                     * @classdesc Represents a TableRow.
                                     * @implements ITableRow
                                     * @constructor
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableRow=} [properties] Properties to set
                                     */
                                    function TableRow(properties) {
                                        this.cells = [];
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }
    
                                    /**
                                     * TableRow cells.
                                     * @member {Array.<google.cloud.documentai.v1.Document.Page.Table.ITableCell>} cells
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @instance
                                     */
                                    TableRow.prototype.cells = $util.emptyArray;
    
                                    /**
                                     * Creates a new TableRow instance using the specified properties.
                                     * @function create
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableRow=} [properties] Properties to set
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableRow} TableRow instance
                                     */
                                    TableRow.create = function create(properties) {
                                        return new TableRow(properties);
                                    };
    
                                    /**
                                     * Encodes the specified TableRow message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Table.TableRow.verify|verify} messages.
                                     * @function encode
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableRow} message TableRow message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    TableRow.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.cells != null && message.cells.length)
                                            for (var i = 0; i < message.cells.length; ++i)
                                                $root.google.cloud.documentai.v1.Document.Page.Table.TableCell.encode(message.cells[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                        return writer;
                                    };
    
                                    /**
                                     * Encodes the specified TableRow message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Table.TableRow.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableRow} message TableRow message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    TableRow.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };
    
                                    /**
                                     * Decodes a TableRow message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableRow} TableRow
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    TableRow.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Table.TableRow();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                            case 1: {
                                                    if (!(message.cells && message.cells.length))
                                                        message.cells = [];
                                                    message.cells.push($root.google.cloud.documentai.v1.Document.Page.Table.TableCell.decode(reader, reader.uint32()));
                                                    break;
                                                }
                                            default:
                                                reader.skipType(tag & 7);
                                                break;
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Decodes a TableRow message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableRow} TableRow
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    TableRow.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };
    
                                    /**
                                     * Verifies a TableRow message.
                                     * @function verify
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    TableRow.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.cells != null && message.hasOwnProperty("cells")) {
                                            if (!Array.isArray(message.cells))
                                                return "cells: array expected";
                                            for (var i = 0; i < message.cells.length; ++i) {
                                                var error = $root.google.cloud.documentai.v1.Document.Page.Table.TableCell.verify(message.cells[i]);
                                                if (error)
                                                    return "cells." + error;
                                            }
                                        }
                                        return null;
                                    };
    
                                    /**
                                     * Creates a TableRow message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableRow} TableRow
                                     */
                                    TableRow.fromObject = function fromObject(object) {
                                        if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Table.TableRow)
                                            return object;
                                        var message = new $root.google.cloud.documentai.v1.Document.Page.Table.TableRow();
                                        if (object.cells) {
                                            if (!Array.isArray(object.cells))
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.TableRow.cells: array expected");
                                            message.cells = [];
                                            for (var i = 0; i < object.cells.length; ++i) {
                                                if (typeof object.cells[i] !== "object")
                                                    throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.TableRow.cells: object expected");
                                                message.cells[i] = $root.google.cloud.documentai.v1.Document.Page.Table.TableCell.fromObject(object.cells[i]);
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Creates a plain object from a TableRow message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.TableRow} message TableRow
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    TableRow.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.arrays || options.defaults)
                                            object.cells = [];
                                        if (message.cells && message.cells.length) {
                                            object.cells = [];
                                            for (var j = 0; j < message.cells.length; ++j)
                                                object.cells[j] = $root.google.cloud.documentai.v1.Document.Page.Table.TableCell.toObject(message.cells[j], options);
                                        }
                                        return object;
                                    };
    
                                    /**
                                     * Converts this TableRow to JSON.
                                     * @function toJSON
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    TableRow.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };
    
                                    /**
                                     * Gets the default type url for TableRow
                                     * @function getTypeUrl
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableRow
                                     * @static
                                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                     * @returns {string} The default type url
                                     */
                                    TableRow.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                        if (typeUrlPrefix === undefined) {
                                            typeUrlPrefix = "type.googleapis.com";
                                        }
                                        return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Table.TableRow";
                                    };
    
                                    return TableRow;
                                })();
    
                                Table.TableCell = (function() {
    
                                    /**
                                     * Properties of a TableCell.
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table
                                     * @interface ITableCell
                                     * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] TableCell layout
                                     * @property {number|null} [rowSpan] TableCell rowSpan
                                     * @property {number|null} [colSpan] TableCell colSpan
                                     * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [detectedLanguages] TableCell detectedLanguages
                                     */
    
                                    /**
                                     * Constructs a new TableCell.
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table
                                     * @classdesc Represents a TableCell.
                                     * @implements ITableCell
                                     * @constructor
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableCell=} [properties] Properties to set
                                     */
                                    function TableCell(properties) {
                                        this.detectedLanguages = [];
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }
    
                                    /**
                                     * TableCell layout.
                                     * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @instance
                                     */
                                    TableCell.prototype.layout = null;
    
                                    /**
                                     * TableCell rowSpan.
                                     * @member {number} rowSpan
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @instance
                                     */
                                    TableCell.prototype.rowSpan = 0;
    
                                    /**
                                     * TableCell colSpan.
                                     * @member {number} colSpan
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @instance
                                     */
                                    TableCell.prototype.colSpan = 0;
    
                                    /**
                                     * TableCell detectedLanguages.
                                     * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} detectedLanguages
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @instance
                                     */
                                    TableCell.prototype.detectedLanguages = $util.emptyArray;
    
                                    /**
                                     * Creates a new TableCell instance using the specified properties.
                                     * @function create
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableCell=} [properties] Properties to set
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableCell} TableCell instance
                                     */
                                    TableCell.create = function create(properties) {
                                        return new TableCell(properties);
                                    };
    
                                    /**
                                     * Encodes the specified TableCell message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Table.TableCell.verify|verify} messages.
                                     * @function encode
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableCell} message TableCell message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    TableCell.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                            $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                        if (message.rowSpan != null && Object.hasOwnProperty.call(message, "rowSpan"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.rowSpan);
                                        if (message.colSpan != null && Object.hasOwnProperty.call(message, "colSpan"))
                                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.colSpan);
                                        if (message.detectedLanguages != null && message.detectedLanguages.length)
                                            for (var i = 0; i < message.detectedLanguages.length; ++i)
                                                $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.detectedLanguages[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                        return writer;
                                    };
    
                                    /**
                                     * Encodes the specified TableCell message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.Table.TableCell.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.ITableCell} message TableCell message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    TableCell.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };
    
                                    /**
                                     * Decodes a TableCell message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableCell} TableCell
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    TableCell.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.Table.TableCell();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                            case 1: {
                                                    message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                    break;
                                                }
                                            case 2: {
                                                    message.rowSpan = reader.int32();
                                                    break;
                                                }
                                            case 3: {
                                                    message.colSpan = reader.int32();
                                                    break;
                                                }
                                            case 4: {
                                                    if (!(message.detectedLanguages && message.detectedLanguages.length))
                                                        message.detectedLanguages = [];
                                                    message.detectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                    break;
                                                }
                                            default:
                                                reader.skipType(tag & 7);
                                                break;
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Decodes a TableCell message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableCell} TableCell
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    TableCell.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };
    
                                    /**
                                     * Verifies a TableCell message.
                                     * @function verify
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    TableCell.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.layout != null && message.hasOwnProperty("layout")) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                            if (error)
                                                return "layout." + error;
                                        }
                                        if (message.rowSpan != null && message.hasOwnProperty("rowSpan"))
                                            if (!$util.isInteger(message.rowSpan))
                                                return "rowSpan: integer expected";
                                        if (message.colSpan != null && message.hasOwnProperty("colSpan"))
                                            if (!$util.isInteger(message.colSpan))
                                                return "colSpan: integer expected";
                                        if (message.detectedLanguages != null && message.hasOwnProperty("detectedLanguages")) {
                                            if (!Array.isArray(message.detectedLanguages))
                                                return "detectedLanguages: array expected";
                                            for (var i = 0; i < message.detectedLanguages.length; ++i) {
                                                var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.detectedLanguages[i]);
                                                if (error)
                                                    return "detectedLanguages." + error;
                                            }
                                        }
                                        return null;
                                    };
    
                                    /**
                                     * Creates a TableCell message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {google.cloud.documentai.v1.Document.Page.Table.TableCell} TableCell
                                     */
                                    TableCell.fromObject = function fromObject(object) {
                                        if (object instanceof $root.google.cloud.documentai.v1.Document.Page.Table.TableCell)
                                            return object;
                                        var message = new $root.google.cloud.documentai.v1.Document.Page.Table.TableCell();
                                        if (object.layout != null) {
                                            if (typeof object.layout !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.TableCell.layout: object expected");
                                            message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                        }
                                        if (object.rowSpan != null)
                                            message.rowSpan = object.rowSpan | 0;
                                        if (object.colSpan != null)
                                            message.colSpan = object.colSpan | 0;
                                        if (object.detectedLanguages) {
                                            if (!Array.isArray(object.detectedLanguages))
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.TableCell.detectedLanguages: array expected");
                                            message.detectedLanguages = [];
                                            for (var i = 0; i < object.detectedLanguages.length; ++i) {
                                                if (typeof object.detectedLanguages[i] !== "object")
                                                    throw TypeError(".google.cloud.documentai.v1.Document.Page.Table.TableCell.detectedLanguages: object expected");
                                                message.detectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.detectedLanguages[i]);
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Creates a plain object from a TableCell message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.Table.TableCell} message TableCell
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    TableCell.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.arrays || options.defaults)
                                            object.detectedLanguages = [];
                                        if (options.defaults) {
                                            object.layout = null;
                                            object.rowSpan = 0;
                                            object.colSpan = 0;
                                        }
                                        if (message.layout != null && message.hasOwnProperty("layout"))
                                            object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                        if (message.rowSpan != null && message.hasOwnProperty("rowSpan"))
                                            object.rowSpan = message.rowSpan;
                                        if (message.colSpan != null && message.hasOwnProperty("colSpan"))
                                            object.colSpan = message.colSpan;
                                        if (message.detectedLanguages && message.detectedLanguages.length) {
                                            object.detectedLanguages = [];
                                            for (var j = 0; j < message.detectedLanguages.length; ++j)
                                                object.detectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.detectedLanguages[j], options);
                                        }
                                        return object;
                                    };
    
                                    /**
                                     * Converts this TableCell to JSON.
                                     * @function toJSON
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    TableCell.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };
    
                                    /**
                                     * Gets the default type url for TableCell
                                     * @function getTypeUrl
                                     * @memberof google.cloud.documentai.v1.Document.Page.Table.TableCell
                                     * @static
                                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                     * @returns {string} The default type url
                                     */
                                    TableCell.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                        if (typeUrlPrefix === undefined) {
                                            typeUrlPrefix = "type.googleapis.com";
                                        }
                                        return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.Table.TableCell";
                                    };
    
                                    return TableCell;
                                })();
    
                                return Table;
                            })();
    
                            Page.FormField = (function() {
    
                                /**
                                 * Properties of a FormField.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IFormField
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [fieldName] FormField fieldName
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [fieldValue] FormField fieldValue
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [nameDetectedLanguages] FormField nameDetectedLanguages
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>|null} [valueDetectedLanguages] FormField valueDetectedLanguages
                                 * @property {string|null} [valueType] FormField valueType
                                 * @property {string|null} [correctedKeyText] FormField correctedKeyText
                                 * @property {string|null} [correctedValueText] FormField correctedValueText
                                 * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] FormField provenance
                                 */
    
                                /**
                                 * Constructs a new FormField.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a FormField.
                                 * @implements IFormField
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IFormField=} [properties] Properties to set
                                 */
                                function FormField(properties) {
                                    this.nameDetectedLanguages = [];
                                    this.valueDetectedLanguages = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * FormField fieldName.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} fieldName
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.fieldName = null;
    
                                /**
                                 * FormField fieldValue.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} fieldValue
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.fieldValue = null;
    
                                /**
                                 * FormField nameDetectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} nameDetectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.nameDetectedLanguages = $util.emptyArray;
    
                                /**
                                 * FormField valueDetectedLanguages.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.IDetectedLanguage>} valueDetectedLanguages
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.valueDetectedLanguages = $util.emptyArray;
    
                                /**
                                 * FormField valueType.
                                 * @member {string} valueType
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.valueType = "";
    
                                /**
                                 * FormField correctedKeyText.
                                 * @member {string} correctedKeyText
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.correctedKeyText = "";
    
                                /**
                                 * FormField correctedValueText.
                                 * @member {string} correctedValueText
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.correctedValueText = "";
    
                                /**
                                 * FormField provenance.
                                 * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 */
                                FormField.prototype.provenance = null;
    
                                /**
                                 * Creates a new FormField instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IFormField=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.FormField} FormField instance
                                 */
                                FormField.create = function create(properties) {
                                    return new FormField(properties);
                                };
    
                                /**
                                 * Encodes the specified FormField message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.FormField.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IFormField} message FormField message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                FormField.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.fieldName != null && Object.hasOwnProperty.call(message, "fieldName"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.fieldName, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.fieldValue != null && Object.hasOwnProperty.call(message, "fieldValue"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.fieldValue, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.nameDetectedLanguages != null && message.nameDetectedLanguages.length)
                                        for (var i = 0; i < message.nameDetectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.nameDetectedLanguages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    if (message.valueDetectedLanguages != null && message.valueDetectedLanguages.length)
                                        for (var i = 0; i < message.valueDetectedLanguages.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.encode(message.valueDetectedLanguages[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                    if (message.valueType != null && Object.hasOwnProperty.call(message, "valueType"))
                                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.valueType);
                                    if (message.correctedKeyText != null && Object.hasOwnProperty.call(message, "correctedKeyText"))
                                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.correctedKeyText);
                                    if (message.correctedValueText != null && Object.hasOwnProperty.call(message, "correctedValueText"))
                                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.correctedValueText);
                                    if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                        $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified FormField message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.FormField.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IFormField} message FormField message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                FormField.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a FormField message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.FormField} FormField
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                FormField.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.FormField();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.fieldName = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.fieldValue = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 3: {
                                                if (!(message.nameDetectedLanguages && message.nameDetectedLanguages.length))
                                                    message.nameDetectedLanguages = [];
                                                message.nameDetectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 4: {
                                                if (!(message.valueDetectedLanguages && message.valueDetectedLanguages.length))
                                                    message.valueDetectedLanguages = [];
                                                message.valueDetectedLanguages.push($root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 5: {
                                                message.valueType = reader.string();
                                                break;
                                            }
                                        case 6: {
                                                message.correctedKeyText = reader.string();
                                                break;
                                            }
                                        case 7: {
                                                message.correctedValueText = reader.string();
                                                break;
                                            }
                                        case 8: {
                                                message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a FormField message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.FormField} FormField
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                FormField.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a FormField message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                FormField.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.fieldName != null && message.hasOwnProperty("fieldName")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.fieldName);
                                        if (error)
                                            return "fieldName." + error;
                                    }
                                    if (message.fieldValue != null && message.hasOwnProperty("fieldValue")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.fieldValue);
                                        if (error)
                                            return "fieldValue." + error;
                                    }
                                    if (message.nameDetectedLanguages != null && message.hasOwnProperty("nameDetectedLanguages")) {
                                        if (!Array.isArray(message.nameDetectedLanguages))
                                            return "nameDetectedLanguages: array expected";
                                        for (var i = 0; i < message.nameDetectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.nameDetectedLanguages[i]);
                                            if (error)
                                                return "nameDetectedLanguages." + error;
                                        }
                                    }
                                    if (message.valueDetectedLanguages != null && message.hasOwnProperty("valueDetectedLanguages")) {
                                        if (!Array.isArray(message.valueDetectedLanguages))
                                            return "valueDetectedLanguages: array expected";
                                        for (var i = 0; i < message.valueDetectedLanguages.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify(message.valueDetectedLanguages[i]);
                                            if (error)
                                                return "valueDetectedLanguages." + error;
                                        }
                                    }
                                    if (message.valueType != null && message.hasOwnProperty("valueType"))
                                        if (!$util.isString(message.valueType))
                                            return "valueType: string expected";
                                    if (message.correctedKeyText != null && message.hasOwnProperty("correctedKeyText"))
                                        if (!$util.isString(message.correctedKeyText))
                                            return "correctedKeyText: string expected";
                                    if (message.correctedValueText != null && message.hasOwnProperty("correctedValueText"))
                                        if (!$util.isString(message.correctedValueText))
                                            return "correctedValueText: string expected";
                                    if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                        if (error)
                                            return "provenance." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a FormField message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.FormField} FormField
                                 */
                                FormField.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.FormField)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.FormField();
                                    if (object.fieldName != null) {
                                        if (typeof object.fieldName !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.FormField.fieldName: object expected");
                                        message.fieldName = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.fieldName);
                                    }
                                    if (object.fieldValue != null) {
                                        if (typeof object.fieldValue !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.FormField.fieldValue: object expected");
                                        message.fieldValue = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.fieldValue);
                                    }
                                    if (object.nameDetectedLanguages) {
                                        if (!Array.isArray(object.nameDetectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.FormField.nameDetectedLanguages: array expected");
                                        message.nameDetectedLanguages = [];
                                        for (var i = 0; i < object.nameDetectedLanguages.length; ++i) {
                                            if (typeof object.nameDetectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.FormField.nameDetectedLanguages: object expected");
                                            message.nameDetectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.nameDetectedLanguages[i]);
                                        }
                                    }
                                    if (object.valueDetectedLanguages) {
                                        if (!Array.isArray(object.valueDetectedLanguages))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.FormField.valueDetectedLanguages: array expected");
                                        message.valueDetectedLanguages = [];
                                        for (var i = 0; i < object.valueDetectedLanguages.length; ++i) {
                                            if (typeof object.valueDetectedLanguages[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.FormField.valueDetectedLanguages: object expected");
                                            message.valueDetectedLanguages[i] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.fromObject(object.valueDetectedLanguages[i]);
                                        }
                                    }
                                    if (object.valueType != null)
                                        message.valueType = String(object.valueType);
                                    if (object.correctedKeyText != null)
                                        message.correctedKeyText = String(object.correctedKeyText);
                                    if (object.correctedValueText != null)
                                        message.correctedValueText = String(object.correctedValueText);
                                    if (object.provenance != null) {
                                        if (typeof object.provenance !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.FormField.provenance: object expected");
                                        message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a FormField message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.FormField} message FormField
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                FormField.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults) {
                                        object.nameDetectedLanguages = [];
                                        object.valueDetectedLanguages = [];
                                    }
                                    if (options.defaults) {
                                        object.fieldName = null;
                                        object.fieldValue = null;
                                        object.valueType = "";
                                        object.correctedKeyText = "";
                                        object.correctedValueText = "";
                                        object.provenance = null;
                                    }
                                    if (message.fieldName != null && message.hasOwnProperty("fieldName"))
                                        object.fieldName = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.fieldName, options);
                                    if (message.fieldValue != null && message.hasOwnProperty("fieldValue"))
                                        object.fieldValue = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.fieldValue, options);
                                    if (message.nameDetectedLanguages && message.nameDetectedLanguages.length) {
                                        object.nameDetectedLanguages = [];
                                        for (var j = 0; j < message.nameDetectedLanguages.length; ++j)
                                            object.nameDetectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.nameDetectedLanguages[j], options);
                                    }
                                    if (message.valueDetectedLanguages && message.valueDetectedLanguages.length) {
                                        object.valueDetectedLanguages = [];
                                        for (var j = 0; j < message.valueDetectedLanguages.length; ++j)
                                            object.valueDetectedLanguages[j] = $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage.toObject(message.valueDetectedLanguages[j], options);
                                    }
                                    if (message.valueType != null && message.hasOwnProperty("valueType"))
                                        object.valueType = message.valueType;
                                    if (message.correctedKeyText != null && message.hasOwnProperty("correctedKeyText"))
                                        object.correctedKeyText = message.correctedKeyText;
                                    if (message.correctedValueText != null && message.hasOwnProperty("correctedValueText"))
                                        object.correctedValueText = message.correctedValueText;
                                    if (message.provenance != null && message.hasOwnProperty("provenance"))
                                        object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this FormField to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                FormField.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for FormField
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.FormField
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                FormField.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.FormField";
                                };
    
                                return FormField;
                            })();
    
                            Page.DetectedBarcode = (function() {
    
                                /**
                                 * Properties of a DetectedBarcode.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IDetectedBarcode
                                 * @property {google.cloud.documentai.v1.Document.Page.ILayout|null} [layout] DetectedBarcode layout
                                 * @property {google.cloud.documentai.v1.IBarcode|null} [barcode] DetectedBarcode barcode
                                 */
    
                                /**
                                 * Constructs a new DetectedBarcode.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a DetectedBarcode.
                                 * @implements IDetectedBarcode
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedBarcode=} [properties] Properties to set
                                 */
                                function DetectedBarcode(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * DetectedBarcode layout.
                                 * @member {google.cloud.documentai.v1.Document.Page.ILayout|null|undefined} layout
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @instance
                                 */
                                DetectedBarcode.prototype.layout = null;
    
                                /**
                                 * DetectedBarcode barcode.
                                 * @member {google.cloud.documentai.v1.IBarcode|null|undefined} barcode
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @instance
                                 */
                                DetectedBarcode.prototype.barcode = null;
    
                                /**
                                 * Creates a new DetectedBarcode instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedBarcode=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedBarcode} DetectedBarcode instance
                                 */
                                DetectedBarcode.create = function create(properties) {
                                    return new DetectedBarcode(properties);
                                };
    
                                /**
                                 * Encodes the specified DetectedBarcode message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.DetectedBarcode.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedBarcode} message DetectedBarcode message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                DetectedBarcode.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.layout != null && Object.hasOwnProperty.call(message, "layout"))
                                        $root.google.cloud.documentai.v1.Document.Page.Layout.encode(message.layout, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.barcode != null && Object.hasOwnProperty.call(message, "barcode"))
                                        $root.google.cloud.documentai.v1.Barcode.encode(message.barcode, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified DetectedBarcode message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.DetectedBarcode.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedBarcode} message DetectedBarcode message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                DetectedBarcode.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a DetectedBarcode message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedBarcode} DetectedBarcode
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                DetectedBarcode.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.DetectedBarcode();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.barcode = $root.google.cloud.documentai.v1.Barcode.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a DetectedBarcode message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedBarcode} DetectedBarcode
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                DetectedBarcode.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a DetectedBarcode message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                DetectedBarcode.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.layout != null && message.hasOwnProperty("layout")) {
                                        var error = $root.google.cloud.documentai.v1.Document.Page.Layout.verify(message.layout);
                                        if (error)
                                            return "layout." + error;
                                    }
                                    if (message.barcode != null && message.hasOwnProperty("barcode")) {
                                        var error = $root.google.cloud.documentai.v1.Barcode.verify(message.barcode);
                                        if (error)
                                            return "barcode." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a DetectedBarcode message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedBarcode} DetectedBarcode
                                 */
                                DetectedBarcode.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.DetectedBarcode)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.DetectedBarcode();
                                    if (object.layout != null) {
                                        if (typeof object.layout !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.DetectedBarcode.layout: object expected");
                                        message.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.fromObject(object.layout);
                                    }
                                    if (object.barcode != null) {
                                        if (typeof object.barcode !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.DetectedBarcode.barcode: object expected");
                                        message.barcode = $root.google.cloud.documentai.v1.Barcode.fromObject(object.barcode);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a DetectedBarcode message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.DetectedBarcode} message DetectedBarcode
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                DetectedBarcode.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.layout = null;
                                        object.barcode = null;
                                    }
                                    if (message.layout != null && message.hasOwnProperty("layout"))
                                        object.layout = $root.google.cloud.documentai.v1.Document.Page.Layout.toObject(message.layout, options);
                                    if (message.barcode != null && message.hasOwnProperty("barcode"))
                                        object.barcode = $root.google.cloud.documentai.v1.Barcode.toObject(message.barcode, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this DetectedBarcode to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                DetectedBarcode.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for DetectedBarcode
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedBarcode
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                DetectedBarcode.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.DetectedBarcode";
                                };
    
                                return DetectedBarcode;
                            })();
    
                            Page.DetectedLanguage = (function() {
    
                                /**
                                 * Properties of a DetectedLanguage.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IDetectedLanguage
                                 * @property {string|null} [languageCode] DetectedLanguage languageCode
                                 * @property {number|null} [confidence] DetectedLanguage confidence
                                 */
    
                                /**
                                 * Constructs a new DetectedLanguage.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents a DetectedLanguage.
                                 * @implements IDetectedLanguage
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedLanguage=} [properties] Properties to set
                                 */
                                function DetectedLanguage(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * DetectedLanguage languageCode.
                                 * @member {string} languageCode
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @instance
                                 */
                                DetectedLanguage.prototype.languageCode = "";
    
                                /**
                                 * DetectedLanguage confidence.
                                 * @member {number} confidence
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @instance
                                 */
                                DetectedLanguage.prototype.confidence = 0;
    
                                /**
                                 * Creates a new DetectedLanguage instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedLanguage=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedLanguage} DetectedLanguage instance
                                 */
                                DetectedLanguage.create = function create(properties) {
                                    return new DetectedLanguage(properties);
                                };
    
                                /**
                                 * Encodes the specified DetectedLanguage message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedLanguage} message DetectedLanguage message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                DetectedLanguage.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.languageCode);
                                    if (message.confidence != null && Object.hasOwnProperty.call(message, "confidence"))
                                        writer.uint32(/* id 2, wireType 5 =*/21).float(message.confidence);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified DetectedLanguage message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.DetectedLanguage.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IDetectedLanguage} message DetectedLanguage message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                DetectedLanguage.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a DetectedLanguage message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedLanguage} DetectedLanguage
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                DetectedLanguage.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.languageCode = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.confidence = reader.float();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a DetectedLanguage message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedLanguage} DetectedLanguage
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                DetectedLanguage.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a DetectedLanguage message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                DetectedLanguage.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                        if (!$util.isString(message.languageCode))
                                            return "languageCode: string expected";
                                    if (message.confidence != null && message.hasOwnProperty("confidence"))
                                        if (typeof message.confidence !== "number")
                                            return "confidence: number expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a DetectedLanguage message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.DetectedLanguage} DetectedLanguage
                                 */
                                DetectedLanguage.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.DetectedLanguage();
                                    if (object.languageCode != null)
                                        message.languageCode = String(object.languageCode);
                                    if (object.confidence != null)
                                        message.confidence = Number(object.confidence);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a DetectedLanguage message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.DetectedLanguage} message DetectedLanguage
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                DetectedLanguage.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.languageCode = "";
                                        object.confidence = 0;
                                    }
                                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                                        object.languageCode = message.languageCode;
                                    if (message.confidence != null && message.hasOwnProperty("confidence"))
                                        object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;
                                    return object;
                                };
    
                                /**
                                 * Converts this DetectedLanguage to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                DetectedLanguage.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for DetectedLanguage
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.DetectedLanguage
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                DetectedLanguage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.DetectedLanguage";
                                };
    
                                return DetectedLanguage;
                            })();
    
                            Page.ImageQualityScores = (function() {
    
                                /**
                                 * Properties of an ImageQualityScores.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @interface IImageQualityScores
                                 * @property {number|null} [qualityScore] ImageQualityScores qualityScore
                                 * @property {Array.<google.cloud.documentai.v1.Document.Page.ImageQualityScores.IDetectedDefect>|null} [detectedDefects] ImageQualityScores detectedDefects
                                 */
    
                                /**
                                 * Constructs a new ImageQualityScores.
                                 * @memberof google.cloud.documentai.v1.Document.Page
                                 * @classdesc Represents an ImageQualityScores.
                                 * @implements IImageQualityScores
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Page.IImageQualityScores=} [properties] Properties to set
                                 */
                                function ImageQualityScores(properties) {
                                    this.detectedDefects = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * ImageQualityScores qualityScore.
                                 * @member {number} qualityScore
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @instance
                                 */
                                ImageQualityScores.prototype.qualityScore = 0;
    
                                /**
                                 * ImageQualityScores detectedDefects.
                                 * @member {Array.<google.cloud.documentai.v1.Document.Page.ImageQualityScores.IDetectedDefect>} detectedDefects
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @instance
                                 */
                                ImageQualityScores.prototype.detectedDefects = $util.emptyArray;
    
                                /**
                                 * Creates a new ImageQualityScores instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IImageQualityScores=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores} ImageQualityScores instance
                                 */
                                ImageQualityScores.create = function create(properties) {
                                    return new ImageQualityScores(properties);
                                };
    
                                /**
                                 * Encodes the specified ImageQualityScores message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.ImageQualityScores.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IImageQualityScores} message ImageQualityScores message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ImageQualityScores.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.qualityScore != null && Object.hasOwnProperty.call(message, "qualityScore"))
                                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.qualityScore);
                                    if (message.detectedDefects != null && message.detectedDefects.length)
                                        for (var i = 0; i < message.detectedDefects.length; ++i)
                                            $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect.encode(message.detectedDefects[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified ImageQualityScores message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.ImageQualityScores.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.IImageQualityScores} message ImageQualityScores message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ImageQualityScores.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an ImageQualityScores message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores} ImageQualityScores
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ImageQualityScores.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.qualityScore = reader.float();
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.detectedDefects && message.detectedDefects.length))
                                                    message.detectedDefects = [];
                                                message.detectedDefects.push($root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an ImageQualityScores message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores} ImageQualityScores
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ImageQualityScores.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an ImageQualityScores message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                ImageQualityScores.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.qualityScore != null && message.hasOwnProperty("qualityScore"))
                                        if (typeof message.qualityScore !== "number")
                                            return "qualityScore: number expected";
                                    if (message.detectedDefects != null && message.hasOwnProperty("detectedDefects")) {
                                        if (!Array.isArray(message.detectedDefects))
                                            return "detectedDefects: array expected";
                                        for (var i = 0; i < message.detectedDefects.length; ++i) {
                                            var error = $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect.verify(message.detectedDefects[i]);
                                            if (error)
                                                return "detectedDefects." + error;
                                        }
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates an ImageQualityScores message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores} ImageQualityScores
                                 */
                                ImageQualityScores.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores();
                                    if (object.qualityScore != null)
                                        message.qualityScore = Number(object.qualityScore);
                                    if (object.detectedDefects) {
                                        if (!Array.isArray(object.detectedDefects))
                                            throw TypeError(".google.cloud.documentai.v1.Document.Page.ImageQualityScores.detectedDefects: array expected");
                                        message.detectedDefects = [];
                                        for (var i = 0; i < object.detectedDefects.length; ++i) {
                                            if (typeof object.detectedDefects[i] !== "object")
                                                throw TypeError(".google.cloud.documentai.v1.Document.Page.ImageQualityScores.detectedDefects: object expected");
                                            message.detectedDefects[i] = $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect.fromObject(object.detectedDefects[i]);
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an ImageQualityScores message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Page.ImageQualityScores} message ImageQualityScores
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                ImageQualityScores.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.detectedDefects = [];
                                    if (options.defaults)
                                        object.qualityScore = 0;
                                    if (message.qualityScore != null && message.hasOwnProperty("qualityScore"))
                                        object.qualityScore = options.json && !isFinite(message.qualityScore) ? String(message.qualityScore) : message.qualityScore;
                                    if (message.detectedDefects && message.detectedDefects.length) {
                                        object.detectedDefects = [];
                                        for (var j = 0; j < message.detectedDefects.length; ++j)
                                            object.detectedDefects[j] = $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect.toObject(message.detectedDefects[j], options);
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this ImageQualityScores to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                ImageQualityScores.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for ImageQualityScores
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                ImageQualityScores.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.ImageQualityScores";
                                };
    
                                ImageQualityScores.DetectedDefect = (function() {
    
                                    /**
                                     * Properties of a DetectedDefect.
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                     * @interface IDetectedDefect
                                     * @property {string|null} [type] DetectedDefect type
                                     * @property {number|null} [confidence] DetectedDefect confidence
                                     */
    
                                    /**
                                     * Constructs a new DetectedDefect.
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores
                                     * @classdesc Represents a DetectedDefect.
                                     * @implements IDetectedDefect
                                     * @constructor
                                     * @param {google.cloud.documentai.v1.Document.Page.ImageQualityScores.IDetectedDefect=} [properties] Properties to set
                                     */
                                    function DetectedDefect(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }
    
                                    /**
                                     * DetectedDefect type.
                                     * @member {string} type
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @instance
                                     */
                                    DetectedDefect.prototype.type = "";
    
                                    /**
                                     * DetectedDefect confidence.
                                     * @member {number} confidence
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @instance
                                     */
                                    DetectedDefect.prototype.confidence = 0;
    
                                    /**
                                     * Creates a new DetectedDefect instance using the specified properties.
                                     * @function create
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.ImageQualityScores.IDetectedDefect=} [properties] Properties to set
                                     * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect} DetectedDefect instance
                                     */
                                    DetectedDefect.create = function create(properties) {
                                        return new DetectedDefect(properties);
                                    };
    
                                    /**
                                     * Encodes the specified DetectedDefect message. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect.verify|verify} messages.
                                     * @function encode
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.ImageQualityScores.IDetectedDefect} message DetectedDefect message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    DetectedDefect.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                                        if (message.confidence != null && Object.hasOwnProperty.call(message, "confidence"))
                                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.confidence);
                                        return writer;
                                    };
    
                                    /**
                                     * Encodes the specified DetectedDefect message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.ImageQualityScores.IDetectedDefect} message DetectedDefect message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    DetectedDefect.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };
    
                                    /**
                                     * Decodes a DetectedDefect message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect} DetectedDefect
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    DetectedDefect.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                            case 1: {
                                                    message.type = reader.string();
                                                    break;
                                                }
                                            case 2: {
                                                    message.confidence = reader.float();
                                                    break;
                                                }
                                            default:
                                                reader.skipType(tag & 7);
                                                break;
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Decodes a DetectedDefect message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect} DetectedDefect
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    DetectedDefect.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };
    
                                    /**
                                     * Verifies a DetectedDefect message.
                                     * @function verify
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    DetectedDefect.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.type != null && message.hasOwnProperty("type"))
                                            if (!$util.isString(message.type))
                                                return "type: string expected";
                                        if (message.confidence != null && message.hasOwnProperty("confidence"))
                                            if (typeof message.confidence !== "number")
                                                return "confidence: number expected";
                                        return null;
                                    };
    
                                    /**
                                     * Creates a DetectedDefect message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect} DetectedDefect
                                     */
                                    DetectedDefect.fromObject = function fromObject(object) {
                                        if (object instanceof $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect)
                                            return object;
                                        var message = new $root.google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect();
                                        if (object.type != null)
                                            message.type = String(object.type);
                                        if (object.confidence != null)
                                            message.confidence = Number(object.confidence);
                                        return message;
                                    };
    
                                    /**
                                     * Creates a plain object from a DetectedDefect message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect} message DetectedDefect
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    DetectedDefect.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.type = "";
                                            object.confidence = 0;
                                        }
                                        if (message.type != null && message.hasOwnProperty("type"))
                                            object.type = message.type;
                                        if (message.confidence != null && message.hasOwnProperty("confidence"))
                                            object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;
                                        return object;
                                    };
    
                                    /**
                                     * Converts this DetectedDefect to JSON.
                                     * @function toJSON
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    DetectedDefect.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };
    
                                    /**
                                     * Gets the default type url for DetectedDefect
                                     * @function getTypeUrl
                                     * @memberof google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect
                                     * @static
                                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                     * @returns {string} The default type url
                                     */
                                    DetectedDefect.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                        if (typeUrlPrefix === undefined) {
                                            typeUrlPrefix = "type.googleapis.com";
                                        }
                                        return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Page.ImageQualityScores.DetectedDefect";
                                    };
    
                                    return DetectedDefect;
                                })();
    
                                return ImageQualityScores;
                            })();
    
                            return Page;
                        })();
    
                        Document.Entity = (function() {
    
                            /**
                             * Properties of an Entity.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IEntity
                             * @property {google.cloud.documentai.v1.Document.ITextAnchor|null} [textAnchor] Entity textAnchor
                             * @property {string|null} [type] Entity type
                             * @property {string|null} [mentionText] Entity mentionText
                             * @property {string|null} [mentionId] Entity mentionId
                             * @property {number|null} [confidence] Entity confidence
                             * @property {google.cloud.documentai.v1.Document.IPageAnchor|null} [pageAnchor] Entity pageAnchor
                             * @property {string|null} [id] Entity id
                             * @property {google.cloud.documentai.v1.Document.Entity.INormalizedValue|null} [normalizedValue] Entity normalizedValue
                             * @property {Array.<google.cloud.documentai.v1.Document.IEntity>|null} [properties] Entity properties
                             * @property {google.cloud.documentai.v1.Document.IProvenance|null} [provenance] Entity provenance
                             * @property {boolean|null} [redacted] Entity redacted
                             */
    
                            /**
                             * Constructs a new Entity.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents an Entity.
                             * @implements IEntity
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IEntity=} [properties] Properties to set
                             */
                            function Entity(properties) {
                                this.properties = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Entity textAnchor.
                             * @member {google.cloud.documentai.v1.Document.ITextAnchor|null|undefined} textAnchor
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.textAnchor = null;
    
                            /**
                             * Entity type.
                             * @member {string} type
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.type = "";
    
                            /**
                             * Entity mentionText.
                             * @member {string} mentionText
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.mentionText = "";
    
                            /**
                             * Entity mentionId.
                             * @member {string} mentionId
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.mentionId = "";
    
                            /**
                             * Entity confidence.
                             * @member {number} confidence
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.confidence = 0;
    
                            /**
                             * Entity pageAnchor.
                             * @member {google.cloud.documentai.v1.Document.IPageAnchor|null|undefined} pageAnchor
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.pageAnchor = null;
    
                            /**
                             * Entity id.
                             * @member {string} id
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.id = "";
    
                            /**
                             * Entity normalizedValue.
                             * @member {google.cloud.documentai.v1.Document.Entity.INormalizedValue|null|undefined} normalizedValue
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.normalizedValue = null;
    
                            /**
                             * Entity properties.
                             * @member {Array.<google.cloud.documentai.v1.Document.IEntity>} properties
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.properties = $util.emptyArray;
    
                            /**
                             * Entity provenance.
                             * @member {google.cloud.documentai.v1.Document.IProvenance|null|undefined} provenance
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.provenance = null;
    
                            /**
                             * Entity redacted.
                             * @member {boolean} redacted
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             */
                            Entity.prototype.redacted = false;
    
                            /**
                             * Creates a new Entity instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IEntity=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.Entity} Entity instance
                             */
                            Entity.create = function create(properties) {
                                return new Entity(properties);
                            };
    
                            /**
                             * Encodes the specified Entity message. Does not implicitly {@link google.cloud.documentai.v1.Document.Entity.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IEntity} message Entity message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Entity.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.textAnchor != null && Object.hasOwnProperty.call(message, "textAnchor"))
                                    $root.google.cloud.documentai.v1.Document.TextAnchor.encode(message.textAnchor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);
                                if (message.mentionText != null && Object.hasOwnProperty.call(message, "mentionText"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.mentionText);
                                if (message.mentionId != null && Object.hasOwnProperty.call(message, "mentionId"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.mentionId);
                                if (message.confidence != null && Object.hasOwnProperty.call(message, "confidence"))
                                    writer.uint32(/* id 5, wireType 5 =*/45).float(message.confidence);
                                if (message.pageAnchor != null && Object.hasOwnProperty.call(message, "pageAnchor"))
                                    $root.google.cloud.documentai.v1.Document.PageAnchor.encode(message.pageAnchor, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.id);
                                if (message.normalizedValue != null && Object.hasOwnProperty.call(message, "normalizedValue"))
                                    $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue.encode(message.normalizedValue, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                                if (message.properties != null && message.properties.length)
                                    for (var i = 0; i < message.properties.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Entity.encode(message.properties[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                                if (message.provenance != null && Object.hasOwnProperty.call(message, "provenance"))
                                    $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                                if (message.redacted != null && Object.hasOwnProperty.call(message, "redacted"))
                                    writer.uint32(/* id 12, wireType 0 =*/96).bool(message.redacted);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Entity message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Entity.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IEntity} message Entity message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Entity.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an Entity message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.Entity} Entity
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Entity.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Entity();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.type = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.mentionText = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.mentionId = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.confidence = reader.float();
                                            break;
                                        }
                                    case 6: {
                                            message.pageAnchor = $root.google.cloud.documentai.v1.Document.PageAnchor.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 7: {
                                            message.id = reader.string();
                                            break;
                                        }
                                    case 9: {
                                            message.normalizedValue = $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 10: {
                                            if (!(message.properties && message.properties.length))
                                                message.properties = [];
                                            message.properties.push($root.google.cloud.documentai.v1.Document.Entity.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 11: {
                                            message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 12: {
                                            message.redacted = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an Entity message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.Entity} Entity
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Entity.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an Entity message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Entity.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.textAnchor != null && message.hasOwnProperty("textAnchor")) {
                                    var error = $root.google.cloud.documentai.v1.Document.TextAnchor.verify(message.textAnchor);
                                    if (error)
                                        return "textAnchor." + error;
                                }
                                if (message.type != null && message.hasOwnProperty("type"))
                                    if (!$util.isString(message.type))
                                        return "type: string expected";
                                if (message.mentionText != null && message.hasOwnProperty("mentionText"))
                                    if (!$util.isString(message.mentionText))
                                        return "mentionText: string expected";
                                if (message.mentionId != null && message.hasOwnProperty("mentionId"))
                                    if (!$util.isString(message.mentionId))
                                        return "mentionId: string expected";
                                if (message.confidence != null && message.hasOwnProperty("confidence"))
                                    if (typeof message.confidence !== "number")
                                        return "confidence: number expected";
                                if (message.pageAnchor != null && message.hasOwnProperty("pageAnchor")) {
                                    var error = $root.google.cloud.documentai.v1.Document.PageAnchor.verify(message.pageAnchor);
                                    if (error)
                                        return "pageAnchor." + error;
                                }
                                if (message.id != null && message.hasOwnProperty("id"))
                                    if (!$util.isString(message.id))
                                        return "id: string expected";
                                if (message.normalizedValue != null && message.hasOwnProperty("normalizedValue")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue.verify(message.normalizedValue);
                                    if (error)
                                        return "normalizedValue." + error;
                                }
                                if (message.properties != null && message.hasOwnProperty("properties")) {
                                    if (!Array.isArray(message.properties))
                                        return "properties: array expected";
                                    for (var i = 0; i < message.properties.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Entity.verify(message.properties[i]);
                                        if (error)
                                            return "properties." + error;
                                    }
                                }
                                if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance);
                                    if (error)
                                        return "provenance." + error;
                                }
                                if (message.redacted != null && message.hasOwnProperty("redacted"))
                                    if (typeof message.redacted !== "boolean")
                                        return "redacted: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates an Entity message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.Entity} Entity
                             */
                            Entity.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.Entity)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.Entity();
                                if (object.textAnchor != null) {
                                    if (typeof object.textAnchor !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Entity.textAnchor: object expected");
                                    message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.fromObject(object.textAnchor);
                                }
                                if (object.type != null)
                                    message.type = String(object.type);
                                if (object.mentionText != null)
                                    message.mentionText = String(object.mentionText);
                                if (object.mentionId != null)
                                    message.mentionId = String(object.mentionId);
                                if (object.confidence != null)
                                    message.confidence = Number(object.confidence);
                                if (object.pageAnchor != null) {
                                    if (typeof object.pageAnchor !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Entity.pageAnchor: object expected");
                                    message.pageAnchor = $root.google.cloud.documentai.v1.Document.PageAnchor.fromObject(object.pageAnchor);
                                }
                                if (object.id != null)
                                    message.id = String(object.id);
                                if (object.normalizedValue != null) {
                                    if (typeof object.normalizedValue !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Entity.normalizedValue: object expected");
                                    message.normalizedValue = $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue.fromObject(object.normalizedValue);
                                }
                                if (object.properties) {
                                    if (!Array.isArray(object.properties))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Entity.properties: array expected");
                                    message.properties = [];
                                    for (var i = 0; i < object.properties.length; ++i) {
                                        if (typeof object.properties[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Entity.properties: object expected");
                                        message.properties[i] = $root.google.cloud.documentai.v1.Document.Entity.fromObject(object.properties[i]);
                                    }
                                }
                                if (object.provenance != null) {
                                    if (typeof object.provenance !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Entity.provenance: object expected");
                                    message.provenance = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance);
                                }
                                if (object.redacted != null)
                                    message.redacted = Boolean(object.redacted);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an Entity message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {google.cloud.documentai.v1.Document.Entity} message Entity
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Entity.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.properties = [];
                                if (options.defaults) {
                                    object.textAnchor = null;
                                    object.type = "";
                                    object.mentionText = "";
                                    object.mentionId = "";
                                    object.confidence = 0;
                                    object.pageAnchor = null;
                                    object.id = "";
                                    object.normalizedValue = null;
                                    object.provenance = null;
                                    object.redacted = false;
                                }
                                if (message.textAnchor != null && message.hasOwnProperty("textAnchor"))
                                    object.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.toObject(message.textAnchor, options);
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = message.type;
                                if (message.mentionText != null && message.hasOwnProperty("mentionText"))
                                    object.mentionText = message.mentionText;
                                if (message.mentionId != null && message.hasOwnProperty("mentionId"))
                                    object.mentionId = message.mentionId;
                                if (message.confidence != null && message.hasOwnProperty("confidence"))
                                    object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;
                                if (message.pageAnchor != null && message.hasOwnProperty("pageAnchor"))
                                    object.pageAnchor = $root.google.cloud.documentai.v1.Document.PageAnchor.toObject(message.pageAnchor, options);
                                if (message.id != null && message.hasOwnProperty("id"))
                                    object.id = message.id;
                                if (message.normalizedValue != null && message.hasOwnProperty("normalizedValue"))
                                    object.normalizedValue = $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue.toObject(message.normalizedValue, options);
                                if (message.properties && message.properties.length) {
                                    object.properties = [];
                                    for (var j = 0; j < message.properties.length; ++j)
                                        object.properties[j] = $root.google.cloud.documentai.v1.Document.Entity.toObject(message.properties[j], options);
                                }
                                if (message.provenance != null && message.hasOwnProperty("provenance"))
                                    object.provenance = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance, options);
                                if (message.redacted != null && message.hasOwnProperty("redacted"))
                                    object.redacted = message.redacted;
                                return object;
                            };
    
                            /**
                             * Converts this Entity to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Entity.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Entity
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.Entity
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Entity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Entity";
                            };
    
                            Entity.NormalizedValue = (function() {
    
                                /**
                                 * Properties of a NormalizedValue.
                                 * @memberof google.cloud.documentai.v1.Document.Entity
                                 * @interface INormalizedValue
                                 * @property {google.type.IMoney|null} [moneyValue] NormalizedValue moneyValue
                                 * @property {google.type.IDate|null} [dateValue] NormalizedValue dateValue
                                 * @property {google.type.IDateTime|null} [datetimeValue] NormalizedValue datetimeValue
                                 * @property {google.type.IPostalAddress|null} [addressValue] NormalizedValue addressValue
                                 * @property {boolean|null} [booleanValue] NormalizedValue booleanValue
                                 * @property {number|null} [integerValue] NormalizedValue integerValue
                                 * @property {number|null} [floatValue] NormalizedValue floatValue
                                 * @property {string|null} [text] NormalizedValue text
                                 */
    
                                /**
                                 * Constructs a new NormalizedValue.
                                 * @memberof google.cloud.documentai.v1.Document.Entity
                                 * @classdesc Represents a NormalizedValue.
                                 * @implements INormalizedValue
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Entity.INormalizedValue=} [properties] Properties to set
                                 */
                                function NormalizedValue(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * NormalizedValue moneyValue.
                                 * @member {google.type.IMoney|null|undefined} moneyValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.moneyValue = null;
    
                                /**
                                 * NormalizedValue dateValue.
                                 * @member {google.type.IDate|null|undefined} dateValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.dateValue = null;
    
                                /**
                                 * NormalizedValue datetimeValue.
                                 * @member {google.type.IDateTime|null|undefined} datetimeValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.datetimeValue = null;
    
                                /**
                                 * NormalizedValue addressValue.
                                 * @member {google.type.IPostalAddress|null|undefined} addressValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.addressValue = null;
    
                                /**
                                 * NormalizedValue booleanValue.
                                 * @member {boolean|null|undefined} booleanValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.booleanValue = null;
    
                                /**
                                 * NormalizedValue integerValue.
                                 * @member {number|null|undefined} integerValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.integerValue = null;
    
                                /**
                                 * NormalizedValue floatValue.
                                 * @member {number|null|undefined} floatValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.floatValue = null;
    
                                /**
                                 * NormalizedValue text.
                                 * @member {string} text
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                NormalizedValue.prototype.text = "";
    
                                // OneOf field names bound to virtual getters and setters
                                var $oneOfFields;
    
                                /**
                                 * NormalizedValue structuredValue.
                                 * @member {"moneyValue"|"dateValue"|"datetimeValue"|"addressValue"|"booleanValue"|"integerValue"|"floatValue"|undefined} structuredValue
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 */
                                Object.defineProperty(NormalizedValue.prototype, "structuredValue", {
                                    get: $util.oneOfGetter($oneOfFields = ["moneyValue", "dateValue", "datetimeValue", "addressValue", "booleanValue", "integerValue", "floatValue"]),
                                    set: $util.oneOfSetter($oneOfFields)
                                });
    
                                /**
                                 * Creates a new NormalizedValue instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Entity.INormalizedValue=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Entity.NormalizedValue} NormalizedValue instance
                                 */
                                NormalizedValue.create = function create(properties) {
                                    return new NormalizedValue(properties);
                                };
    
                                /**
                                 * Encodes the specified NormalizedValue message. Does not implicitly {@link google.cloud.documentai.v1.Document.Entity.NormalizedValue.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Entity.INormalizedValue} message NormalizedValue message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                NormalizedValue.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.text != null && Object.hasOwnProperty.call(message, "text"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.text);
                                    if (message.moneyValue != null && Object.hasOwnProperty.call(message, "moneyValue"))
                                        $root.google.type.Money.encode(message.moneyValue, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.dateValue != null && Object.hasOwnProperty.call(message, "dateValue"))
                                        $root.google.type.Date.encode(message.dateValue, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    if (message.datetimeValue != null && Object.hasOwnProperty.call(message, "datetimeValue"))
                                        $root.google.type.DateTime.encode(message.datetimeValue, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                    if (message.addressValue != null && Object.hasOwnProperty.call(message, "addressValue"))
                                        $root.google.type.PostalAddress.encode(message.addressValue, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                    if (message.booleanValue != null && Object.hasOwnProperty.call(message, "booleanValue"))
                                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.booleanValue);
                                    if (message.integerValue != null && Object.hasOwnProperty.call(message, "integerValue"))
                                        writer.uint32(/* id 7, wireType 0 =*/56).int32(message.integerValue);
                                    if (message.floatValue != null && Object.hasOwnProperty.call(message, "floatValue"))
                                        writer.uint32(/* id 8, wireType 5 =*/69).float(message.floatValue);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified NormalizedValue message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Entity.NormalizedValue.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Entity.INormalizedValue} message NormalizedValue message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                NormalizedValue.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a NormalizedValue message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Entity.NormalizedValue} NormalizedValue
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                NormalizedValue.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 2: {
                                                message.moneyValue = $root.google.type.Money.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 3: {
                                                message.dateValue = $root.google.type.Date.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 4: {
                                                message.datetimeValue = $root.google.type.DateTime.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 5: {
                                                message.addressValue = $root.google.type.PostalAddress.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 6: {
                                                message.booleanValue = reader.bool();
                                                break;
                                            }
                                        case 7: {
                                                message.integerValue = reader.int32();
                                                break;
                                            }
                                        case 8: {
                                                message.floatValue = reader.float();
                                                break;
                                            }
                                        case 1: {
                                                message.text = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a NormalizedValue message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Entity.NormalizedValue} NormalizedValue
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                NormalizedValue.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a NormalizedValue message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                NormalizedValue.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    var properties = {};
                                    if (message.moneyValue != null && message.hasOwnProperty("moneyValue")) {
                                        properties.structuredValue = 1;
                                        {
                                            var error = $root.google.type.Money.verify(message.moneyValue);
                                            if (error)
                                                return "moneyValue." + error;
                                        }
                                    }
                                    if (message.dateValue != null && message.hasOwnProperty("dateValue")) {
                                        if (properties.structuredValue === 1)
                                            return "structuredValue: multiple values";
                                        properties.structuredValue = 1;
                                        {
                                            var error = $root.google.type.Date.verify(message.dateValue);
                                            if (error)
                                                return "dateValue." + error;
                                        }
                                    }
                                    if (message.datetimeValue != null && message.hasOwnProperty("datetimeValue")) {
                                        if (properties.structuredValue === 1)
                                            return "structuredValue: multiple values";
                                        properties.structuredValue = 1;
                                        {
                                            var error = $root.google.type.DateTime.verify(message.datetimeValue);
                                            if (error)
                                                return "datetimeValue." + error;
                                        }
                                    }
                                    if (message.addressValue != null && message.hasOwnProperty("addressValue")) {
                                        if (properties.structuredValue === 1)
                                            return "structuredValue: multiple values";
                                        properties.structuredValue = 1;
                                        {
                                            var error = $root.google.type.PostalAddress.verify(message.addressValue);
                                            if (error)
                                                return "addressValue." + error;
                                        }
                                    }
                                    if (message.booleanValue != null && message.hasOwnProperty("booleanValue")) {
                                        if (properties.structuredValue === 1)
                                            return "structuredValue: multiple values";
                                        properties.structuredValue = 1;
                                        if (typeof message.booleanValue !== "boolean")
                                            return "booleanValue: boolean expected";
                                    }
                                    if (message.integerValue != null && message.hasOwnProperty("integerValue")) {
                                        if (properties.structuredValue === 1)
                                            return "structuredValue: multiple values";
                                        properties.structuredValue = 1;
                                        if (!$util.isInteger(message.integerValue))
                                            return "integerValue: integer expected";
                                    }
                                    if (message.floatValue != null && message.hasOwnProperty("floatValue")) {
                                        if (properties.structuredValue === 1)
                                            return "structuredValue: multiple values";
                                        properties.structuredValue = 1;
                                        if (typeof message.floatValue !== "number")
                                            return "floatValue: number expected";
                                    }
                                    if (message.text != null && message.hasOwnProperty("text"))
                                        if (!$util.isString(message.text))
                                            return "text: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a NormalizedValue message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Entity.NormalizedValue} NormalizedValue
                                 */
                                NormalizedValue.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Entity.NormalizedValue();
                                    if (object.moneyValue != null) {
                                        if (typeof object.moneyValue !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Entity.NormalizedValue.moneyValue: object expected");
                                        message.moneyValue = $root.google.type.Money.fromObject(object.moneyValue);
                                    }
                                    if (object.dateValue != null) {
                                        if (typeof object.dateValue !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Entity.NormalizedValue.dateValue: object expected");
                                        message.dateValue = $root.google.type.Date.fromObject(object.dateValue);
                                    }
                                    if (object.datetimeValue != null) {
                                        if (typeof object.datetimeValue !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Entity.NormalizedValue.datetimeValue: object expected");
                                        message.datetimeValue = $root.google.type.DateTime.fromObject(object.datetimeValue);
                                    }
                                    if (object.addressValue != null) {
                                        if (typeof object.addressValue !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Entity.NormalizedValue.addressValue: object expected");
                                        message.addressValue = $root.google.type.PostalAddress.fromObject(object.addressValue);
                                    }
                                    if (object.booleanValue != null)
                                        message.booleanValue = Boolean(object.booleanValue);
                                    if (object.integerValue != null)
                                        message.integerValue = object.integerValue | 0;
                                    if (object.floatValue != null)
                                        message.floatValue = Number(object.floatValue);
                                    if (object.text != null)
                                        message.text = String(object.text);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a NormalizedValue message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Entity.NormalizedValue} message NormalizedValue
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                NormalizedValue.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.text = "";
                                    if (message.text != null && message.hasOwnProperty("text"))
                                        object.text = message.text;
                                    if (message.moneyValue != null && message.hasOwnProperty("moneyValue")) {
                                        object.moneyValue = $root.google.type.Money.toObject(message.moneyValue, options);
                                        if (options.oneofs)
                                            object.structuredValue = "moneyValue";
                                    }
                                    if (message.dateValue != null && message.hasOwnProperty("dateValue")) {
                                        object.dateValue = $root.google.type.Date.toObject(message.dateValue, options);
                                        if (options.oneofs)
                                            object.structuredValue = "dateValue";
                                    }
                                    if (message.datetimeValue != null && message.hasOwnProperty("datetimeValue")) {
                                        object.datetimeValue = $root.google.type.DateTime.toObject(message.datetimeValue, options);
                                        if (options.oneofs)
                                            object.structuredValue = "datetimeValue";
                                    }
                                    if (message.addressValue != null && message.hasOwnProperty("addressValue")) {
                                        object.addressValue = $root.google.type.PostalAddress.toObject(message.addressValue, options);
                                        if (options.oneofs)
                                            object.structuredValue = "addressValue";
                                    }
                                    if (message.booleanValue != null && message.hasOwnProperty("booleanValue")) {
                                        object.booleanValue = message.booleanValue;
                                        if (options.oneofs)
                                            object.structuredValue = "booleanValue";
                                    }
                                    if (message.integerValue != null && message.hasOwnProperty("integerValue")) {
                                        object.integerValue = message.integerValue;
                                        if (options.oneofs)
                                            object.structuredValue = "integerValue";
                                    }
                                    if (message.floatValue != null && message.hasOwnProperty("floatValue")) {
                                        object.floatValue = options.json && !isFinite(message.floatValue) ? String(message.floatValue) : message.floatValue;
                                        if (options.oneofs)
                                            object.structuredValue = "floatValue";
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this NormalizedValue to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                NormalizedValue.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for NormalizedValue
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Entity.NormalizedValue
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                NormalizedValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Entity.NormalizedValue";
                                };
    
                                return NormalizedValue;
                            })();
    
                            return Entity;
                        })();
    
                        Document.EntityRelation = (function() {
    
                            /**
                             * Properties of an EntityRelation.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IEntityRelation
                             * @property {string|null} [subjectId] EntityRelation subjectId
                             * @property {string|null} [objectId] EntityRelation objectId
                             * @property {string|null} [relation] EntityRelation relation
                             */
    
                            /**
                             * Constructs a new EntityRelation.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents an EntityRelation.
                             * @implements IEntityRelation
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IEntityRelation=} [properties] Properties to set
                             */
                            function EntityRelation(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * EntityRelation subjectId.
                             * @member {string} subjectId
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @instance
                             */
                            EntityRelation.prototype.subjectId = "";
    
                            /**
                             * EntityRelation objectId.
                             * @member {string} objectId
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @instance
                             */
                            EntityRelation.prototype.objectId = "";
    
                            /**
                             * EntityRelation relation.
                             * @member {string} relation
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @instance
                             */
                            EntityRelation.prototype.relation = "";
    
                            /**
                             * Creates a new EntityRelation instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IEntityRelation=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.EntityRelation} EntityRelation instance
                             */
                            EntityRelation.create = function create(properties) {
                                return new EntityRelation(properties);
                            };
    
                            /**
                             * Encodes the specified EntityRelation message. Does not implicitly {@link google.cloud.documentai.v1.Document.EntityRelation.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IEntityRelation} message EntityRelation message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            EntityRelation.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.subjectId != null && Object.hasOwnProperty.call(message, "subjectId"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.subjectId);
                                if (message.objectId != null && Object.hasOwnProperty.call(message, "objectId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.objectId);
                                if (message.relation != null && Object.hasOwnProperty.call(message, "relation"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.relation);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified EntityRelation message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.EntityRelation.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IEntityRelation} message EntityRelation message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            EntityRelation.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an EntityRelation message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.EntityRelation} EntityRelation
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            EntityRelation.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.EntityRelation();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.subjectId = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.objectId = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.relation = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an EntityRelation message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.EntityRelation} EntityRelation
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            EntityRelation.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an EntityRelation message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            EntityRelation.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.subjectId != null && message.hasOwnProperty("subjectId"))
                                    if (!$util.isString(message.subjectId))
                                        return "subjectId: string expected";
                                if (message.objectId != null && message.hasOwnProperty("objectId"))
                                    if (!$util.isString(message.objectId))
                                        return "objectId: string expected";
                                if (message.relation != null && message.hasOwnProperty("relation"))
                                    if (!$util.isString(message.relation))
                                        return "relation: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an EntityRelation message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.EntityRelation} EntityRelation
                             */
                            EntityRelation.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.EntityRelation)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.EntityRelation();
                                if (object.subjectId != null)
                                    message.subjectId = String(object.subjectId);
                                if (object.objectId != null)
                                    message.objectId = String(object.objectId);
                                if (object.relation != null)
                                    message.relation = String(object.relation);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an EntityRelation message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {google.cloud.documentai.v1.Document.EntityRelation} message EntityRelation
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            EntityRelation.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.subjectId = "";
                                    object.objectId = "";
                                    object.relation = "";
                                }
                                if (message.subjectId != null && message.hasOwnProperty("subjectId"))
                                    object.subjectId = message.subjectId;
                                if (message.objectId != null && message.hasOwnProperty("objectId"))
                                    object.objectId = message.objectId;
                                if (message.relation != null && message.hasOwnProperty("relation"))
                                    object.relation = message.relation;
                                return object;
                            };
    
                            /**
                             * Converts this EntityRelation to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            EntityRelation.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for EntityRelation
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.EntityRelation
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            EntityRelation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.EntityRelation";
                            };
    
                            return EntityRelation;
                        })();
    
                        Document.TextAnchor = (function() {
    
                            /**
                             * Properties of a TextAnchor.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface ITextAnchor
                             * @property {Array.<google.cloud.documentai.v1.Document.TextAnchor.ITextSegment>|null} [textSegments] TextAnchor textSegments
                             * @property {string|null} [content] TextAnchor content
                             */
    
                            /**
                             * Constructs a new TextAnchor.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a TextAnchor.
                             * @implements ITextAnchor
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.ITextAnchor=} [properties] Properties to set
                             */
                            function TextAnchor(properties) {
                                this.textSegments = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * TextAnchor textSegments.
                             * @member {Array.<google.cloud.documentai.v1.Document.TextAnchor.ITextSegment>} textSegments
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @instance
                             */
                            TextAnchor.prototype.textSegments = $util.emptyArray;
    
                            /**
                             * TextAnchor content.
                             * @member {string} content
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @instance
                             */
                            TextAnchor.prototype.content = "";
    
                            /**
                             * Creates a new TextAnchor instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.ITextAnchor=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.TextAnchor} TextAnchor instance
                             */
                            TextAnchor.create = function create(properties) {
                                return new TextAnchor(properties);
                            };
    
                            /**
                             * Encodes the specified TextAnchor message. Does not implicitly {@link google.cloud.documentai.v1.Document.TextAnchor.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.ITextAnchor} message TextAnchor message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TextAnchor.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.textSegments != null && message.textSegments.length)
                                    for (var i = 0; i < message.textSegments.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment.encode(message.textSegments[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.content != null && Object.hasOwnProperty.call(message, "content"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.content);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified TextAnchor message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.TextAnchor.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.ITextAnchor} message TextAnchor message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TextAnchor.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a TextAnchor message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.TextAnchor} TextAnchor
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TextAnchor.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.TextAnchor();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.textSegments && message.textSegments.length))
                                                message.textSegments = [];
                                            message.textSegments.push($root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            message.content = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a TextAnchor message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.TextAnchor} TextAnchor
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TextAnchor.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a TextAnchor message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            TextAnchor.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.textSegments != null && message.hasOwnProperty("textSegments")) {
                                    if (!Array.isArray(message.textSegments))
                                        return "textSegments: array expected";
                                    for (var i = 0; i < message.textSegments.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment.verify(message.textSegments[i]);
                                        if (error)
                                            return "textSegments." + error;
                                    }
                                }
                                if (message.content != null && message.hasOwnProperty("content"))
                                    if (!$util.isString(message.content))
                                        return "content: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a TextAnchor message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.TextAnchor} TextAnchor
                             */
                            TextAnchor.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.TextAnchor)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.TextAnchor();
                                if (object.textSegments) {
                                    if (!Array.isArray(object.textSegments))
                                        throw TypeError(".google.cloud.documentai.v1.Document.TextAnchor.textSegments: array expected");
                                    message.textSegments = [];
                                    for (var i = 0; i < object.textSegments.length; ++i) {
                                        if (typeof object.textSegments[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.TextAnchor.textSegments: object expected");
                                        message.textSegments[i] = $root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment.fromObject(object.textSegments[i]);
                                    }
                                }
                                if (object.content != null)
                                    message.content = String(object.content);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a TextAnchor message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.TextAnchor} message TextAnchor
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            TextAnchor.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.textSegments = [];
                                if (options.defaults)
                                    object.content = "";
                                if (message.textSegments && message.textSegments.length) {
                                    object.textSegments = [];
                                    for (var j = 0; j < message.textSegments.length; ++j)
                                        object.textSegments[j] = $root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment.toObject(message.textSegments[j], options);
                                }
                                if (message.content != null && message.hasOwnProperty("content"))
                                    object.content = message.content;
                                return object;
                            };
    
                            /**
                             * Converts this TextAnchor to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            TextAnchor.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for TextAnchor
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.TextAnchor
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            TextAnchor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.TextAnchor";
                            };
    
                            TextAnchor.TextSegment = (function() {
    
                                /**
                                 * Properties of a TextSegment.
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor
                                 * @interface ITextSegment
                                 * @property {number|Long|null} [startIndex] TextSegment startIndex
                                 * @property {number|Long|null} [endIndex] TextSegment endIndex
                                 */
    
                                /**
                                 * Constructs a new TextSegment.
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor
                                 * @classdesc Represents a TextSegment.
                                 * @implements ITextSegment
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.TextAnchor.ITextSegment=} [properties] Properties to set
                                 */
                                function TextSegment(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * TextSegment startIndex.
                                 * @member {number|Long} startIndex
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @instance
                                 */
                                TextSegment.prototype.startIndex = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                                /**
                                 * TextSegment endIndex.
                                 * @member {number|Long} endIndex
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @instance
                                 */
                                TextSegment.prototype.endIndex = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                                /**
                                 * Creates a new TextSegment instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.TextAnchor.ITextSegment=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.TextAnchor.TextSegment} TextSegment instance
                                 */
                                TextSegment.create = function create(properties) {
                                    return new TextSegment(properties);
                                };
    
                                /**
                                 * Encodes the specified TextSegment message. Does not implicitly {@link google.cloud.documentai.v1.Document.TextAnchor.TextSegment.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.TextAnchor.ITextSegment} message TextSegment message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                TextSegment.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.startIndex != null && Object.hasOwnProperty.call(message, "startIndex"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.startIndex);
                                    if (message.endIndex != null && Object.hasOwnProperty.call(message, "endIndex"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).int64(message.endIndex);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified TextSegment message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.TextAnchor.TextSegment.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.TextAnchor.ITextSegment} message TextSegment message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                TextSegment.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a TextSegment message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.TextAnchor.TextSegment} TextSegment
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                TextSegment.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.startIndex = reader.int64();
                                                break;
                                            }
                                        case 2: {
                                                message.endIndex = reader.int64();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a TextSegment message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.TextAnchor.TextSegment} TextSegment
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                TextSegment.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a TextSegment message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                TextSegment.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.startIndex != null && message.hasOwnProperty("startIndex"))
                                        if (!$util.isInteger(message.startIndex) && !(message.startIndex && $util.isInteger(message.startIndex.low) && $util.isInteger(message.startIndex.high)))
                                            return "startIndex: integer|Long expected";
                                    if (message.endIndex != null && message.hasOwnProperty("endIndex"))
                                        if (!$util.isInteger(message.endIndex) && !(message.endIndex && $util.isInteger(message.endIndex.low) && $util.isInteger(message.endIndex.high)))
                                            return "endIndex: integer|Long expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a TextSegment message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.TextAnchor.TextSegment} TextSegment
                                 */
                                TextSegment.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.TextAnchor.TextSegment();
                                    if (object.startIndex != null)
                                        if ($util.Long)
                                            (message.startIndex = $util.Long.fromValue(object.startIndex)).unsigned = false;
                                        else if (typeof object.startIndex === "string")
                                            message.startIndex = parseInt(object.startIndex, 10);
                                        else if (typeof object.startIndex === "number")
                                            message.startIndex = object.startIndex;
                                        else if (typeof object.startIndex === "object")
                                            message.startIndex = new $util.LongBits(object.startIndex.low >>> 0, object.startIndex.high >>> 0).toNumber();
                                    if (object.endIndex != null)
                                        if ($util.Long)
                                            (message.endIndex = $util.Long.fromValue(object.endIndex)).unsigned = false;
                                        else if (typeof object.endIndex === "string")
                                            message.endIndex = parseInt(object.endIndex, 10);
                                        else if (typeof object.endIndex === "number")
                                            message.endIndex = object.endIndex;
                                        else if (typeof object.endIndex === "object")
                                            message.endIndex = new $util.LongBits(object.endIndex.low >>> 0, object.endIndex.high >>> 0).toNumber();
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a TextSegment message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.TextAnchor.TextSegment} message TextSegment
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                TextSegment.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        if ($util.Long) {
                                            var long = new $util.Long(0, 0, false);
                                            object.startIndex = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                        } else
                                            object.startIndex = options.longs === String ? "0" : 0;
                                        if ($util.Long) {
                                            var long = new $util.Long(0, 0, false);
                                            object.endIndex = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                        } else
                                            object.endIndex = options.longs === String ? "0" : 0;
                                    }
                                    if (message.startIndex != null && message.hasOwnProperty("startIndex"))
                                        if (typeof message.startIndex === "number")
                                            object.startIndex = options.longs === String ? String(message.startIndex) : message.startIndex;
                                        else
                                            object.startIndex = options.longs === String ? $util.Long.prototype.toString.call(message.startIndex) : options.longs === Number ? new $util.LongBits(message.startIndex.low >>> 0, message.startIndex.high >>> 0).toNumber() : message.startIndex;
                                    if (message.endIndex != null && message.hasOwnProperty("endIndex"))
                                        if (typeof message.endIndex === "number")
                                            object.endIndex = options.longs === String ? String(message.endIndex) : message.endIndex;
                                        else
                                            object.endIndex = options.longs === String ? $util.Long.prototype.toString.call(message.endIndex) : options.longs === Number ? new $util.LongBits(message.endIndex.low >>> 0, message.endIndex.high >>> 0).toNumber() : message.endIndex;
                                    return object;
                                };
    
                                /**
                                 * Converts this TextSegment to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                TextSegment.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for TextSegment
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.TextAnchor.TextSegment
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                TextSegment.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.TextAnchor.TextSegment";
                                };
    
                                return TextSegment;
                            })();
    
                            return TextAnchor;
                        })();
    
                        Document.PageAnchor = (function() {
    
                            /**
                             * Properties of a PageAnchor.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IPageAnchor
                             * @property {Array.<google.cloud.documentai.v1.Document.PageAnchor.IPageRef>|null} [pageRefs] PageAnchor pageRefs
                             */
    
                            /**
                             * Constructs a new PageAnchor.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a PageAnchor.
                             * @implements IPageAnchor
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IPageAnchor=} [properties] Properties to set
                             */
                            function PageAnchor(properties) {
                                this.pageRefs = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PageAnchor pageRefs.
                             * @member {Array.<google.cloud.documentai.v1.Document.PageAnchor.IPageRef>} pageRefs
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @instance
                             */
                            PageAnchor.prototype.pageRefs = $util.emptyArray;
    
                            /**
                             * Creates a new PageAnchor instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IPageAnchor=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.PageAnchor} PageAnchor instance
                             */
                            PageAnchor.create = function create(properties) {
                                return new PageAnchor(properties);
                            };
    
                            /**
                             * Encodes the specified PageAnchor message. Does not implicitly {@link google.cloud.documentai.v1.Document.PageAnchor.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IPageAnchor} message PageAnchor message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PageAnchor.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.pageRefs != null && message.pageRefs.length)
                                    for (var i = 0; i < message.pageRefs.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef.encode(message.pageRefs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PageAnchor message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.PageAnchor.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IPageAnchor} message PageAnchor message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PageAnchor.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PageAnchor message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.PageAnchor} PageAnchor
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PageAnchor.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.PageAnchor();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.pageRefs && message.pageRefs.length))
                                                message.pageRefs = [];
                                            message.pageRefs.push($root.google.cloud.documentai.v1.Document.PageAnchor.PageRef.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PageAnchor message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.PageAnchor} PageAnchor
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PageAnchor.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PageAnchor message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PageAnchor.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.pageRefs != null && message.hasOwnProperty("pageRefs")) {
                                    if (!Array.isArray(message.pageRefs))
                                        return "pageRefs: array expected";
                                    for (var i = 0; i < message.pageRefs.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef.verify(message.pageRefs[i]);
                                        if (error)
                                            return "pageRefs." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a PageAnchor message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.PageAnchor} PageAnchor
                             */
                            PageAnchor.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.PageAnchor)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.PageAnchor();
                                if (object.pageRefs) {
                                    if (!Array.isArray(object.pageRefs))
                                        throw TypeError(".google.cloud.documentai.v1.Document.PageAnchor.pageRefs: array expected");
                                    message.pageRefs = [];
                                    for (var i = 0; i < object.pageRefs.length; ++i) {
                                        if (typeof object.pageRefs[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.PageAnchor.pageRefs: object expected");
                                        message.pageRefs[i] = $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef.fromObject(object.pageRefs[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PageAnchor message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {google.cloud.documentai.v1.Document.PageAnchor} message PageAnchor
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PageAnchor.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.pageRefs = [];
                                if (message.pageRefs && message.pageRefs.length) {
                                    object.pageRefs = [];
                                    for (var j = 0; j < message.pageRefs.length; ++j)
                                        object.pageRefs[j] = $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef.toObject(message.pageRefs[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this PageAnchor to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PageAnchor.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for PageAnchor
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.PageAnchor
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            PageAnchor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.PageAnchor";
                            };
    
                            PageAnchor.PageRef = (function() {
    
                                /**
                                 * Properties of a PageRef.
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor
                                 * @interface IPageRef
                                 * @property {number|Long|null} [page] PageRef page
                                 * @property {google.cloud.documentai.v1.Document.PageAnchor.PageRef.LayoutType|null} [layoutType] PageRef layoutType
                                 * @property {string|null} [layoutId] PageRef layoutId
                                 * @property {google.cloud.documentai.v1.IBoundingPoly|null} [boundingPoly] PageRef boundingPoly
                                 * @property {number|null} [confidence] PageRef confidence
                                 */
    
                                /**
                                 * Constructs a new PageRef.
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor
                                 * @classdesc Represents a PageRef.
                                 * @implements IPageRef
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.PageAnchor.IPageRef=} [properties] Properties to set
                                 */
                                function PageRef(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * PageRef page.
                                 * @member {number|Long} page
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @instance
                                 */
                                PageRef.prototype.page = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                                /**
                                 * PageRef layoutType.
                                 * @member {google.cloud.documentai.v1.Document.PageAnchor.PageRef.LayoutType} layoutType
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @instance
                                 */
                                PageRef.prototype.layoutType = 0;
    
                                /**
                                 * PageRef layoutId.
                                 * @member {string} layoutId
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @instance
                                 */
                                PageRef.prototype.layoutId = "";
    
                                /**
                                 * PageRef boundingPoly.
                                 * @member {google.cloud.documentai.v1.IBoundingPoly|null|undefined} boundingPoly
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @instance
                                 */
                                PageRef.prototype.boundingPoly = null;
    
                                /**
                                 * PageRef confidence.
                                 * @member {number} confidence
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @instance
                                 */
                                PageRef.prototype.confidence = 0;
    
                                /**
                                 * Creates a new PageRef instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.PageAnchor.IPageRef=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.PageAnchor.PageRef} PageRef instance
                                 */
                                PageRef.create = function create(properties) {
                                    return new PageRef(properties);
                                };
    
                                /**
                                 * Encodes the specified PageRef message. Does not implicitly {@link google.cloud.documentai.v1.Document.PageAnchor.PageRef.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.PageAnchor.IPageRef} message PageRef message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                PageRef.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.page != null && Object.hasOwnProperty.call(message, "page"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.page);
                                    if (message.layoutType != null && Object.hasOwnProperty.call(message, "layoutType"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.layoutType);
                                    if (message.layoutId != null && Object.hasOwnProperty.call(message, "layoutId"))
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.layoutId);
                                    if (message.boundingPoly != null && Object.hasOwnProperty.call(message, "boundingPoly"))
                                        $root.google.cloud.documentai.v1.BoundingPoly.encode(message.boundingPoly, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                    if (message.confidence != null && Object.hasOwnProperty.call(message, "confidence"))
                                        writer.uint32(/* id 5, wireType 5 =*/45).float(message.confidence);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified PageRef message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.PageAnchor.PageRef.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.PageAnchor.IPageRef} message PageRef message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                PageRef.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a PageRef message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.PageAnchor.PageRef} PageRef
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                PageRef.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.page = reader.int64();
                                                break;
                                            }
                                        case 2: {
                                                message.layoutType = reader.int32();
                                                break;
                                            }
                                        case 3: {
                                                message.layoutId = reader.string();
                                                break;
                                            }
                                        case 4: {
                                                message.boundingPoly = $root.google.cloud.documentai.v1.BoundingPoly.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 5: {
                                                message.confidence = reader.float();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a PageRef message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.PageAnchor.PageRef} PageRef
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                PageRef.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a PageRef message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                PageRef.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.page != null && message.hasOwnProperty("page"))
                                        if (!$util.isInteger(message.page) && !(message.page && $util.isInteger(message.page.low) && $util.isInteger(message.page.high)))
                                            return "page: integer|Long expected";
                                    if (message.layoutType != null && message.hasOwnProperty("layoutType"))
                                        switch (message.layoutType) {
                                        default:
                                            return "layoutType: enum value expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 5:
                                        case 6:
                                        case 7:
                                            break;
                                        }
                                    if (message.layoutId != null && message.hasOwnProperty("layoutId"))
                                        if (!$util.isString(message.layoutId))
                                            return "layoutId: string expected";
                                    if (message.boundingPoly != null && message.hasOwnProperty("boundingPoly")) {
                                        var error = $root.google.cloud.documentai.v1.BoundingPoly.verify(message.boundingPoly);
                                        if (error)
                                            return "boundingPoly." + error;
                                    }
                                    if (message.confidence != null && message.hasOwnProperty("confidence"))
                                        if (typeof message.confidence !== "number")
                                            return "confidence: number expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a PageRef message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.PageAnchor.PageRef} PageRef
                                 */
                                PageRef.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef();
                                    if (object.page != null)
                                        if ($util.Long)
                                            (message.page = $util.Long.fromValue(object.page)).unsigned = false;
                                        else if (typeof object.page === "string")
                                            message.page = parseInt(object.page, 10);
                                        else if (typeof object.page === "number")
                                            message.page = object.page;
                                        else if (typeof object.page === "object")
                                            message.page = new $util.LongBits(object.page.low >>> 0, object.page.high >>> 0).toNumber();
                                    switch (object.layoutType) {
                                    default:
                                        if (typeof object.layoutType === "number") {
                                            message.layoutType = object.layoutType;
                                            break;
                                        }
                                        break;
                                    case "LAYOUT_TYPE_UNSPECIFIED":
                                    case 0:
                                        message.layoutType = 0;
                                        break;
                                    case "BLOCK":
                                    case 1:
                                        message.layoutType = 1;
                                        break;
                                    case "PARAGRAPH":
                                    case 2:
                                        message.layoutType = 2;
                                        break;
                                    case "LINE":
                                    case 3:
                                        message.layoutType = 3;
                                        break;
                                    case "TOKEN":
                                    case 4:
                                        message.layoutType = 4;
                                        break;
                                    case "VISUAL_ELEMENT":
                                    case 5:
                                        message.layoutType = 5;
                                        break;
                                    case "TABLE":
                                    case 6:
                                        message.layoutType = 6;
                                        break;
                                    case "FORM_FIELD":
                                    case 7:
                                        message.layoutType = 7;
                                        break;
                                    }
                                    if (object.layoutId != null)
                                        message.layoutId = String(object.layoutId);
                                    if (object.boundingPoly != null) {
                                        if (typeof object.boundingPoly !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.PageAnchor.PageRef.boundingPoly: object expected");
                                        message.boundingPoly = $root.google.cloud.documentai.v1.BoundingPoly.fromObject(object.boundingPoly);
                                    }
                                    if (object.confidence != null)
                                        message.confidence = Number(object.confidence);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a PageRef message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.PageAnchor.PageRef} message PageRef
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                PageRef.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        if ($util.Long) {
                                            var long = new $util.Long(0, 0, false);
                                            object.page = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                        } else
                                            object.page = options.longs === String ? "0" : 0;
                                        object.layoutType = options.enums === String ? "LAYOUT_TYPE_UNSPECIFIED" : 0;
                                        object.layoutId = "";
                                        object.boundingPoly = null;
                                        object.confidence = 0;
                                    }
                                    if (message.page != null && message.hasOwnProperty("page"))
                                        if (typeof message.page === "number")
                                            object.page = options.longs === String ? String(message.page) : message.page;
                                        else
                                            object.page = options.longs === String ? $util.Long.prototype.toString.call(message.page) : options.longs === Number ? new $util.LongBits(message.page.low >>> 0, message.page.high >>> 0).toNumber() : message.page;
                                    if (message.layoutType != null && message.hasOwnProperty("layoutType"))
                                        object.layoutType = options.enums === String ? $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef.LayoutType[message.layoutType] === undefined ? message.layoutType : $root.google.cloud.documentai.v1.Document.PageAnchor.PageRef.LayoutType[message.layoutType] : message.layoutType;
                                    if (message.layoutId != null && message.hasOwnProperty("layoutId"))
                                        object.layoutId = message.layoutId;
                                    if (message.boundingPoly != null && message.hasOwnProperty("boundingPoly"))
                                        object.boundingPoly = $root.google.cloud.documentai.v1.BoundingPoly.toObject(message.boundingPoly, options);
                                    if (message.confidence != null && message.hasOwnProperty("confidence"))
                                        object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;
                                    return object;
                                };
    
                                /**
                                 * Converts this PageRef to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                PageRef.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for PageRef
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.PageAnchor.PageRef
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                PageRef.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.PageAnchor.PageRef";
                                };
    
                                /**
                                 * LayoutType enum.
                                 * @name google.cloud.documentai.v1.Document.PageAnchor.PageRef.LayoutType
                                 * @enum {number}
                                 * @property {number} LAYOUT_TYPE_UNSPECIFIED=0 LAYOUT_TYPE_UNSPECIFIED value
                                 * @property {number} BLOCK=1 BLOCK value
                                 * @property {number} PARAGRAPH=2 PARAGRAPH value
                                 * @property {number} LINE=3 LINE value
                                 * @property {number} TOKEN=4 TOKEN value
                                 * @property {number} VISUAL_ELEMENT=5 VISUAL_ELEMENT value
                                 * @property {number} TABLE=6 TABLE value
                                 * @property {number} FORM_FIELD=7 FORM_FIELD value
                                 */
                                PageRef.LayoutType = (function() {
                                    var valuesById = {}, values = Object.create(valuesById);
                                    values[valuesById[0] = "LAYOUT_TYPE_UNSPECIFIED"] = 0;
                                    values[valuesById[1] = "BLOCK"] = 1;
                                    values[valuesById[2] = "PARAGRAPH"] = 2;
                                    values[valuesById[3] = "LINE"] = 3;
                                    values[valuesById[4] = "TOKEN"] = 4;
                                    values[valuesById[5] = "VISUAL_ELEMENT"] = 5;
                                    values[valuesById[6] = "TABLE"] = 6;
                                    values[valuesById[7] = "FORM_FIELD"] = 7;
                                    return values;
                                })();
    
                                return PageRef;
                            })();
    
                            return PageAnchor;
                        })();
    
                        Document.Provenance = (function() {
    
                            /**
                             * Properties of a Provenance.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IProvenance
                             * @property {number|null} [revision] Provenance revision
                             * @property {number|null} [id] Provenance id
                             * @property {Array.<google.cloud.documentai.v1.Document.Provenance.IParent>|null} [parents] Provenance parents
                             * @property {google.cloud.documentai.v1.Document.Provenance.OperationType|null} [type] Provenance type
                             */
    
                            /**
                             * Constructs a new Provenance.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a Provenance.
                             * @implements IProvenance
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IProvenance=} [properties] Properties to set
                             */
                            function Provenance(properties) {
                                this.parents = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Provenance revision.
                             * @member {number} revision
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @instance
                             */
                            Provenance.prototype.revision = 0;
    
                            /**
                             * Provenance id.
                             * @member {number} id
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @instance
                             */
                            Provenance.prototype.id = 0;
    
                            /**
                             * Provenance parents.
                             * @member {Array.<google.cloud.documentai.v1.Document.Provenance.IParent>} parents
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @instance
                             */
                            Provenance.prototype.parents = $util.emptyArray;
    
                            /**
                             * Provenance type.
                             * @member {google.cloud.documentai.v1.Document.Provenance.OperationType} type
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @instance
                             */
                            Provenance.prototype.type = 0;
    
                            /**
                             * Creates a new Provenance instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IProvenance=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.Provenance} Provenance instance
                             */
                            Provenance.create = function create(properties) {
                                return new Provenance(properties);
                            };
    
                            /**
                             * Encodes the specified Provenance message. Does not implicitly {@link google.cloud.documentai.v1.Document.Provenance.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IProvenance} message Provenance message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Provenance.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.revision);
                                if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.id);
                                if (message.parents != null && message.parents.length)
                                    for (var i = 0; i < message.parents.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Provenance.Parent.encode(message.parents[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.type);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Provenance message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Provenance.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IProvenance} message Provenance message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Provenance.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Provenance message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.Provenance} Provenance
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Provenance.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Provenance();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.revision = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.id = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.parents && message.parents.length))
                                                message.parents = [];
                                            message.parents.push($root.google.cloud.documentai.v1.Document.Provenance.Parent.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 4: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Provenance message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.Provenance} Provenance
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Provenance.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Provenance message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Provenance.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.revision != null && message.hasOwnProperty("revision"))
                                    if (!$util.isInteger(message.revision))
                                        return "revision: integer expected";
                                if (message.id != null && message.hasOwnProperty("id"))
                                    if (!$util.isInteger(message.id))
                                        return "id: integer expected";
                                if (message.parents != null && message.hasOwnProperty("parents")) {
                                    if (!Array.isArray(message.parents))
                                        return "parents: array expected";
                                    for (var i = 0; i < message.parents.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.Parent.verify(message.parents[i]);
                                        if (error)
                                            return "parents." + error;
                                    }
                                }
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a Provenance message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.Provenance} Provenance
                             */
                            Provenance.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.Provenance)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.Provenance();
                                if (object.revision != null)
                                    message.revision = object.revision | 0;
                                if (object.id != null)
                                    message.id = object.id | 0;
                                if (object.parents) {
                                    if (!Array.isArray(object.parents))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Provenance.parents: array expected");
                                    message.parents = [];
                                    for (var i = 0; i < object.parents.length; ++i) {
                                        if (typeof object.parents[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.Provenance.parents: object expected");
                                        message.parents[i] = $root.google.cloud.documentai.v1.Document.Provenance.Parent.fromObject(object.parents[i]);
                                    }
                                }
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "OPERATION_TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "ADD":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "REMOVE":
                                case 2:
                                    message.type = 2;
                                    break;
                                case "REPLACE":
                                case 3:
                                    message.type = 3;
                                    break;
                                case "EVAL_REQUESTED":
                                case 4:
                                    message.type = 4;
                                    break;
                                case "EVAL_APPROVED":
                                case 5:
                                    message.type = 5;
                                    break;
                                case "EVAL_SKIPPED":
                                case 6:
                                    message.type = 6;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Provenance message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {google.cloud.documentai.v1.Document.Provenance} message Provenance
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Provenance.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.parents = [];
                                if (options.defaults) {
                                    object.revision = 0;
                                    object.id = 0;
                                    object.type = options.enums === String ? "OPERATION_TYPE_UNSPECIFIED" : 0;
                                }
                                if (message.revision != null && message.hasOwnProperty("revision"))
                                    object.revision = message.revision;
                                if (message.id != null && message.hasOwnProperty("id"))
                                    object.id = message.id;
                                if (message.parents && message.parents.length) {
                                    object.parents = [];
                                    for (var j = 0; j < message.parents.length; ++j)
                                        object.parents[j] = $root.google.cloud.documentai.v1.Document.Provenance.Parent.toObject(message.parents[j], options);
                                }
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.documentai.v1.Document.Provenance.OperationType[message.type] === undefined ? message.type : $root.google.cloud.documentai.v1.Document.Provenance.OperationType[message.type] : message.type;
                                return object;
                            };
    
                            /**
                             * Converts this Provenance to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Provenance.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Provenance
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.Provenance
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Provenance.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Provenance";
                            };
    
                            Provenance.Parent = (function() {
    
                                /**
                                 * Properties of a Parent.
                                 * @memberof google.cloud.documentai.v1.Document.Provenance
                                 * @interface IParent
                                 * @property {number|null} [revision] Parent revision
                                 * @property {number|null} [index] Parent index
                                 * @property {number|null} [id] Parent id
                                 */
    
                                /**
                                 * Constructs a new Parent.
                                 * @memberof google.cloud.documentai.v1.Document.Provenance
                                 * @classdesc Represents a Parent.
                                 * @implements IParent
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Provenance.IParent=} [properties] Properties to set
                                 */
                                function Parent(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Parent revision.
                                 * @member {number} revision
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @instance
                                 */
                                Parent.prototype.revision = 0;
    
                                /**
                                 * Parent index.
                                 * @member {number} index
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @instance
                                 */
                                Parent.prototype.index = 0;
    
                                /**
                                 * Parent id.
                                 * @member {number} id
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @instance
                                 */
                                Parent.prototype.id = 0;
    
                                /**
                                 * Creates a new Parent instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Provenance.IParent=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Provenance.Parent} Parent instance
                                 */
                                Parent.create = function create(properties) {
                                    return new Parent(properties);
                                };
    
                                /**
                                 * Encodes the specified Parent message. Does not implicitly {@link google.cloud.documentai.v1.Document.Provenance.Parent.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Provenance.IParent} message Parent message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Parent.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.revision);
                                    if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.id);
                                    if (message.index != null && Object.hasOwnProperty.call(message, "index"))
                                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.index);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Parent message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Provenance.Parent.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Provenance.IParent} message Parent message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Parent.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Parent message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Provenance.Parent} Parent
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Parent.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Provenance.Parent();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.revision = reader.int32();
                                                break;
                                            }
                                        case 3: {
                                                message.index = reader.int32();
                                                break;
                                            }
                                        case 2: {
                                                message.id = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Parent message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Provenance.Parent} Parent
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Parent.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Parent message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Parent.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.revision != null && message.hasOwnProperty("revision"))
                                        if (!$util.isInteger(message.revision))
                                            return "revision: integer expected";
                                    if (message.index != null && message.hasOwnProperty("index"))
                                        if (!$util.isInteger(message.index))
                                            return "index: integer expected";
                                    if (message.id != null && message.hasOwnProperty("id"))
                                        if (!$util.isInteger(message.id))
                                            return "id: integer expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a Parent message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Provenance.Parent} Parent
                                 */
                                Parent.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Provenance.Parent)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Provenance.Parent();
                                    if (object.revision != null)
                                        message.revision = object.revision | 0;
                                    if (object.index != null)
                                        message.index = object.index | 0;
                                    if (object.id != null)
                                        message.id = object.id | 0;
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Parent message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Provenance.Parent} message Parent
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Parent.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.revision = 0;
                                        object.id = 0;
                                        object.index = 0;
                                    }
                                    if (message.revision != null && message.hasOwnProperty("revision"))
                                        object.revision = message.revision;
                                    if (message.id != null && message.hasOwnProperty("id"))
                                        object.id = message.id;
                                    if (message.index != null && message.hasOwnProperty("index"))
                                        object.index = message.index;
                                    return object;
                                };
    
                                /**
                                 * Converts this Parent to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Parent.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for Parent
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Provenance.Parent
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                Parent.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Provenance.Parent";
                                };
    
                                return Parent;
                            })();
    
                            /**
                             * OperationType enum.
                             * @name google.cloud.documentai.v1.Document.Provenance.OperationType
                             * @enum {number}
                             * @property {number} OPERATION_TYPE_UNSPECIFIED=0 OPERATION_TYPE_UNSPECIFIED value
                             * @property {number} ADD=1 ADD value
                             * @property {number} REMOVE=2 REMOVE value
                             * @property {number} REPLACE=3 REPLACE value
                             * @property {number} EVAL_REQUESTED=4 EVAL_REQUESTED value
                             * @property {number} EVAL_APPROVED=5 EVAL_APPROVED value
                             * @property {number} EVAL_SKIPPED=6 EVAL_SKIPPED value
                             */
                            Provenance.OperationType = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "OPERATION_TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "ADD"] = 1;
                                values[valuesById[2] = "REMOVE"] = 2;
                                values[valuesById[3] = "REPLACE"] = 3;
                                values[valuesById[4] = "EVAL_REQUESTED"] = 4;
                                values[valuesById[5] = "EVAL_APPROVED"] = 5;
                                values[valuesById[6] = "EVAL_SKIPPED"] = 6;
                                return values;
                            })();
    
                            return Provenance;
                        })();
    
                        Document.Revision = (function() {
    
                            /**
                             * Properties of a Revision.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface IRevision
                             * @property {string|null} [agent] Revision agent
                             * @property {string|null} [processor] Revision processor
                             * @property {string|null} [id] Revision id
                             * @property {Array.<number>|null} [parent] Revision parent
                             * @property {Array.<string>|null} [parentIds] Revision parentIds
                             * @property {google.protobuf.ITimestamp|null} [createTime] Revision createTime
                             * @property {google.cloud.documentai.v1.Document.Revision.IHumanReview|null} [humanReview] Revision humanReview
                             */
    
                            /**
                             * Constructs a new Revision.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a Revision.
                             * @implements IRevision
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.IRevision=} [properties] Properties to set
                             */
                            function Revision(properties) {
                                this.parent = [];
                                this.parentIds = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Revision agent.
                             * @member {string|null|undefined} agent
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Revision.prototype.agent = null;
    
                            /**
                             * Revision processor.
                             * @member {string|null|undefined} processor
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Revision.prototype.processor = null;
    
                            /**
                             * Revision id.
                             * @member {string} id
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Revision.prototype.id = "";
    
                            /**
                             * Revision parent.
                             * @member {Array.<number>} parent
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Revision.prototype.parent = $util.emptyArray;
    
                            /**
                             * Revision parentIds.
                             * @member {Array.<string>} parentIds
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Revision.prototype.parentIds = $util.emptyArray;
    
                            /**
                             * Revision createTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} createTime
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Revision.prototype.createTime = null;
    
                            /**
                             * Revision humanReview.
                             * @member {google.cloud.documentai.v1.Document.Revision.IHumanReview|null|undefined} humanReview
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Revision.prototype.humanReview = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * Revision source.
                             * @member {"agent"|"processor"|undefined} source
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             */
                            Object.defineProperty(Revision.prototype, "source", {
                                get: $util.oneOfGetter($oneOfFields = ["agent", "processor"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new Revision instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IRevision=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.Revision} Revision instance
                             */
                            Revision.create = function create(properties) {
                                return new Revision(properties);
                            };
    
                            /**
                             * Encodes the specified Revision message. Does not implicitly {@link google.cloud.documentai.v1.Document.Revision.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IRevision} message Revision message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Revision.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                                if (message.parent != null && message.parent.length) {
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork();
                                    for (var i = 0; i < message.parent.length; ++i)
                                        writer.int32(message.parent[i]);
                                    writer.ldelim();
                                }
                                if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                    $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.agent != null && Object.hasOwnProperty.call(message, "agent"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.agent);
                                if (message.processor != null && Object.hasOwnProperty.call(message, "processor"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.processor);
                                if (message.humanReview != null && Object.hasOwnProperty.call(message, "humanReview"))
                                    $root.google.cloud.documentai.v1.Document.Revision.HumanReview.encode(message.humanReview, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.parentIds != null && message.parentIds.length)
                                    for (var i = 0; i < message.parentIds.length; ++i)
                                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.parentIds[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Revision message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Revision.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {google.cloud.documentai.v1.Document.IRevision} message Revision message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Revision.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Revision message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.Revision} Revision
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Revision.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Revision();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 4: {
                                            message.agent = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.processor = reader.string();
                                            break;
                                        }
                                    case 1: {
                                            message.id = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.parent && message.parent.length))
                                                message.parent = [];
                                            if ((tag & 7) === 2) {
                                                var end2 = reader.uint32() + reader.pos;
                                                while (reader.pos < end2)
                                                    message.parent.push(reader.int32());
                                            } else
                                                message.parent.push(reader.int32());
                                            break;
                                        }
                                    case 7: {
                                            if (!(message.parentIds && message.parentIds.length))
                                                message.parentIds = [];
                                            message.parentIds.push(reader.string());
                                            break;
                                        }
                                    case 3: {
                                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.humanReview = $root.google.cloud.documentai.v1.Document.Revision.HumanReview.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Revision message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.Revision} Revision
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Revision.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Revision message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Revision.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.agent != null && message.hasOwnProperty("agent")) {
                                    properties.source = 1;
                                    if (!$util.isString(message.agent))
                                        return "agent: string expected";
                                }
                                if (message.processor != null && message.hasOwnProperty("processor")) {
                                    if (properties.source === 1)
                                        return "source: multiple values";
                                    properties.source = 1;
                                    if (!$util.isString(message.processor))
                                        return "processor: string expected";
                                }
                                if (message.id != null && message.hasOwnProperty("id"))
                                    if (!$util.isString(message.id))
                                        return "id: string expected";
                                if (message.parent != null && message.hasOwnProperty("parent")) {
                                    if (!Array.isArray(message.parent))
                                        return "parent: array expected";
                                    for (var i = 0; i < message.parent.length; ++i)
                                        if (!$util.isInteger(message.parent[i]))
                                            return "parent: integer[] expected";
                                }
                                if (message.parentIds != null && message.hasOwnProperty("parentIds")) {
                                    if (!Array.isArray(message.parentIds))
                                        return "parentIds: array expected";
                                    for (var i = 0; i < message.parentIds.length; ++i)
                                        if (!$util.isString(message.parentIds[i]))
                                            return "parentIds: string[] expected";
                                }
                                if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                    if (error)
                                        return "createTime." + error;
                                }
                                if (message.humanReview != null && message.hasOwnProperty("humanReview")) {
                                    var error = $root.google.cloud.documentai.v1.Document.Revision.HumanReview.verify(message.humanReview);
                                    if (error)
                                        return "humanReview." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a Revision message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.Revision} Revision
                             */
                            Revision.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.Revision)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.Revision();
                                if (object.agent != null)
                                    message.agent = String(object.agent);
                                if (object.processor != null)
                                    message.processor = String(object.processor);
                                if (object.id != null)
                                    message.id = String(object.id);
                                if (object.parent) {
                                    if (!Array.isArray(object.parent))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Revision.parent: array expected");
                                    message.parent = [];
                                    for (var i = 0; i < object.parent.length; ++i)
                                        message.parent[i] = object.parent[i] | 0;
                                }
                                if (object.parentIds) {
                                    if (!Array.isArray(object.parentIds))
                                        throw TypeError(".google.cloud.documentai.v1.Document.Revision.parentIds: array expected");
                                    message.parentIds = [];
                                    for (var i = 0; i < object.parentIds.length; ++i)
                                        message.parentIds[i] = String(object.parentIds[i]);
                                }
                                if (object.createTime != null) {
                                    if (typeof object.createTime !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Revision.createTime: object expected");
                                    message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                                }
                                if (object.humanReview != null) {
                                    if (typeof object.humanReview !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.Revision.humanReview: object expected");
                                    message.humanReview = $root.google.cloud.documentai.v1.Document.Revision.HumanReview.fromObject(object.humanReview);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Revision message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {google.cloud.documentai.v1.Document.Revision} message Revision
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Revision.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.parent = [];
                                    object.parentIds = [];
                                }
                                if (options.defaults) {
                                    object.id = "";
                                    object.createTime = null;
                                    object.humanReview = null;
                                }
                                if (message.id != null && message.hasOwnProperty("id"))
                                    object.id = message.id;
                                if (message.parent && message.parent.length) {
                                    object.parent = [];
                                    for (var j = 0; j < message.parent.length; ++j)
                                        object.parent[j] = message.parent[j];
                                }
                                if (message.createTime != null && message.hasOwnProperty("createTime"))
                                    object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                                if (message.agent != null && message.hasOwnProperty("agent")) {
                                    object.agent = message.agent;
                                    if (options.oneofs)
                                        object.source = "agent";
                                }
                                if (message.processor != null && message.hasOwnProperty("processor")) {
                                    object.processor = message.processor;
                                    if (options.oneofs)
                                        object.source = "processor";
                                }
                                if (message.humanReview != null && message.hasOwnProperty("humanReview"))
                                    object.humanReview = $root.google.cloud.documentai.v1.Document.Revision.HumanReview.toObject(message.humanReview, options);
                                if (message.parentIds && message.parentIds.length) {
                                    object.parentIds = [];
                                    for (var j = 0; j < message.parentIds.length; ++j)
                                        object.parentIds[j] = message.parentIds[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this Revision to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Revision.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Revision
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.Revision
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Revision.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Revision";
                            };
    
                            Revision.HumanReview = (function() {
    
                                /**
                                 * Properties of a HumanReview.
                                 * @memberof google.cloud.documentai.v1.Document.Revision
                                 * @interface IHumanReview
                                 * @property {string|null} [state] HumanReview state
                                 * @property {string|null} [stateMessage] HumanReview stateMessage
                                 */
    
                                /**
                                 * Constructs a new HumanReview.
                                 * @memberof google.cloud.documentai.v1.Document.Revision
                                 * @classdesc Represents a HumanReview.
                                 * @implements IHumanReview
                                 * @constructor
                                 * @param {google.cloud.documentai.v1.Document.Revision.IHumanReview=} [properties] Properties to set
                                 */
                                function HumanReview(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * HumanReview state.
                                 * @member {string} state
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @instance
                                 */
                                HumanReview.prototype.state = "";
    
                                /**
                                 * HumanReview stateMessage.
                                 * @member {string} stateMessage
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @instance
                                 */
                                HumanReview.prototype.stateMessage = "";
    
                                /**
                                 * Creates a new HumanReview instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Revision.IHumanReview=} [properties] Properties to set
                                 * @returns {google.cloud.documentai.v1.Document.Revision.HumanReview} HumanReview instance
                                 */
                                HumanReview.create = function create(properties) {
                                    return new HumanReview(properties);
                                };
    
                                /**
                                 * Encodes the specified HumanReview message. Does not implicitly {@link google.cloud.documentai.v1.Document.Revision.HumanReview.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Revision.IHumanReview} message HumanReview message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                HumanReview.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.state);
                                    if (message.stateMessage != null && Object.hasOwnProperty.call(message, "stateMessage"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.stateMessage);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified HumanReview message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.Revision.HumanReview.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Revision.IHumanReview} message HumanReview message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                HumanReview.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a HumanReview message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.documentai.v1.Document.Revision.HumanReview} HumanReview
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                HumanReview.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.Revision.HumanReview();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.state = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.stateMessage = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a HumanReview message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.documentai.v1.Document.Revision.HumanReview} HumanReview
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                HumanReview.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a HumanReview message.
                                 * @function verify
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                HumanReview.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.state != null && message.hasOwnProperty("state"))
                                        if (!$util.isString(message.state))
                                            return "state: string expected";
                                    if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                        if (!$util.isString(message.stateMessage))
                                            return "stateMessage: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a HumanReview message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.documentai.v1.Document.Revision.HumanReview} HumanReview
                                 */
                                HumanReview.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.documentai.v1.Document.Revision.HumanReview)
                                        return object;
                                    var message = new $root.google.cloud.documentai.v1.Document.Revision.HumanReview();
                                    if (object.state != null)
                                        message.state = String(object.state);
                                    if (object.stateMessage != null)
                                        message.stateMessage = String(object.stateMessage);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a HumanReview message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {google.cloud.documentai.v1.Document.Revision.HumanReview} message HumanReview
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                HumanReview.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.state = "";
                                        object.stateMessage = "";
                                    }
                                    if (message.state != null && message.hasOwnProperty("state"))
                                        object.state = message.state;
                                    if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                        object.stateMessage = message.stateMessage;
                                    return object;
                                };
    
                                /**
                                 * Converts this HumanReview to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                HumanReview.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for HumanReview
                                 * @function getTypeUrl
                                 * @memberof google.cloud.documentai.v1.Document.Revision.HumanReview
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                HumanReview.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.documentai.v1.Document.Revision.HumanReview";
                                };
    
                                return HumanReview;
                            })();
    
                            return Revision;
                        })();
    
                        Document.TextChange = (function() {
    
                            /**
                             * Properties of a TextChange.
                             * @memberof google.cloud.documentai.v1.Document
                             * @interface ITextChange
                             * @property {google.cloud.documentai.v1.Document.ITextAnchor|null} [textAnchor] TextChange textAnchor
                             * @property {string|null} [changedText] TextChange changedText
                             * @property {Array.<google.cloud.documentai.v1.Document.IProvenance>|null} [provenance] TextChange provenance
                             */
    
                            /**
                             * Constructs a new TextChange.
                             * @memberof google.cloud.documentai.v1.Document
                             * @classdesc Represents a TextChange.
                             * @implements ITextChange
                             * @constructor
                             * @param {google.cloud.documentai.v1.Document.ITextChange=} [properties] Properties to set
                             */
                            function TextChange(properties) {
                                this.provenance = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * TextChange textAnchor.
                             * @member {google.cloud.documentai.v1.Document.ITextAnchor|null|undefined} textAnchor
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @instance
                             */
                            TextChange.prototype.textAnchor = null;
    
                            /**
                             * TextChange changedText.
                             * @member {string} changedText
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @instance
                             */
                            TextChange.prototype.changedText = "";
    
                            /**
                             * TextChange provenance.
                             * @member {Array.<google.cloud.documentai.v1.Document.IProvenance>} provenance
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @instance
                             */
                            TextChange.prototype.provenance = $util.emptyArray;
    
                            /**
                             * Creates a new TextChange instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {google.cloud.documentai.v1.Document.ITextChange=} [properties] Properties to set
                             * @returns {google.cloud.documentai.v1.Document.TextChange} TextChange instance
                             */
                            TextChange.create = function create(properties) {
                                return new TextChange(properties);
                            };
    
                            /**
                             * Encodes the specified TextChange message. Does not implicitly {@link google.cloud.documentai.v1.Document.TextChange.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {google.cloud.documentai.v1.Document.ITextChange} message TextChange message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TextChange.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.textAnchor != null && Object.hasOwnProperty.call(message, "textAnchor"))
                                    $root.google.cloud.documentai.v1.Document.TextAnchor.encode(message.textAnchor, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.changedText != null && Object.hasOwnProperty.call(message, "changedText"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.changedText);
                                if (message.provenance != null && message.provenance.length)
                                    for (var i = 0; i < message.provenance.length; ++i)
                                        $root.google.cloud.documentai.v1.Document.Provenance.encode(message.provenance[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified TextChange message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Document.TextChange.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {google.cloud.documentai.v1.Document.ITextChange} message TextChange message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            TextChange.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a TextChange message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.documentai.v1.Document.TextChange} TextChange
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TextChange.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Document.TextChange();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.changedText = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.provenance && message.provenance.length))
                                                message.provenance = [];
                                            message.provenance.push($root.google.cloud.documentai.v1.Document.Provenance.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a TextChange message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.documentai.v1.Document.TextChange} TextChange
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            TextChange.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a TextChange message.
                             * @function verify
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            TextChange.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.textAnchor != null && message.hasOwnProperty("textAnchor")) {
                                    var error = $root.google.cloud.documentai.v1.Document.TextAnchor.verify(message.textAnchor);
                                    if (error)
                                        return "textAnchor." + error;
                                }
                                if (message.changedText != null && message.hasOwnProperty("changedText"))
                                    if (!$util.isString(message.changedText))
                                        return "changedText: string expected";
                                if (message.provenance != null && message.hasOwnProperty("provenance")) {
                                    if (!Array.isArray(message.provenance))
                                        return "provenance: array expected";
                                    for (var i = 0; i < message.provenance.length; ++i) {
                                        var error = $root.google.cloud.documentai.v1.Document.Provenance.verify(message.provenance[i]);
                                        if (error)
                                            return "provenance." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a TextChange message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.documentai.v1.Document.TextChange} TextChange
                             */
                            TextChange.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.documentai.v1.Document.TextChange)
                                    return object;
                                var message = new $root.google.cloud.documentai.v1.Document.TextChange();
                                if (object.textAnchor != null) {
                                    if (typeof object.textAnchor !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.Document.TextChange.textAnchor: object expected");
                                    message.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.fromObject(object.textAnchor);
                                }
                                if (object.changedText != null)
                                    message.changedText = String(object.changedText);
                                if (object.provenance) {
                                    if (!Array.isArray(object.provenance))
                                        throw TypeError(".google.cloud.documentai.v1.Document.TextChange.provenance: array expected");
                                    message.provenance = [];
                                    for (var i = 0; i < object.provenance.length; ++i) {
                                        if (typeof object.provenance[i] !== "object")
                                            throw TypeError(".google.cloud.documentai.v1.Document.TextChange.provenance: object expected");
                                        message.provenance[i] = $root.google.cloud.documentai.v1.Document.Provenance.fromObject(object.provenance[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a TextChange message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {google.cloud.documentai.v1.Document.TextChange} message TextChange
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            TextChange.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.provenance = [];
                                if (options.defaults) {
                                    object.textAnchor = null;
                                    object.changedText = "";
                                }
                                if (message.textAnchor != null && message.hasOwnProperty("textAnchor"))
                                    object.textAnchor = $root.google.cloud.documentai.v1.Document.TextAnchor.toObject(message.textAnchor, options);
                                if (message.changedText != null && message.hasOwnProperty("changedText"))
                                    object.changedText = message.changedText;
                                if (message.provenance && message.provenance.length) {
                                    object.provenance = [];
                                    for (var j = 0; j < message.provenance.length; ++j)
                                        object.provenance[j] = $root.google.cloud.documentai.v1.Document.Provenance.toObject(message.provenance[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this TextChange to JSON.
                             * @function toJSON
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            TextChange.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for TextChange
                             * @function getTypeUrl
                             * @memberof google.cloud.documentai.v1.Document.TextChange
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            TextChange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.documentai.v1.Document.TextChange";
                            };
    
                            return TextChange;
                        })();
    
                        return Document;
                    })();
    
                    v1.Barcode = (function() {
    
                        /**
                         * Properties of a Barcode.
                         * @memberof google.cloud.documentai.v1
                         * @interface IBarcode
                         * @property {string|null} [format] Barcode format
                         * @property {string|null} [valueFormat] Barcode valueFormat
                         * @property {string|null} [rawValue] Barcode rawValue
                         */
    
                        /**
                         * Constructs a new Barcode.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a Barcode.
                         * @implements IBarcode
                         * @constructor
                         * @param {google.cloud.documentai.v1.IBarcode=} [properties] Properties to set
                         */
                        function Barcode(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Barcode format.
                         * @member {string} format
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @instance
                         */
                        Barcode.prototype.format = "";
    
                        /**
                         * Barcode valueFormat.
                         * @member {string} valueFormat
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @instance
                         */
                        Barcode.prototype.valueFormat = "";
    
                        /**
                         * Barcode rawValue.
                         * @member {string} rawValue
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @instance
                         */
                        Barcode.prototype.rawValue = "";
    
                        /**
                         * Creates a new Barcode instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {google.cloud.documentai.v1.IBarcode=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.Barcode} Barcode instance
                         */
                        Barcode.create = function create(properties) {
                            return new Barcode(properties);
                        };
    
                        /**
                         * Encodes the specified Barcode message. Does not implicitly {@link google.cloud.documentai.v1.Barcode.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {google.cloud.documentai.v1.IBarcode} message Barcode message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Barcode.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.format != null && Object.hasOwnProperty.call(message, "format"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.format);
                            if (message.valueFormat != null && Object.hasOwnProperty.call(message, "valueFormat"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.valueFormat);
                            if (message.rawValue != null && Object.hasOwnProperty.call(message, "rawValue"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.rawValue);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Barcode message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Barcode.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {google.cloud.documentai.v1.IBarcode} message Barcode message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Barcode.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Barcode message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.Barcode} Barcode
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Barcode.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Barcode();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.format = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.valueFormat = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.rawValue = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Barcode message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.Barcode} Barcode
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Barcode.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Barcode message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Barcode.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.format != null && message.hasOwnProperty("format"))
                                if (!$util.isString(message.format))
                                    return "format: string expected";
                            if (message.valueFormat != null && message.hasOwnProperty("valueFormat"))
                                if (!$util.isString(message.valueFormat))
                                    return "valueFormat: string expected";
                            if (message.rawValue != null && message.hasOwnProperty("rawValue"))
                                if (!$util.isString(message.rawValue))
                                    return "rawValue: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Barcode message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.Barcode} Barcode
                         */
                        Barcode.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.Barcode)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.Barcode();
                            if (object.format != null)
                                message.format = String(object.format);
                            if (object.valueFormat != null)
                                message.valueFormat = String(object.valueFormat);
                            if (object.rawValue != null)
                                message.rawValue = String(object.rawValue);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Barcode message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {google.cloud.documentai.v1.Barcode} message Barcode
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Barcode.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.format = "";
                                object.valueFormat = "";
                                object.rawValue = "";
                            }
                            if (message.format != null && message.hasOwnProperty("format"))
                                object.format = message.format;
                            if (message.valueFormat != null && message.hasOwnProperty("valueFormat"))
                                object.valueFormat = message.valueFormat;
                            if (message.rawValue != null && message.hasOwnProperty("rawValue"))
                                object.rawValue = message.rawValue;
                            return object;
                        };
    
                        /**
                         * Converts this Barcode to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Barcode.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Barcode
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.Barcode
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Barcode.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.Barcode";
                        };
    
                        return Barcode;
                    })();
    
                    v1.Vertex = (function() {
    
                        /**
                         * Properties of a Vertex.
                         * @memberof google.cloud.documentai.v1
                         * @interface IVertex
                         * @property {number|null} [x] Vertex x
                         * @property {number|null} [y] Vertex y
                         */
    
                        /**
                         * Constructs a new Vertex.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a Vertex.
                         * @implements IVertex
                         * @constructor
                         * @param {google.cloud.documentai.v1.IVertex=} [properties] Properties to set
                         */
                        function Vertex(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Vertex x.
                         * @member {number} x
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @instance
                         */
                        Vertex.prototype.x = 0;
    
                        /**
                         * Vertex y.
                         * @member {number} y
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @instance
                         */
                        Vertex.prototype.y = 0;
    
                        /**
                         * Creates a new Vertex instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {google.cloud.documentai.v1.IVertex=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.Vertex} Vertex instance
                         */
                        Vertex.create = function create(properties) {
                            return new Vertex(properties);
                        };
    
                        /**
                         * Encodes the specified Vertex message. Does not implicitly {@link google.cloud.documentai.v1.Vertex.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {google.cloud.documentai.v1.IVertex} message Vertex message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Vertex.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.x != null && Object.hasOwnProperty.call(message, "x"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.x);
                            if (message.y != null && Object.hasOwnProperty.call(message, "y"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.y);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Vertex message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.Vertex.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {google.cloud.documentai.v1.IVertex} message Vertex message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Vertex.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Vertex message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.Vertex} Vertex
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Vertex.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.Vertex();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.x = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.y = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Vertex message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.Vertex} Vertex
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Vertex.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Vertex message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Vertex.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.x != null && message.hasOwnProperty("x"))
                                if (!$util.isInteger(message.x))
                                    return "x: integer expected";
                            if (message.y != null && message.hasOwnProperty("y"))
                                if (!$util.isInteger(message.y))
                                    return "y: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a Vertex message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.Vertex} Vertex
                         */
                        Vertex.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.Vertex)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.Vertex();
                            if (object.x != null)
                                message.x = object.x | 0;
                            if (object.y != null)
                                message.y = object.y | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Vertex message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {google.cloud.documentai.v1.Vertex} message Vertex
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Vertex.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.x = 0;
                                object.y = 0;
                            }
                            if (message.x != null && message.hasOwnProperty("x"))
                                object.x = message.x;
                            if (message.y != null && message.hasOwnProperty("y"))
                                object.y = message.y;
                            return object;
                        };
    
                        /**
                         * Converts this Vertex to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Vertex.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Vertex
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.Vertex
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Vertex.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.Vertex";
                        };
    
                        return Vertex;
                    })();
    
                    v1.NormalizedVertex = (function() {
    
                        /**
                         * Properties of a NormalizedVertex.
                         * @memberof google.cloud.documentai.v1
                         * @interface INormalizedVertex
                         * @property {number|null} [x] NormalizedVertex x
                         * @property {number|null} [y] NormalizedVertex y
                         */
    
                        /**
                         * Constructs a new NormalizedVertex.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a NormalizedVertex.
                         * @implements INormalizedVertex
                         * @constructor
                         * @param {google.cloud.documentai.v1.INormalizedVertex=} [properties] Properties to set
                         */
                        function NormalizedVertex(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NormalizedVertex x.
                         * @member {number} x
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @instance
                         */
                        NormalizedVertex.prototype.x = 0;
    
                        /**
                         * NormalizedVertex y.
                         * @member {number} y
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @instance
                         */
                        NormalizedVertex.prototype.y = 0;
    
                        /**
                         * Creates a new NormalizedVertex instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {google.cloud.documentai.v1.INormalizedVertex=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.NormalizedVertex} NormalizedVertex instance
                         */
                        NormalizedVertex.create = function create(properties) {
                            return new NormalizedVertex(properties);
                        };
    
                        /**
                         * Encodes the specified NormalizedVertex message. Does not implicitly {@link google.cloud.documentai.v1.NormalizedVertex.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {google.cloud.documentai.v1.INormalizedVertex} message NormalizedVertex message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NormalizedVertex.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.x != null && Object.hasOwnProperty.call(message, "x"))
                                writer.uint32(/* id 1, wireType 5 =*/13).float(message.x);
                            if (message.y != null && Object.hasOwnProperty.call(message, "y"))
                                writer.uint32(/* id 2, wireType 5 =*/21).float(message.y);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NormalizedVertex message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.NormalizedVertex.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {google.cloud.documentai.v1.INormalizedVertex} message NormalizedVertex message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NormalizedVertex.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NormalizedVertex message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.NormalizedVertex} NormalizedVertex
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NormalizedVertex.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.NormalizedVertex();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.x = reader.float();
                                        break;
                                    }
                                case 2: {
                                        message.y = reader.float();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NormalizedVertex message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.NormalizedVertex} NormalizedVertex
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NormalizedVertex.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NormalizedVertex message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NormalizedVertex.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.x != null && message.hasOwnProperty("x"))
                                if (typeof message.x !== "number")
                                    return "x: number expected";
                            if (message.y != null && message.hasOwnProperty("y"))
                                if (typeof message.y !== "number")
                                    return "y: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a NormalizedVertex message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.NormalizedVertex} NormalizedVertex
                         */
                        NormalizedVertex.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.NormalizedVertex)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.NormalizedVertex();
                            if (object.x != null)
                                message.x = Number(object.x);
                            if (object.y != null)
                                message.y = Number(object.y);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NormalizedVertex message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {google.cloud.documentai.v1.NormalizedVertex} message NormalizedVertex
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NormalizedVertex.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.x = 0;
                                object.y = 0;
                            }
                            if (message.x != null && message.hasOwnProperty("x"))
                                object.x = options.json && !isFinite(message.x) ? String(message.x) : message.x;
                            if (message.y != null && message.hasOwnProperty("y"))
                                object.y = options.json && !isFinite(message.y) ? String(message.y) : message.y;
                            return object;
                        };
    
                        /**
                         * Converts this NormalizedVertex to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NormalizedVertex.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NormalizedVertex
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.NormalizedVertex
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NormalizedVertex.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.NormalizedVertex";
                        };
    
                        return NormalizedVertex;
                    })();
    
                    v1.BoundingPoly = (function() {
    
                        /**
                         * Properties of a BoundingPoly.
                         * @memberof google.cloud.documentai.v1
                         * @interface IBoundingPoly
                         * @property {Array.<google.cloud.documentai.v1.IVertex>|null} [vertices] BoundingPoly vertices
                         * @property {Array.<google.cloud.documentai.v1.INormalizedVertex>|null} [normalizedVertices] BoundingPoly normalizedVertices
                         */
    
                        /**
                         * Constructs a new BoundingPoly.
                         * @memberof google.cloud.documentai.v1
                         * @classdesc Represents a BoundingPoly.
                         * @implements IBoundingPoly
                         * @constructor
                         * @param {google.cloud.documentai.v1.IBoundingPoly=} [properties] Properties to set
                         */
                        function BoundingPoly(properties) {
                            this.vertices = [];
                            this.normalizedVertices = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BoundingPoly vertices.
                         * @member {Array.<google.cloud.documentai.v1.IVertex>} vertices
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @instance
                         */
                        BoundingPoly.prototype.vertices = $util.emptyArray;
    
                        /**
                         * BoundingPoly normalizedVertices.
                         * @member {Array.<google.cloud.documentai.v1.INormalizedVertex>} normalizedVertices
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @instance
                         */
                        BoundingPoly.prototype.normalizedVertices = $util.emptyArray;
    
                        /**
                         * Creates a new BoundingPoly instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {google.cloud.documentai.v1.IBoundingPoly=} [properties] Properties to set
                         * @returns {google.cloud.documentai.v1.BoundingPoly} BoundingPoly instance
                         */
                        BoundingPoly.create = function create(properties) {
                            return new BoundingPoly(properties);
                        };
    
                        /**
                         * Encodes the specified BoundingPoly message. Does not implicitly {@link google.cloud.documentai.v1.BoundingPoly.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {google.cloud.documentai.v1.IBoundingPoly} message BoundingPoly message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BoundingPoly.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.vertices != null && message.vertices.length)
                                for (var i = 0; i < message.vertices.length; ++i)
                                    $root.google.cloud.documentai.v1.Vertex.encode(message.vertices[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.normalizedVertices != null && message.normalizedVertices.length)
                                for (var i = 0; i < message.normalizedVertices.length; ++i)
                                    $root.google.cloud.documentai.v1.NormalizedVertex.encode(message.normalizedVertices[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BoundingPoly message, length delimited. Does not implicitly {@link google.cloud.documentai.v1.BoundingPoly.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {google.cloud.documentai.v1.IBoundingPoly} message BoundingPoly message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BoundingPoly.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BoundingPoly message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.documentai.v1.BoundingPoly} BoundingPoly
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BoundingPoly.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.documentai.v1.BoundingPoly();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.vertices && message.vertices.length))
                                            message.vertices = [];
                                        message.vertices.push($root.google.cloud.documentai.v1.Vertex.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.normalizedVertices && message.normalizedVertices.length))
                                            message.normalizedVertices = [];
                                        message.normalizedVertices.push($root.google.cloud.documentai.v1.NormalizedVertex.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BoundingPoly message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.documentai.v1.BoundingPoly} BoundingPoly
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BoundingPoly.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BoundingPoly message.
                         * @function verify
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BoundingPoly.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.vertices != null && message.hasOwnProperty("vertices")) {
                                if (!Array.isArray(message.vertices))
                                    return "vertices: array expected";
                                for (var i = 0; i < message.vertices.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.Vertex.verify(message.vertices[i]);
                                    if (error)
                                        return "vertices." + error;
                                }
                            }
                            if (message.normalizedVertices != null && message.hasOwnProperty("normalizedVertices")) {
                                if (!Array.isArray(message.normalizedVertices))
                                    return "normalizedVertices: array expected";
                                for (var i = 0; i < message.normalizedVertices.length; ++i) {
                                    var error = $root.google.cloud.documentai.v1.NormalizedVertex.verify(message.normalizedVertices[i]);
                                    if (error)
                                        return "normalizedVertices." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BoundingPoly message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.documentai.v1.BoundingPoly} BoundingPoly
                         */
                        BoundingPoly.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.documentai.v1.BoundingPoly)
                                return object;
                            var message = new $root.google.cloud.documentai.v1.BoundingPoly();
                            if (object.vertices) {
                                if (!Array.isArray(object.vertices))
                                    throw TypeError(".google.cloud.documentai.v1.BoundingPoly.vertices: array expected");
                                message.vertices = [];
                                for (var i = 0; i < object.vertices.length; ++i) {
                                    if (typeof object.vertices[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.BoundingPoly.vertices: object expected");
                                    message.vertices[i] = $root.google.cloud.documentai.v1.Vertex.fromObject(object.vertices[i]);
                                }
                            }
                            if (object.normalizedVertices) {
                                if (!Array.isArray(object.normalizedVertices))
                                    throw TypeError(".google.cloud.documentai.v1.BoundingPoly.normalizedVertices: array expected");
                                message.normalizedVertices = [];
                                for (var i = 0; i < object.normalizedVertices.length; ++i) {
                                    if (typeof object.normalizedVertices[i] !== "object")
                                        throw TypeError(".google.cloud.documentai.v1.BoundingPoly.normalizedVertices: object expected");
                                    message.normalizedVertices[i] = $root.google.cloud.documentai.v1.NormalizedVertex.fromObject(object.normalizedVertices[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BoundingPoly message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {google.cloud.documentai.v1.BoundingPoly} message BoundingPoly
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BoundingPoly.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.vertices = [];
                                object.normalizedVertices = [];
                            }
                            if (message.vertices && message.vertices.length) {
                                object.vertices = [];
                                for (var j = 0; j < message.vertices.length; ++j)
                                    object.vertices[j] = $root.google.cloud.documentai.v1.Vertex.toObject(message.vertices[j], options);
                            }
                            if (message.normalizedVertices && message.normalizedVertices.length) {
                                object.normalizedVertices = [];
                                for (var j = 0; j < message.normalizedVertices.length; ++j)
                                    object.normalizedVertices[j] = $root.google.cloud.documentai.v1.NormalizedVertex.toObject(message.normalizedVertices[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BoundingPoly to JSON.
                         * @function toJSON
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BoundingPoly.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BoundingPoly
                         * @function getTypeUrl
                         * @memberof google.cloud.documentai.v1.BoundingPoly
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BoundingPoly.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.documentai.v1.BoundingPoly";
                        };
    
                        return BoundingPoly;
                    })();
    
                    return v1;
                })();
    
                return documentai;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.DoubleValue = (function() {
    
                /**
                 * Properties of a DoubleValue.
                 * @memberof google.protobuf
                 * @interface IDoubleValue
                 * @property {number|null} [value] DoubleValue value
                 */
    
                /**
                 * Constructs a new DoubleValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a DoubleValue.
                 * @implements IDoubleValue
                 * @constructor
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 */
                function DoubleValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DoubleValue value.
                 * @member {number} value
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 */
                DoubleValue.prototype.value = 0;
    
                /**
                 * Creates a new DoubleValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 * @returns {google.protobuf.DoubleValue} DoubleValue instance
                 */
                DoubleValue.create = function create(properties) {
                    return new DoubleValue(properties);
                };
    
                /**
                 * Encodes the specified DoubleValue message. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified DoubleValue message, length delimited. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DoubleValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.double();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DoubleValue message.
                 * @function verify
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DoubleValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a DoubleValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 */
                DoubleValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DoubleValue)
                        return object;
                    var message = new $root.google.protobuf.DoubleValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DoubleValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.DoubleValue} message DoubleValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DoubleValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this DoubleValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DoubleValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DoubleValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DoubleValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DoubleValue";
                };
    
                return DoubleValue;
            })();
    
            protobuf.FloatValue = (function() {
    
                /**
                 * Properties of a FloatValue.
                 * @memberof google.protobuf
                 * @interface IFloatValue
                 * @property {number|null} [value] FloatValue value
                 */
    
                /**
                 * Constructs a new FloatValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a FloatValue.
                 * @implements IFloatValue
                 * @constructor
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 */
                function FloatValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FloatValue value.
                 * @member {number} value
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 */
                FloatValue.prototype.value = 0;
    
                /**
                 * Creates a new FloatValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 * @returns {google.protobuf.FloatValue} FloatValue instance
                 */
                FloatValue.create = function create(properties) {
                    return new FloatValue(properties);
                };
    
                /**
                 * Encodes the specified FloatValue message. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified FloatValue message, length delimited. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FloatValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.float();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FloatValue message.
                 * @function verify
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FloatValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a FloatValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FloatValue} FloatValue
                 */
                FloatValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FloatValue)
                        return object;
                    var message = new $root.google.protobuf.FloatValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FloatValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.FloatValue} message FloatValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FloatValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this FloatValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FloatValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FloatValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FloatValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FloatValue";
                };
    
                return FloatValue;
            })();
    
            protobuf.Int64Value = (function() {
    
                /**
                 * Properties of an Int64Value.
                 * @memberof google.protobuf
                 * @interface IInt64Value
                 * @property {number|Long|null} [value] Int64Value value
                 */
    
                /**
                 * Constructs a new Int64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int64Value.
                 * @implements IInt64Value
                 * @constructor
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 */
                function Int64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 */
                Int64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Creates a new Int64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int64Value} Int64Value instance
                 */
                Int64Value.create = function create(properties) {
                    return new Int64Value(properties);
                };
    
                /**
                 * Encodes the specified Int64Value message. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int64Value message, length delimited. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int64Value message.
                 * @function verify
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates an Int64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int64Value} Int64Value
                 */
                Int64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int64Value)
                        return object;
                    var message = new $root.google.protobuf.Int64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = false;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.Int64Value} message Int64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;
                    return object;
                };
    
                /**
                 * Converts this Int64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int64Value";
                };
    
                return Int64Value;
            })();
    
            protobuf.UInt64Value = (function() {
    
                /**
                 * Properties of a UInt64Value.
                 * @memberof google.protobuf
                 * @interface IUInt64Value
                 * @property {number|Long|null} [value] UInt64Value value
                 */
    
                /**
                 * Constructs a new UInt64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt64Value.
                 * @implements IUInt64Value
                 * @constructor
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 */
                function UInt64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 */
                UInt64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * Creates a new UInt64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt64Value} UInt64Value instance
                 */
                UInt64Value.create = function create(properties) {
                    return new UInt64Value(properties);
                };
    
                /**
                 * Encodes the specified UInt64Value message. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt64Value message, length delimited. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt64Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates a UInt64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 */
                UInt64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt64Value)
                        return object;
                    var message = new $root.google.protobuf.UInt64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = true;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber(true);
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.UInt64Value} message UInt64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber(true) : message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt64Value";
                };
    
                return UInt64Value;
            })();
    
            protobuf.Int32Value = (function() {
    
                /**
                 * Properties of an Int32Value.
                 * @memberof google.protobuf
                 * @interface IInt32Value
                 * @property {number|null} [value] Int32Value value
                 */
    
                /**
                 * Constructs a new Int32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int32Value.
                 * @implements IInt32Value
                 * @constructor
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 */
                function Int32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 */
                Int32Value.prototype.value = 0;
    
                /**
                 * Creates a new Int32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int32Value} Int32Value instance
                 */
                Int32Value.create = function create(properties) {
                    return new Int32Value(properties);
                };
    
                /**
                 * Encodes the specified Int32Value message. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int32Value message, length delimited. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int32Value message.
                 * @function verify
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates an Int32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int32Value} Int32Value
                 */
                Int32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int32Value)
                        return object;
                    var message = new $root.google.protobuf.Int32Value();
                    if (object.value != null)
                        message.value = object.value | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.Int32Value} message Int32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this Int32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int32Value";
                };
    
                return Int32Value;
            })();
    
            protobuf.UInt32Value = (function() {
    
                /**
                 * Properties of a UInt32Value.
                 * @memberof google.protobuf
                 * @interface IUInt32Value
                 * @property {number|null} [value] UInt32Value value
                 */
    
                /**
                 * Constructs a new UInt32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt32Value.
                 * @implements IUInt32Value
                 * @constructor
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 */
                function UInt32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 */
                UInt32Value.prototype.value = 0;
    
                /**
                 * Creates a new UInt32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt32Value} UInt32Value instance
                 */
                UInt32Value.create = function create(properties) {
                    return new UInt32Value(properties);
                };
    
                /**
                 * Encodes the specified UInt32Value message. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt32Value message, length delimited. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt32Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates a UInt32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 */
                UInt32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt32Value)
                        return object;
                    var message = new $root.google.protobuf.UInt32Value();
                    if (object.value != null)
                        message.value = object.value >>> 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.UInt32Value} message UInt32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt32Value";
                };
    
                return UInt32Value;
            })();
    
            protobuf.BoolValue = (function() {
    
                /**
                 * Properties of a BoolValue.
                 * @memberof google.protobuf
                 * @interface IBoolValue
                 * @property {boolean|null} [value] BoolValue value
                 */
    
                /**
                 * Constructs a new BoolValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BoolValue.
                 * @implements IBoolValue
                 * @constructor
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 */
                function BoolValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BoolValue value.
                 * @member {boolean} value
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 */
                BoolValue.prototype.value = false;
    
                /**
                 * Creates a new BoolValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 * @returns {google.protobuf.BoolValue} BoolValue instance
                 */
                BoolValue.create = function create(properties) {
                    return new BoolValue(properties);
                };
    
                /**
                 * Encodes the specified BoolValue message. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BoolValue message, length delimited. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BoolValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BoolValue message.
                 * @function verify
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BoolValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "boolean")
                            return "value: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a BoolValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BoolValue} BoolValue
                 */
                BoolValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BoolValue)
                        return object;
                    var message = new $root.google.protobuf.BoolValue();
                    if (object.value != null)
                        message.value = Boolean(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a BoolValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.BoolValue} message BoolValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BoolValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = false;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this BoolValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BoolValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BoolValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BoolValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BoolValue";
                };
    
                return BoolValue;
            })();
    
            protobuf.StringValue = (function() {
    
                /**
                 * Properties of a StringValue.
                 * @memberof google.protobuf
                 * @interface IStringValue
                 * @property {string|null} [value] StringValue value
                 */
    
                /**
                 * Constructs a new StringValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a StringValue.
                 * @implements IStringValue
                 * @constructor
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 */
                function StringValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * StringValue value.
                 * @member {string} value
                 * @memberof google.protobuf.StringValue
                 * @instance
                 */
                StringValue.prototype.value = "";
    
                /**
                 * Creates a new StringValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 * @returns {google.protobuf.StringValue} StringValue instance
                 */
                StringValue.create = function create(properties) {
                    return new StringValue(properties);
                };
    
                /**
                 * Encodes the specified StringValue message. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified StringValue message, length delimited. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.StringValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a StringValue message.
                 * @function verify
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                StringValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isString(message.value))
                            return "value: string expected";
                    return null;
                };
    
                /**
                 * Creates a StringValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.StringValue} StringValue
                 */
                StringValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.StringValue)
                        return object;
                    var message = new $root.google.protobuf.StringValue();
                    if (object.value != null)
                        message.value = String(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a StringValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.StringValue} message StringValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                StringValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = "";
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this StringValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.StringValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                StringValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for StringValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                StringValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.StringValue";
                };
    
                return StringValue;
            })();
    
            protobuf.BytesValue = (function() {
    
                /**
                 * Properties of a BytesValue.
                 * @memberof google.protobuf
                 * @interface IBytesValue
                 * @property {Uint8Array|null} [value] BytesValue value
                 */
    
                /**
                 * Constructs a new BytesValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BytesValue.
                 * @implements IBytesValue
                 * @constructor
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 */
                function BytesValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BytesValue value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 */
                BytesValue.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new BytesValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 * @returns {google.protobuf.BytesValue} BytesValue instance
                 */
                BytesValue.create = function create(properties) {
                    return new BytesValue(properties);
                };
    
                /**
                 * Encodes the specified BytesValue message. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BytesValue message, length delimited. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BytesValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BytesValue message.
                 * @function verify
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BytesValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates a BytesValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BytesValue} BytesValue
                 */
                BytesValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BytesValue)
                        return object;
                    var message = new $root.google.protobuf.BytesValue();
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from a BytesValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.BytesValue} message BytesValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BytesValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this BytesValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BytesValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BytesValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BytesValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BytesValue";
                };
    
                return BytesValue;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            return protobuf;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        google.type = (function() {
    
            /**
             * Namespace type.
             * @memberof google
             * @namespace
             */
            var type = {};
    
            type.Color = (function() {
    
                /**
                 * Properties of a Color.
                 * @memberof google.type
                 * @interface IColor
                 * @property {number|null} [red] Color red
                 * @property {number|null} [green] Color green
                 * @property {number|null} [blue] Color blue
                 * @property {google.protobuf.IFloatValue|null} [alpha] Color alpha
                 */
    
                /**
                 * Constructs a new Color.
                 * @memberof google.type
                 * @classdesc Represents a Color.
                 * @implements IColor
                 * @constructor
                 * @param {google.type.IColor=} [properties] Properties to set
                 */
                function Color(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Color red.
                 * @member {number} red
                 * @memberof google.type.Color
                 * @instance
                 */
                Color.prototype.red = 0;
    
                /**
                 * Color green.
                 * @member {number} green
                 * @memberof google.type.Color
                 * @instance
                 */
                Color.prototype.green = 0;
    
                /**
                 * Color blue.
                 * @member {number} blue
                 * @memberof google.type.Color
                 * @instance
                 */
                Color.prototype.blue = 0;
    
                /**
                 * Color alpha.
                 * @member {google.protobuf.IFloatValue|null|undefined} alpha
                 * @memberof google.type.Color
                 * @instance
                 */
                Color.prototype.alpha = null;
    
                /**
                 * Creates a new Color instance using the specified properties.
                 * @function create
                 * @memberof google.type.Color
                 * @static
                 * @param {google.type.IColor=} [properties] Properties to set
                 * @returns {google.type.Color} Color instance
                 */
                Color.create = function create(properties) {
                    return new Color(properties);
                };
    
                /**
                 * Encodes the specified Color message. Does not implicitly {@link google.type.Color.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Color
                 * @static
                 * @param {google.type.IColor} message Color message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Color.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.red != null && Object.hasOwnProperty.call(message, "red"))
                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.red);
                    if (message.green != null && Object.hasOwnProperty.call(message, "green"))
                        writer.uint32(/* id 2, wireType 5 =*/21).float(message.green);
                    if (message.blue != null && Object.hasOwnProperty.call(message, "blue"))
                        writer.uint32(/* id 3, wireType 5 =*/29).float(message.blue);
                    if (message.alpha != null && Object.hasOwnProperty.call(message, "alpha"))
                        $root.google.protobuf.FloatValue.encode(message.alpha, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Color message, length delimited. Does not implicitly {@link google.type.Color.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Color
                 * @static
                 * @param {google.type.IColor} message Color message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Color.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Color message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Color
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Color} Color
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Color.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Color();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.red = reader.float();
                                break;
                            }
                        case 2: {
                                message.green = reader.float();
                                break;
                            }
                        case 3: {
                                message.blue = reader.float();
                                break;
                            }
                        case 4: {
                                message.alpha = $root.google.protobuf.FloatValue.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Color message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Color
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Color} Color
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Color.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Color message.
                 * @function verify
                 * @memberof google.type.Color
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Color.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.red != null && message.hasOwnProperty("red"))
                        if (typeof message.red !== "number")
                            return "red: number expected";
                    if (message.green != null && message.hasOwnProperty("green"))
                        if (typeof message.green !== "number")
                            return "green: number expected";
                    if (message.blue != null && message.hasOwnProperty("blue"))
                        if (typeof message.blue !== "number")
                            return "blue: number expected";
                    if (message.alpha != null && message.hasOwnProperty("alpha")) {
                        var error = $root.google.protobuf.FloatValue.verify(message.alpha);
                        if (error)
                            return "alpha." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a Color message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Color
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Color} Color
                 */
                Color.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Color)
                        return object;
                    var message = new $root.google.type.Color();
                    if (object.red != null)
                        message.red = Number(object.red);
                    if (object.green != null)
                        message.green = Number(object.green);
                    if (object.blue != null)
                        message.blue = Number(object.blue);
                    if (object.alpha != null) {
                        if (typeof object.alpha !== "object")
                            throw TypeError(".google.type.Color.alpha: object expected");
                        message.alpha = $root.google.protobuf.FloatValue.fromObject(object.alpha);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Color message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Color
                 * @static
                 * @param {google.type.Color} message Color
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Color.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.red = 0;
                        object.green = 0;
                        object.blue = 0;
                        object.alpha = null;
                    }
                    if (message.red != null && message.hasOwnProperty("red"))
                        object.red = options.json && !isFinite(message.red) ? String(message.red) : message.red;
                    if (message.green != null && message.hasOwnProperty("green"))
                        object.green = options.json && !isFinite(message.green) ? String(message.green) : message.green;
                    if (message.blue != null && message.hasOwnProperty("blue"))
                        object.blue = options.json && !isFinite(message.blue) ? String(message.blue) : message.blue;
                    if (message.alpha != null && message.hasOwnProperty("alpha"))
                        object.alpha = $root.google.protobuf.FloatValue.toObject(message.alpha, options);
                    return object;
                };
    
                /**
                 * Converts this Color to JSON.
                 * @function toJSON
                 * @memberof google.type.Color
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Color.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Color
                 * @function getTypeUrl
                 * @memberof google.type.Color
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Color.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Color";
                };
    
                return Color;
            })();
    
            type.Date = (function() {
    
                /**
                 * Properties of a Date.
                 * @memberof google.type
                 * @interface IDate
                 * @property {number|null} [year] Date year
                 * @property {number|null} [month] Date month
                 * @property {number|null} [day] Date day
                 */
    
                /**
                 * Constructs a new Date.
                 * @memberof google.type
                 * @classdesc Represents a Date.
                 * @implements IDate
                 * @constructor
                 * @param {google.type.IDate=} [properties] Properties to set
                 */
                function Date(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Date year.
                 * @member {number} year
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.year = 0;
    
                /**
                 * Date month.
                 * @member {number} month
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.month = 0;
    
                /**
                 * Date day.
                 * @member {number} day
                 * @memberof google.type.Date
                 * @instance
                 */
                Date.prototype.day = 0;
    
                /**
                 * Creates a new Date instance using the specified properties.
                 * @function create
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate=} [properties] Properties to set
                 * @returns {google.type.Date} Date instance
                 */
                Date.create = function create(properties) {
                    return new Date(properties);
                };
    
                /**
                 * Encodes the specified Date message. Does not implicitly {@link google.type.Date.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate} message Date message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Date.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.year != null && Object.hasOwnProperty.call(message, "year"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.year);
                    if (message.month != null && Object.hasOwnProperty.call(message, "month"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.month);
                    if (message.day != null && Object.hasOwnProperty.call(message, "day"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.day);
                    return writer;
                };
    
                /**
                 * Encodes the specified Date message, length delimited. Does not implicitly {@link google.type.Date.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.IDate} message Date message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Date.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Date message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Date
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Date} Date
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Date.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Date();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.year = reader.int32();
                                break;
                            }
                        case 2: {
                                message.month = reader.int32();
                                break;
                            }
                        case 3: {
                                message.day = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Date message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Date
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Date} Date
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Date.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Date message.
                 * @function verify
                 * @memberof google.type.Date
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Date.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.year != null && message.hasOwnProperty("year"))
                        if (!$util.isInteger(message.year))
                            return "year: integer expected";
                    if (message.month != null && message.hasOwnProperty("month"))
                        if (!$util.isInteger(message.month))
                            return "month: integer expected";
                    if (message.day != null && message.hasOwnProperty("day"))
                        if (!$util.isInteger(message.day))
                            return "day: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Date message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Date
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Date} Date
                 */
                Date.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Date)
                        return object;
                    var message = new $root.google.type.Date();
                    if (object.year != null)
                        message.year = object.year | 0;
                    if (object.month != null)
                        message.month = object.month | 0;
                    if (object.day != null)
                        message.day = object.day | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Date message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Date
                 * @static
                 * @param {google.type.Date} message Date
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Date.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.year = 0;
                        object.month = 0;
                        object.day = 0;
                    }
                    if (message.year != null && message.hasOwnProperty("year"))
                        object.year = message.year;
                    if (message.month != null && message.hasOwnProperty("month"))
                        object.month = message.month;
                    if (message.day != null && message.hasOwnProperty("day"))
                        object.day = message.day;
                    return object;
                };
    
                /**
                 * Converts this Date to JSON.
                 * @function toJSON
                 * @memberof google.type.Date
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Date.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Date
                 * @function getTypeUrl
                 * @memberof google.type.Date
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Date.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Date";
                };
    
                return Date;
            })();
    
            type.DateTime = (function() {
    
                /**
                 * Properties of a DateTime.
                 * @memberof google.type
                 * @interface IDateTime
                 * @property {number|null} [year] DateTime year
                 * @property {number|null} [month] DateTime month
                 * @property {number|null} [day] DateTime day
                 * @property {number|null} [hours] DateTime hours
                 * @property {number|null} [minutes] DateTime minutes
                 * @property {number|null} [seconds] DateTime seconds
                 * @property {number|null} [nanos] DateTime nanos
                 * @property {google.protobuf.IDuration|null} [utcOffset] DateTime utcOffset
                 * @property {google.type.ITimeZone|null} [timeZone] DateTime timeZone
                 */
    
                /**
                 * Constructs a new DateTime.
                 * @memberof google.type
                 * @classdesc Represents a DateTime.
                 * @implements IDateTime
                 * @constructor
                 * @param {google.type.IDateTime=} [properties] Properties to set
                 */
                function DateTime(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DateTime year.
                 * @member {number} year
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.year = 0;
    
                /**
                 * DateTime month.
                 * @member {number} month
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.month = 0;
    
                /**
                 * DateTime day.
                 * @member {number} day
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.day = 0;
    
                /**
                 * DateTime hours.
                 * @member {number} hours
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.hours = 0;
    
                /**
                 * DateTime minutes.
                 * @member {number} minutes
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.minutes = 0;
    
                /**
                 * DateTime seconds.
                 * @member {number} seconds
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.seconds = 0;
    
                /**
                 * DateTime nanos.
                 * @member {number} nanos
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.nanos = 0;
    
                /**
                 * DateTime utcOffset.
                 * @member {google.protobuf.IDuration|null|undefined} utcOffset
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.utcOffset = null;
    
                /**
                 * DateTime timeZone.
                 * @member {google.type.ITimeZone|null|undefined} timeZone
                 * @memberof google.type.DateTime
                 * @instance
                 */
                DateTime.prototype.timeZone = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * DateTime timeOffset.
                 * @member {"utcOffset"|"timeZone"|undefined} timeOffset
                 * @memberof google.type.DateTime
                 * @instance
                 */
                Object.defineProperty(DateTime.prototype, "timeOffset", {
                    get: $util.oneOfGetter($oneOfFields = ["utcOffset", "timeZone"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new DateTime instance using the specified properties.
                 * @function create
                 * @memberof google.type.DateTime
                 * @static
                 * @param {google.type.IDateTime=} [properties] Properties to set
                 * @returns {google.type.DateTime} DateTime instance
                 */
                DateTime.create = function create(properties) {
                    return new DateTime(properties);
                };
    
                /**
                 * Encodes the specified DateTime message. Does not implicitly {@link google.type.DateTime.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.DateTime
                 * @static
                 * @param {google.type.IDateTime} message DateTime message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DateTime.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.year != null && Object.hasOwnProperty.call(message, "year"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.year);
                    if (message.month != null && Object.hasOwnProperty.call(message, "month"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.month);
                    if (message.day != null && Object.hasOwnProperty.call(message, "day"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.day);
                    if (message.hours != null && Object.hasOwnProperty.call(message, "hours"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.hours);
                    if (message.minutes != null && Object.hasOwnProperty.call(message, "minutes"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.minutes);
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 7, wireType 0 =*/56).int32(message.nanos);
                    if (message.utcOffset != null && Object.hasOwnProperty.call(message, "utcOffset"))
                        $root.google.protobuf.Duration.encode(message.utcOffset, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.timeZone != null && Object.hasOwnProperty.call(message, "timeZone"))
                        $root.google.type.TimeZone.encode(message.timeZone, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified DateTime message, length delimited. Does not implicitly {@link google.type.DateTime.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.DateTime
                 * @static
                 * @param {google.type.IDateTime} message DateTime message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DateTime.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DateTime message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.DateTime
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.DateTime} DateTime
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DateTime.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.DateTime();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.year = reader.int32();
                                break;
                            }
                        case 2: {
                                message.month = reader.int32();
                                break;
                            }
                        case 3: {
                                message.day = reader.int32();
                                break;
                            }
                        case 4: {
                                message.hours = reader.int32();
                                break;
                            }
                        case 5: {
                                message.minutes = reader.int32();
                                break;
                            }
                        case 6: {
                                message.seconds = reader.int32();
                                break;
                            }
                        case 7: {
                                message.nanos = reader.int32();
                                break;
                            }
                        case 8: {
                                message.utcOffset = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.timeZone = $root.google.type.TimeZone.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DateTime message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.DateTime
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.DateTime} DateTime
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DateTime.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DateTime message.
                 * @function verify
                 * @memberof google.type.DateTime
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DateTime.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.year != null && message.hasOwnProperty("year"))
                        if (!$util.isInteger(message.year))
                            return "year: integer expected";
                    if (message.month != null && message.hasOwnProperty("month"))
                        if (!$util.isInteger(message.month))
                            return "month: integer expected";
                    if (message.day != null && message.hasOwnProperty("day"))
                        if (!$util.isInteger(message.day))
                            return "day: integer expected";
                    if (message.hours != null && message.hasOwnProperty("hours"))
                        if (!$util.isInteger(message.hours))
                            return "hours: integer expected";
                    if (message.minutes != null && message.hasOwnProperty("minutes"))
                        if (!$util.isInteger(message.minutes))
                            return "minutes: integer expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds))
                            return "seconds: integer expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    if (message.utcOffset != null && message.hasOwnProperty("utcOffset")) {
                        properties.timeOffset = 1;
                        {
                            var error = $root.google.protobuf.Duration.verify(message.utcOffset);
                            if (error)
                                return "utcOffset." + error;
                        }
                    }
                    if (message.timeZone != null && message.hasOwnProperty("timeZone")) {
                        if (properties.timeOffset === 1)
                            return "timeOffset: multiple values";
                        properties.timeOffset = 1;
                        {
                            var error = $root.google.type.TimeZone.verify(message.timeZone);
                            if (error)
                                return "timeZone." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a DateTime message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.DateTime
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.DateTime} DateTime
                 */
                DateTime.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.DateTime)
                        return object;
                    var message = new $root.google.type.DateTime();
                    if (object.year != null)
                        message.year = object.year | 0;
                    if (object.month != null)
                        message.month = object.month | 0;
                    if (object.day != null)
                        message.day = object.day | 0;
                    if (object.hours != null)
                        message.hours = object.hours | 0;
                    if (object.minutes != null)
                        message.minutes = object.minutes | 0;
                    if (object.seconds != null)
                        message.seconds = object.seconds | 0;
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    if (object.utcOffset != null) {
                        if (typeof object.utcOffset !== "object")
                            throw TypeError(".google.type.DateTime.utcOffset: object expected");
                        message.utcOffset = $root.google.protobuf.Duration.fromObject(object.utcOffset);
                    }
                    if (object.timeZone != null) {
                        if (typeof object.timeZone !== "object")
                            throw TypeError(".google.type.DateTime.timeZone: object expected");
                        message.timeZone = $root.google.type.TimeZone.fromObject(object.timeZone);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DateTime message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.DateTime
                 * @static
                 * @param {google.type.DateTime} message DateTime
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DateTime.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.year = 0;
                        object.month = 0;
                        object.day = 0;
                        object.hours = 0;
                        object.minutes = 0;
                        object.seconds = 0;
                        object.nanos = 0;
                    }
                    if (message.year != null && message.hasOwnProperty("year"))
                        object.year = message.year;
                    if (message.month != null && message.hasOwnProperty("month"))
                        object.month = message.month;
                    if (message.day != null && message.hasOwnProperty("day"))
                        object.day = message.day;
                    if (message.hours != null && message.hasOwnProperty("hours"))
                        object.hours = message.hours;
                    if (message.minutes != null && message.hasOwnProperty("minutes"))
                        object.minutes = message.minutes;
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        object.seconds = message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    if (message.utcOffset != null && message.hasOwnProperty("utcOffset")) {
                        object.utcOffset = $root.google.protobuf.Duration.toObject(message.utcOffset, options);
                        if (options.oneofs)
                            object.timeOffset = "utcOffset";
                    }
                    if (message.timeZone != null && message.hasOwnProperty("timeZone")) {
                        object.timeZone = $root.google.type.TimeZone.toObject(message.timeZone, options);
                        if (options.oneofs)
                            object.timeOffset = "timeZone";
                    }
                    return object;
                };
    
                /**
                 * Converts this DateTime to JSON.
                 * @function toJSON
                 * @memberof google.type.DateTime
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DateTime.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DateTime
                 * @function getTypeUrl
                 * @memberof google.type.DateTime
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DateTime.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.DateTime";
                };
    
                return DateTime;
            })();
    
            type.TimeZone = (function() {
    
                /**
                 * Properties of a TimeZone.
                 * @memberof google.type
                 * @interface ITimeZone
                 * @property {string|null} [id] TimeZone id
                 * @property {string|null} [version] TimeZone version
                 */
    
                /**
                 * Constructs a new TimeZone.
                 * @memberof google.type
                 * @classdesc Represents a TimeZone.
                 * @implements ITimeZone
                 * @constructor
                 * @param {google.type.ITimeZone=} [properties] Properties to set
                 */
                function TimeZone(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * TimeZone id.
                 * @member {string} id
                 * @memberof google.type.TimeZone
                 * @instance
                 */
                TimeZone.prototype.id = "";
    
                /**
                 * TimeZone version.
                 * @member {string} version
                 * @memberof google.type.TimeZone
                 * @instance
                 */
                TimeZone.prototype.version = "";
    
                /**
                 * Creates a new TimeZone instance using the specified properties.
                 * @function create
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {google.type.ITimeZone=} [properties] Properties to set
                 * @returns {google.type.TimeZone} TimeZone instance
                 */
                TimeZone.create = function create(properties) {
                    return new TimeZone(properties);
                };
    
                /**
                 * Encodes the specified TimeZone message. Does not implicitly {@link google.type.TimeZone.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {google.type.ITimeZone} message TimeZone message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TimeZone.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                    return writer;
                };
    
                /**
                 * Encodes the specified TimeZone message, length delimited. Does not implicitly {@link google.type.TimeZone.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {google.type.ITimeZone} message TimeZone message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                TimeZone.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a TimeZone message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.TimeZone} TimeZone
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TimeZone.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.TimeZone();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.id = reader.string();
                                break;
                            }
                        case 2: {
                                message.version = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a TimeZone message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.TimeZone} TimeZone
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                TimeZone.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a TimeZone message.
                 * @function verify
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                TimeZone.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.id != null && message.hasOwnProperty("id"))
                        if (!$util.isString(message.id))
                            return "id: string expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isString(message.version))
                            return "version: string expected";
                    return null;
                };
    
                /**
                 * Creates a TimeZone message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.TimeZone} TimeZone
                 */
                TimeZone.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.TimeZone)
                        return object;
                    var message = new $root.google.type.TimeZone();
                    if (object.id != null)
                        message.id = String(object.id);
                    if (object.version != null)
                        message.version = String(object.version);
                    return message;
                };
    
                /**
                 * Creates a plain object from a TimeZone message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {google.type.TimeZone} message TimeZone
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                TimeZone.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.id = "";
                        object.version = "";
                    }
                    if (message.id != null && message.hasOwnProperty("id"))
                        object.id = message.id;
                    if (message.version != null && message.hasOwnProperty("version"))
                        object.version = message.version;
                    return object;
                };
    
                /**
                 * Converts this TimeZone to JSON.
                 * @function toJSON
                 * @memberof google.type.TimeZone
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                TimeZone.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for TimeZone
                 * @function getTypeUrl
                 * @memberof google.type.TimeZone
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                TimeZone.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.TimeZone";
                };
    
                return TimeZone;
            })();
    
            type.Money = (function() {
    
                /**
                 * Properties of a Money.
                 * @memberof google.type
                 * @interface IMoney
                 * @property {string|null} [currencyCode] Money currencyCode
                 * @property {number|Long|null} [units] Money units
                 * @property {number|null} [nanos] Money nanos
                 */
    
                /**
                 * Constructs a new Money.
                 * @memberof google.type
                 * @classdesc Represents a Money.
                 * @implements IMoney
                 * @constructor
                 * @param {google.type.IMoney=} [properties] Properties to set
                 */
                function Money(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Money currencyCode.
                 * @member {string} currencyCode
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.currencyCode = "";
    
                /**
                 * Money units.
                 * @member {number|Long} units
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.units = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Money nanos.
                 * @member {number} nanos
                 * @memberof google.type.Money
                 * @instance
                 */
                Money.prototype.nanos = 0;
    
                /**
                 * Creates a new Money instance using the specified properties.
                 * @function create
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney=} [properties] Properties to set
                 * @returns {google.type.Money} Money instance
                 */
                Money.create = function create(properties) {
                    return new Money(properties);
                };
    
                /**
                 * Encodes the specified Money message. Does not implicitly {@link google.type.Money.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney} message Money message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Money.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.currencyCode != null && Object.hasOwnProperty.call(message, "currencyCode"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.currencyCode);
                    if (message.units != null && Object.hasOwnProperty.call(message, "units"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int64(message.units);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Money message, length delimited. Does not implicitly {@link google.type.Money.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.IMoney} message Money message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Money.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Money message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Money
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Money} Money
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Money.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Money();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.currencyCode = reader.string();
                                break;
                            }
                        case 2: {
                                message.units = reader.int64();
                                break;
                            }
                        case 3: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Money message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Money
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Money} Money
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Money.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Money message.
                 * @function verify
                 * @memberof google.type.Money
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Money.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                        if (!$util.isString(message.currencyCode))
                            return "currencyCode: string expected";
                    if (message.units != null && message.hasOwnProperty("units"))
                        if (!$util.isInteger(message.units) && !(message.units && $util.isInteger(message.units.low) && $util.isInteger(message.units.high)))
                            return "units: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Money message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Money
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Money} Money
                 */
                Money.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Money)
                        return object;
                    var message = new $root.google.type.Money();
                    if (object.currencyCode != null)
                        message.currencyCode = String(object.currencyCode);
                    if (object.units != null)
                        if ($util.Long)
                            (message.units = $util.Long.fromValue(object.units)).unsigned = false;
                        else if (typeof object.units === "string")
                            message.units = parseInt(object.units, 10);
                        else if (typeof object.units === "number")
                            message.units = object.units;
                        else if (typeof object.units === "object")
                            message.units = new $util.LongBits(object.units.low >>> 0, object.units.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Money message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Money
                 * @static
                 * @param {google.type.Money} message Money
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Money.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.currencyCode = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.units = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.units = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.currencyCode != null && message.hasOwnProperty("currencyCode"))
                        object.currencyCode = message.currencyCode;
                    if (message.units != null && message.hasOwnProperty("units"))
                        if (typeof message.units === "number")
                            object.units = options.longs === String ? String(message.units) : message.units;
                        else
                            object.units = options.longs === String ? $util.Long.prototype.toString.call(message.units) : options.longs === Number ? new $util.LongBits(message.units.low >>> 0, message.units.high >>> 0).toNumber() : message.units;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Money to JSON.
                 * @function toJSON
                 * @memberof google.type.Money
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Money.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Money
                 * @function getTypeUrl
                 * @memberof google.type.Money
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Money.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Money";
                };
    
                return Money;
            })();
    
            type.PostalAddress = (function() {
    
                /**
                 * Properties of a PostalAddress.
                 * @memberof google.type
                 * @interface IPostalAddress
                 * @property {number|null} [revision] PostalAddress revision
                 * @property {string|null} [regionCode] PostalAddress regionCode
                 * @property {string|null} [languageCode] PostalAddress languageCode
                 * @property {string|null} [postalCode] PostalAddress postalCode
                 * @property {string|null} [sortingCode] PostalAddress sortingCode
                 * @property {string|null} [administrativeArea] PostalAddress administrativeArea
                 * @property {string|null} [locality] PostalAddress locality
                 * @property {string|null} [sublocality] PostalAddress sublocality
                 * @property {Array.<string>|null} [addressLines] PostalAddress addressLines
                 * @property {Array.<string>|null} [recipients] PostalAddress recipients
                 * @property {string|null} [organization] PostalAddress organization
                 */
    
                /**
                 * Constructs a new PostalAddress.
                 * @memberof google.type
                 * @classdesc Represents a PostalAddress.
                 * @implements IPostalAddress
                 * @constructor
                 * @param {google.type.IPostalAddress=} [properties] Properties to set
                 */
                function PostalAddress(properties) {
                    this.addressLines = [];
                    this.recipients = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PostalAddress revision.
                 * @member {number} revision
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.revision = 0;
    
                /**
                 * PostalAddress regionCode.
                 * @member {string} regionCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.regionCode = "";
    
                /**
                 * PostalAddress languageCode.
                 * @member {string} languageCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.languageCode = "";
    
                /**
                 * PostalAddress postalCode.
                 * @member {string} postalCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.postalCode = "";
    
                /**
                 * PostalAddress sortingCode.
                 * @member {string} sortingCode
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.sortingCode = "";
    
                /**
                 * PostalAddress administrativeArea.
                 * @member {string} administrativeArea
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.administrativeArea = "";
    
                /**
                 * PostalAddress locality.
                 * @member {string} locality
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.locality = "";
    
                /**
                 * PostalAddress sublocality.
                 * @member {string} sublocality
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.sublocality = "";
    
                /**
                 * PostalAddress addressLines.
                 * @member {Array.<string>} addressLines
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.addressLines = $util.emptyArray;
    
                /**
                 * PostalAddress recipients.
                 * @member {Array.<string>} recipients
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.recipients = $util.emptyArray;
    
                /**
                 * PostalAddress organization.
                 * @member {string} organization
                 * @memberof google.type.PostalAddress
                 * @instance
                 */
                PostalAddress.prototype.organization = "";
    
                /**
                 * Creates a new PostalAddress instance using the specified properties.
                 * @function create
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.IPostalAddress=} [properties] Properties to set
                 * @returns {google.type.PostalAddress} PostalAddress instance
                 */
                PostalAddress.create = function create(properties) {
                    return new PostalAddress(properties);
                };
    
                /**
                 * Encodes the specified PostalAddress message. Does not implicitly {@link google.type.PostalAddress.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.IPostalAddress} message PostalAddress message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PostalAddress.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.revision);
                    if (message.regionCode != null && Object.hasOwnProperty.call(message, "regionCode"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.regionCode);
                    if (message.languageCode != null && Object.hasOwnProperty.call(message, "languageCode"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.languageCode);
                    if (message.postalCode != null && Object.hasOwnProperty.call(message, "postalCode"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.postalCode);
                    if (message.sortingCode != null && Object.hasOwnProperty.call(message, "sortingCode"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.sortingCode);
                    if (message.administrativeArea != null && Object.hasOwnProperty.call(message, "administrativeArea"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.administrativeArea);
                    if (message.locality != null && Object.hasOwnProperty.call(message, "locality"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.locality);
                    if (message.sublocality != null && Object.hasOwnProperty.call(message, "sublocality"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.sublocality);
                    if (message.addressLines != null && message.addressLines.length)
                        for (var i = 0; i < message.addressLines.length; ++i)
                            writer.uint32(/* id 9, wireType 2 =*/74).string(message.addressLines[i]);
                    if (message.recipients != null && message.recipients.length)
                        for (var i = 0; i < message.recipients.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.recipients[i]);
                    if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.organization);
                    return writer;
                };
    
                /**
                 * Encodes the specified PostalAddress message, length delimited. Does not implicitly {@link google.type.PostalAddress.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.IPostalAddress} message PostalAddress message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PostalAddress.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PostalAddress message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.PostalAddress} PostalAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PostalAddress.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.PostalAddress();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.revision = reader.int32();
                                break;
                            }
                        case 2: {
                                message.regionCode = reader.string();
                                break;
                            }
                        case 3: {
                                message.languageCode = reader.string();
                                break;
                            }
                        case 4: {
                                message.postalCode = reader.string();
                                break;
                            }
                        case 5: {
                                message.sortingCode = reader.string();
                                break;
                            }
                        case 6: {
                                message.administrativeArea = reader.string();
                                break;
                            }
                        case 7: {
                                message.locality = reader.string();
                                break;
                            }
                        case 8: {
                                message.sublocality = reader.string();
                                break;
                            }
                        case 9: {
                                if (!(message.addressLines && message.addressLines.length))
                                    message.addressLines = [];
                                message.addressLines.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.recipients && message.recipients.length))
                                    message.recipients = [];
                                message.recipients.push(reader.string());
                                break;
                            }
                        case 11: {
                                message.organization = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PostalAddress message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.PostalAddress} PostalAddress
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PostalAddress.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PostalAddress message.
                 * @function verify
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PostalAddress.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.revision != null && message.hasOwnProperty("revision"))
                        if (!$util.isInteger(message.revision))
                            return "revision: integer expected";
                    if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                        if (!$util.isString(message.regionCode))
                            return "regionCode: string expected";
                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                        if (!$util.isString(message.languageCode))
                            return "languageCode: string expected";
                    if (message.postalCode != null && message.hasOwnProperty("postalCode"))
                        if (!$util.isString(message.postalCode))
                            return "postalCode: string expected";
                    if (message.sortingCode != null && message.hasOwnProperty("sortingCode"))
                        if (!$util.isString(message.sortingCode))
                            return "sortingCode: string expected";
                    if (message.administrativeArea != null && message.hasOwnProperty("administrativeArea"))
                        if (!$util.isString(message.administrativeArea))
                            return "administrativeArea: string expected";
                    if (message.locality != null && message.hasOwnProperty("locality"))
                        if (!$util.isString(message.locality))
                            return "locality: string expected";
                    if (message.sublocality != null && message.hasOwnProperty("sublocality"))
                        if (!$util.isString(message.sublocality))
                            return "sublocality: string expected";
                    if (message.addressLines != null && message.hasOwnProperty("addressLines")) {
                        if (!Array.isArray(message.addressLines))
                            return "addressLines: array expected";
                        for (var i = 0; i < message.addressLines.length; ++i)
                            if (!$util.isString(message.addressLines[i]))
                                return "addressLines: string[] expected";
                    }
                    if (message.recipients != null && message.hasOwnProperty("recipients")) {
                        if (!Array.isArray(message.recipients))
                            return "recipients: array expected";
                        for (var i = 0; i < message.recipients.length; ++i)
                            if (!$util.isString(message.recipients[i]))
                                return "recipients: string[] expected";
                    }
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        if (!$util.isString(message.organization))
                            return "organization: string expected";
                    return null;
                };
    
                /**
                 * Creates a PostalAddress message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.PostalAddress} PostalAddress
                 */
                PostalAddress.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.PostalAddress)
                        return object;
                    var message = new $root.google.type.PostalAddress();
                    if (object.revision != null)
                        message.revision = object.revision | 0;
                    if (object.regionCode != null)
                        message.regionCode = String(object.regionCode);
                    if (object.languageCode != null)
                        message.languageCode = String(object.languageCode);
                    if (object.postalCode != null)
                        message.postalCode = String(object.postalCode);
                    if (object.sortingCode != null)
                        message.sortingCode = String(object.sortingCode);
                    if (object.administrativeArea != null)
                        message.administrativeArea = String(object.administrativeArea);
                    if (object.locality != null)
                        message.locality = String(object.locality);
                    if (object.sublocality != null)
                        message.sublocality = String(object.sublocality);
                    if (object.addressLines) {
                        if (!Array.isArray(object.addressLines))
                            throw TypeError(".google.type.PostalAddress.addressLines: array expected");
                        message.addressLines = [];
                        for (var i = 0; i < object.addressLines.length; ++i)
                            message.addressLines[i] = String(object.addressLines[i]);
                    }
                    if (object.recipients) {
                        if (!Array.isArray(object.recipients))
                            throw TypeError(".google.type.PostalAddress.recipients: array expected");
                        message.recipients = [];
                        for (var i = 0; i < object.recipients.length; ++i)
                            message.recipients[i] = String(object.recipients[i]);
                    }
                    if (object.organization != null)
                        message.organization = String(object.organization);
                    return message;
                };
    
                /**
                 * Creates a plain object from a PostalAddress message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {google.type.PostalAddress} message PostalAddress
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PostalAddress.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.addressLines = [];
                        object.recipients = [];
                    }
                    if (options.defaults) {
                        object.revision = 0;
                        object.regionCode = "";
                        object.languageCode = "";
                        object.postalCode = "";
                        object.sortingCode = "";
                        object.administrativeArea = "";
                        object.locality = "";
                        object.sublocality = "";
                        object.organization = "";
                    }
                    if (message.revision != null && message.hasOwnProperty("revision"))
                        object.revision = message.revision;
                    if (message.regionCode != null && message.hasOwnProperty("regionCode"))
                        object.regionCode = message.regionCode;
                    if (message.languageCode != null && message.hasOwnProperty("languageCode"))
                        object.languageCode = message.languageCode;
                    if (message.postalCode != null && message.hasOwnProperty("postalCode"))
                        object.postalCode = message.postalCode;
                    if (message.sortingCode != null && message.hasOwnProperty("sortingCode"))
                        object.sortingCode = message.sortingCode;
                    if (message.administrativeArea != null && message.hasOwnProperty("administrativeArea"))
                        object.administrativeArea = message.administrativeArea;
                    if (message.locality != null && message.hasOwnProperty("locality"))
                        object.locality = message.locality;
                    if (message.sublocality != null && message.hasOwnProperty("sublocality"))
                        object.sublocality = message.sublocality;
                    if (message.addressLines && message.addressLines.length) {
                        object.addressLines = [];
                        for (var j = 0; j < message.addressLines.length; ++j)
                            object.addressLines[j] = message.addressLines[j];
                    }
                    if (message.recipients && message.recipients.length) {
                        object.recipients = [];
                        for (var j = 0; j < message.recipients.length; ++j)
                            object.recipients[j] = message.recipients[j];
                    }
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = message.organization;
                    return object;
                };
    
                /**
                 * Converts this PostalAddress to JSON.
                 * @function toJSON
                 * @memberof google.type.PostalAddress
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PostalAddress.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PostalAddress
                 * @function getTypeUrl
                 * @memberof google.type.PostalAddress
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PostalAddress.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.PostalAddress";
                };
    
                return PostalAddress;
            })();
    
            type.Interval = (function() {
    
                /**
                 * Properties of an Interval.
                 * @memberof google.type
                 * @interface IInterval
                 * @property {google.protobuf.ITimestamp|null} [startTime] Interval startTime
                 * @property {google.protobuf.ITimestamp|null} [endTime] Interval endTime
                 */
    
                /**
                 * Constructs a new Interval.
                 * @memberof google.type
                 * @classdesc Represents an Interval.
                 * @implements IInterval
                 * @constructor
                 * @param {google.type.IInterval=} [properties] Properties to set
                 */
                function Interval(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Interval startTime.
                 * @member {google.protobuf.ITimestamp|null|undefined} startTime
                 * @memberof google.type.Interval
                 * @instance
                 */
                Interval.prototype.startTime = null;
    
                /**
                 * Interval endTime.
                 * @member {google.protobuf.ITimestamp|null|undefined} endTime
                 * @memberof google.type.Interval
                 * @instance
                 */
                Interval.prototype.endTime = null;
    
                /**
                 * Creates a new Interval instance using the specified properties.
                 * @function create
                 * @memberof google.type.Interval
                 * @static
                 * @param {google.type.IInterval=} [properties] Properties to set
                 * @returns {google.type.Interval} Interval instance
                 */
                Interval.create = function create(properties) {
                    return new Interval(properties);
                };
    
                /**
                 * Encodes the specified Interval message. Does not implicitly {@link google.type.Interval.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Interval
                 * @static
                 * @param {google.type.IInterval} message Interval message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Interval.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                        $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                        $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Interval message, length delimited. Does not implicitly {@link google.type.Interval.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Interval
                 * @static
                 * @param {google.type.IInterval} message Interval message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Interval.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Interval message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Interval
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Interval} Interval
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Interval.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Interval();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                break;
                            }
                        case 2: {
                                message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Interval message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Interval
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Interval} Interval
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Interval.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Interval message.
                 * @function verify
                 * @memberof google.type.Interval
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Interval.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.startTime != null && message.hasOwnProperty("startTime")) {
                        var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                        if (error)
                            return "startTime." + error;
                    }
                    if (message.endTime != null && message.hasOwnProperty("endTime")) {
                        var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                        if (error)
                            return "endTime." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an Interval message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Interval
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Interval} Interval
                 */
                Interval.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Interval)
                        return object;
                    var message = new $root.google.type.Interval();
                    if (object.startTime != null) {
                        if (typeof object.startTime !== "object")
                            throw TypeError(".google.type.Interval.startTime: object expected");
                        message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                    }
                    if (object.endTime != null) {
                        if (typeof object.endTime !== "object")
                            throw TypeError(".google.type.Interval.endTime: object expected");
                        message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Interval message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Interval
                 * @static
                 * @param {google.type.Interval} message Interval
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Interval.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.startTime = null;
                        object.endTime = null;
                    }
                    if (message.startTime != null && message.hasOwnProperty("startTime"))
                        object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                    if (message.endTime != null && message.hasOwnProperty("endTime"))
                        object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                    return object;
                };
    
                /**
                 * Converts this Interval to JSON.
                 * @function toJSON
                 * @memberof google.type.Interval
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Interval.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Interval
                 * @function getTypeUrl
                 * @memberof google.type.Interval
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Interval.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Interval";
                };
    
                return Interval;
            })();
    
            type.Expr = (function() {
    
                /**
                 * Properties of an Expr.
                 * @memberof google.type
                 * @interface IExpr
                 * @property {string|null} [expression] Expr expression
                 * @property {string|null} [title] Expr title
                 * @property {string|null} [description] Expr description
                 * @property {string|null} [location] Expr location
                 */
    
                /**
                 * Constructs a new Expr.
                 * @memberof google.type
                 * @classdesc Represents an Expr.
                 * @implements IExpr
                 * @constructor
                 * @param {google.type.IExpr=} [properties] Properties to set
                 */
                function Expr(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Expr expression.
                 * @member {string} expression
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.expression = "";
    
                /**
                 * Expr title.
                 * @member {string} title
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.title = "";
    
                /**
                 * Expr description.
                 * @member {string} description
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.description = "";
    
                /**
                 * Expr location.
                 * @member {string} location
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.location = "";
    
                /**
                 * Creates a new Expr instance using the specified properties.
                 * @function create
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.IExpr=} [properties] Properties to set
                 * @returns {google.type.Expr} Expr instance
                 */
                Expr.create = function create(properties) {
                    return new Expr(properties);
                };
    
                /**
                 * Encodes the specified Expr message. Does not implicitly {@link google.type.Expr.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.IExpr} message Expr message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Expr.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.expression != null && Object.hasOwnProperty.call(message, "expression"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.expression);
                    if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.title);
                    if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                    if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.location);
                    return writer;
                };
    
                /**
                 * Encodes the specified Expr message, length delimited. Does not implicitly {@link google.type.Expr.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.IExpr} message Expr message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Expr.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Expr message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Expr
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Expr} Expr
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Expr.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Expr();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.expression = reader.string();
                                break;
                            }
                        case 2: {
                                message.title = reader.string();
                                break;
                            }
                        case 3: {
                                message.description = reader.string();
                                break;
                            }
                        case 4: {
                                message.location = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Expr message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Expr
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Expr} Expr
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Expr.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Expr message.
                 * @function verify
                 * @memberof google.type.Expr
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Expr.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.expression != null && message.hasOwnProperty("expression"))
                        if (!$util.isString(message.expression))
                            return "expression: string expected";
                    if (message.title != null && message.hasOwnProperty("title"))
                        if (!$util.isString(message.title))
                            return "title: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    if (message.location != null && message.hasOwnProperty("location"))
                        if (!$util.isString(message.location))
                            return "location: string expected";
                    return null;
                };
    
                /**
                 * Creates an Expr message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Expr
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Expr} Expr
                 */
                Expr.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Expr)
                        return object;
                    var message = new $root.google.type.Expr();
                    if (object.expression != null)
                        message.expression = String(object.expression);
                    if (object.title != null)
                        message.title = String(object.title);
                    if (object.description != null)
                        message.description = String(object.description);
                    if (object.location != null)
                        message.location = String(object.location);
                    return message;
                };
    
                /**
                 * Creates a plain object from an Expr message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.Expr} message Expr
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Expr.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.expression = "";
                        object.title = "";
                        object.description = "";
                        object.location = "";
                    }
                    if (message.expression != null && message.hasOwnProperty("expression"))
                        object.expression = message.expression;
                    if (message.title != null && message.hasOwnProperty("title"))
                        object.title = message.title;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    if (message.location != null && message.hasOwnProperty("location"))
                        object.location = message.location;
                    return object;
                };
    
                /**
                 * Converts this Expr to JSON.
                 * @function toJSON
                 * @memberof google.type.Expr
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Expr.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Expr
                 * @function getTypeUrl
                 * @memberof google.type.Expr
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Expr.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Expr";
                };
    
                return Expr;
            })();
    
            return type;
        })();
    
        google.iam = (function() {
    
            /**
             * Namespace iam.
             * @memberof google
             * @namespace
             */
            var iam = {};
    
            iam.v1 = (function() {
    
                /**
                 * Namespace v1.
                 * @memberof google.iam
                 * @namespace
                 */
                var v1 = {};
    
                v1.Policy = (function() {
    
                    /**
                     * Properties of a Policy.
                     * @memberof google.iam.v1
                     * @interface IPolicy
                     * @property {number|null} [version] Policy version
                     * @property {Array.<google.iam.v1.IBinding>|null} [bindings] Policy bindings
                     * @property {Array.<google.iam.v1.IAuditConfig>|null} [auditConfigs] Policy auditConfigs
                     * @property {Uint8Array|null} [etag] Policy etag
                     */
    
                    /**
                     * Constructs a new Policy.
                     * @memberof google.iam.v1
                     * @classdesc Represents a Policy.
                     * @implements IPolicy
                     * @constructor
                     * @param {google.iam.v1.IPolicy=} [properties] Properties to set
                     */
                    function Policy(properties) {
                        this.bindings = [];
                        this.auditConfigs = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Policy version.
                     * @member {number} version
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.version = 0;
    
                    /**
                     * Policy bindings.
                     * @member {Array.<google.iam.v1.IBinding>} bindings
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.bindings = $util.emptyArray;
    
                    /**
                     * Policy auditConfigs.
                     * @member {Array.<google.iam.v1.IAuditConfig>} auditConfigs
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.auditConfigs = $util.emptyArray;
    
                    /**
                     * Policy etag.
                     * @member {Uint8Array} etag
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.etag = $util.newBuffer([]);
    
                    /**
                     * Creates a new Policy instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.IPolicy=} [properties] Properties to set
                     * @returns {google.iam.v1.Policy} Policy instance
                     */
                    Policy.create = function create(properties) {
                        return new Policy(properties);
                    };
    
                    /**
                     * Encodes the specified Policy message. Does not implicitly {@link google.iam.v1.Policy.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.IPolicy} message Policy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Policy.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.version);
                        if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.etag);
                        if (message.bindings != null && message.bindings.length)
                            for (var i = 0; i < message.bindings.length; ++i)
                                $root.google.iam.v1.Binding.encode(message.bindings[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.auditConfigs != null && message.auditConfigs.length)
                            for (var i = 0; i < message.auditConfigs.length; ++i)
                                $root.google.iam.v1.AuditConfig.encode(message.auditConfigs[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Policy message, length delimited. Does not implicitly {@link google.iam.v1.Policy.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.IPolicy} message Policy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Policy.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Policy message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.Policy} Policy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Policy.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.Policy();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.version = reader.int32();
                                    break;
                                }
                            case 4: {
                                    if (!(message.bindings && message.bindings.length))
                                        message.bindings = [];
                                    message.bindings.push($root.google.iam.v1.Binding.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 6: {
                                    if (!(message.auditConfigs && message.auditConfigs.length))
                                        message.auditConfigs = [];
                                    message.auditConfigs.push($root.google.iam.v1.AuditConfig.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 3: {
                                    message.etag = reader.bytes();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Policy message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.Policy} Policy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Policy.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Policy message.
                     * @function verify
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Policy.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.version != null && message.hasOwnProperty("version"))
                            if (!$util.isInteger(message.version))
                                return "version: integer expected";
                        if (message.bindings != null && message.hasOwnProperty("bindings")) {
                            if (!Array.isArray(message.bindings))
                                return "bindings: array expected";
                            for (var i = 0; i < message.bindings.length; ++i) {
                                var error = $root.google.iam.v1.Binding.verify(message.bindings[i]);
                                if (error)
                                    return "bindings." + error;
                            }
                        }
                        if (message.auditConfigs != null && message.hasOwnProperty("auditConfigs")) {
                            if (!Array.isArray(message.auditConfigs))
                                return "auditConfigs: array expected";
                            for (var i = 0; i < message.auditConfigs.length; ++i) {
                                var error = $root.google.iam.v1.AuditConfig.verify(message.auditConfigs[i]);
                                if (error)
                                    return "auditConfigs." + error;
                            }
                        }
                        if (message.etag != null && message.hasOwnProperty("etag"))
                            if (!(message.etag && typeof message.etag.length === "number" || $util.isString(message.etag)))
                                return "etag: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a Policy message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.Policy} Policy
                     */
                    Policy.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.Policy)
                            return object;
                        var message = new $root.google.iam.v1.Policy();
                        if (object.version != null)
                            message.version = object.version | 0;
                        if (object.bindings) {
                            if (!Array.isArray(object.bindings))
                                throw TypeError(".google.iam.v1.Policy.bindings: array expected");
                            message.bindings = [];
                            for (var i = 0; i < object.bindings.length; ++i) {
                                if (typeof object.bindings[i] !== "object")
                                    throw TypeError(".google.iam.v1.Policy.bindings: object expected");
                                message.bindings[i] = $root.google.iam.v1.Binding.fromObject(object.bindings[i]);
                            }
                        }
                        if (object.auditConfigs) {
                            if (!Array.isArray(object.auditConfigs))
                                throw TypeError(".google.iam.v1.Policy.auditConfigs: array expected");
                            message.auditConfigs = [];
                            for (var i = 0; i < object.auditConfigs.length; ++i) {
                                if (typeof object.auditConfigs[i] !== "object")
                                    throw TypeError(".google.iam.v1.Policy.auditConfigs: object expected");
                                message.auditConfigs[i] = $root.google.iam.v1.AuditConfig.fromObject(object.auditConfigs[i]);
                            }
                        }
                        if (object.etag != null)
                            if (typeof object.etag === "string")
                                $util.base64.decode(object.etag, message.etag = $util.newBuffer($util.base64.length(object.etag)), 0);
                            else if (object.etag.length >= 0)
                                message.etag = object.etag;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Policy message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.Policy} message Policy
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Policy.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.bindings = [];
                            object.auditConfigs = [];
                        }
                        if (options.defaults) {
                            object.version = 0;
                            if (options.bytes === String)
                                object.etag = "";
                            else {
                                object.etag = [];
                                if (options.bytes !== Array)
                                    object.etag = $util.newBuffer(object.etag);
                            }
                        }
                        if (message.version != null && message.hasOwnProperty("version"))
                            object.version = message.version;
                        if (message.etag != null && message.hasOwnProperty("etag"))
                            object.etag = options.bytes === String ? $util.base64.encode(message.etag, 0, message.etag.length) : options.bytes === Array ? Array.prototype.slice.call(message.etag) : message.etag;
                        if (message.bindings && message.bindings.length) {
                            object.bindings = [];
                            for (var j = 0; j < message.bindings.length; ++j)
                                object.bindings[j] = $root.google.iam.v1.Binding.toObject(message.bindings[j], options);
                        }
                        if (message.auditConfigs && message.auditConfigs.length) {
                            object.auditConfigs = [];
                            for (var j = 0; j < message.auditConfigs.length; ++j)
                                object.auditConfigs[j] = $root.google.iam.v1.AuditConfig.toObject(message.auditConfigs[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Policy to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.Policy
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Policy.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Policy
                     * @function getTypeUrl
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Policy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.Policy";
                    };
    
                    return Policy;
                })();
    
                v1.Binding = (function() {
    
                    /**
                     * Properties of a Binding.
                     * @memberof google.iam.v1
                     * @interface IBinding
                     * @property {string|null} [role] Binding role
                     * @property {Array.<string>|null} [members] Binding members
                     * @property {google.type.IExpr|null} [condition] Binding condition
                     */
    
                    /**
                     * Constructs a new Binding.
                     * @memberof google.iam.v1
                     * @classdesc Represents a Binding.
                     * @implements IBinding
                     * @constructor
                     * @param {google.iam.v1.IBinding=} [properties] Properties to set
                     */
                    function Binding(properties) {
                        this.members = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Binding role.
                     * @member {string} role
                     * @memberof google.iam.v1.Binding
                     * @instance
                     */
                    Binding.prototype.role = "";
    
                    /**
                     * Binding members.
                     * @member {Array.<string>} members
                     * @memberof google.iam.v1.Binding
                     * @instance
                     */
                    Binding.prototype.members = $util.emptyArray;
    
                    /**
                     * Binding condition.
                     * @member {google.type.IExpr|null|undefined} condition
                     * @memberof google.iam.v1.Binding
                     * @instance
                     */
                    Binding.prototype.condition = null;
    
                    /**
                     * Creates a new Binding instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.IBinding=} [properties] Properties to set
                     * @returns {google.iam.v1.Binding} Binding instance
                     */
                    Binding.create = function create(properties) {
                        return new Binding(properties);
                    };
    
                    /**
                     * Encodes the specified Binding message. Does not implicitly {@link google.iam.v1.Binding.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.IBinding} message Binding message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Binding.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.role != null && Object.hasOwnProperty.call(message, "role"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.role);
                        if (message.members != null && message.members.length)
                            for (var i = 0; i < message.members.length; ++i)
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.members[i]);
                        if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                            $root.google.type.Expr.encode(message.condition, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Binding message, length delimited. Does not implicitly {@link google.iam.v1.Binding.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.IBinding} message Binding message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Binding.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Binding message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.Binding} Binding
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Binding.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.Binding();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.role = reader.string();
                                    break;
                                }
                            case 2: {
                                    if (!(message.members && message.members.length))
                                        message.members = [];
                                    message.members.push(reader.string());
                                    break;
                                }
                            case 3: {
                                    message.condition = $root.google.type.Expr.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Binding message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.Binding} Binding
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Binding.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Binding message.
                     * @function verify
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Binding.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.role != null && message.hasOwnProperty("role"))
                            if (!$util.isString(message.role))
                                return "role: string expected";
                        if (message.members != null && message.hasOwnProperty("members")) {
                            if (!Array.isArray(message.members))
                                return "members: array expected";
                            for (var i = 0; i < message.members.length; ++i)
                                if (!$util.isString(message.members[i]))
                                    return "members: string[] expected";
                        }
                        if (message.condition != null && message.hasOwnProperty("condition")) {
                            var error = $root.google.type.Expr.verify(message.condition);
                            if (error)
                                return "condition." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Binding message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.Binding} Binding
                     */
                    Binding.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.Binding)
                            return object;
                        var message = new $root.google.iam.v1.Binding();
                        if (object.role != null)
                            message.role = String(object.role);
                        if (object.members) {
                            if (!Array.isArray(object.members))
                                throw TypeError(".google.iam.v1.Binding.members: array expected");
                            message.members = [];
                            for (var i = 0; i < object.members.length; ++i)
                                message.members[i] = String(object.members[i]);
                        }
                        if (object.condition != null) {
                            if (typeof object.condition !== "object")
                                throw TypeError(".google.iam.v1.Binding.condition: object expected");
                            message.condition = $root.google.type.Expr.fromObject(object.condition);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Binding message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.Binding} message Binding
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Binding.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.members = [];
                        if (options.defaults) {
                            object.role = "";
                            object.condition = null;
                        }
                        if (message.role != null && message.hasOwnProperty("role"))
                            object.role = message.role;
                        if (message.members && message.members.length) {
                            object.members = [];
                            for (var j = 0; j < message.members.length; ++j)
                                object.members[j] = message.members[j];
                        }
                        if (message.condition != null && message.hasOwnProperty("condition"))
                            object.condition = $root.google.type.Expr.toObject(message.condition, options);
                        return object;
                    };
    
                    /**
                     * Converts this Binding to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.Binding
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Binding.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Binding
                     * @function getTypeUrl
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Binding.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.Binding";
                    };
    
                    return Binding;
                })();
    
                v1.AuditConfig = (function() {
    
                    /**
                     * Properties of an AuditConfig.
                     * @memberof google.iam.v1
                     * @interface IAuditConfig
                     * @property {string|null} [service] AuditConfig service
                     * @property {Array.<google.iam.v1.IAuditLogConfig>|null} [auditLogConfigs] AuditConfig auditLogConfigs
                     */
    
                    /**
                     * Constructs a new AuditConfig.
                     * @memberof google.iam.v1
                     * @classdesc Represents an AuditConfig.
                     * @implements IAuditConfig
                     * @constructor
                     * @param {google.iam.v1.IAuditConfig=} [properties] Properties to set
                     */
                    function AuditConfig(properties) {
                        this.auditLogConfigs = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AuditConfig service.
                     * @member {string} service
                     * @memberof google.iam.v1.AuditConfig
                     * @instance
                     */
                    AuditConfig.prototype.service = "";
    
                    /**
                     * AuditConfig auditLogConfigs.
                     * @member {Array.<google.iam.v1.IAuditLogConfig>} auditLogConfigs
                     * @memberof google.iam.v1.AuditConfig
                     * @instance
                     */
                    AuditConfig.prototype.auditLogConfigs = $util.emptyArray;
    
                    /**
                     * Creates a new AuditConfig instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.IAuditConfig=} [properties] Properties to set
                     * @returns {google.iam.v1.AuditConfig} AuditConfig instance
                     */
                    AuditConfig.create = function create(properties) {
                        return new AuditConfig(properties);
                    };
    
                    /**
                     * Encodes the specified AuditConfig message. Does not implicitly {@link google.iam.v1.AuditConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.IAuditConfig} message AuditConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                        if (message.auditLogConfigs != null && message.auditLogConfigs.length)
                            for (var i = 0; i < message.auditLogConfigs.length; ++i)
                                $root.google.iam.v1.AuditLogConfig.encode(message.auditLogConfigs[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AuditConfig message, length delimited. Does not implicitly {@link google.iam.v1.AuditConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.IAuditConfig} message AuditConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AuditConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.AuditConfig} AuditConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.AuditConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.service = reader.string();
                                    break;
                                }
                            case 3: {
                                    if (!(message.auditLogConfigs && message.auditLogConfigs.length))
                                        message.auditLogConfigs = [];
                                    message.auditLogConfigs.push($root.google.iam.v1.AuditLogConfig.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AuditConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.AuditConfig} AuditConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AuditConfig message.
                     * @function verify
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AuditConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.service != null && message.hasOwnProperty("service"))
                            if (!$util.isString(message.service))
                                return "service: string expected";
                        if (message.auditLogConfigs != null && message.hasOwnProperty("auditLogConfigs")) {
                            if (!Array.isArray(message.auditLogConfigs))
                                return "auditLogConfigs: array expected";
                            for (var i = 0; i < message.auditLogConfigs.length; ++i) {
                                var error = $root.google.iam.v1.AuditLogConfig.verify(message.auditLogConfigs[i]);
                                if (error)
                                    return "auditLogConfigs." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates an AuditConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.AuditConfig} AuditConfig
                     */
                    AuditConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.AuditConfig)
                            return object;
                        var message = new $root.google.iam.v1.AuditConfig();
                        if (object.service != null)
                            message.service = String(object.service);
                        if (object.auditLogConfigs) {
                            if (!Array.isArray(object.auditLogConfigs))
                                throw TypeError(".google.iam.v1.AuditConfig.auditLogConfigs: array expected");
                            message.auditLogConfigs = [];
                            for (var i = 0; i < object.auditLogConfigs.length; ++i) {
                                if (typeof object.auditLogConfigs[i] !== "object")
                                    throw TypeError(".google.iam.v1.AuditConfig.auditLogConfigs: object expected");
                                message.auditLogConfigs[i] = $root.google.iam.v1.AuditLogConfig.fromObject(object.auditLogConfigs[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AuditConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.AuditConfig} message AuditConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AuditConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.auditLogConfigs = [];
                        if (options.defaults)
                            object.service = "";
                        if (message.service != null && message.hasOwnProperty("service"))
                            object.service = message.service;
                        if (message.auditLogConfigs && message.auditLogConfigs.length) {
                            object.auditLogConfigs = [];
                            for (var j = 0; j < message.auditLogConfigs.length; ++j)
                                object.auditLogConfigs[j] = $root.google.iam.v1.AuditLogConfig.toObject(message.auditLogConfigs[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this AuditConfig to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.AuditConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AuditConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AuditConfig
                     * @function getTypeUrl
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AuditConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.AuditConfig";
                    };
    
                    return AuditConfig;
                })();
    
                v1.AuditLogConfig = (function() {
    
                    /**
                     * Properties of an AuditLogConfig.
                     * @memberof google.iam.v1
                     * @interface IAuditLogConfig
                     * @property {google.iam.v1.AuditLogConfig.LogType|null} [logType] AuditLogConfig logType
                     * @property {Array.<string>|null} [exemptedMembers] AuditLogConfig exemptedMembers
                     */
    
                    /**
                     * Constructs a new AuditLogConfig.
                     * @memberof google.iam.v1
                     * @classdesc Represents an AuditLogConfig.
                     * @implements IAuditLogConfig
                     * @constructor
                     * @param {google.iam.v1.IAuditLogConfig=} [properties] Properties to set
                     */
                    function AuditLogConfig(properties) {
                        this.exemptedMembers = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AuditLogConfig logType.
                     * @member {google.iam.v1.AuditLogConfig.LogType} logType
                     * @memberof google.iam.v1.AuditLogConfig
                     * @instance
                     */
                    AuditLogConfig.prototype.logType = 0;
    
                    /**
                     * AuditLogConfig exemptedMembers.
                     * @member {Array.<string>} exemptedMembers
                     * @memberof google.iam.v1.AuditLogConfig
                     * @instance
                     */
                    AuditLogConfig.prototype.exemptedMembers = $util.emptyArray;
    
                    /**
                     * Creates a new AuditLogConfig instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.IAuditLogConfig=} [properties] Properties to set
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig instance
                     */
                    AuditLogConfig.create = function create(properties) {
                        return new AuditLogConfig(properties);
                    };
    
                    /**
                     * Encodes the specified AuditLogConfig message. Does not implicitly {@link google.iam.v1.AuditLogConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.IAuditLogConfig} message AuditLogConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditLogConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.logType != null && Object.hasOwnProperty.call(message, "logType"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.logType);
                        if (message.exemptedMembers != null && message.exemptedMembers.length)
                            for (var i = 0; i < message.exemptedMembers.length; ++i)
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.exemptedMembers[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AuditLogConfig message, length delimited. Does not implicitly {@link google.iam.v1.AuditLogConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.IAuditLogConfig} message AuditLogConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditLogConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AuditLogConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditLogConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.AuditLogConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.logType = reader.int32();
                                    break;
                                }
                            case 2: {
                                    if (!(message.exemptedMembers && message.exemptedMembers.length))
                                        message.exemptedMembers = [];
                                    message.exemptedMembers.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AuditLogConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditLogConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AuditLogConfig message.
                     * @function verify
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AuditLogConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            switch (message.logType) {
                            default:
                                return "logType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        if (message.exemptedMembers != null && message.hasOwnProperty("exemptedMembers")) {
                            if (!Array.isArray(message.exemptedMembers))
                                return "exemptedMembers: array expected";
                            for (var i = 0; i < message.exemptedMembers.length; ++i)
                                if (!$util.isString(message.exemptedMembers[i]))
                                    return "exemptedMembers: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates an AuditLogConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig
                     */
                    AuditLogConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.AuditLogConfig)
                            return object;
                        var message = new $root.google.iam.v1.AuditLogConfig();
                        switch (object.logType) {
                        default:
                            if (typeof object.logType === "number") {
                                message.logType = object.logType;
                                break;
                            }
                            break;
                        case "LOG_TYPE_UNSPECIFIED":
                        case 0:
                            message.logType = 0;
                            break;
                        case "ADMIN_READ":
                        case 1:
                            message.logType = 1;
                            break;
                        case "DATA_WRITE":
                        case 2:
                            message.logType = 2;
                            break;
                        case "DATA_READ":
                        case 3:
                            message.logType = 3;
                            break;
                        }
                        if (object.exemptedMembers) {
                            if (!Array.isArray(object.exemptedMembers))
                                throw TypeError(".google.iam.v1.AuditLogConfig.exemptedMembers: array expected");
                            message.exemptedMembers = [];
                            for (var i = 0; i < object.exemptedMembers.length; ++i)
                                message.exemptedMembers[i] = String(object.exemptedMembers[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AuditLogConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.AuditLogConfig} message AuditLogConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AuditLogConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.exemptedMembers = [];
                        if (options.defaults)
                            object.logType = options.enums === String ? "LOG_TYPE_UNSPECIFIED" : 0;
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            object.logType = options.enums === String ? $root.google.iam.v1.AuditLogConfig.LogType[message.logType] === undefined ? message.logType : $root.google.iam.v1.AuditLogConfig.LogType[message.logType] : message.logType;
                        if (message.exemptedMembers && message.exemptedMembers.length) {
                            object.exemptedMembers = [];
                            for (var j = 0; j < message.exemptedMembers.length; ++j)
                                object.exemptedMembers[j] = message.exemptedMembers[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this AuditLogConfig to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.AuditLogConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AuditLogConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AuditLogConfig
                     * @function getTypeUrl
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AuditLogConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.AuditLogConfig";
                    };
    
                    /**
                     * LogType enum.
                     * @name google.iam.v1.AuditLogConfig.LogType
                     * @enum {number}
                     * @property {number} LOG_TYPE_UNSPECIFIED=0 LOG_TYPE_UNSPECIFIED value
                     * @property {number} ADMIN_READ=1 ADMIN_READ value
                     * @property {number} DATA_WRITE=2 DATA_WRITE value
                     * @property {number} DATA_READ=3 DATA_READ value
                     */
                    AuditLogConfig.LogType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "LOG_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ADMIN_READ"] = 1;
                        values[valuesById[2] = "DATA_WRITE"] = 2;
                        values[valuesById[3] = "DATA_READ"] = 3;
                        return values;
                    })();
    
                    return AuditLogConfig;
                })();
    
                v1.PolicyDelta = (function() {
    
                    /**
                     * Properties of a PolicyDelta.
                     * @memberof google.iam.v1
                     * @interface IPolicyDelta
                     * @property {Array.<google.iam.v1.IBindingDelta>|null} [bindingDeltas] PolicyDelta bindingDeltas
                     * @property {Array.<google.iam.v1.IAuditConfigDelta>|null} [auditConfigDeltas] PolicyDelta auditConfigDeltas
                     */
    
                    /**
                     * Constructs a new PolicyDelta.
                     * @memberof google.iam.v1
                     * @classdesc Represents a PolicyDelta.
                     * @implements IPolicyDelta
                     * @constructor
                     * @param {google.iam.v1.IPolicyDelta=} [properties] Properties to set
                     */
                    function PolicyDelta(properties) {
                        this.bindingDeltas = [];
                        this.auditConfigDeltas = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * PolicyDelta bindingDeltas.
                     * @member {Array.<google.iam.v1.IBindingDelta>} bindingDeltas
                     * @memberof google.iam.v1.PolicyDelta
                     * @instance
                     */
                    PolicyDelta.prototype.bindingDeltas = $util.emptyArray;
    
                    /**
                     * PolicyDelta auditConfigDeltas.
                     * @member {Array.<google.iam.v1.IAuditConfigDelta>} auditConfigDeltas
                     * @memberof google.iam.v1.PolicyDelta
                     * @instance
                     */
                    PolicyDelta.prototype.auditConfigDeltas = $util.emptyArray;
    
                    /**
                     * Creates a new PolicyDelta instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.IPolicyDelta=} [properties] Properties to set
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta instance
                     */
                    PolicyDelta.create = function create(properties) {
                        return new PolicyDelta(properties);
                    };
    
                    /**
                     * Encodes the specified PolicyDelta message. Does not implicitly {@link google.iam.v1.PolicyDelta.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.IPolicyDelta} message PolicyDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PolicyDelta.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.bindingDeltas != null && message.bindingDeltas.length)
                            for (var i = 0; i < message.bindingDeltas.length; ++i)
                                $root.google.iam.v1.BindingDelta.encode(message.bindingDeltas[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.auditConfigDeltas != null && message.auditConfigDeltas.length)
                            for (var i = 0; i < message.auditConfigDeltas.length; ++i)
                                $root.google.iam.v1.AuditConfigDelta.encode(message.auditConfigDeltas[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified PolicyDelta message, length delimited. Does not implicitly {@link google.iam.v1.PolicyDelta.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.IPolicyDelta} message PolicyDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PolicyDelta.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a PolicyDelta message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PolicyDelta.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.PolicyDelta();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.bindingDeltas && message.bindingDeltas.length))
                                        message.bindingDeltas = [];
                                    message.bindingDeltas.push($root.google.iam.v1.BindingDelta.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    if (!(message.auditConfigDeltas && message.auditConfigDeltas.length))
                                        message.auditConfigDeltas = [];
                                    message.auditConfigDeltas.push($root.google.iam.v1.AuditConfigDelta.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a PolicyDelta message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PolicyDelta.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a PolicyDelta message.
                     * @function verify
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    PolicyDelta.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.bindingDeltas != null && message.hasOwnProperty("bindingDeltas")) {
                            if (!Array.isArray(message.bindingDeltas))
                                return "bindingDeltas: array expected";
                            for (var i = 0; i < message.bindingDeltas.length; ++i) {
                                var error = $root.google.iam.v1.BindingDelta.verify(message.bindingDeltas[i]);
                                if (error)
                                    return "bindingDeltas." + error;
                            }
                        }
                        if (message.auditConfigDeltas != null && message.hasOwnProperty("auditConfigDeltas")) {
                            if (!Array.isArray(message.auditConfigDeltas))
                                return "auditConfigDeltas: array expected";
                            for (var i = 0; i < message.auditConfigDeltas.length; ++i) {
                                var error = $root.google.iam.v1.AuditConfigDelta.verify(message.auditConfigDeltas[i]);
                                if (error)
                                    return "auditConfigDeltas." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a PolicyDelta message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta
                     */
                    PolicyDelta.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.PolicyDelta)
                            return object;
                        var message = new $root.google.iam.v1.PolicyDelta();
                        if (object.bindingDeltas) {
                            if (!Array.isArray(object.bindingDeltas))
                                throw TypeError(".google.iam.v1.PolicyDelta.bindingDeltas: array expected");
                            message.bindingDeltas = [];
                            for (var i = 0; i < object.bindingDeltas.length; ++i) {
                                if (typeof object.bindingDeltas[i] !== "object")
                                    throw TypeError(".google.iam.v1.PolicyDelta.bindingDeltas: object expected");
                                message.bindingDeltas[i] = $root.google.iam.v1.BindingDelta.fromObject(object.bindingDeltas[i]);
                            }
                        }
                        if (object.auditConfigDeltas) {
                            if (!Array.isArray(object.auditConfigDeltas))
                                throw TypeError(".google.iam.v1.PolicyDelta.auditConfigDeltas: array expected");
                            message.auditConfigDeltas = [];
                            for (var i = 0; i < object.auditConfigDeltas.length; ++i) {
                                if (typeof object.auditConfigDeltas[i] !== "object")
                                    throw TypeError(".google.iam.v1.PolicyDelta.auditConfigDeltas: object expected");
                                message.auditConfigDeltas[i] = $root.google.iam.v1.AuditConfigDelta.fromObject(object.auditConfigDeltas[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a PolicyDelta message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.PolicyDelta} message PolicyDelta
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    PolicyDelta.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.bindingDeltas = [];
                            object.auditConfigDeltas = [];
                        }
                        if (message.bindingDeltas && message.bindingDeltas.length) {
                            object.bindingDeltas = [];
                            for (var j = 0; j < message.bindingDeltas.length; ++j)
                                object.bindingDeltas[j] = $root.google.iam.v1.BindingDelta.toObject(message.bindingDeltas[j], options);
                        }
                        if (message.auditConfigDeltas && message.auditConfigDeltas.length) {
                            object.auditConfigDeltas = [];
                            for (var j = 0; j < message.auditConfigDeltas.length; ++j)
                                object.auditConfigDeltas[j] = $root.google.iam.v1.AuditConfigDelta.toObject(message.auditConfigDeltas[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this PolicyDelta to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.PolicyDelta
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    PolicyDelta.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for PolicyDelta
                     * @function getTypeUrl
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    PolicyDelta.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.PolicyDelta";
                    };
    
                    return PolicyDelta;
                })();
    
                v1.BindingDelta = (function() {
    
                    /**
                     * Properties of a BindingDelta.
                     * @memberof google.iam.v1
                     * @interface IBindingDelta
                     * @property {google.iam.v1.BindingDelta.Action|null} [action] BindingDelta action
                     * @property {string|null} [role] BindingDelta role
                     * @property {string|null} [member] BindingDelta member
                     * @property {google.type.IExpr|null} [condition] BindingDelta condition
                     */
    
                    /**
                     * Constructs a new BindingDelta.
                     * @memberof google.iam.v1
                     * @classdesc Represents a BindingDelta.
                     * @implements IBindingDelta
                     * @constructor
                     * @param {google.iam.v1.IBindingDelta=} [properties] Properties to set
                     */
                    function BindingDelta(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * BindingDelta action.
                     * @member {google.iam.v1.BindingDelta.Action} action
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.action = 0;
    
                    /**
                     * BindingDelta role.
                     * @member {string} role
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.role = "";
    
                    /**
                     * BindingDelta member.
                     * @member {string} member
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.member = "";
    
                    /**
                     * BindingDelta condition.
                     * @member {google.type.IExpr|null|undefined} condition
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.condition = null;
    
                    /**
                     * Creates a new BindingDelta instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.IBindingDelta=} [properties] Properties to set
                     * @returns {google.iam.v1.BindingDelta} BindingDelta instance
                     */
                    BindingDelta.create = function create(properties) {
                        return new BindingDelta(properties);
                    };
    
                    /**
                     * Encodes the specified BindingDelta message. Does not implicitly {@link google.iam.v1.BindingDelta.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.IBindingDelta} message BindingDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BindingDelta.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.action != null && Object.hasOwnProperty.call(message, "action"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.action);
                        if (message.role != null && Object.hasOwnProperty.call(message, "role"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.role);
                        if (message.member != null && Object.hasOwnProperty.call(message, "member"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.member);
                        if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                            $root.google.type.Expr.encode(message.condition, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified BindingDelta message, length delimited. Does not implicitly {@link google.iam.v1.BindingDelta.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.IBindingDelta} message BindingDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BindingDelta.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a BindingDelta message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.BindingDelta} BindingDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BindingDelta.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.BindingDelta();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.action = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.role = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.member = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.condition = $root.google.type.Expr.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a BindingDelta message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.BindingDelta} BindingDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BindingDelta.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a BindingDelta message.
                     * @function verify
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    BindingDelta.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.action != null && message.hasOwnProperty("action"))
                            switch (message.action) {
                            default:
                                return "action: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.role != null && message.hasOwnProperty("role"))
                            if (!$util.isString(message.role))
                                return "role: string expected";
                        if (message.member != null && message.hasOwnProperty("member"))
                            if (!$util.isString(message.member))
                                return "member: string expected";
                        if (message.condition != null && message.hasOwnProperty("condition")) {
                            var error = $root.google.type.Expr.verify(message.condition);
                            if (error)
                                return "condition." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a BindingDelta message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.BindingDelta} BindingDelta
                     */
                    BindingDelta.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.BindingDelta)
                            return object;
                        var message = new $root.google.iam.v1.BindingDelta();
                        switch (object.action) {
                        default:
                            if (typeof object.action === "number") {
                                message.action = object.action;
                                break;
                            }
                            break;
                        case "ACTION_UNSPECIFIED":
                        case 0:
                            message.action = 0;
                            break;
                        case "ADD":
                        case 1:
                            message.action = 1;
                            break;
                        case "REMOVE":
                        case 2:
                            message.action = 2;
                            break;
                        }
                        if (object.role != null)
                            message.role = String(object.role);
                        if (object.member != null)
                            message.member = String(object.member);
                        if (object.condition != null) {
                            if (typeof object.condition !== "object")
                                throw TypeError(".google.iam.v1.BindingDelta.condition: object expected");
                            message.condition = $root.google.type.Expr.fromObject(object.condition);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a BindingDelta message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.BindingDelta} message BindingDelta
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    BindingDelta.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.action = options.enums === String ? "ACTION_UNSPECIFIED" : 0;
                            object.role = "";
                            object.member = "";
                            object.condition = null;
                        }
                        if (message.action != null && message.hasOwnProperty("action"))
                            object.action = options.enums === String ? $root.google.iam.v1.BindingDelta.Action[message.action] === undefined ? message.action : $root.google.iam.v1.BindingDelta.Action[message.action] : message.action;
                        if (message.role != null && message.hasOwnProperty("role"))
                            object.role = message.role;
                        if (message.member != null && message.hasOwnProperty("member"))
                            object.member = message.member;
                        if (message.condition != null && message.hasOwnProperty("condition"))
                            object.condition = $root.google.type.Expr.toObject(message.condition, options);
                        return object;
                    };
    
                    /**
                     * Converts this BindingDelta to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    BindingDelta.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for BindingDelta
                     * @function getTypeUrl
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    BindingDelta.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.BindingDelta";
                    };
    
                    /**
                     * Action enum.
                     * @name google.iam.v1.BindingDelta.Action
                     * @enum {number}
                     * @property {number} ACTION_UNSPECIFIED=0 ACTION_UNSPECIFIED value
                     * @property {number} ADD=1 ADD value
                     * @property {number} REMOVE=2 REMOVE value
                     */
                    BindingDelta.Action = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ACTION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ADD"] = 1;
                        values[valuesById[2] = "REMOVE"] = 2;
                        return values;
                    })();
    
                    return BindingDelta;
                })();
    
                v1.AuditConfigDelta = (function() {
    
                    /**
                     * Properties of an AuditConfigDelta.
                     * @memberof google.iam.v1
                     * @interface IAuditConfigDelta
                     * @property {google.iam.v1.AuditConfigDelta.Action|null} [action] AuditConfigDelta action
                     * @property {string|null} [service] AuditConfigDelta service
                     * @property {string|null} [exemptedMember] AuditConfigDelta exemptedMember
                     * @property {string|null} [logType] AuditConfigDelta logType
                     */
    
                    /**
                     * Constructs a new AuditConfigDelta.
                     * @memberof google.iam.v1
                     * @classdesc Represents an AuditConfigDelta.
                     * @implements IAuditConfigDelta
                     * @constructor
                     * @param {google.iam.v1.IAuditConfigDelta=} [properties] Properties to set
                     */
                    function AuditConfigDelta(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AuditConfigDelta action.
                     * @member {google.iam.v1.AuditConfigDelta.Action} action
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.action = 0;
    
                    /**
                     * AuditConfigDelta service.
                     * @member {string} service
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.service = "";
    
                    /**
                     * AuditConfigDelta exemptedMember.
                     * @member {string} exemptedMember
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.exemptedMember = "";
    
                    /**
                     * AuditConfigDelta logType.
                     * @member {string} logType
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.logType = "";
    
                    /**
                     * Creates a new AuditConfigDelta instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.IAuditConfigDelta=} [properties] Properties to set
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta instance
                     */
                    AuditConfigDelta.create = function create(properties) {
                        return new AuditConfigDelta(properties);
                    };
    
                    /**
                     * Encodes the specified AuditConfigDelta message. Does not implicitly {@link google.iam.v1.AuditConfigDelta.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.IAuditConfigDelta} message AuditConfigDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfigDelta.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.action != null && Object.hasOwnProperty.call(message, "action"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.action);
                        if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.service);
                        if (message.exemptedMember != null && Object.hasOwnProperty.call(message, "exemptedMember"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.exemptedMember);
                        if (message.logType != null && Object.hasOwnProperty.call(message, "logType"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.logType);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AuditConfigDelta message, length delimited. Does not implicitly {@link google.iam.v1.AuditConfigDelta.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.IAuditConfigDelta} message AuditConfigDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfigDelta.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AuditConfigDelta message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfigDelta.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.AuditConfigDelta();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.action = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.service = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.exemptedMember = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.logType = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AuditConfigDelta message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfigDelta.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AuditConfigDelta message.
                     * @function verify
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AuditConfigDelta.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.action != null && message.hasOwnProperty("action"))
                            switch (message.action) {
                            default:
                                return "action: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.service != null && message.hasOwnProperty("service"))
                            if (!$util.isString(message.service))
                                return "service: string expected";
                        if (message.exemptedMember != null && message.hasOwnProperty("exemptedMember"))
                            if (!$util.isString(message.exemptedMember))
                                return "exemptedMember: string expected";
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            if (!$util.isString(message.logType))
                                return "logType: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an AuditConfigDelta message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta
                     */
                    AuditConfigDelta.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.AuditConfigDelta)
                            return object;
                        var message = new $root.google.iam.v1.AuditConfigDelta();
                        switch (object.action) {
                        default:
                            if (typeof object.action === "number") {
                                message.action = object.action;
                                break;
                            }
                            break;
                        case "ACTION_UNSPECIFIED":
                        case 0:
                            message.action = 0;
                            break;
                        case "ADD":
                        case 1:
                            message.action = 1;
                            break;
                        case "REMOVE":
                        case 2:
                            message.action = 2;
                            break;
                        }
                        if (object.service != null)
                            message.service = String(object.service);
                        if (object.exemptedMember != null)
                            message.exemptedMember = String(object.exemptedMember);
                        if (object.logType != null)
                            message.logType = String(object.logType);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AuditConfigDelta message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.AuditConfigDelta} message AuditConfigDelta
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AuditConfigDelta.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.action = options.enums === String ? "ACTION_UNSPECIFIED" : 0;
                            object.service = "";
                            object.exemptedMember = "";
                            object.logType = "";
                        }
                        if (message.action != null && message.hasOwnProperty("action"))
                            object.action = options.enums === String ? $root.google.iam.v1.AuditConfigDelta.Action[message.action] === undefined ? message.action : $root.google.iam.v1.AuditConfigDelta.Action[message.action] : message.action;
                        if (message.service != null && message.hasOwnProperty("service"))
                            object.service = message.service;
                        if (message.exemptedMember != null && message.hasOwnProperty("exemptedMember"))
                            object.exemptedMember = message.exemptedMember;
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            object.logType = message.logType;
                        return object;
                    };
    
                    /**
                     * Converts this AuditConfigDelta to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AuditConfigDelta.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AuditConfigDelta
                     * @function getTypeUrl
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AuditConfigDelta.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.AuditConfigDelta";
                    };
    
                    /**
                     * Action enum.
                     * @name google.iam.v1.AuditConfigDelta.Action
                     * @enum {number}
                     * @property {number} ACTION_UNSPECIFIED=0 ACTION_UNSPECIFIED value
                     * @property {number} ADD=1 ADD value
                     * @property {number} REMOVE=2 REMOVE value
                     */
                    AuditConfigDelta.Action = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ACTION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ADD"] = 1;
                        values[valuesById[2] = "REMOVE"] = 2;
                        return values;
                    })();
    
                    return AuditConfigDelta;
                })();
    
                return v1;
            })();
    
            return iam;
        })();
    
        return google;
    })();

    return $root;
});
